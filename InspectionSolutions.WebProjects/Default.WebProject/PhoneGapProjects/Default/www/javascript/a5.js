	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



function $(){if(arguments.length==1){var ele=arguments[0];if(typeof ele=='string'){if(document.getElementById(ele))ele=document.getElementById(ele);else if(document.getElementsByName(ele).length>0)ele=document.getElementsByName(ele);else ele=false;}
return ele;}else{var objArr=new Array();var ele=new Object();for(var i=0;i<arguments.length;i++){if(typeof ele=='string'){if(document.getElementById(arguments[i]))ele=document.getElementById(arguments[i]);else if(document.getElementsByName(arguments[i]).length>0)ele=document.getElementsByName(arguments[i]);else ele=false;}
objArr[i]=ele;}
return objArr;}}
function $n(){if(arguments.length==1){var ele=arguments[0];if(typeof ele=='string'){if(document.getElementsByName(ele).length>0)ele=document.getElementsByName(ele);else if(document.getElementById(ele))ele=[document.getElementById(ele)];else ele=[];}
return ele;}else{var objArr=new Array();for(var i=0;i<arguments.length;i++){var ele=arguments[i];if(document.getElementsByName(ele).length>0)ele=document.getElementsByName(ele);else if(document.getElementById(ele))ele=[document.getElementById(ele)];else ele=[];objArr[i]=ele;}
return objArr;}}
function $isChild(ele,pEle){ele=$(ele);pEle=$(pEle);while(ele.tagName.toLowerCase()!='body'){if(ele==pEle)return true;ele=ele.parentNode;}
return false;}
function $cetp(eles,pEle){if(eles.tagName){if($isChild(eles,pEle))return eles;else return false;}else{var eles2=new Array();for(var i=0;i<eles.length;i++){if($isChild(eles[i],pEle)){eles2.push(eles[i]);}}
if(eles2.length>0)return eles2;else return false;}}
function $ae(obj,type,fn){if(obj.attachEvent){obj['e'+type+fn]=fn;obj[type+fn]=function(){obj['e'+type+fn](window.event);}
obj.attachEvent('on'+type,obj[type+fn]);}else
obj.addEventListener(type,fn,false);}
function $re(obj,type,fn){if(obj.detachEvent){obj.detachEvent('on'+type,obj[type+fn]);obj[type+fn]=null;}else
obj.removeEventListener(type,fn,false);}
function $ga(obj,att){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var attArr=new Array();for(var i=0;i<obj.length;i++){if(typeof obj[i]!='object')obj[i]=$(obj[i]);if(typeof att=='object'){for(var j=0;j<att.length;i++)
attArr[attArr.length]=obj[i].getAttribute(att[j]);}else{attArr[attArr.length]=obj[i].getAttribute(att);}}
return attArr;}else{if(typeof att=='object'){var attArr=new Array();for(var i=0;i<att.length;i++)
attArr[i]=obj.getAttribute(att[i]);return attArr;}else{return obj.getAttribute(att);}}}
function $sa(obj,att,val){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[3]!='undefined'?arguments[3]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){for(var i=0;i<obj.length;i++){if(typeof obj[i]!='object')obj[i]=$(obj[i]);if(typeof att=='object'){for(var j=0;j<att.length;i++)
obj[i].setAttribute(att[j],val[j]);}else{obj[i].setAttribute(att,val);}}}else{if(typeof att=='object'){for(var i=0;i<att.length;i++)
obj.setAttribute(att[i],val[i]);}else{obj.setAttribute(att,val);}}}
function $gv(obj){var pEle=typeof arguments[1]!='undefined'?arguments[1]:false;if(obj.constructor==Array){var objArr=new Array();var tag='';for(var i=0;i<obj.length;i++){objArr[i]=$gvs(obj[i],pEle);}
return objArr;}else{return $gvs(obj,pEle);}}
function $gvs(obj){var pEle=typeof arguments[1]!='undefined'?arguments[1]:false;if(pEle=='')pEle=false;var honorHTML=typeof arguments[2]!='undefined'?arguments[2]:true;if(typeof obj=='string')obj=$n(obj);if(obj.tagName)obj=[obj];if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
var tag='';var type='';var tArr=new Array();var notArray=false;for(var i=0;i<obj.length;i++){tag=obj[i].tagName.toLowerCase();if(tag=='input')type=obj[i].type.toLowerCase();else type='';if(type=='checkbox'||type=='radio'){if(obj[i].checked==true)tArr.push(obj[i].value);if((type=='checkbox'&&obj.length==1)||type=='radio')notArray=true;}else if(tag=='input'||tag=='textarea'){tArr.push(obj[i].value);notArray=true;}else if(tag=='select'){if(obj[i].multiple==true){for(var j=0;j<obj[i].options.length;j++){if(obj[i].options[j].selected==true)
tArr.push(obj[i].options[j].value);}}else{tArr.push(obj[i].value);notArray=true;}}else if(tag=='img'){tArr.push(obj[i].src);}else{if(honorHTML)tArr.push(obj[i].innerHTML);else if(obj[i].textContent)tArr.push(obj[i].textContent);else if(obj[i].innerText)tArr.push(obj[i].innerText);else tArr.push(obj[i].innerHTML);notArray=true;}}
if(notArray){if(tArr.length==0)return'';else return tArr[0];}else return tArr;}
function $sv(obj,val){var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(obj.constructor==Array){if(typeof val=='object'){for(var i=0;i<obj.length;i++){$svs(obj[i],val[i],pEle);}}else{for(var i=0;i<obj.length;i++){$svs(obj[i],val,pEle);}}}else{$svs(obj,val,pEle);}}
function $svs(obj,val){if(val==null)val='';var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;var honorHTML=typeof arguments[3]!='undefined'?arguments[3]:true;if(typeof obj=='string')obj=$n(obj);if(obj.tagName)obj=[obj];if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
var tag='';var type='';var ele=new Object();for(var i=0;i<obj.length;i++){ele=obj[i];tag=ele.tagName.toLowerCase();if(tag=='input')type=ele.type.toLowerCase();else type='';if(type=='checkbox'||type=='radio'){if(val.constructor==Array){if($u.a.find(val,ele.value)!=-1)ele.checked=true;else ele.checked=false;}else if(typeof val=='boolean'){ele.checked=val;}else{if(ele.value==val)ele.checked=true;else ele.checked=false;}}else if(tag=='select'){if(val.constructor==Array){for(var j=0;j<ele.options.length;j++){if($u.a.find(val,ele.options[j].value)!=-1)ele.options[j].selected=true;else ele.options[j].selected=false;}}else{ele.value=val;}}else if(tag=='input'||tag=='textarea'){if(val.constructor==Array)ele.value=val.join('\n');else ele.value=val;}else if(tag=='img'){if(val.constructor==Array){if(typeof val[0]!='undefined')ele.src=val[0];if(typeof val[1]!='undefined')ele.title=val[1];}else ele.src=val;}else if(tag=='a'){if(val.constructor==Array){if(typeof val[0]!='undefined'){if(honorHTML)ele.innerHTML=val[0];else ele.innerHTML=val[0].replace(/\n/g,'\n<br/>');}
if(typeof val[1]!='undefined')ele.href=''+val[1];if(typeof val[2]!='undefined')ele.title=val[2];}else{if(honorHTML)ele.innerHTML=val;else ele.innerHTML=val.replace(/\n/g,'\n<br/>');}}else{if(val.constructor==Array)val=val.join('\n');else val=''+val;if(honorHTML)ele.innerHTML=val;else ele.innerHTML=val.replace(/\n/g,'\n<br/>');}}}
function $gvById(obj){if(typeof obj=='object'){var objArr=new Array();for(var i=0;i<obj.length;i++)
objArr[i]=$gv($(obj[i]));return objArr;}else{return $gv($(obj));}}
function $svById(obj,val){if(typeof obj=='object'){for(var i=0;i<obj.length;i++)
$sv($(obj[i]),val[i]);}else{$sv($(obj),val);}}
function $gs(obj){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[1]!='undefined'?arguments[1]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var styleArr=new Array();var tObj=new Object();for(var i=0;i<obj.length;i++){tObj=$(obj[i]);styleArr[styleArr.length]=tObj.style.cssText;}
return styleArr;}else{return obj.style.cssText;}}
function $ss(obj,styleObj){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var tObj=new Object();for(var i=0;i<obj.length;i++){tObj=$(obj[i]);if(typeof styleObj=='string')tObj.style.cssText=styleObj;else for(var prop in styleObj)tObj.style[prop]=styleObj[prop];}}else{if(typeof styleObj=='string')obj.style.cssText=styleObj;else for(var prop in styleObj)obj.style[prop]=styleObj[prop];}}
function $scn(obj,val){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var tObj=new Object();for(var i=0;i<obj.length;i++){tObj=$(obj[i]);tObj.setAttribute('class',val);}}else obj.setAttribute('class',val);}
function $acn(obj,val){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var tObj=new Object();for(var i=0;i<obj.length;i++){tObj=$(obj[i]);if(String(' '+tObj.getAttribute('class')+' ').search(' '+val+' ')==-1)tObj.setAttribute('class',$u.s.aTrim(tObj.getAttribute('class')+' '+val));}}else if(String(' '+obj.getAttribute('class')+' ').search(' '+val+' ')==-1)obj.setAttribute('class',$u.s.lTrim(obj.getAttribute('class')+' '+val));}
function $rcn(obj,val){if(typeof obj=='string')obj=$n(obj);var pEle=typeof arguments[2]!='undefined'?arguments[2]:false;if(pEle=='')pEle=false;if(pEle){if(pEle.constructor==Function)obj=pEle(obj);else obj=$cetp(obj,pEle);}
if(obj==false)return false;if(!obj.tagName){var tObj=new Object();for(var i=0;i<obj.length;i++){tObj=$(obj[i]);tObj.setAttribute('class',$u.s.aTrim($u.s.tran(' '+tObj.getAttribute('class')+' ',' '+val+' ',' ')));}}else obj.setAttribute('class',$u.s.aTrim($u.s.tran(' '+obj.getAttribute('class')+' ',' '+val+' ',' ')));}
function $cdn(obj){var n;if(typeof obj=='string'){n=document.createTextNode(obj);}else{n=document.createElement(obj.tagName);delete obj.tagName;if(obj.children){if(obj.children.constructor==Array){for(var i=0;i<obj.children.length;i++)n.appendChild($cdn(obj.children[i]));}else{n.appendChild($cdn(obj.children));}
delete obj.children;}
for(var attr in obj){if(attr!='style')n[attr]=obj[attr];else $ss(n,obj[attr]);}}
return n}
function $swto(objId){var obj=$(objId);var y=$gpt(obj);var x=$gpl(obj);window.scrollTo(x,y);}
function $sor(chObj,obj,type){type=type.toLowerCase();var w=obj.offsetWidth;var h=obj.offsetHeight;if(type!='hw'&&type!='h'){var wOff=arguments[3]?arguments[3]:0;var hOff=arguments[4]?arguments[4]:0;}else{var wOff=arguments[4]?arguments[4]:0;var hOff=arguments[3]?arguments[3]:0;}
if(wOff<1&&wOff>0)wOff=Math.round(w*Math.abs(wOff-1));if(hOff<1&&hOff>0)hOff=Math.round(h*Math.abs(hOff-1));if(type=='w')chObj.style.width=(w-wOff)+'px';else if(type=='h')chObj.style.height=(h-hOff)+'px';else if(type=='wh'||type=='hw'){chObj.style.width=(w-wOff)+'px';chObj.style.height=(h-hOff)+'px';}}
function $gpt(obj){var ignoreNonPos=typeof arguments[1]!='undefined'?arguments[1]:false;var tPos=0;if(ignoreNonPos){pEle=obj.parentNode;if(pEle.tagName.toLowerCase()!='html'&&pEle.tagName.toLowerCase()!='body'){while(pEle.tagName.toLowerCase()!='body'){if(pEle.style.position=='absolute'||pEle.style.position=='relative')tPos+=pEle.offsetTop;pEle=pEle.parentNode;}}}else{var b=obj.getBoundingClientRect();var tS=Math.max(document.body.scrollTop,document.documentElement.scrollTop);tPos=b.top+tS;}
return tPos;}
function $gpl(obj){var ignoreNonPos=typeof arguments[1]!='undefined'?arguments[1]:false;var lPos=0;if(ignoreNonPos){pEle=obj.parentNode;if(pEle.tagName.toLowerCase()!='html'&&pEle.tagName.toLowerCase()!='body'){while(pEle.tagName.toLowerCase()!='body'){if(pEle.style.position=='absolute'||pEle.style.position=='relative')lPos+=pEle.offsetLeft;pEle=pEle.parentNode;}}}else{var b=obj.getBoundingClientRect();var lS=Math.max(document.body.scrollLeft,document.documentElement.scrollLeft);lPos=b.left+lS;}
return lPos;}
function $po(chObj,obj,type){var mOff=arguments[3]?arguments[3]:0;var sOff=arguments[4]?arguments[4]:0;var pTop=$gpt(obj);var pLeft=$gpl(obj);var pWidth=obj.offsetWidth;var pHeight=obj.offsetHeight;var cTop=$gpt(chObj.parentNode,true);var cLeft=$gpl(chObj.parentNode,true);var cWidth=chObj.offsetWidth;var cHeight=chObj.offsetHeight;var tEle=chObj.parentNode;while(tEle.tagName.toLowerCase()!='body'){if(tEle.style.position=='absolute'||tEle.style.position=='relative'){cLeft=+$gpl(tEle);cTop=+$gpt(tEle);break;}
tEle=tEle.parentNode;}
if(isNaN(type)){if(typeof type=='string'){type=type.toLowerCase();if(typeof window.innerWidth=='number'){var pageWidth=window.innerWidth;var pageHeight=window.innerHeight;}else if(document.documentElement&&(document.documentElement.clientWidth||document.documentElement.clientHeight)){var pageWidth=document.documentElement.clientWidth;var pageHeight=document.documentElement.clientHeight;}else if(document.body&&(document.body.clientWidth||document.body.clientHeight)){var pageWidth=document.body.clientWidth;var pageHeight=document.body.clientHeight;}
if(typeof window.pageYOffset=='number'){pageWidth=pageWidth+window.pageXOffset;pageHeight=pageHeight+window.pageYOffset;}else if(document.documentElement&&typeof document.documentElement.scrollLeft!='undefined'){pageWidth=pageWidth+document.documentElement.scrollLeft;pageHeight=pageHeight+document.documentElement.scrollTop;}else if(document.body&&typeof document.body.scrollLeft!='undefined'){pageWidth=pageWidth+document.body.scrollLeft;pageHeight=pageHeight+document.body.scrollTop;}
if(type=='dropdown'){type=14;if(pTop+pHeight+cHeight>pageHeight&&pTop-cHeight>0)type=2;if((pLeft+sOff)+cWidth>pageWidth)pLeft=(pageWidth-cWidth)-sOff;}else if(type=='dropdown-right'){type=15;if(pTop+pHeight+cHeight>pageHeight&&pTop-cHeight>0)type=3;if((pLeft+(pWidth-cWidth)-sOff)<0)pLeft=(cWidth-pWidth)+sOff;}else if(type=='flyout'){type=8;if(pLeft+pWidth+cWidth>pageWidth&&pLeft-cWidth>0)type=5;if((pTop+sOff)+cHeight>pageHeight)pTop=(pageHeight-cHeight)-sOff;}else if(type=='flyout-bottom'){type=12;if(pLeft+pWidth+cWidth>pageWidth&&pLeft-cWidth>0)type=9;if((pTop-(cHeight-pHeight)-sOff)<0)pTop=(cHeight-pHeight)+sOff;}else if(type=='popup'){type=6;if(pTop+cHeight>pageHeight&&pTop-cHeight>0)type=10;if((pLeft+sOff)+cWidth>pageWidth)pLeft=(pageWidth-cWidth)-sOff;}else if(type=='popup-bottom'){type=10;if((pTop-(cHeight-pHeight)-sOff)<0)pTop=(cHeight-pHeight)+sOff;if((pLeft+sOff)+cWidth>pageWidth)pLeft=(pageWidth-cWidth)-sOff;}}else type=14;}
switch(type){case(1):chObj.style.left=(pLeft-cWidth-mOff-cLeft)+'px';chObj.style.top=(pTop-cHeight-sOff-cTop)+'px';break
case(2):chObj.style.left=(pLeft+sOff-cLeft)+'px';chObj.style.top=(pTop-cHeight-mOff-cTop)+'px';break
case(3):chObj.style.left=(pLeft+(pWidth-cWidth)-sOff-cLeft)+'px';chObj.style.top=(pTop-cHeight-mOff-cTop)+'px';break
case(4):chObj.style.left=(pLeft+pWidth+mOff-cLeft)+'px';chObj.style.top=(pTop-cHeight-sOff-cTop)+'px';break
case(5):chObj.style.left=(pLeft-cWidth-mOff-cLeft)+'px';chObj.style.top=(pTop+sOff-cTop)+'px';break
case(6):chObj.style.left=(pLeft+sOff-cLeft)+'px';chObj.style.top=(pTop+mOff-cTop)+'px';break
case(7):chObj.style.left=(pLeft+pWidth-cWidth-sOff-cLeft)+'px';chObj.style.top=(pTop+mOff-cTop)+'px';break
case(8):chObj.style.left=(pLeft+pWidth+mOff-cLeft)+'px';chObj.style.top=(pTop+sOff-cTop)+'px';break
case(9):chObj.style.left=(pLeft-cWidth-mOff-cLeft)+'px';chObj.style.top=(pTop-(cHeight-pHeight)-sOff-cTop)+'px';break
case(10):chObj.style.left=(pLeft+sOff-cLeft)+'px';chObj.style.top=(pTop-(cHeight-pHeight)-mOff-cTop)+'px';break
case(11):chObj.style.left=(pLeft+pWidth-cWidth-sOff-cLeft)+'px';chObj.style.top=(pTop-(cHeight-pHeight)-mOff-cTop)+'px';break
case(12):chObj.style.left=(pLeft+pWidth+mOff-cLeft)+'px';chObj.style.top=(pTop-(cHeight-pHeight)-sOff-cTop)+'px';break
case(13):chObj.style.left=(pLeft-cWidth-mOff-cLeft)+'px';chObj.style.top=(pTop+pHeight+sOff-cTop)+'px';break
case(14):chObj.style.left=(pLeft+sOff-cLeft)+'px';chObj.style.top=(pTop+pHeight+mOff-cTop)+'px';break
case(15):chObj.style.left=(pLeft+(pWidth-cWidth)-sOff-cLeft)+'px';chObj.style.top=(pTop+pHeight+mOff-cTop)+'px';break
case(16):chObj.style.left=(pLeft+pWidth+mOff-cLeft)+'px';chObj.style.top=(pTop+pHeight+sOff-cTop)+'px';break
case(17):chObj.style.left=(pLeft+Math.round(pWidth/2)-Math.round(cWidth/2)+sOff-cLeft)+'px';chObj.style.top=(pTop-cHeight-mOff-cTop)+'px';break
case(18):chObj.style.left=(pLeft-cWidth-mOff-cLeft)+'px';chObj.style.top=(pTop+Math.round(pHeight/2)-Math.round(cHeight/2)+sOff-cTop)+'px';break
case(19):chObj.style.left=(pLeft+Math.round(pWidth/2)-Math.round(cWidth/2)+sOff-cLeft)+'px';chObj.style.top=(pTop+Math.round(pHeight/2)-Math.round(cHeight/2)+mOff-cTop)+'px';break
case(20):chObj.style.left=(pLeft+pWidth+mOff-cLeft)+'px';chObj.style.top=(pTop+Math.round(pHeight/2)-Math.round(cHeight/2)+sOff-cTop)+'px';break
case(21):chObj.style.left=(pLeft+Math.round(pWidth/2)-Math.round(cWidth/2)+sOff-cLeft)+'px';chObj.style.top=(pTop+pHeight+mOff-cTop)+'px';break}}
var Class={create:function(){var baseKlass=null
var props=new Array();for(var i=0;i<arguments.length;i++)props[i]=arguments[i];if(props[0])if(props[0].constructor==Function)baseKlass=props.shift();klass=function(){this.initialize.apply(this,arguments);}
klass.superclass=baseKlass;if(baseKlass){var tempKlass=function(){};tempKlass.prototype=baseKlass.prototype;klass.prototype=new tempKlass;}
for(var i=0;i<props.length;i++)$u.o.assign(klass.prototype,props[i]);if(!klass.prototype.initialize)klass.prototype.initialize=function(){};klass.prototype.constructor=klass;return klass;},superclassMethod:function(klass,method,args,context){if(klass.constructor.superclass.prototype[method]){if(klass.constructor.superclass.prototype[method].constructor==Function){if(!context)klass.constructor.superclass.prototype[method].apply(klass,args);else klass.constructor.superclass.prototype[method].apply(context,args);}}}}
function $if(expr,tVal,fVal){return expr?tVal:fVal;}
var $u={comma:',',decimal:'.',currency:'$',days:['sunday','monday','tuesday','wednesday','thursday','friday','saturday'],daysShort:['sun','mon','tue','wed','thur','fri','sat'],months:['january','february','march','april','may','june','july','august','september','october','november','december'],monthsShort:['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec'],compare:function(obj1,obj2){if(obj1==obj2)
return true;var val1=$u.o.toJSON(obj1);var val2=$u.o.toJSON(obj2);if(val1==val2)
return true;return false;},s:{toNum:function(str){if(typeof str=='number')return str;str=str.toString();if(str.search('\\(')!=-1)str='-'+str;var regEx=RegExp('[^\-0-9'+$u.decimal+']');str=str.split(regEx).join('');if(str.indexOf('-')!=-1){var negNum=(str.indexOf('-')==0)?true:false;var regEx=RegExp('[^0-9'+$u.decimal+']');str=$if(negNum,'-','')+str.split(regEx).join('');}
str=str.replace($u.decimal,'.');return Number(str);},toBool:function(str){str=str.toString();if(str=='')return false;str=$u.s.aTrim(str).toLowerCase();if(str=='true'||str=='t'||str=='yes'||str=='1'||str=='.t.'){return true;}else
return false;},lTrim:function(str,tc){str=str.toString();if(!tc||tc=='')tc=' ';while(tc.indexOf(str.charAt(0))!=-1){str=str.substring(1,str.length);if(str.length==0)return'';}
return str;},substr:function(str,start,sLength){str=str.toString();if(start<0)start=str.length+start;if(typeof sLength=='undefined')return str.substr(start);else return str.substr(start,sLength);},rTrim:function(str,tc){str=str.toString();if(!tc||tc=='')tc=' ';while(tc.indexOf(str.charAt(str.length-1))!=-1){str=str.substring(0,str.length-1);if(str.length==0)return'';}
return str;},aTrim:function(str,tc){str=str.toString();if(!tc||tc=='')tc=' ';str=this.lTrim(str,tc);str=this.rTrim(str,tc);return str;},tran:function(str,sStr,rStr){str=str.toString();if(typeof sStr=='object'){for(var i=0;i<sStr.length;i++){var arr=str.split(sStr[i]);str=arr.join(rStr[i]);}}else{var arr=str.split(sStr);str=arr.join(rStr);}
return str;},word:function(str,num,sep){str=str.toString();if(sep=='')sep=' ';var arr=str.split(sep);if(Math.abs(num)>arr.length)return'';else if(num>-1)return arr[num-1];else return arr[arr.length+num];},ellipse:function(str,len){str=str.toString();var elpStr=(arguments[3])?arguments[3]:'...';var align=(arguments[2])?arguments[2].substring(0,1).toLowerCase():'l';if(align=='r'){str=str.substring(0,len-elpStr.length)+elpStr;}else if(align=='c'){var lLen=Math.round((len-elpStr.length)/2);var rLen=str.length-(len-elpStr.length-lLen);str=str.substring(0,lLen)+elpStr+str.substring(rLen,str.length);}else{str=elpStr+str.substring(str.length-(len-elpStr.length),str.length);}
return str;},pad:function(str,padLen,padStr){str=str.toString();var align=arguments[3]?arguments[3].toLowerCase():'l';if(padLen==-1){return str;}else if(str.length>padLen){return str.substr(0,padLen);}else{padStr=$u.s.replicate(padStr,padLen)
if(align=='l'){return padStr.substring(0,padLen-str.length)+str;}else if(align=='r'){return str+padStr.substring(0,padLen-str.length);}else if(align=='c'){padLen=padLen-str.length;var lLen=Math.round(padLen/2);var rLen=padLen-lLen;return padStr.substring(0,lLen)+str+padStr.substring(0,rLen);}}},replicate:function(str,repNum){str=str.toString();var repArr=new Array();for(var i=0;i<repNum;i++)repArr.push(str);return repArr.join('');},changeCase:function(str,type){str=str.toString();type=type.toLowerCase();switch(type){case('u'):return str.toUpperCase();break
case('l'):return str.toLowerCase();break
case('fu'):return str.substr(0,1).toUpperCase()+str.substr(1);break
case('furl'):return str.substr(0,1).toUpperCase()+str.substr(1).toLowerCase();break
case('wfu'):var wordsArr=str.split(' ');for(var i=0;i<wordsArr.length;i++)wordsArr[i]=$u.s.changeCase(wordsArr[i],'fu');return wordsArr.join(' ');break
case('wfurl'):str=str.toLowerCase();var wordsArr=str.split(' ');for(var i=0;i<wordsArr.length;i++)wordsArr[i]=$u.s.changeCase(wordsArr[i],'fu');return wordsArr.join(' ');break}}},n:{toStr:function(valNum){if(typeof valNum=='string')return valNum;var decNum=arguments[1]?arguments[1]:-1;var format=arguments[2]?arguments[2].toUpperCase():'';if(format.indexOf('B')!=-1&&valNum==0)return'';var comma=(format.indexOf(',')!=-1)?true:false;var prefixNeg=(format.indexOf('-')!=-1)?true:false;var parenNeg=(format.indexOf('(')!=-1)?true:false;var negStr=valNum<0?'-':'';var prefix=arguments[3]?arguments[3]:'';var suffix=arguments[4]?arguments[4]:'';if(decNum!=-1)valNum=$u.n.round(Math.abs(valNum),decNum);else valNum=Math.abs(valNum);var str=String(valNum);var intStr=$u.s.word(str,1,'.');var decStr=$u.s.word(str,2,'.');if(decNum!=-1){if(!decStr)decStr='0';if(decStr.length!=decNum)decStr=$u.s.pad(decStr,decNum,'0','r');}
if(comma&&intStr.length>3){var intArr=new Array();var placeInc=Math.round((intStr.length/3)+.49);intStr=$u.s.pad(intStr,placeInc*3,'0','l')
intArr.push($u.s.lTrim(intStr.substr(0,3),'0'));for(var i=1;i<placeInc;i++){intArr.push(intStr.substr(i*3,3));}
intStr=intArr.join($u.comma);}
if(prefixNeg&&negStr!='')prefix=negStr+prefix;else if(parenNeg&&negStr!=''){prefix='('+prefix;suffix=suffix+')';}else intStr=negStr+intStr;if(decStr!='')return prefix+intStr+$u.decimal+decStr+suffix;else return prefix+intStr+suffix;},toPlaceStr:function(num){num=Math.round(num);var numStr=String(num);var numEnd=parseInt(numStr.slice(-2));if(numEnd>3&&numEnd<21)
return numStr+'th';var numEnd=parseInt(numStr.slice(-1));if(numEnd==1)
return numStr+'st';else if(numEnd==2)
return numStr+'nd';else if(numEnd==3)
return numStr+'rd';else
return numStr+'th';},round:function(valNum,decNum){if(!isNaN(valNum)&&!isNaN(decNum)){var dir=typeof arguments[2]!='undefined'?arguments[2].substr(0,1).toLowerCase():'';var tempDecNum=Math.pow(10,decNum);if(dir=='u')return(Math.round((valNum*tempDecNum)+.49999)/tempDecNum);else if(dir=='d')return(Math.round((valNum*tempDecNum)-.49999)/tempDecNum);else{var offset=0;if(dir=='a')offset=.49999;else if(dir=='t')offset=-.49999;if(valNum>0)return(Math.round((valNum*tempDecNum)+offset)/tempDecNum);else return(Math.round(Math.abs(valNum*tempDecNum)+offset)/tempDecNum)*-1;}}}},a:{find:function(){var arr=arguments[0];var val=arguments[1];var searchAll=typeof arguments[2]!='undefined'?arguments[2]:false;var exactMatch=typeof arguments[3]!='undefined'?arguments[3]:true;var indxArr=Array();if(exactMatch==true){for(var i=0;i<arr.length;i++){if(arr[i]==val){indxArr.push(i);if(searchAll!=true)break;}}}else{for(var i=0;i<arr.length;i++){if(String(arr[i]).indexOf(String(val))!=-1){indxArr.push(i);if(searchAll!=true)break;}}}
if(indxArr.length==0)
indxArr.push(-1);if(searchAll==true){return indxArr;}else{return indxArr[0];}},compare:function(a,b){var type=arguments[2]?arguments[2]:'<';if(typeof a!='object')
a=new Array(a);if(typeof b!='object')
b=new Array(b);var indx=new Array();var tArr=new Array();if(type=='>'){for(var i=0;i<a.length;i++){indx=$u.a.find(b,a[i]);if(indx==-1)
tArr[tArr.length]=a[i];}}else if(type=='='){for(var i=0;i<b.length;i++){indx=$u.a.find(a,b[i]);if(indx!=-1)
Arr[tArr.length]=b[i];}}else{for(var i=0;i<b.length;i++){indx=$u.a.find(a,b[i]);if(indx==-1)
tArr[tArr.length]=b[i];}}
return tArr;},dedup:function(arr){var tArr=new Array();for(var i=0;i<arr.length;i++){if($u.a.find(tArr,arr[i])==-1)
tArr[tArr.length]=arr[i];}
return tArr;},copy:function(arr){return new Array(arr);}},o:{assign:function(objD,obj){var lAssign=typeof arguments[2]!='undefined'?arguments[2]:false
if(lAssign){for(var prop in obj){if(typeof obj[prop]=='object'&&typeof objD[prop]=='object'&&obj[prop]!=null&&obj[prop].constructor!=Date&&obj[prop].constructor!=RegExp){if(!objD[prop]){if(obj[prop].constructor==Array)objD[prop]=[];else objD[prop]={};}
$u.o.assign(objD[prop],obj[prop],lAssign);}else if(typeof objD[prop]=='undefined')objD[prop]=obj[prop];}}else{for(var prop in obj){if(typeof obj[prop]=='object'&&obj[prop]!=null&&obj[prop].constructor!=Date&&obj[prop].constructor!=RegExp){if(!objD[prop]||typeof objD[prop]!='object'){if(obj[prop].constructor==Array)objD[prop]=[];else objD[prop]={};}
$u.o.assign(objD[prop],obj[prop],lAssign);}else objD[prop]=obj[prop];}}},toJSON:function(obj){if(obj==null)return'null';var type=typeof(obj);if(type=='undefined')return'\'\'';if(type=='object'){var propArr=new Array();if(obj.length){for(var i=0;i<obj.length;i++)propArr.push($u.o.toJSON(obj[i]));return'['+propArr.join(', ')+']';}else{for(var prop in obj)propArr.push(prop+': '+$u.o.toJSON(obj[prop]));return'{'+propArr.join(', ')+'}';}}else if(type=='number')return String(obj);else if(type=='boolean')return obj?'true':'false';else if(type=='date')return'Date(\''+obj+'\')';else return'\''+$u.s.tran($u.s.tran($u.s.tran(obj,'\\','\\\\'),'\'','\\\''),'\n','\\n')+'\'';},toParams:function(obj){var prefix=arguments[1]||'';var encode=typeof arguments[2]!='undefined'?arguments[2]:true;if(encode)prefix=prefix.replace(/%/g,"%25").replace(/\+/g,"%2B").replace(/\=/g,"%3D").replace(/\\/g,"%5C").replace(/&/g,"%26").replace(/\n/g,"%0D%0A").replace(/\r/g,"");var type=typeof(obj);if(type=='object'){if(obj==null)return prefix+"=";var propArr=new Array();if(obj.length){var prefixArrIt=$u.s.tran(prefix,'[]','[..]');for(var i=0;i<obj.length;i++){if(i==0){if(typeof obj[i]=='object'){propArr.push($u.o.toParams(obj[i],prefix+'[]',encode));}else{propArr.push(prefix+'[]='+$u.o.toParams(obj[i],'',encode));}}else{if(typeof obj[i]=='object'){propArr.push($u.o.toParams(obj[i],prefixArrIt+'[]',encode));}else{propArr.push(prefixArrIt+'[]='+$u.o.toParams(obj[i],'',encode));}}}
return propArr.join('&');}else{if(prefix!='')prefix=prefix+'.';var prefixArrIt=$u.s.tran(prefix,'[]','[..]');var propCount=0;var propStr='';for(var prop in obj){propStr=prop;if(encode)propStr=propStr.replace(/%/g,"%25").replace(/\+/g,"%2B").replace(/\=/g,"%3D").replace(/\\/g,"%5C").replace(/&/g,"%26").replace(/\n/g,"%0D%0A").replace(/\r/g,"");if(propCount==0){if(typeof obj[prop]=='object'){propArr.push($u.o.toParams(obj[prop],prefix+prop,encode));}else{propArr.push(prefix+propStr+'='+$u.o.toParams(obj[prop],'',encode));}}else{if(typeof obj[prop]=='object'){propArr.push($u.o.toParams(obj[prop],prefixArrIt+prop,encode));}else{propArr.push(prefixArrIt+propStr+'='+$u.o.toParams(obj[prop],'',encode));}}
propCount++}
return propArr.join('&');}}else{if(type=='number')return String(obj);else if(type=='boolean')return obj?'.t.':'.f.';else if(encode)return''+obj.replace(/%/g,"%25").replace(/\+/g,"%2B").replace(/\=/g,"%3D").replace(/\\/g,"%5C").replace(/&/g,"%26").replace(/\n/g,"%0D%0A").replace(/\r/g,"");else return''+obj;}}},d:{toStr:function(dObj,frm){if(frm.indexOf('[mm]')!=-1)
frm=frm.replace('[mm]',$u.s.pad(''+(dObj.getMonth()+1),2,'0'));else if(frm.indexOf('[m]')!=-1)
frm=frm.replace('[m]',''+(dObj.getMonth()+1));else if(frm.indexOf('[month]')!=-1)
frm=frm.replace('[month]',$u.months[dObj.getMonth()]);else if(frm.indexOf('[Month]')!=-1)
frm=frm.replace('[Month]',$u.s.changeCase($u.months[dObj.getMonth()],'fu'));else if(frm.indexOf('[MONTH]')!=-1)
frm=frm.replace('[MONTH]',$u.months[dObj.getMonth()].toUpperCase());else if(frm.indexOf('[mon]')!=-1)
frm=frm.replace('[mon]',$u.monthsShort[dObj.getMonth()]);else if(frm.indexOf('[Mon]')!=-1)
frm=frm.replace('[Mon]',$u.s.changeCase($u.monthsShort[dObj.getMonth()],'fu'));else if(frm.indexOf('[MON]')!=-1)
frm=frm.replace('[MON]',$u.monthsShort[dObj.getMonth()].toUpperCase());if(frm.indexOf('[dd]')!=-1)
frm=frm.replace('[dd]',$u.s.pad(''+(dObj.getDate()),2,'0'));else if(frm.indexOf('[d]')!=-1)
frm=frm.replace('[d]',''+(dObj.getDate()));else if(frm.indexOf('[ddx]')!=-1)
frm=frm.replace('[ddx]',$u.s.pad($u.n.toPlaceStr(dObj.getDate()),2,'0'));else if(frm.indexOf('[dx]')!=-1)
frm=frm.replace('[dx]',$u.n.toPlaceStr(dObj.getDate()));else if(frm.indexOf('[DDX]')!=-1)
frm=frm.replace('[DDX]',$u.s.pad($u.n.toPlaceStr(dObj.getDate()),2,'0').toUpperCase());else if(frm.indexOf('[DX]')!=-1)
frm=frm.replace('[DX]',$u.n.toPlaceStr(dObj.getDate()).toUpperCase());if(frm.indexOf('[yy]')!=-1)
frm=frm.replace('[yy]',(''+dObj.getFullYear()).substr(2));else if(frm.indexOf('[yyyy]')!=-1)
frm=frm.replace('[yyyy]',''+dObj.getFullYear());if(frm.indexOf('[wday]')!=-1)
frm=frm.replace('[wday]',$u.days[dObj.getDay()]);else if(frm.indexOf('[Wday]')!=-1)
frm=frm.replace('[Wday]',$u.s.changeCase($u.days[dObj.getDay()],'fu'));else if(frm.indexOf('[WDAY]')!=-1)
frm=frm.replace('[WDAY]',$u.days[dObj.getDay()].toUpperCase());else if(frm.indexOf('[wd]')!=-1)
frm=frm.replace('[wd]',$u.daysShort[dObj.getDay()]);else if(frm.indexOf('[Wd]')!=-1)
frm=frm.replace('[Wd]',$u.s.changeCase($u.daysShort[dObj.getDay()],'fu'));else if(frm.indexOf('[WD]')!=-1)
frm=frm.replace('[WD]',$u.daysShort[dObj.getDay()].toUpperCase());var hr=dObj.getHours();var mer=hr>11?'pm':'am';if(hr==0)hr=24;if(frm.indexOf('[t:h]')!=-1){if(hr>12)hr=hr-12;frm=frm.replace('[t:h]',''+hr);}else if(frm.indexOf('[t:hh]')!=-1){if(hr>12)hr=hr-12;frm=frm.replace('[t:hh]',$u.s.pad(''+hr,2,'0'));}else if(frm.indexOf('[t:mh]')!=-1)
frm=frm.replace('[t:mh]',''+hr);else if(frm.indexOf('[t:mhh]')!=-1)
frm=frm.replace('[t:mhh]',$u.s.pad(''+hr,2,'0'));if(frm.indexOf('[t:m]')!=-1)
frm=frm.replace('[t:m]',''+(dObj.getMinutes()+1));else if(frm.indexOf('[t:mm]')!=-1)
frm=frm.replace('[t:mm]',$u.s.pad(''+(dObj.getMinutes()+1),2,'0'));if(frm.indexOf('[t:s]')!=-1)
frm=frm.replace('[t:s]',''+(dObj.getSeconds()+1));else if(frm.indexOf('[t:ss]')!=-1)
frm=frm.replace('[t:ss]',$u.s.pad(''+(dObj.getSeconds()+1),2,'0'));if(frm.indexOf('[t:am]')!=-1)
frm=frm.replace('[t:am]',mer);if(frm.indexOf('[t:a]')!=-1)
frm=frm.replace('[t:a]',mer.substr(0,1));else if(frm.indexOf('[t:AM]')!=-1)
frm=frm.replace('[t:AM]',mer.toUpperCase());else if(frm.indexOf('[t:A]')!=-1)
frm=frm.replace('[t:A]',mer.substr(0,1).toUpperCase());return frm;}},b:{toStr:function(valBool,rTrue,rFalse){return valBool?rTrue:rFalse;}}}
if(!$e){var $e={loaded:false,_e:[],_de:[],_dee:[],_ue:[],_ae:{},_aeg:{i:0,a:[],dhTO:0,sT:0,sX:0,sY:0,iX:[],iY:[],maxX:0,maxY:0,minX:0,minY:0,lClick:0},add:function(evntEle,evntType,evntFunc){var evntScope=arguments[3]?arguments[3]:null;var scopeOverride=typeof arguments[4]=='boolean'?arguments[4]:false;var groupName=arguments[5]?arguments[5]:'';if(evntEle&&evntEle.length&&!evntEle.tagName&&typeof evntEle!='string'&&!evntEle.alert&&typeof evntEle[0]!='undefined'){var returnBool=true;for(var i=0;i<evntEle.length;i++){returnBool=(($e.add(evntEle[i],evntType,evntFunc,evntScope,scopeOverride,groupName))&&returnBool)}
return returnBool;}
if($e.loaded){var ele=$(evntEle);if(!ele)return false;var cScope=(scopeOverride)?evntScope:ele;var wFunc=function(e){return evntFunc.call(cScope,$e.getEvent(e),evntScope);};if(evntType=='load'){wFunc();delete wFunc
delete ele;delete cScope;return true;}else if(evntType=='unload'){$e._ue.push([ele,evntType,evntFunc,wFunc,evntScope,scopeOverride,groupName]);return true;}else if(evntType.substr(0,8)=='abstract'&&!$e.abstractEvents.disabled){if(ele.id=='')ele.id=A5.u.getUniqueId();if(!$e._ae[ele.id]){$e._ae[ele.id]={ele:ele,dt:false,ut:false,mt:false,d:[],u:[],m:[],g:[]};}else if($e._ae[ele.id].ele!=ele){delete $e._ae[ele.id].ele;$e._ae[ele.id]={ele:ele,dt:false,ut:false,mt:false,d:[],u:[],m:[],g:[]};}
var subType=evntType.substr(8);var supportMouse=!(navigator.userAgent.match(/(iPad|iPhone|iPod)/i)?true:false);var supportTouch=(navigator.userAgent.match(/android/i)||!!('createTouch'in document));if(subType=='down'){if($ga(ele,'A5AbstEvntD')!='true'){if(window.navigator.msPointerEnabled)$e.add(ele,'MSPointerDown',$e._aetDown);else{if(supportTouch)$e.add(ele,'touchstart',$e._aetDown);if(supportMouse)$e.add(ele,'mousedown',$e._aemDown);}
$sa(ele,'A5AbstEvntD','true');for(var i=$e._ae[ele.id].d.length-1;i>=0;i--){if($e._ae[ele.id].d[i]){delete $e._ae[ele.id].d[i][0];delete $e._ae[ele.id].d[i][1];delete $e._ae[ele.id].d[i];}}
$e._ae[ele.id].d=[];}
$e._ae[ele.id].d.push([evntFunc,wFunc,evntScope,scopeOverride,groupName]);}else if(subType=='up'){if($ga(ele,'A5AbstEvntU')!='true'){if(window.navigator.msPointerEnabled)$e.add(ele,'MSPointerUp',$e._aetUp);else{if(supportTouch)$e.add(ele,'touchend',$e._aetUp);if(supportMouse)$e.add(ele,'mouseup',$e._aemUp);}
$sa(ele,'A5AbstEvntU','true');for(var i=$e._ae[ele.id].u.length-1;i>=0;i--){if($e._ae[ele.id].u[i]){delete $e._ae[ele.id].u[i][0];delete $e._ae[ele.id].u[i][1];delete $e._ae[ele.id].u[i];}}
$e._ae[ele.id].u=[];}
$e._ae[ele.id].u.push([evntFunc,wFunc,evntScope,scopeOverride,groupName]);}else if(subType=='move'){if($ga(ele,'A5AbstEvntM')!='true'){if(window.navigator.msPointerEnabled)$e.add(ele,'MSPointerMove',$e._aetMove);else{if(supportTouch)$e.add(ele,'touchmove',$e._aetMove);if(supportMouse)$e.add(ele,'mousemove',$e._aemMove);}
$sa(ele,'A5AbstEvntM','true');for(var i=$e._ae[ele.id].m.length-1;i>=0;i--){if($e._ae[ele.id].m[i]){delete $e._ae[ele.id].m[i][0];delete $e._ae[ele.id].m[i][1];delete $e._ae[ele.id].m[i];}}
$e._ae[ele.id].m=[];}
$e._ae[ele.id].m.push([evntFunc,wFunc,evntScope,scopeOverride,groupName]);}else{if($ga(ele,'A5AbstEvntG')!='true'){$e.add(ele,'abstractdown',$e._aegStart);$sa(ele,'A5AbstEvntG','true');for(var i=$e._ae[ele.id].g.length-1;i>=0;i--){if($e._ae[ele.id].g[i]){delete $e._ae[ele.id].g[i][0];delete $e._ae[ele.id].g[i][1];delete $e._ae[ele.id].g[i];}}
$e._ae[ele.id].g=[];if($ga(document.documentElement,'A5AbstEvntG')!='true'){$e.add(document.documentElement,'abstractmove',$e._aegMove);$e.add(document.documentElement,'abstractup',$e._aegEnd);$sa(document.documentElement,'A5AbstEvntG','true');}}
$e._ae[ele.id].g.push([evntType,evntFunc,wFunc,evntScope,scopeOverride,groupName]);$e._aeg.i++;}
return true;}
if($e.abstractEvents.disabled){if(evntType.substr(0,8)=='abstract'){if(evntType=='abstractdown')evntType='mousedown';else if(evntType=='abstractup')evntType='mouseup';else if(evntType=='abstractmove')evntType='mousemove';else if(evntType=='abstractclick')evntType='click';else if(evntType=='abstractdblclick')evntType='dblclick';}}
$e._e.push([ele,evntType,evntFunc,wFunc,evntScope,scopeOverride,groupName]);if(ele.addEventListener)ele.addEventListener(evntType,wFunc,false);else if(ele.attachEvent)ele.attachEvent('on'+evntType,wFunc);}else{$e._de.push([evntEle,evntType,evntFunc,evntScope,scopeOverride,groupName]);}
return true;},remove:function(ele,evntType,evntFunc){if(evntType.substr(0,8)=='abstract'){if($e._ae[ele.id]){var subType=evntType.substr(8);if(subType=='down'){var evnts=$e._ae[ele.id].d;for(var i=evnts.length-1;i>=0;i--){if(evnts[i]){if(evnts[i][0]==evntFunc){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);}}}
if($ga(ele,'A5AbstEvntD')=='true'&&evnts.length==0){if(window.navigator.msPointerEnabled)$e.remove(ele,'MSPointerDown',$e._aetDown);else{$e.remove(ele,'touchstart',$e._aetDown);$e.remove(ele,'mousedown',$e._aemDown);}
$sa(ele,'A5AbstEvntD','');}}else if(subType=='up'){var evnts=$e._ae[ele.id].u;for(var i=evnts.length-1;i>=0;i--){if(evnts[i]){if(evnts[i][0]==evntFunc){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);}}}
if($ga(ele,'A5AbstEvntU')=='true'&&evnts.length==0){if(window.navigator.msPointerEnabled)$e.remove(ele,'MSPointerUp',$e._aetUp);else{$e.remove(ele,'touchend',$e._aetUp);$e.remove(ele,'mouseup',$e._aemUp);}
$sa(ele,'A5AbstEvntU','');}}else if(subType=='move'){var evnts=$e._ae[ele.id].m;for(var i=evnts.length-1;i>=0;i--){if(evnts[i]){if(evnts[i][0]==evntFunc){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);}}}
if($ga(ele,'A5AbstEvntM')=='true'&&evnts.length==0){if(window.navigator.msPointerEnabled)$e.remove(ele,'MSPointerMove',$e._aetMove);else{$e.remove(ele,'touchmove',$e._aetMove);$e.remove(ele,'mousemove',$e._aemMove);}
$sa(ele,'A5AbstEvntM','');}}else{var evnts=$e._ae[ele.id].g;for(var i=evnts.length-1;i>=0;i--){if(evnts[i]){if(evnts[i][0]==evntFunc){delete evnts[i][1];delete evnts[i][2];delete evnts[i];evnts.splice(i,1);$e._aeg.i--;}}}
if($ga(ele,'A5AbstEvntG')=='true'&&evnts.length==0){$e.remove(ele,'abstractdown',$e._aegStart);$sa(ele,'A5AbstEvntG','');}}
return true;}}
if(typeof ele=='string'){ele=$(ele);}else if(ele&&typeof ele.length!='undefined'&&!ele.tagName&&typeof ele!='string'&&!ele.alert&&typeof ele[0]!='undefined'){var returnBool=true;for(var i=0;i<ele.length;i++){returnBool=($e.remove(ele[i],evntType,evntFunc)&&returnBool)}
return returnBool;}
var eObj=null;var eIndx=arguments[3]?arguments[3]:$e._wf(ele,evntType,evntFunc);if(eIndx==-1){for(var i=0;i<$e._ue.length;i++){if($e._ue[i]){if($e._ue[i][0]==ele&&$e._ue[i][1]==evntType&&$e._ue[i][2]==evntFunc){delete $e._ue[i][2];delete $e._ue[i];return true;}}}
return false;}
eObj=$e._e[eIndx];if(ele.removeEventListener)ele.removeEventListener(evntType,eObj[3],false);else if(ele.detachEvent)ele.detachEvent('on'+evntType,eObj[3]);delete $e._e[eIndx][3];delete $e._e[eIndx][2];delete $e._e[eIndx];return true;},removeGroup:function(gName){for(var i=0;i<$e._e.length;i++){var eObj=$e._e[i];if(eObj){if(eObj[6]==gName){if(eObj[0])$e.remove(eObj[0],eObj[1],eObj[2],i);else{delete eObj[0];delete eObj[3];delete eObj[2];delete $e._e[i];}}}}
var evnts=0;var hadRemEvnts=false;for(var eleId in $e._ae){evnts=$e._ae[eleId].d;for(var i=evnts.length-1;i>=0;i--){if(evnts[i][5]==gName){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);hadRemEvnts=true;}}
if(evnts.length==0&&hadRemEvnts){var ele=$(eleId);$e.remove(ele,'touchstart',$e._aetDown);$e.remove(ele,'mousedown',$e._aemDown);$sa(ele,'A5AbstEvntd','');}
hadRemEvnts=false;evnts=$e._ae[eleId].u;for(var i=evnts.length-1;i>=0;i--){if(evnts[i][5]==gName){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);hadRemEvnts=true;}}
if(evnts.length==0&&hadRemEvnts){var ele=$(eleId);$e.remove(ele,'touchend',$e._aetUp);$e.remove(ele,'mouseup',$e._aemUp);$sa(ele,'A5AbstEvntU','');}
hadRemEvnts=false;evnts=$e._ae[eleId].m;for(var i=evnts.length-1;i>=0;i--){if(evnts[i][5]==gName){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);hadRemEvnts=true;}}
if(evnts.length==0&&hadRemEvnts){var ele=$(eleId);$e.remove(ele,'touchmove',$e._aetMove);$e.remove(ele,'mousemove',$e._aemMove);$sa(ele,'A5AbstEvntM','');}
hadRemEvnts=false;evnts=$e._ae[eleId].g;for(var i=evnts.length-1;i>=0;i--){if(evnts[i][5]==gName){delete evnts[i][0];delete evnts[i][1];delete evnts[i];evnts.splice(i,1);hadRemEvnts=true;}}
if(evnts.length==0&&hadRemEvnts){var ele=$(eleId);$e.remove(ele,'abstractdown',$e._aegStart);$sa(ele,'A5AbstEvntG','');}}
for(var i=0;i<$e._ue.length;i++){if($e._ue[i]){if($e._ue[i][6]==gName){delete $e._ue[i][0];delete $e._ue[i][3];delete $e._ue[i][2];delete $e._ue[i];}}}},execute:function(ele,evntType){if(!$e.loaded){$e._dee.push([ele,evntType]);return false;}
var ele=$(ele);if(!ele)return false;var e={};if(evntType.substr(0,8)=='abstract'){if($e._ae[ele.id]){var subType=evntType.substr(8);if(subType=='down'){var evnts=$e._ae[ele.id].d;for(var i=0;i<evnts.length;i++)evnts[i][1](e);}else if(subType=='up'){var evnts=$e._ae[ele.id].u;for(var i=0;i<evnts.length;i++)evnts[i][1](e);}else if(subType=='move'){var evnts=$e._ae[ele.id].m;for(var i=0;i<evnts.length;i++)evnts[i][1](e);}else{var evnts=$e._ae[ele.id].g;for(var i=0;i<evnts.length;i++){if(evnts[i][0]==evntType)evnts[i][2](e);}}}
return;}
if(ele['on'+evntType])ele['on'+evntType]();for(var i=0;i<$e._e.length;i++){if($e._e[i]){if($e._e[i][0]==ele&&$e._e[i][1]==evntType){$e._e[i][3](e);}}}},executeGroup:function(gName){for(var i=0;i<$e._e.length;i++){var eObj=$e._e[i];if(eObj){if(eObj[6]==gName)eObj[3]();}}},getEvent:function(e){var evnt=e||window.event;return evnt},getCharCode:function(e){e=$e.getEvent(e);return e.charCode||e.keyCode;},getTouches:function(e){if(e.originalEvent){if(e.originalEvent.touches&&e.originalEvent.touches.length)return e.originalEvent.touches;else if(e.originalEvent.changedTouches&&e.originalEvent.changedTouches.length)return e.originalEvent.changedTouches;}else{if(e.touches||e.changedTouches){if(e.touches.length)return e.touches;else if(e.changedTouches.length)return e.changedTouches;}}
return null;},getCoors:function(e){var coors={};var tempT=$e.getTouches(e);if(tempT){if(tempT.length){coors.clientX=tempT[0].clientX;coors.clientY=tempT[0].clientY;return coors;}}
coors.clientX=e.clientX;coors.clientY=e.clientY;return coors;},stopEvent:function(e){e=$e.getEvent(e);$e.stopPropagation(e);$e.preventDefault(e);},stopPropagation:function(e){e=$e.getEvent(e);if(e.stopPropagation)e.stopPropagation();else e.cancelBubble=true;},preventDefault:function(e){e=$e.getEvent(e);if(e.preventDefault)e.preventDefault();else e.returnValue=false;},_wf:function(eEle,eType,eFn){for(var i=0;i<$e._e.length;i++){if($e._e[i])
if($e._e[i][0]==eEle&&$e._e[i][1]==eType&&$e._e[i][2]==eFn)return i;}
return-1},_pageLoad:function(){if(!$e.loaded){$e.loaded=true;for(var i=0;i<$e._de.length;i++)$e.add.call($e,$e._de[i][0],$e._de[i][1],$e._de[i][2],$e._de[i][3],$e._de[i][4],$e._de[i][5]);for(var i=0;i<$e._dee.length;i++)$e.execute.apply($e,$e._dee[i]);if($e.onLoaded.constructor==Function)$e.onLoaded();}},_pageUnload:function(e){for(var i=0;i<$e._ue.length;i++){if($e._ue[i]){$e._ue[i][3](e);delete $e._ue[i][0];delete $e._ue[i][3];delete $e._ue[i][2];delete $e._ue[i];}}
for(var i=0;i<$e._e.length;i++){if($e._e[i]){if($e._e[i][0])$e.remove($e._e[i][0],$e._e[i][1],$e._e[i][2],i);}}},_aetDown:function(e){$e._ae[this.id].dt=new Date().getTime();$e._aeDown(this,e);},_aemDown:function(e){if($e._ae[this.id]){if($e._ae[this.id].dt){if(new Date().getTime()-$e._ae[this.id].dt<1000){$e._ae[this.id].dt=false;return;}}}
$e._aeDown(this,e);},_aeDown:function(ele,e){if(ele.disabled==true)return false;var evnts=$e._ae[ele.id].d;for(var i=0;i<evnts.length;i++)evnts[i][1](e);},_aetUp:function(e){$e._ae[this.id].ut=new Date().getTime();$e._aeUp(this,e);},_aemUp:function(e){if($e._ae[this.id]){if($e._ae[this.id].ut){if(new Date().getTime()-$e._ae[this.id].ut<1000){$e._ae[this.id].ut=false;return;}}}
$e._aeUp(this,e);},_aeUp:function(ele,e){var evnts=$e._ae[ele.id].u;for(var i=0;i<evnts.length;i++)evnts[i][1](e);},_aetMove:function(e){$e._ae[this.id].mt=new Date().getTime();$e._aeMove(this,e);},_aemMove:function(e){if($e._ae[this.id]){if($e._ae[this.id].mt){if(new Date().getTime()-$e._ae[this.id].mt<1000){$e._ae[this.id].mt=false;return;}}}
$e._aeMove(this,e);},_aeMove:function(ele,e){var evnts=$e._ae[ele.id].m;for(var i=0;i<evnts.length;i++)evnts[i][1](e);},_aegStart:function(e){if(!e.type)return;$e._aeg.a.push(this.id);if($e._aeg.a.length==1){var coor=$e.getCoors(e);$e._aeg.sT=new Date().getTime();$e._aeg.x=coor.clientX;$e._aeg.y=coor.clientY;$e._aeg.sX=coor.clientX;$e._aeg.sY=coor.clientY;$e._aeg.maxX=coor.clientX;$e._aeg.maxY=coor.clientY;$e._aeg.minX=coor.clientX;$e._aeg.minY=coor.clientY;$e._aeg.dh=false;$e._aeg.dhTO=setTimeout($e._aegHold,$e.abstractEvents.downHold.duration);}},_aegMove:function(e){if(!$e._aeg.a)return;var coor=$e.getCoors(e);$e._aeg.x=coor.clientX;$e._aeg.y=coor.clientY;$e._aeg.maxX=Math.max($e._aeg.maxX,coor.clientX);$e._aeg.maxY=Math.max($e._aeg.maxY,coor.clientY);$e._aeg.minX=Math.min($e._aeg.minX,coor.clientX);$e._aeg.minY=Math.min($e._aeg.minY,coor.clientY);},_aegEnd:function(e){var coor=$e.getCoors(e);clearTimeout($e._aeg.dhTO);var tn=new Date().getTime();var isTap=false;var isDblTap=false;var isSwipe=false;var dX=Math.max($e._aeg.sX-$e._aeg.minX,$e._aeg.maxX-$e._aeg.sX);var dY=Math.max($e._aeg.sY-$e._aeg.minY,$e._aeg.maxY-$e._aeg.sY);var dist=Math.sqrt((dX*dX)+(dY*dY));if(dist<=$e.abstractEvents.tap.wiggle){isTap=true;if((tn-$e._aeg.lTap)<=$e.abstractEvents.dblTap.duration){dX=Math.abs(coor.clientX-$e._aeg.lTapCoor.clientX);dY=Math.abs(coor.clientY-$e._aeg.lTapCoor.clientY);dist=Math.sqrt((dX*dX)+(dY*dY));if(dist<=$e.abstractEvents.dblTap.wiggle){isDblTap=true;}}
$e._aeg.lTap=tn;$e._aeg.lTapCoor=coor;}
if(dist/(tn-$e._aeg.sT)>=$e.abstractEvents.swipe.velocity){isSwipe=true;var hDir='left';var vDir='up';if($e._aeg.sX-$e._aeg.minX<$e._aeg.maxX-$e._aeg.sX)hDir='right';if($e._aeg.sY-$e._aeg.minY<$e._aeg.maxY-$e._aeg.sY)vDir='down';if(dX>=dY){e.swipeDirection=hDir;}else{e.swipeDirection=vDir;}}
e.abstractData={x:$e._aeg.x,y:$e._aeg.y,startX:$e._aeg.sX,startY:$e._aeg.sY,endX:coor.clientX,endY:coor.clientY,maxX:$e._aeg.maxX,maxY:$e._aeg.maxY,minX:$e._aeg.minX,minY:$e._aeg.minY,downHold:$e._aeg.dh};var tA=$u.a.dedup($e._aeg.a.join('\n').split('\n'));$e._aeg.a=[];$e._aeg.sT=0;$e._aeg.sX=0;$e._aeg.sY=0;$e._aeg.maxX=5000;$e._aeg.maxY=5000;$e._aeg.minX=-5000;$e._aeg.minY=-5000;var tResult=true;var pClick=$if(A5.u.drag._sDif<$e.abstractEvents.click.scrollMax,true,false);var pDblClick=pClick;var canBeDblClick=(tn-$e._aeg.lClick)<=$e.abstractEvents.dblClick.duration;for(var j=0;j<tA.length;j++){if($e._ae[tA[j]]){var evnts=$e._ae[tA[j]].g;for(var i=0;i<evnts.length;i++){var subType=evnts[i][0].substr(8);var disabled=$e._ae[tA[j]].ele.disabled;if((subType=='click'||subType=='dblclick')&&disabled!=true&&pClick){var b=$e._ae[tA[j]].ele.getBoundingClientRect();if(coor.clientY>=b.top&&coor.clientY<=b.top+b.height&&coor.clientX>=b.left&&coor.clientX<=b.left+b.width){$e._aeg.lClick=tn;if(subType=='click'){tResult=evnts[i][2](e);if(typeof tResult=='boolean'&&tResult==false)pClick=false;}
if(subType=='dblclick'&&canBeDblClick&&pDblClick){if($e._aeg.lClickB.top==b.top&&$e._aeg.lClickB.left==b.left&&$e._aeg.lClickB.width==b.width&&$e._aeg.lClickB.height==b.height){tResult=evnts[i][2](e);if(typeof tResult=='boolean'&&tResult==false)pDblClick=false;}}
$e._aeg.lClickB=b;}}else if(subType=='tap'){if(isTap){tResult=evnts[i][2](e);if(typeof tResult=='boolean'&&tResult==false)isTap=false;}}else if(subType=='dbltap'){if(isDblTap){tResult=evnts[i][2](e);if(typeof tResult=='boolean'&&tResult==false)isDblTap=false;}}else if(subType=='swipe'){if(isSwipe){tResult=evnts[i][2](e);if(typeof tResult=='boolean'&&tResult==false)isSwipe=false;}}}}}},_aegHold:function(){var dX=Math.max($e._aeg.sX-$e._aeg.minX,$e._aeg.maxX-$e._aeg.sX);var dY=Math.max($e._aeg.sY-$e._aeg.minY,$e._aeg.maxY-$e._aeg.sY);var dist=Math.sqrt((dX*dX)+(dY*dY));if(dist<=$e.abstractEvents.downHold.wiggle){var e={type:'abstractdownhold',clientX:$e._aeg.x,clientY:$e._aeg.y,abstractData:{x:$e._aeg.x,y:$e._aeg.y,startX:$e._aeg.sX,startY:$e._aeg.sY,maxX:$e._aeg.maxX,maxY:$e._aeg.maxY,minX:$e._aeg.minX,minY:$e._aeg.minY}};$e._aeg.dh=true;for(var j=0;j<$e._aeg.a.length;j++){if($e._ae[$e._aeg.a[j]]){if($e._ae[$e._aeg.a[j]].g){var evnts=$e._ae[$e._aeg.a[j]].g;for(var i=0;i<evnts.length;i++){if(evnts[i][0].substr(8)=='downhold')evnts[i][2](e);}}}}}},onLoaded:0,abstractEvents:{disabled:false,tap:{wiggle:10},dblTap:{duration:600,wiggle:10},click:{scrollMax:20},dblClick:{duration:600},downHold:{duration:600,wiggle:10},swipe:{velocity:.75}}}
$ae(window,'load',$e._pageLoad);$ae(window,'unload',$e._pageUnload);}
var $a=new Object();$a.simple=Class.create();$a.simple.prototype={initialize:function(url,options){this.transport=this.getTransport();this.method=options.method||'post';this.async=options.async||true;this.handleGeneric=options.handleGeneric||false;this.handleType=options.handleType||'eval';this.handleContext=options.handleContext||false;this.onprogress=options.onprogress||false;this.onload=options.onload||false;this.onerror=options.onerror||false;this.onabort=options.onabort||false;this.timeout=options.timeout||false;if(this.handleGeneric==true){if(this.handleType=='eval'){this.handle=$a._rh._eval;}}else{this.handle=options.handle||null;}
this.errorHandle=options.errorHandle||$a._rh._error;this.errorHandleContext=options.errorHandleContext||null;this.data=options.data||'';if(typeof A5!='undefined'){if(typeof A5.ajax!='undefined'){if(typeof A5.ajax.addParamRequiredData!='undefined')this.data=A5.ajax.addParamRequiredData(this.data);}}
var data=this.data.split('&');var dataI=0;var prop='';var obj={};for(var i=0;i<data.length;i++){dataI=data[i].split('=');prop=dataI.shift();dataI=dataI.join('=');if(prop.substr(prop.length-2)=='[]'){prop=prop.substr(0,prop.length-2);if(typeof obj[prop]=='undefined')obj[prop]=[];obj[prop].push(dataI);}else obj[prop]=dataI;}
this.data=$u.o.toParams(obj,'',false);this.fill=$(options.fill)||null;this.url=url;this._secondChance=true;$a.lastCallback=new Date().getTime();this.initCallback=$a.lastCallback;this.request();},request:function(){this.transport.open(this.method,this.url,this.async);if(this.timeout)this.transport.timeout=this.timeout;var func=this.onChange;var context=this;this.transport.onreadystatechange=function(){return func.call(context);};if(this.method=='post'){this.transport.setRequestHeader('Content-type','application/x-www-form-urlencoded; charset=UTF-8');if(this.transport.overrideMimeType){try{this.transport.overrideMimeType('text/html; charset=UTF-8');}catch(e){console.log('Error -> '+e);}}}
if(this.onprogress){this.transport.onprogress=this.onprogress;this.transport.upload.onprogress=this.onprogress;}
if(this.onload){this.transport.onload=this.onload;this.transport.upload.onload=this.onload;}
if(this.onerror){this.transport.onerror=this.onerror;this.transport.upload.onerror=this.onerror;}
if(this.onabort){this.transport.onabort=this.onabort;this.transport.upload.onabort=this.onabort;}
this.transport.setRequestHeader('X-Requested-With','XMLHttpRequest');this.transport.send(this.data);},onChange:function(){if(this.transport.readyState==4&&this.transport.status==200){var func=this.handle;var funcContext=this.handleContext||func;var context=this;if(func)setTimeout(function(){return func.call(funcContext,context.transport);},10);if($a._def[''+this.initCallback])setTimeout(Function('$a._def[\''+this.initCallback+'\'](); delete $a._def[\''+this.initCallback+'\'];'),20);var obj=this.fill;if(obj)setTimeout(function(){return $svs(obj,context.transport.responseText);},10);}else if(this.transport.readyState==4&&this.transport.status==408&&this._secondChance){$a.lastCallback=new Date().getTime();this.request();this._secondChance=false;}else if(this.transport.readyState==4&&this.transport.status!=200){var func=this.errorHandle;var funcContext=this.errorHandleContext||func;var context=this;if(func)setTimeout(function(){return func.call(funcContext,context.transport);},10);var obj=this.fill;if(obj)setTimeout(function(){return $svs(obj,context.transport.responseText);},10);}},getTransport:function(){trans=false;try{trans=new XMLHttpRequest();}catch(err){if(window.ActiveXObject)trans=new ActiveXObject('Microsoft.XMLHTTP');}
return trans;}}
$a._def={};$a.lastCallback=new Date().getTime();$a._rh={_eval:function(obj){if(obj.responseText)eval(obj.responseText);},_error:function(obj){var pText=obj.responseText;if(pText.search('</body>')!=-1)pText=$u.s.word($u.s.word(pText,2,'<body>'),1,'</body>');var pText=$u.s.aTrim(pText.replace(/(<([^>]+)>)/ig,''),'\n\r  ');if(pText!='')alert('XHTTPRequest Error:\n\n'+pText);}}
	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



var AUI=new Object();AUI.u={getVPSize:function(){if(typeof window.innerWidth=='number')
return{width:window.innerWidth,height:window.innerHeight};else if(document.documentElement&&(document.documentElement.clientWidth||document.documentElement.clientHeight))
return{width:document.documentElement.clientWidth,height:document.documentElement.clientHeight};else if(document.body&&(document.body.clientWidth||document.body.clientHeight))
return{width:document.body.clientWidth,height:document.body.clientHeight};},getVPScroll:function(){if(typeof window.pageYOffset=='number')
return{'x':window.pageXOffset,'y':window.pageYOffset};else if(document.documentElement&&typeof document.documentElement.scrollLeft!='undefined')
return{'x':document.documentElement.scrollLeft,'y':document.documentElement.scrollTop};else if(document.body&&typeof document.body.scrollLeft!='undefined')
return{'x':document.body.scrollLeft,'y':document.body.scrollTop};},getPosition:function(ele){ele=$(ele);var elePos={x:$gpl(ele),y:$gpt(ele)};if(typeof arguments[1]=='object'){arguments[1].x=elePos.x;arguments[1].y=elePos.y;}
return elePos;},getSize:function(ele){ele=$(ele);var eleSize={width:ele.offsetWidth,height:ele.offsetHeight};if(typeof arguments[1]=='object'){arguments[1].width=eleSize.width;arguments[1].height=eleSize.height;}
return eleSize;},getMetrics:function(ele){ele=$(ele);ele=$(ele);var eleMetrics={x:$gpl(ele),y:$gpt(ele),width:ele.offsetWidth,height:ele.offsetHeight};eleMetrics.x2=eleMetrics.x+eleMetrics.width;eleMetrics.y2=eleMetrics.y+eleMetrics.height;if(typeof arguments[1]=='object'){arguments[1].x=eleMetrics.x;arguments[1].y=eleMetrics.y;arguments[1].width=eleMetrics.width;arguments[1].height=eleMetrics.height;arguments[1].x2=eleMetrics.x2;arguments[1].y2=eleMetrics.y2;}
return eleMetrics;}}
AUI.KeyWatcher=Class.create();AUI.KeyWatcher.prototype={initialize:function(keys){this.keys=keys;this.shift=false;this.ctrl=false;this.alt=false;this.context=0;this.targetWindow=0;this._on=false;if(typeof arguments[1]=='object')this.context=arguments[1];if(typeof arguments[2]!='undefined')this.targetWindow=arguments[2];this._kwEventId='A5KeyWatch'+this._kwIndx[0];this._kwIndx[0]++;},on:function(){if(!this._on){if(this.targetWindow==0){$e.add(document.documentElement,'keydown',this._keyDown,this,false,this._kwEventId);$e.add(document.documentElement,'keyup',this._keyUp,this,false,this._kwEventId);}else{$e.add(this.targetWindow.document.documentElement,'keydown',this._keyDown,this,false,this._kwEventId);$e.add(this.targetWindow.document.documentElement,'keyup',this._keyUp,this,false,this._kwEventId);}
this._on=true;}},off:function(){if(this._on){$e.removeGroup(this._kwEventId);this._on=false;}},_keyDown:function(e,classInstance){e=$e.getEvent(e);var keyCode=e.charCode||e.keyCode;if(keyCode==16||keyCode==17||keyCode==18){if(keyCode==16)classInstance.shift=true;else if(keyCode==17)classInstance.ctrl=true;else if(keyCode==18)classInstance.alt=true;}else{if(typeof e.shiftKey!='undefined'){classInstance.shift=e.shiftKey;classInstance.ctrl=e.ctrlKey;classInstance.alt=e.altKey;}
if(keyCode==32)keyCode='SPACE';else if(keyCode==13)keyCode='ENTER';else if(keyCode==9)keyCode='TAB';else if(keyCode==8)keyCode='BACKSPACE';else if(keyCode==37)keyCode='LEFT';else if(keyCode==38)keyCode='UP';else if(keyCode==39)keyCode='RIGHT';else if(keyCode==40)keyCode='DOWN';else if(keyCode==27)keyCode='ESCAPE';else if(keyCode==33)keyCode='PAGEUP';else if(keyCode==34)keyCode='PAGEDOWN';else if(keyCode==35)keyCode='END';else if(keyCode==36)keyCode='HOME';else if(keyCode==45)keyCode='INSERT';else if(keyCode==46)keyCode='DELETE';else if(keyCode==112)keyCode='F1';else if(keyCode==113)keyCode='F2';else if(keyCode==114)keyCode='F3';else if(keyCode==115)keyCode='F4';else if(keyCode==116)keyCode='F5';else if(keyCode==117)keyCode='F6';else if(keyCode==118)keyCode='F7';else if(keyCode==119)keyCode='F8';else if(keyCode==120)keyCode='F9';else if(keyCode==121)keyCode='F10';else if(keyCode==122)keyCode='F11';else if(keyCode==123)keyCode='F12';else if(String.fromCharCode)keyCode=String.fromCharCode(keyCode).toUpperCase();var perfix='';var stopEvent=false;if(classInstance.ctrl)perfix='CTRL+';if(classInstance.alt)perfix=perfix+'ALT+';if(classInstance.shift)perfix=perfix+'SHIFT+';keyCode=perfix+keyCode;for(var i=0;i<classInstance.keys.length;i++){if(classInstance.keys[i].key.toUpperCase()==keyCode){if(typeof classInstance.context=='object')stopEvent=classInstance.keys[i].handle.call(classInstance.context);else stopEvent=classInstance.keys[i].handle();if(stopEvent==true){$e.stopEvent(e);return false;}else break;}}}},_keyUp:function(e,classInstance){e=$e.getEvent(e);var keyCode=e.charCode||e.keyCode;if(keyCode==16)classInstance.shift=false;else if(keyCode==17)classInstance.ctrl=false;else if(keyCode==18)classInstance.alt=false;},_kwIndx:[0]}
AUI.WaitDialog={setGlobal:function(settings){if($('AUIPageWaitDialog'))document.body.removeChild($('AUIPageWaitDialog'));var content=typeof settings.content!='undefined'?settings.content:'Loading...';var className=typeof settings.className!='undefined'?settings.className:'';var lockControl=typeof settings.lockControl!='undefined'?settings.lockControl:false;var lockClassName=typeof settings.lockClassName!='undefined'?settings.lockClassName:'';if(lockControl)AUI.LockUI.page(lockClassName,5000,'wait');var node=document.createElement('div');node.id='AUIPageWaitDialog';node.onclick=$e.stopEvent;node.onmousedown=$e.stopEvent;node.onmouseup=$e.stopEvent;node.className=className;node.style.position='absolute';node.innerHTML=content;node.style.zIndex=5000;document.body.appendChild(node);var vpSize=AUI.u.getVPSize();var vpScroll=AUI.u.getVPScroll();node.style.top=Math.round(((vpSize.height)/2)-(node.offsetHeight/2)+vpScroll.y)+'px';node.style.left=Math.round(((vpSize.width)/2)-(node.offsetWidth/2)+vpScroll.x)+'px';},clearGlobal:function(){var ele=$('AUIPageWaitDialog')
if(ele){document.body.removeChild(ele);}
AUI.LockUI.pageFree('wait');},addLocal:function(eleId,settings){var parEle=$(eleId);if(parEle!=undefined){if($(eleId+'_AUIWaitDialog'))document.body.removeChild($(eleId+'_AUIWaitDialog'));var content=typeof settings.content!='undefined'?settings.content:'Loading...';var location=typeof settings.location!='undefined'?settings.location:'element';var className=typeof settings.className!='undefined'?settings.className:'';var lockControl=typeof settings.lockControl!='undefined'?settings.lockControl:false;var lockClassName=typeof settings.lockClassName!='undefined'?settings.lockClassName:'';if(lockControl)AUI.LockUI.element(parEle,lockClassName);var node=document.createElement('div');node.id=eleId+'_AUIWaitDialog';node.onclick=$e.stopEvent;node.onmousedown=$e.stopEvent;node.onmouseup=$e.stopEvent;node.className=className;node.style.position='absolute';node.innerHTML=content;node.style.zIndex=5000;document.body.appendChild(node);if(location=='page'){var vpSize=AUI.u.getVPSize();var vpScroll=AUI.u.getVPScroll();node.style.top=Math.round(((vpSize.height)/2)-(node.offsetHeight/2)+vpScroll.y)+'px';node.style.left=Math.round(((vpSize.width)/2)-(node.offsetWidth/2)+vpScroll.x)+'px';}else
$po(node,parEle,19,0,0);}},clearLocal:function(eleId){if($(eleId+'_AUIWaitDialog'))document.body.removeChild($(eleId+'_AUIWaitDialog'));AUI.LockUI.elementFree(eleId);}}
AUI.LockUI={element:function(ele,className){ele=$(ele);var id=ele.id+'_AUILockUI';if($(id))document.body.removeChild($(id));var node=document.createElement('div');node.id=id;node.onclick=$e.stopEvent;node.onmousedown=$e.stopEvent;node.onmouseup=$e.stopEvent;node.className=className;node.style.position='absolute';document.body.appendChild(node);$po(node,ele,6,0,0);node.style.width=ele.offsetWidth+'px';node.style.height=ele.offsetHeight+'px';AUI.LockUI._eles.push(ele.id);delete node;},_elementSize:function(eleID){ele=$(eleID);node=$(eleID+'_AUILockUI');if(!node)return false;$po(node,ele,6,0,0);node.style.width=ele.offsetWidth+'px';node.style.height=ele.offsetHeight+'px';},elementFree:function(ele){ele=$(ele);var id=ele.id+'_AUILockUI';if($(id))document.body.removeChild($(id));var arrIndx=$u.a.find(AUI.LockUI._eles,ele.id);if(arrIndx>-1)AUI.LockUI._eles=AUI.LockUI._eles.slice(0,arrIndx).concat(AUI.LockUI._eles.slice(arrIndx,AUI.LockUI._eles.length));;},page:function(className){var zIndex=typeof arguments[1]!='undefined'?arguments[1]:-1;var cName=typeof arguments[2]!='undefined'?arguments[2]:false;if(cName){if(typeof this._c[cName]=='number')this.pageFree(cName);}
this._plLevel.push(zIndex);this._plCN.push(className);if(cName)this._c[cName]=this._plLevel.length-1;if($('AUILockUIPage')){var node=$('AUILockUIPage');if(zIndex==-1)node.style.zIndex='';else node.style.zIndex=''+(zIndex);return this._plLevel.length-1;}
var node=document.createElement('div');node.id='AUILockUIPage';node.onclick=$e.stopEvent;node.onmousedown=$e.stopEvent;$e.add(node,'mouseup',function(e){$e.stopEvent(e);if(AUI.Drag._s.active)AUI.Drag._endDrag(e);if(AUI.Resize._s.active)AUI.Resize._endResize(e);});node.className=className;node.style.position='absolute';node.style.position='fixed';node.style.top='0px';node.style.left='0px';node.style.right='0px';node.style.bottom='0px';if(A5.flags.supportsTouch){$e.add(node,'touchmove',function(e){var tempT=$e.getTouches(e);var pDef=true;if(tempT){if(tempT.length){if(tempT.length>1)pDef=false;}}
if(pDef)$e.preventDefault(e);});}
if(zIndex==-1)node.style.zIndex='';else node.style.zIndex=''+(zIndex);document.body.insertBefore(node,document.body.firstChild);return this._plLevel.length-1;},_pageSize:function(){var node=$('AUILockUIPage');if(!node)return false;node.style.width='0px';node.style.height='0px';if(document.all&&navigator.appName!='Opera')setTimeout(AUI.LockUI._pageSizeComplete,0);else AUI.LockUI._pageSizeComplete();},_pageSizeComplete:function(){var node=$('AUILockUIPage');if(!node)return false;var pageWidth=document.documentElement.clientWidth;var pageHeight=document.documentElement.clientHeight;pageWidth=$if(pageWidth<document.documentElement.scrollWidth,document.documentElement.scrollWidth,pageWidth);pageHeight=$if(pageHeight<document.documentElement.scrollHeight,document.documentElement.scrollHeight,pageHeight);node.style.width=(pageWidth-2)+'px';node.style.height=(pageHeight-3)+'px';},pageFree:function(){var ele=$('AUILockUIPage');if(ele){var cName=typeof arguments[0]!='undefined'?arguments[0]:false;if(cName){if(typeof this._c[cName]=='number'){this._plLevel.splice(this._c[cName],1);this._plCN.splice(this._c[cName],1);for(var c in this._c){if(this._c[c]>this._c[cName])this._c[c]--;}
delete this._c[cName];}else return false;}else{this._plLevel.pop();this._plCN.pop();}
if(this._plLevel.length==0)document.body.removeChild($('AUILockUIPage'));else{ele.style.zIndex=''+this._plLevel[this._plLevel.length-1];ele.className=this._plCN[this._plCN.length-1];}}},_eles:[],_pageLocked:false,_plLevel:[],_plCN:[],_c:{}}
$e.add(window,'resize',function(){if(AUI.LockUI._pageLocked)AUI.LockUI._pageSize();for(var i=0;i<AUI.LockUI._eles;i++)AUI.LockUI._elementSize(AUI.LockUI._eles[i])});AUI.Drag={create:function(hEle,sObj){hEle=$(hEle);var obj={dragElementId:'',coord:'page',snap:1,snapToCenter:false,constrainX:false,constrainY:false};$u.o.assign(obj,sObj);if(obj.dragElementId=='')obj.dragElementId=hEle.id;this._cacheSettings(hEle,obj);$e.add(hEle,'mousedown',AUI.Drag._startDrag);hEle.unselectable='on';$e.add(hEle,'selectstart',function(e){$e.stopEvent($e.getEvent(e));return false;});$e.add(hEle,'dragstart',function(e){$e.stopEvent($e.getEvent(e));return false;});},disable:function(ele){$sa(ele,'AUIDragDisable','true');},enable:function(ele){$sa(ele,'AUIDragDisable','false');},destroy:function(hEle){delete hEle.AUIDragHCoord;delete hEle.AUIDragHSnap;delete hEle.AUIDragHSnapToCenter;delete hEle.AUIDragHConstrainX;delete hEle.AUIDragHConstrainY;delete hEle.AUIDragHOnDragStart;delete hEle.AUIDragHWhileDrag;delete hEle.AUIDragHOnDragEnd;$e.remove(hEle,'mousedown',AUI.Drag._startDrag);$e.remove(hEle,'selectstart',function(e){var evnt=e||window.event;$e.stopEvent(evnt);return false;});$e.remove(hEle,'dragstart',function(e){var evnt=e||window.event;$e.stopEvent(evnt);return false;});},_s:{},_cacheSettings:function(hEle,sObj){$sa(hEle,'AUIDragHCoord',sObj.coord);$sa(hEle,'AUIDragHSnap',sObj.snap);$sa(hEle,'AUIDragHSnapToCenter',sObj.snapToCenter);$sa(hEle,'AUIDragHConstrainX',sObj.constrainX);$sa(hEle,'AUIDragHConstrainY',sObj.constrainY);$sa(hEle,'AUIDragHDragElementId',sObj.dragElementId);hEle.AUIDragHOnDragStart=typeof sObj.onDragStart!='undefined'?sObj.onDragStart:'';hEle.AUIDragHWhileDrag=typeof sObj.whileDrag!='undefined'?sObj.whileDrag:'';hEle.AUIDragHOnDragEnd=typeof sObj.onDragEnd!='undefined'?sObj.onDragEnd:'';},_retrieveSettings:function(hEle){AUI.Drag._s.coord=$ga(hEle,'AUIDragHCoord').toLowerCase();AUI.Drag._s.snap=$ga(hEle,'AUIDragHSnap');AUI.Drag._s.snapToCenter=$u.s.toBool(''+$ga(hEle,'AUIDragHSnapToCenter'));AUI.Drag._s.constrainX=$u.s.toBool(''+$ga(hEle,'AUIDragHConstrainX'));AUI.Drag._s.constrainY=$u.s.toBool(''+$ga(hEle,'AUIDragHConstrainY'));AUI.Drag._s.dragElementId=$ga(hEle,'AUIDragHDragElementId');AUI.Drag._s.onDragStart=hEle.AUIDragHOnDragStart;AUI.Drag._s.whileDrag=hEle.AUIDragHWhileDrag;AUI.Drag._s.onDragEnd=hEle.AUIDragHOnDragEnd;AUI.Drag._s.constraintTop=0;AUI.Drag._s.constraintLeft=0;AUI.Drag._s.constraintBottom=Math.max(document.body.offsetHeight,document.documentElement.clientHeight);AUI.Drag._s.constraintRight=document.body.offsetWidth;AUI.Drag._s.offsetX=0;AUI.Drag._s.offsetY=0;AUI.Drag._s.x=0;AUI.Drag._s.y=0;AUI.Drag._s._snapOffsetX=0;AUI.Drag._s._snapOffsetY=0;},_startDrag:function(e){$e.stopEvent(e);AUI.Drag._retrieveSettings(this);AUI.Drag._s.active=true;var dObj=$(AUI.Drag._s.dragElementId);if($ga(this,'AUIDragDisable')=='true'||$ga(dObj,'AUIDragDisable')=='true')return false;$e.add(document,'mouseup',AUI.Drag._endDrag);if(AUI.Drag._s.coord=='parent'||AUI.Drag._s.coord=='custom')$e.add(document,'mousemove',AUI.Drag._whileDragBound);else $e.add(document,'mousemove',AUI.Drag._whileDrag);if(AUI.Drag._s.onDragStart.constructor==Function)AUI.Drag._s.onDragStart(e,AUI.Drag._s);if(AUI.Drag._s.coord=='parent'){AUI.Drag._s.constraintBottom=dObj.parentNode.offsetHeight-dObj.offsetHeight;AUI.Drag._s.constraintRight=dObj.parentNode.offsetWidth-dObj.offsetWidth;}
if(AUI.Drag._s.snapToCenter){AUI.Drag._s._snapOffsetX=Math.round(dObj.offsetWidth/2);AUI.Drag._s._snapOffsetY=Math.round(dObj.offsetHeight/2);AUI.Drag._s.constraintTop=AUI.Drag._s.constraintTop-AUI.Drag._s._snapOffsetY;AUI.Drag._s.constraintLeft=AUI.Drag._s.constraintLeft-AUI.Drag._s._snapOffsetX;AUI.Drag._s.constraintBottom=AUI.Drag._s.constraintBottom+AUI.Drag._s._snapOffsetY;AUI.Drag._s.constraintRight=AUI.Drag._s.constraintRight+AUI.Drag._s._snapOffsetX;}
AUI.Drag._s.offsetX=e.clientX-dObj.offsetLeft;AUI.Drag._s.offsetY=e.clientY-dObj.offsetTop;return false;},_whileDrag:function(e){var evnt=e||window.event;var dObj=$(AUI.Drag._s.dragElementId);var tempY=(evnt.clientY-AUI.Drag._s.offsetY);var tempX=(evnt.clientX-AUI.Drag._s.offsetX);tempY=Math.round(Math.round((tempY-AUI.Drag._s._snapOffsetY)/AUI.Drag._s.snap)*AUI.Drag._s.snap)+AUI.Drag._s._snapOffsetY;tempX=Math.round(Math.round((tempX-AUI.Drag._s._snapOffsetX)/AUI.Drag._s.snap)*AUI.Drag._s.snap)+AUI.Drag._s._snapOffsetX;if(!AUI.Drag._s.constrainY&&tempY!=AUI.Drag._s.y)dObj.style.top=tempY+'px';if(!AUI.Drag._s.constrainX&&tempX!=AUI.Drag._s.x)dObj.style.left=tempX+'px';AUI.Drag._s.x=tempX;AUI.Drag._s.y=tempY;if(AUI.Drag._s.whileDrag.constructor==Function&&((!AUI.Drag._s.constrainX&&tempX!=AUI.Drag._s.x)||(!AUI.Drag._s.constrainY&&tempY!=AUI.Drag._s.y))){AUI.Drag._s.x=tempX;AUI.Drag._s.y=tempY;AUI.Drag._s.whileDrag(evnt,AUI.Drag._s);}
AUI.Drag._s.x=tempX;AUI.Drag._s.y=tempY;},_whileDragBound:function(e){var evnt=e||window.event;var dObj=$(AUI.Drag._s.dragElementId);var tempY=Math.max(Math.min((evnt.clientY-AUI.Drag._s.offsetY),AUI.Drag._s.constraintBottom),AUI.Drag._s.constraintTop);var tempX=Math.max(Math.min((evnt.clientX-AUI.Drag._s.offsetX),AUI.Drag._s.constraintRight),AUI.Drag._s.constraintLeft);tempY=Math.round(Math.round((tempY-AUI.Drag._s._snapOffsetY)/AUI.Drag._s.snap)*AUI.Drag._s.snap)+AUI.Drag._s._snapOffsetY;tempX=Math.round(Math.round((tempX-AUI.Drag._s._snapOffsetX)/AUI.Drag._s.snap)*AUI.Drag._s.snap)+AUI.Drag._s._snapOffsetX;if(!AUI.Drag._s.constrainY&&tempY!=AUI.Drag._s.y)dObj.style.top=tempY+'px';if(!AUI.Drag._s.constrainX&&tempX!=AUI.Drag._s.x)dObj.style.left=tempX+'px';if(AUI.Drag._s.whileDrag.constructor==Function&&((!AUI.Drag._s.constrainX&&tempX!=AUI.Drag._s.x)||(!AUI.Drag._s.constrainY&&tempY!=AUI.Drag._s.y))){AUI.Drag._s.x=tempX;AUI.Drag._s.y=tempY;AUI.Drag._s.whileDrag(evnt,AUI.Drag._s);}
AUI.Drag._s.x=tempX;AUI.Drag._s.y=tempY;},_endDrag:function(e){var evnt=e||window.event;$e.remove(document,'mouseup',AUI.Drag._endDrag);if(AUI.Drag._s.coord=='parent'||AUI.Drag._s.coord=='custom')$e.remove(document,'mousemove',AUI.Drag._whileDragBound);else $e.remove(document,'mousemove',AUI.Drag._whileDrag);if(AUI.Drag._s.onDragEnd.constructor==Function)AUI.Drag._s.onDragEnd(evnt,AUI.Drag._s);AUI.Drag._s.active=false;}}
AUI.Resize={create:function(hEle,sObj){hEle=$(hEle);var obj={resizeElementId:'',snap:1,type:'br',lockRatio:false,minWidth:1,minHeight:1,maxWidth:-1,maxHeight:-1};$u.o.assign(obj,sObj);if(obj.resizeElementId=='')obj.resizeElementId=hEle.id;this._cacheSettings(hEle,obj);$e.add(hEle,'mousedown',AUI.Resize._startResize);hEle.unselectable='on';$e.add(hEle,'selectstart',function(e){$e.stopEvent($e.getEvent(e));return false;});$e.add(hEle,'dragstart',function(e){$e.stopEvent($e.getEvent(e));return false;});},disable:function(ele){$sa(ele,'AUIResizeDisable','true');},enable:function(ele){$sa(ele,'AUIResizeDisable','false');},destroy:function(hEle){delete hEle.AUIResizeHType;delete hEle.AUIResizeHSnap;delete hEle.AUIResizeHLockRatio;delete hEle.AUIResizeHMinWidth;delete hEle.AUIResizeHMinHeight;delete hEle.AUIResizeHMaxWidth;delete hEle.AUIResizeHMaxHeight;delete hEle.AUIResizeHOnResizeStart;delete hEle.AUIResizeHWhileResize;delete hEle.AUIResizeHOnResizeEnd;$e.remove(hEle,'mousedown',AUI.Resize._startResize);$e.remove(hEle,'selectstart',function(e){var evnt=e||window.event;$e.stopEvent(evnt);return false;});$e.remove(hEle,'dragstart',function(e){var evnt=e||window.event;$e.stopEvent(evnt);return false;});},_s:{},_cacheSettings:function(hEle,sObj){$sa(hEle,'AUIResizeHType',sObj.type);$sa(hEle,'AUIResizeHSnap',sObj.snap);$sa(hEle,'AUIResizeHLockRatio',sObj.lockRatio);$sa(hEle,'AUIResizeHMinWidth',sObj.minWidth);$sa(hEle,'AUIResizeHMinHeight',sObj.minHeight);$sa(hEle,'AUIResizeHMaxWidth',sObj.maxWidth);$sa(hEle,'AUIResizeHMaxHeight',sObj.maxHeight);$sa(hEle,'AUIResizeHResizeElementId',sObj.resizeElementId);hEle.AUIResizeHOnResizeStart=typeof sObj.onResizeStart!='undefined'?sObj.onResizeStart:'';hEle.AUIResizeHWhileResize=typeof sObj.whileResize!='undefined'?sObj.whileResize:'';hEle.AUIResizeHOnResizeEnd=typeof sObj.onResizeEnd!='undefined'?sObj.onResizeEnd:'';},_retrieveSettings:function(hEle){AUI.Resize._s.type=$ga(hEle,'AUIResizeHType').toLowerCase();AUI.Resize._s.snap=$ga(hEle,'AUIResizeHSnap');AUI.Resize._s.lockRatio=$u.s.toBool(''+$ga(hEle,'AUIResizeHLockRatio'));AUI.Resize._s.minWidth=Number($ga(hEle,'AUIResizeHMinWidth'));AUI.Resize._s.minHeight=Number($ga(hEle,'AUIResizeHMinHeight'));AUI.Resize._s.maxWidth=Number($ga(hEle,'AUIResizeHMaxWidth'));AUI.Resize._s.maxHeight=Number($ga(hEle,'AUIResizeHMaxHeight'));AUI.Resize._s.resizeElementId=$ga(hEle,'AUIResizeHResizeElementId');AUI.Resize._s.onResizeStart=hEle.AUIResizeHOnResizeStart;AUI.Resize._s.whileResize=hEle.AUIResizeHWhileResize;AUI.Resize._s.onResizeEnd=hEle.AUIResizeHOnResizeEnd;AUI.Resize._s.initialMouseX=0;AUI.Resize._s.initialMouseY=0;AUI.Resize._s.x=0;AUI.Resize._s.y=0;AUI.Resize._s.width=0;AUI.Resize._s.height=0;AUI.Resize._s.initialX=0;AUI.Resize._s.initialY=0;AUI.Resize._s.initialWidth=0;AUI.Resize._s.initialHeight=0;},_startResize:function(e){$e.stopEvent(e);AUI.Resize._retrieveSettings(this);AUI.Resize._s.active=true;var dObj=$(AUI.Resize._s.resizeElementId);if($ga(this,'AUIResizeDisable')=='true'||$ga(dObj,'AUIResizeDisable')=='true')return false;$e.add(document,'mouseup',AUI.Resize._endResize);$e.add(document,'mousemove',AUI.Resize._whileResize);if(AUI.Resize._s.onResizeStart.constructor==Function)AUI.Resize._s.onResizeStart(e,AUI.Resize._s);AUI.Resize._s.initialMouseX=e.clientX;AUI.Resize._s.initialMouseY=e.clientY;AUI.Resize._s.x=dObj.offsetLeft;AUI.Resize._s.y=dObj.offsetTop;AUI.Resize._s.initialX=AUI.Resize._s.x;AUI.Resize._s.initialY=AUI.Resize._s.y;AUI.Resize._s.width=dObj.offsetWidth;AUI.Resize._s.height=dObj.offsetHeight;AUI.Resize._s.initialWidth=AUI.Resize._s.width;AUI.Resize._s.initialHeight=AUI.Resize._s.height;return false;},_whileResize:function(e){var evnt=e||window.event;var dObj=$(AUI.Resize._s.resizeElementId);var resized=false;var tempX=(evnt.clientX-AUI.Resize._s.initialMouseX);var tempY=(evnt.clientY-AUI.Resize._s.initialMouseY);if(AUI.Resize._s.lockRatio){tempX=Math.max(tempX,tempY);tempY=tempX;}
if(AUI.Resize._s.type.indexOf('l')!=-1)tempX=tempX*-1;if(AUI.Resize._s.type.indexOf('t')!=-1)tempY=tempY*-1;if(AUI.Resize._s.type.indexOf('c')!=-1||AUI.Resize._s.type.indexOf('h')!=-1)tempX=tempX*2;if(AUI.Resize._s.type.indexOf('c')!=-1||AUI.Resize._s.type.indexOf('v')!=-1)tempY=tempY*2;var tempWidth=(Math.round((AUI.Resize._s.initialWidth+tempX)/AUI.Resize._s.snap)*AUI.Resize._s.snap);var tempHeight=(Math.round((AUI.Resize._s.initialHeight+tempY)/AUI.Resize._s.snap)*AUI.Resize._s.snap);tempWidth=Math.max(tempWidth,AUI.Resize._s.minWidth);tempHeight=Math.max(tempHeight,AUI.Resize._s.minHeight);if(AUI.Resize._s.maxWidth>AUI.Resize._s.minWidth)tempWidth=Math.min(tempWidth,AUI.Resize._s.maxWidth);if(AUI.Resize._s.maxHeight>AUI.Resize._s.minHeight)tempHeight=Math.min(tempHeight,AUI.Resize._s.maxHeight);if(tempWidth!=AUI.Resize._s.width){resized=true;if(AUI.Resize._s.type.indexOf('l')!=-1){resized=true;dObj.style.width=tempWidth+'px';dObj.style.left=(AUI.Resize._s.initialX-(tempWidth-AUI.Resize._s.initialWidth))+'px';}else if(AUI.Resize._s.type.indexOf('r')!=-1){resized=true;dObj.style.width=tempWidth+'px';}else if(AUI.Resize._s.type.indexOf('c')!=-1||AUI.Resize._s.type.indexOf('h')!=-1){resized=true;dObj.style.width=tempWidth+'px';dObj.style.left=(AUI.Resize._s.initialX-Math.round((tempWidth-AUI.Resize._s.initialWidth)/2))+'px';}}
if(tempHeight!=AUI.Resize._s.height){if(AUI.Resize._s.type.indexOf('t')!=-1){resized=true;dObj.style.height=tempHeight+'px';dObj.style.top=(AUI.Resize._s.initialX-(tempHeight-AUI.Resize._s.initialHeight))+'px';}else if(AUI.Resize._s.type.indexOf('b')!=-1){resized=true;dObj.style.height=tempHeight+'px';}else if(AUI.Resize._s.type.indexOf('c')!=-1||AUI.Resize._s.type.indexOf('v')!=-1){resized=true;dObj.style.height=tempHeight+'px';dObj.style.top=(AUI.Resize._s.initialX-Math.round((tempHeight-AUI.Resize._s.initialHeight)/2))+'px';}}
if(resized){AUI.Resize._s.x=dObj.offsetLeft;AUI.Resize._s.x=dObj.offsetHeight;AUI.Resize._s.width=tempWidth;AUI.Resize._s.height=tempHeight;if(AUI.Resize._s.whileResize.constructor==Function){AUI.Resize._s.whileResize(evnt,AUI.Resize._s);}}},_endResize:function(e){var evnt=e||window.event;$e.stopEvent(evnt);$e.remove(document,'mouseup',AUI.Resize._endResize);$e.remove(document,'mousemove',AUI.Resize._whileResize);if(AUI.Resize._s.onResizeEnd.constructor==Function)AUI.Resize._s.onResizeEnd(evnt,AUI.Resize._s);AUI.Resize._s.active=false;}}
	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



function a5_AJAX_GridAction(action,gridID,url,data){a5_AJAX_Form(action,gridID,url,data)}
function a5_AJAX_GridSubmit(submitAction,gridID,gridPart,url){var optionalData=typeof arguments[4]!='undefined'?arguments[4]:'';var action=submitAction;var formID=gridID+'_'+gridPart+'.FORM';var stateInfoID=gridID+'.STATEINFO';a5_AJAX_Form(action,formID,url,optionalData,true,stateInfoID,'__form')}
function a5_AJAX_Form(action,formID,url){var optionalData=typeof arguments[3]!='undefined'?arguments[3]:'';var flagSubmitData=typeof arguments[4]!='undefined'?arguments[4]:false;if(typeof arguments[5]=='undefined'){var stateID=formID+'.STATEINFO';}
else
{var stateID=arguments[5];}
var nameSpace=typeof arguments[6]!='undefined'?arguments[6]:'';var removeEvents=typeof arguments[7]!='undefined'?arguments[7]:true;var data='';var stateInfo=$(stateID).value?$(stateID).value:'';var stateInfoArray=stateInfo.split('&');var finalStateInfoArray=new Array();if($(formID)&&$ga(formID,'A5DataRegion')!='A5DataRegion')a5_AJAX_FormPrepare(formID);if(action=='submit:dirty')
{data=a5_AJAX_Form_RegionHarvest(formID,false,true,nameSpace,removeEvents);data=$u.s.rTrim(data,' &')+'&'+'__FormID='+formID+'&__FormAction=submit';}
else if(action=='submit:all'||action=='submit')
{data=a5_AJAX_Form_RegionHarvest(formID,true,true,nameSpace,removeEvents);data=$u.s.rTrim(data,' &')+'&'+'__FormID='+formID+'&__FormAction=submit';}
else if(action=='submit:new'||flagSubmitData)
{data=a5_AJAX_Form_RegionHarvest(formID,true,false,nameSpace,removeEvents);var actionName=$if(action=='submit:new','submit',action);data=$u.s.rTrim(data,' &')+'&'+'__FormID='+formID+'&__FormAction='+actionName;}
else data='__FormAction='+action+'&'+'__FormID='+formID;var URLInfo=document.URL;URLInfo=URLInfo.split('?').slice(1).join('?');URLInfo=URLInfo.replace(/\%22/g,'"');URLInfo=URLInfo.replace(/\%3C/g,'<');URLInfo=URLInfo.replace(/\%3E/g,'>');URLInfo=URLInfo.replace(/\%20/g,' ');URLInfo=URLInfo.split('&');var tempArg='';for(var i=0;i<URLInfo.length;i++){tempArg=URLInfo[i].split('=');URLInfo[i]=tempArg[0]+'='+urlencode(tempArg.slice(1).join('='));}
URLInfo=URLInfo.join('&');if(URLInfo!='')URLInfo=URLInfo+'&';if(stateInfo!='')stateInfo=stateInfo+'&';if(optionalData!='')optionalData=optionalData+'&';data=URLInfo+stateInfo+optionalData+data;if(data!=''){data=data+'&__Ajax=true';}
else{data='__Ajax=true';}
data=$u.s.tran(data,'\n','%0D%0A');data=A5.ajax.addParamRequiredData(data);new $a.simple(url,{data:data,handleGeneric:true,method:'post'})}
function a5_AJAX_Form_SetFocus(){var ele=this.parentNode;while(ele.getAttribute('A5DataRegion')!='A5DataRegion'){if(ele.tagName.toLowerCase()=='body')return;ele=ele.parentNode;}
ele.setAttribute('A5FocusControl',this.name);}
function a5_AJAX_Form_SetDirty(){if(this.disabled)return false;var isDirty=false;var ele=this.parentNode;while(ele.getAttribute('A5DataRegion')!='A5DataRegion'){if(ele.tagName.toLowerCase()=='body')return;ele=ele.parentNode;}
if(this.tagName.toLowerCase()=='input'&&(this.type.toLowerCase()=='radio'||this.type.toLowerCase()=='checkbox')){var eles=$cetp($n(this.name),ele);var values=$gvs(eles,this.parentNode);if(values.constructor!=Array)values=[values];if(values.join('||A5ARRAYSEP||')!=eles[0].getAttribute('A5OriginalValue')){for(var i=0;i<eles.length;i++)eles[i].setAttribute('A5IsDirty','true');isDirty=true;}else for(var i=0;i<eles.length;i++)eles[i].setAttribute('A5IsDirty','false');}else{var val=$gvs(this);if(val==this.getAttribute('A5WatermarkText'))val='';if(val!=this.getAttribute('A5OriginalValue')){this.setAttribute('A5IsDirty','true');isDirty=true;}else this.setAttribute('A5IsDirty','false');}
if(isDirty){if(ele.getAttribute('A5IsDirty')!='true'){ele.setAttribute('A5IsDirty','true');var funcCall=ele.getAttribute('A5OnDirty');if(funcCall!='')eval(funcCall);}}}
function a5_AJAX_Form_SetDirtyControl(ele){a5_AJAX_Form_SetDirty.call($(ele));}
function a5_AJAX_Form_ErrorsSet(eTargs,eHTML,eleCNs,eEleCNs){var baseEleCN='';var baseEEleCN='';var curEleCN='';var curEEleCN='';if(typeof eleCNs=='string')baseEleCN=eleCNs;if(typeof eEleCNs=='string')baseEEleCN=eEleCNs;var ele=new Object();var eleCtl=new Object();var errorArr=new Array();for(var i=0;i<eTargs.length;i++){curEleCN=typeof eleCNs=='object'&&eleCNs[i]?eleCNs[i]:baseEleCN;curEEleCN=typeof eEleCNs=='object'&&eEleCNs[i]?eEleCNs[i]:baseEEleCN;ele=$(eTargs[i]+'.ERRORMSG');eleCtl=$(eTargs[i]);if(ele)ele.innerHTML=eHTML[i];if(curEEleCN!=''&&ele)$acn(ele,curEEleCN);if(curEleCN!='')$acn(eleCtl,curEleCN);$sa(eleCtl,'A5IsDirty','true');eleCtl=eleCtl.parentNode;while(eleCtl.getAttribute('A5DataRegion')!='A5DataRegion'){if(eleCtl.tagName.toLowerCase()=='body')return;eleCtl=eleCtl.parentNode;}
eleCtl.setAttribute('A5IsDirty','true');errorArr[i]={id:eTargs[i],errorEleClassName:curEEleCN,eleClassName:curEleCN};}
return errorArr;}
function a5_AJAX_Form_ErrorsClear(errorArr){var ele=new Object();for(var i=0;i<errorArr.length;i++){ele=$(errorArr[i].id+'.ERRORMSG')
if(ele)ele.innerHTML='';if(errorArr[i].errorEleClassName!='')$rcn(ele,errorArr[i].errorEleClassName);if(errorArr[i].eleClassName!='')$rcn($(errorArr[i].id),errorArr[i].eleClassName);}
return new Array();}
function a5_AJAX_FormPrepare(regionID){var rObj=new Array();if(typeof regionID=='object'&&regionID.length){for(var i=0;i<regionID.length;i++)rObj[rObj.length]=$(regionID[i]);}else{rObj=[$(regionID)];}
var val='';for(var i=0;i<rObj.length;i++){var eles=rObj[i].getElementsByTagName('input');for(var j=0;j<eles.length;j++){val=$gvs(eles[j].name,rObj[i]);if(val==eles[j].getAttribute('A5WatermarkText'))val='';if(typeof val=='object')val=val.join('||A5ARRAYSEP||');eles[j].setAttribute('A5OriginalValue',val);if(eles[j].type=='radio'||eles[j].type=='checkbox')$e.add(eles[j],'click',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');}
$e.add(eles,'change',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'keyup',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'focus',a5_AJAX_Form_SetFocus,null,false,rObj.id+'Events');eles=rObj[i].getElementsByTagName('select');for(var j=0;j<eles.length;j++){val=$gvs(eles[j].name,rObj[i]);if(typeof val=='object')val=val.join('||A5ARRAYSEP||');eles[j].setAttribute('A5OriginalValue',val);}
$e.add(eles,'change',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'keyup',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'focus',a5_AJAX_Form_SetFocus,null,false,rObj.id+'Events');eles=rObj[i].getElementsByTagName('textarea');for(var j=0;j<eles.length;j++){val=$gvs(eles[j].name,rObj[i]);if(val==eles[j].getAttribute('A5WatermarkText'))val='';if(typeof val=='object')val=val.join('||A5ARRAYSEP||');eles[j].setAttribute('A5OriginalValue',val);}
$e.add(eles,'change',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'keyup',a5_AJAX_Form_SetDirty,null,false,rObj.id+'Events');$e.add(eles,'focus',a5_AJAX_Form_SetFocus,null,false,rObj.id+'Events');rObj[i].setAttribute('A5IsDirty','false');rObj[i].setAttribute('A5DataRegion','A5DataRegion');}}
function a5_AJAX_Callback(url,data){if(data!='')data=data+'&__Ajax=true&'+A5.ajax.buildURLParam('__AjaxURL',url.split('?')[0]);else data='__Ajax=true&'+A5.ajax.buildURLParam('__AjaxURL',url.split('?')[0]);var s1=typeof arguments[2]!='undefined'?arguments[2]:{};var s2={handleGeneric:true,method:'post'};$u.o.assign(s2,s1);s2.data=A5.ajax.addParamRequiredData(data);var xhr=new $a.simple(url,s2);return xhr;}
function a5_AJAX_Form_populateSelect(curID,curValue,clearOld,popList){curObj=document.getElementById(curID)
if(clearOld){if(curObj.options.length>0){for(var i=(curObj.options.length-1);i>=0;i--){curObj.options[i]=null;}
curObj.options[0]=null;}
curIndx=0}
else{curIndx=curObj.options.length}
var optArr=new Array()
optArr=popList.split('\n')
if(optArr.length>0){var optTempArr=new Array()
for(i=0;i<optArr.length;i++){optTempArr=optArr[i].split('|')
if(optTempArr.length>1){curObj.options[curIndx]=new Option(optTempArr[0],optTempArr[1])}
else{curObj.options[curIndx]=new Option(optTempArr[0],optTempArr[0])}
curIndx++}}
otpValFound=false
if(curObj.options.length>0){for(i=0;i<curObj.options.length;i++){if(curObj.options[i].value==curValue){otpValFound=true
curObj.options.selectedIndex=i
break;}}
if(otpValFound==false){curObj.options.add(new Option(curValue,curValue),0);curObj.options.selectedIndex=0;}}}
function a5_AJAX_Form_RegionHarvest(regionID){var sendAllNewValues=typeof arguments[1]!='undefined'?arguments[1]:false;var sendOldValues=typeof arguments[2]!='undefined'?arguments[2]:true;var nameSpace=typeof arguments[3]!='undefined'?arguments[3]:'';if(nameSpace!='')nameSpace=nameSpace+'.';var removeEvents=typeof arguments[4]!='undefined'?arguments[4]:true;var rObj=new Array();if(typeof regionID=='object'&&regionID.length){for(var i=0;i<regionID.length;i++)rObj[rObj.length]=$(regionID[i]);}else{rObj=[$(regionID)];}
var eles=new Object();var val='';var valArr=new Array();var curVal=new Array();var usedNames=new Array();var dirtyRegions=new Array();var dirtyValues=new Array();var isDirty=false;for(var i=0;i<rObj.length;i++){if(removeEvents)$e.removeGroup(rObj[i].id+'Events');if(rObj[i].getAttribute('A5IsDirty')=='true'||sendAllNewValues){dirtyRegions[dirtyRegions.length]=rObj[i].id;eles=rObj[i].getElementsByTagName('input');for(var j=0;j<eles.length;j++){if(eles[j].getAttribute('A5HarvestIgnore')!='true'&&typeof eles[j].getAttribute('A5OriginalValue')=='string'){if(eles[j].type.toLowerCase()=='radio'){if($u.a.find(usedNames,eles[j].name)==-1){usedNames[usedNames.length]=eles[j].name;if(sendOldValues)valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||'));isDirty=eles[j].getAttribute('A5IsDirty')=='true'?true:false;if(isDirty||sendAllNewValues){if(isDirty)dirtyValues[dirtyValues.length]=eles[j].name;valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs($n(eles[j].name),rObj[i]));}}}else if(eles[j].type.toLowerCase()=='checkbox'){if($u.a.find(usedNames,eles[j].name)==-1){usedNames[usedNames.length]=eles[j].name;if(sendOldValues)valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||'));isDirty=eles[j].getAttribute('A5IsDirty')=='true'?true:false;if(isDirty||sendAllNewValues){if(isDirty)dirtyValues[dirtyValues.length]=eles[j].name;valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs($n(eles[j].name),rObj[i]));}}}else if(eles[j].type.toLowerCase()!='submit'&&eles[j].type!='reset'&&eles[j].type!='button'&&eles[j].type!='image'&&eles[j].type!='file'){if(sendOldValues)valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||'));isDirty=eles[j].getAttribute('A5IsDirty')=='true'?true:false;if(isDirty||sendAllNewValues){if(isDirty)dirtyValues[dirtyValues.length]=eles[j].name;val=$gvs(eles[j],rObj[i]);if(val==eles[j].getAttribute('A5WatermarkText'))val='';valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,val);}}}}
eles=rObj[i].getElementsByTagName('select');for(var j=0;j<eles.length;j++){if(eles[j].getAttribute('A5HarvestIgnore')!='true'&&typeof eles[j].getAttribute('A5OriginalValue')=='string'){if(sendOldValues)valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||'));isDirty=eles[j].getAttribute('A5IsDirty')=='true'?true:false;if(isDirty||sendAllNewValues){if(isDirty)dirtyValues[dirtyValues.length]=eles[j].name;valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs(eles[j],rObj[i]));}}}
eles=rObj[i].getElementsByTagName('textarea');for(var j=0;j<eles.length;j++){if(eles[j].getAttribute('A5HarvestIgnore')!='true'&&typeof eles[j].getAttribute('A5OriginalValue')=='string'){if(sendOldValues)valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||'));isDirty=eles[j].getAttribute('A5IsDirty')=='true'?true:false;if(isDirty||sendAllNewValues){if(isDirty)dirtyValues[dirtyValues.length]=eles[j].name;val=$gvs(eles[j],rObj[i]);if(val==eles[j].getAttribute('A5WatermarkText'))val='';valArr[valArr.length]=a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,val);}}}}}
return'a5DirtyRegions='+dirtyRegions.join('\n')+'&'+'a5RegionsDirtyValues='+dirtyValues.join('\n')+'&'+valArr.join('&');}
function a5_AJAX_Form_SubmitValueParam(eleName,eleValue){if(typeof eleValue!='undefined'){if(eleValue==null)eleValue='';if(eleValue.constructor==Array){var valArr=new Array();if(eleValue.length==0){return urlencode(eleName)+'=';}else
{for(var j=0;j<eleValue.length;j++){valArr[valArr.length]=urlencode(eleName)+'='+urlencode(eleValue[j]);}
return valArr.join('&');}}else return urlencode(eleName)+'='+urlencode(''+eleValue);}}
function urlencode(text){text=text.replace(/%/g,"%25");text=text.replace(/\+/g,"%2B");text=text.replace(/\=/g,"%3D");text=text.replace(/\\/g,"%5C");text=text.replace(/&/g,"%26");text=text.replace(/\n/g,"%0D%0A");text=text.replace(/"/g,"%22");text=text.replace(/\r/g,"");return text}
function a5_AJAX_FormReset(regionID){var keepOldValues=typeof arguments[1]=='undefined'?false:arguments[1];var rObj=new Array();if(typeof regionID=='object'&&regionID.length){for(var i=0;i<regionID.length;i++)rObj[rObj.length]=$(regionID[i]);}else{rObj=[$(regionID)];}
var values='';for(var i=0;i<rObj.length;i++){var eles=rObj[i].getElementsByTagName('input');for(var j=0;j<eles.length;j++){if(keepOldValues){values=eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||');if(values.length==1)values=values[0];$svs($n(eles[j].name),values);}else eles[j].setAttribute('A5OriginalValue',Array().concat($gvs(eles[j].name,rObj[i])).join('||A5ARRAYSEP||'));eles[j].setAttribute('A5IsDirty','false');}
eles=rObj[i].getElementsByTagName('select');for(var j=0;j<eles.length;j++){if(keepOldValues){values=eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||');if(values.length==1)values=values[0];$svs($n(eles[j].name),values);}else eles[j].setAttribute('A5OriginalValue',Array().concat($gvs(eles[j].name,rObj[i])).join('||A5ARRAYSEP||'));eles[j].setAttribute('A5IsDirty','false');}
eles=rObj[i].getElementsByTagName('textarea');for(var j=0;j<eles.length;j++){if(keepOldValues){values=eles[j].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||');if(values.length==1)values=values[0];$svs($n(eles[j].name),values);}else eles[j].setAttribute('A5OriginalValue',Array().concat($gvs(eles[j].name,rObj[i])).join('||A5ARRAYSEP||'));eles[j].setAttribute('A5IsDirty','false');}
ele=rObj[i];if(ele.getAttribute('A5IsDirty')=='true'){var funcCall=ele.getAttribute('A5OnClean');if(funcCall!='')eval(funcCall);ele.setAttribute('A5IsDirty','false');}}}
a5_AJAX_autoSuggest=Class.create();a5_AJAX_autoSuggest.prototype={initialize:function(targetId,settings){this.targetId=targetId;$u.o.assign(this,{url:'',data:'',dynamicHandle:0,minimum:1,width:'',height:'',contextControls:0,columns:0,className:'',item:{className:'',selectedClassName:'',keyClassName:''},title:{className:'',location:'none'},onSelect:0});if(typeof a5_AJAX_autoSuggestDefaults!='undefined')$u.o.assign(this,a5_AJAX_autoSuggestDefaults);$u.o.assign(this,settings);$e.add(targetId,'focus',this._focus,this,true);$e.add(targetId,'blur',this._hideMatchList,this,true);$e.add(targetId,'keyup',this._getList,this,true);this._kw=new AUI.KeyWatcher([{key:'enter',handle:this._selectCurValue},{key:'up',handle:this._prevValue},{key:'down',handle:this._nextValue}],this);this._listValue=0;this._listTotal=0;this._list=[];this._parseColumns();var ele=document.createElement('div');ele.id=this.targetId+'.LIST';ele.className=this.className;ele.style.position='absolute';ele.style.display='none';ele.style.height=this.height;ele.style.width=this.width;ele.style.overflow='auto';ele.style.zIndex='10000';$(targetId).parentNode.insertBefore(ele,$(targetId));},_parseColumns:function(e){if(this.columns.constructor==Array){var keyFlag=false;var colTitle='';for(var i=0;i<this.columns.length;i++){if(typeof this.columns[i]=='object'){$u.o.assign(this.columns[i],this._defaultColumn,true);if(!keyFlag&&this.columns[i].key)keyFlag=true;else if(keyFlag&&this.columns[i].key)this.columns[i].key=false;}else{colTitle=this.columns[i];this.columns[i]=new Object();$u.o.assign(this.columns[i],this._defaultColumn);this.columns[i].title=''+colTitle;}}
if(!keyFlag){this.columns[0].key=true;}}else{var colTitle=this.columns;this.columns=new Array();$u.o.assign(this.columns[0],this._defaultColumn);this.columns[0].title=''+colTitle;this.columns[0].key=true;}},_focus:function(e){e=$e.getEvent(e);var lObj=$(this.targetId+'.LIST');$po(lObj,$(this.targetId),14,2,0);this._kw.on();},_hideMatchList:function(e){var lObj=$(this.targetId+'.LIST');classInst=this;setTimeout(function(){classInst._hideMatchListComplete();},400);},_hideMatchListComplete:function(){var lObj=$(this.targetId+'.LIST');lObj.style.display='none';this._kw.off();},_selectValue:function(e,classInst){var indx=Number(this.getAttribute('A5SuggestIndex'));var val=typeof classInst._list[indx]!='undefined'?classInst._list[indx]:'';var finVal=val;if(finVal.constructor==Array){var keyIndx=0;for(var i=0;i<classInst.columns.length;i++){if(classInst.columns[i].key){keyIndx=i;break;}}
finVal=finVal[keyIndx];}
if(finVal!='')$(classInst.targetId).value=finVal;if(classInst.onSelect.constructor==Function)classInst.onSelect(val);},_selectCurValue:function(e){var val=typeof this._list[this._listValue]!='undefined'?this._list[this._listValue]:'';var finVal=val;if(finVal.constructor==Array){var keyIndx=0;for(var i=0;i<this.columns.length;i++){if(this.columns[i].key){keyIndx=i;break;}}
finVal=finVal[keyIndx];}
if(finVal!='')$(this.targetId).value=finVal;if(this.onSelect.constructor==Function)this.onSelect(val);var lObj=$(this.targetId+'.LIST');lObj.style.display='none';},_nextValue:function(e){if(this._listValue<this._listTotal-1){$(this.targetId+'.LIST.'+this._listValue).className=this.item.className;this._listValue=this._listValue+1;$(this.targetId+'.LIST.'+this._listValue).className=this.item.selectedClassName;this._scrollToEntry();}},_prevValue:function(e){if(this._listValue>0){$(this.targetId+'.LIST.'+this._listValue).className=this.item.className;this._listValue=this._listValue-1;$(this.targetId+'.LIST.'+this._listValue).className=this.item.selectedClassName;this._scrollToEntry();}},_scrollToEntry:function(){var ele=$(this.targetId+'.LIST.'+this._listValue);var cEle=$(this.targetId+'.LIST');if(cEle.scrollTop>ele.offsetTop)cEle.scrollTop=ele.offsetTop-2;else if(cEle.scrollTop+cEle.offsetHeight<(ele.offsetTop+ele.offsetHeight))cEle.scrollTop=ele.offsetTop+(ele.offsetHeight)-cEle.offsetHeight;},_getList:function(e){e=$e.getEvent(e);var keyCode=e.charCode||e.keyCode;if(keyCode==13||keyCode==37||keyCode==38||keyCode==39||keyCode==40)return false;if(this.delay>0){clearTimeout(this._delayTO);classInst=this;this._delayTO=setTimeout(function(){classInst._getListComplete();delete classInst;},this.delay);}else this._getListComplete();},_getListComplete:function(){var lObj=$(this.targetId+'.LIST');var tObj=$(this.targetId)
if(tObj.value.length<this.minimum){lObj.style.display='none';return'';}
if(this.dynamicHandle.constructor==Function){var dArr=this.dynamicHandle(tObj.value);if(typeof dArr!='undefined'){if(dArr.constructor==Array){this.populateList(dArr);}}
return'';}
var tData=this.data;if(tData!='')tData=tData+'&';if(this.contextControls.constructor==Array){var eles=new Object();var varName='';for(var i=0;i<this.contextControls.length;i++){eles=$(this.contextControls[i]);if(!eles.tagName)varName=eles[0].name;else varName=eles.name;if(varName!='')tData=tData+a5_AJAX_Form_SubmitValueParam(varName,$gvs(eles))+'&';}}
tData=tData+a5_AJAX_Form_SubmitValueParam(tObj.name,tObj.value);a5_AJAX_Callback(this.url,tData);},populateList:function(dArr){var lObj=$(this.targetId+'.LIST');this._list=dArr;this._listTotal=dArr.length;if(dArr.length>0){var html=Array();html[html.length]='<table id="'+this.targetId+'.LISTTABLE" cellspacing="0">'
if(this.title.location=='top'||this.title.location=='both'){html[html.length]='<tr class="'+this.title.className+'">';for(var i=0;i<this.columns.length;i++)html[html.length]='<td>'+this.columns[i].title+'</td>';html[html.length]='</tr>';}
if(dArr[0].constructor==Array){for(var i=0;i<dArr.length;i++){html[html.length]='<tr id="'+this.targetId+'.LIST.'+i+'" A5SuggestIndex="'+i+'" class="'+$if(i==0,this.item.selectedClassName,this.item.className)+'">';for(var j=0;j<this.columns.length;j++){if(this.columns[j].key)html[html.length]='<td class="'+this.item.keyClassName+'">'+dArr[i][j]+'</td>';else html[html.length]='<td>'+dArr[i][j]+'</td>';}
html[html.length]='</tr>';}}else{for(var i=0;i<dArr.length;i++){html[html.length]='<tr id="'+this.targetId+'.LIST.'+i+'" A5SuggestIndex="'+i+'" class="'+$if(i==0,this.item.selectedClassName,this.item.className)+'">';html[html.length]='<td class="'+this.item.keyClassName+'">'+dArr[i]+'</td>';html[html.length]='</tr>';}}
if(this.title.location=='bottom'||this.title.location=='both'){html[html.length]='<tr class="'+this.title.className+'">';for(var i=0;i<this.columns.length;i++)html[html.length]='<td>'+this.columns[i].title+'</td>';html[html.length]='</tr>';}
html[html.length]='</table>';lObj.innerHTML=html.join('');for(var i=0;i<dArr.length;i++){$e.add($(this.targetId+'.LIST.'+i),'click',this._selectValue,this);}
lObj.style.display='block';lObj.style.height=this.height;var tObj=$(this.targetId+'.LISTTABLE');lObj.style.display='block';lObj.style.height=this.height;if(lObj.offsetHeight>tObj.offsetHeight){lObj.style.height='';}
if(this.width!=''){if(lObj.clientWidth>tObj.offsetWidth)tObj.style.width=lObj.clientWidth+'px';}else{lObj.style.width=(tObj.offsetWidth+22)+'px';if(lObj.clientWidth>tObj.offsetWidth)tObj.style.width=lObj.clientWidth+'px';}
this._scrollToEntry();}else{lObj.style.display='none';}
this._listValue=0;},_defaultColumn:{title:'',type:'text',key:false}}
a5_AJAX_editCombo=Class.create();a5_AJAX_editCombo.prototype={initialize:function(targetId,buttonId,settings){this.targetId=targetId;this.buttonId=buttonId;$u.o.assign(this,{data:[],width:'',height:'',columns:0,className:'',item:{className:'',selectedClassName:'',keyClassName:''},title:{className:'',location:'none'},onSelect:0});if(typeof a5_AJAX_editComboDefaults!='undefined')$u.o.assign(this,a5_AJAX_editComboDefaults);$u.o.assign(this,settings);$e.add(targetId,'focus',this._focus,this,true);$e.add(targetId,'blur',this._hideMatchList,this,true);$e.add(targetId,'keyup',this._autoComplete,this,true);$e.add(buttonId,'click',this._getFullList,this,true);this._kw=new AUI.KeyWatcher([{key:'enter',handle:this._selectCurValue},{key:'up',handle:this._prevValue},{key:'down',handle:this._nextValue}],this);this._listValue=0;this._listTotal=0;this._list=[];this._keyIndex=-1;this._timeout=0;this._hasFocus=false;this._parseColumns();var ele=document.createElement('div');ele.id=this.targetId+'.LIST';ele.className=this.className;ele.style.position='absolute';ele.style.display='none';ele.style.width=this.width;ele.style.height=this.height;ele.style.overflow='auto';ele.style.zIndex='10000';$e.add(ele,'mousedown',this._stopBlur,this,true);$e.add(ele,'focus',this._stopBlur,this,true);$(targetId).parentNode.insertBefore(ele,$(targetId));},fixButtonPosition:function(){var widthAdjust=typeof arguments[0]!='undefined'?arguments[0]:-3;var heightAdjust=typeof arguments[1]!='undefined'?arguments[1]:0;var xAdjust=typeof arguments[2]!='undefined'?arguments[2]:-2;var yAdjust=typeof arguments[3]!='undefined'?arguments[3]:0;var iEle=$(this.targetId);var bEle=$(this.buttonId);bEle.style.height=(iEle.offsetHeight+heightAdjust)+'px';bEle.style.width=(iEle.offsetHeight+widthAdjust)+'px';bEle.style.left=(($gpl(iEle)+iEle.offsetWidth)-$gpl(bEle)+xAdjust)+'px';bEle.style.top=($gpt(iEle)-$gpt(bEle)+yAdjust)+'px';},_stopBlur:function(e){e=$e.getEvent(e);$e.stopEvent(e);this._timeout=clearTimeout(this._timeout);this._hasFocus=true;$(this.targetId).focus();return false;},_parseColumns:function(e){if(this.columns.constructor==Array){var keyFlag=false;var colTitle='';for(var i=0;i<this.columns.length;i++){if(typeof this.columns[i]=='object'){$u.o.assign(this.columns[i],this._defaultColumn,true);if(!keyFlag&&this.columns[i].key){keyFlag=true;this._keyIndex=i;}else if(keyFlag&&this.columns[i].key)this.columns[i].key=false;}else{colTitle=this.columns[i];this.columns[i]=new Object();$u.o.assign(this.columns[i],this._defaultColumn);this.columns[i].title=''+colTitle;}}
if(!keyFlag){this.columns[0].key=true;this._keyIndex=0;}}else{var colTitle=this.columns;this.columns=new Array();this.columns[0]=new Object();$u.o.assign(this.columns[0],this._defaultColumn);this.columns[0].title=''+colTitle;this.columns[0].key=true;}},_focus:function(e){if(this._hasFocus==false){e=$e.getEvent(e);var lObj=$(this.targetId+'.LIST');$po(lObj,$(this.targetId),14,2,0);this._kw.on();this._hasFocus=true;}},_hideMatchList:function(e){var lObj=$(this.targetId+'.LIST');classInst=this;this._hasFocus=false;this._timeout=setTimeout(function(){classInst._hideMatchListComplete();},400);},_hideMatchListComplete:function(){var lObj=$(this.targetId+'.LIST');lObj.style.display='none';this._kw.off();},_selectValue:function(e,classInst){var indx=Number(this.getAttribute('A5EditComboIndex'));var val=typeof classInst._list[indx]!='undefined'?classInst._list[indx]:'';var finVal=val;if(finVal.constructor==Array){var keyIndx=0;for(var i=0;i<classInst.columns.length;i++){if(classInst.columns[i].key){keyIndx=i;break;}}
finVal=finVal[keyIndx];}
if(finVal!='')$(classInst.targetId).value=finVal;if(classInst.onSelect.constructor==Function)classInst.onSelect(val);var lObj=$(classInst.targetId+'.LIST');lObj.style.display='none';classInst._stopBlur(e)},_selectCurValue:function(e){var val=typeof this._list[this._listValue]!='undefined'?this._list[this._listValue]:'';var finVal=val;if(finVal.constructor==Array){var keyIndx=0;for(var i=0;i<this.columns.length;i++){if(this.columns[i].key){keyIndx=i;break;}}
finVal=finVal[keyIndx];}
if(finVal!='')$(this.targetId).value=finVal;if(this.onSelect.constructor==Function)this.onSelect(val);var lObj=$(this.targetId+'.LIST');lObj.style.display='none';},_nextValue:function(e){if(this._listValue<this._listTotal-1){$(this.targetId+'.LIST.'+this._listValue).className=this.item.className;this._listValue=this._listValue+1;$(this.targetId+'.LIST.'+this._listValue).className=this.item.selectedClassName;this._scrollToEntry();}},_prevValue:function(e){if(this._listValue>0){$(this.targetId+'.LIST.'+this._listValue).className=this.item.className;this._listValue=this._listValue-1;$(this.targetId+'.LIST.'+this._listValue).className=this.item.selectedClassName;this._scrollToEntry();}},_scrollToEntry:function(){var ele=$(this.targetId+'.LIST.'+this._listValue);var cEle=$(this.targetId+'.LIST');if(cEle.scrollTop>ele.offsetTop)cEle.scrollTop=ele.offsetTop-2;else if(cEle.scrollTop+cEle.offsetHeight<(ele.offsetTop+ele.offsetHeight))cEle.scrollTop=ele.offsetTop+(ele.offsetHeight)-cEle.offsetHeight;},_autoComplete:function(e){e=$e.getEvent(e);var keyCode=e.charCode||e.keyCode;if(keyCode==13||keyCode==37||keyCode==38||keyCode==39||keyCode==40)return false;var lObj=$(this.targetId+'.LIST');var tObj=$(this.targetId)
if(tObj.value.length<this.minimum){lObj.style.display='none';return'';}
var dArr=new Array();var curVal=tObj.value;curVal=curVal.toLowerCase();curValLen=curVal.length;if(this.data[0].constructor!=Array&&curValLen>0){for(var i=0;i<this.data.length;i++){if(curVal==this.data[i].substr(0,curValLen).toLowerCase())dArr[dArr.length]=this.data[i];}}else if(curValLen>0){for(var i=0;i<this.data.length;i++){if(curVal==this.data[i][this._keyIndex].substr(0,curValLen).toLowerCase())dArr[dArr.length]=this.data[i];}}
this._getList(dArr);},_getFullList:function(){var dArr=this.data;clearTimeout(this._timeout);this._timeout=0;this._kw.off();$(this.targetId).focus();this._getList(dArr);},_getList:function(dArr){var lObj=$(this.targetId+'.LIST');this._list=dArr;this._listTotal=dArr.length;this._listValue=0;var curVal=$(this.targetId).value;if(this._list.length>0){var html=Array();html[html.length]='<table id="'+this.targetId+'.LISTTABLE" id="'+this.targetId+'.LIST.TABLE" cellspacing="0">'
if(this.title.location=='top'||this.title.location=='both'){html[html.length]='<tr class="'+this.title.className+'">';for(var i=0;i<this.columns.length;i++)html[html.length]='<td>'+this.columns[i].title+'</td>';html[html.length]='</tr>';}
if(dArr[0].constructor==Array){for(var i=0;i<dArr.length;i++){html[html.length]='<tr id="'+this.targetId+'.LIST.'+i+'" A5EditComboIndex="'+i+'" class="'+this.item.className+'">';for(var j=0;j<this.columns.length;j++){if(this.columns[j].key){if(curVal==dArr[i][j])this._listValue=i;html[html.length]='<td class="'+this.item.keyClassName+'">'+dArr[i][j]+'</td>';}else html[html.length]='<td>'+dArr[i][j]+'</td>';}
html[html.length]='</tr>';}}else{for(var i=0;i<dArr.length;i++){if(curVal==dArr[i])this._listValue=i;html[html.length]='<tr id="'+this.targetId+'.LIST.'+i+'" A5EditComboIndex="'+i+'" class="'+this.item.className+'">';html[html.length]='<td class="'+this.item.keyClassName+'">'+dArr[i]+'</td>';html[html.length]='</tr>';}}
if(this.title.location=='bottom'||this.title.location=='both'){html[html.length]='<tr class="'+this.title.className+'">';for(var i=0;i<this.columns.length;i++)html[html.length]='<td>'+this.columns[i].title+'</td>';html[html.length]='</tr>';}
html[html.length]='</table>';lObj.innerHTML=html.join('');$(this.targetId+'.LIST.'+this._listValue).className=this.item.selectedClassName;for(var i=0;i<dArr.length;i++){$e.add($(this.targetId+'.LIST.'+i),'click',this._selectValue,this);}
lObj.style.height=this.height;var tObj=$(this.targetId+'.LISTTABLE');lObj.style.display='block';lObj.style.height=this.height;if(lObj.offsetHeight>tObj.offsetHeight){lObj.style.height='';}
if(this.width!=''){if(lObj.clientWidth>tObj.offsetWidth)tObj.style.width=lObj.clientWidth+'px';}else{lObj.style.width=(tObj.offsetWidth+22)+'px';if(lObj.clientWidth>tObj.offsetWidth)tObj.style.width=lObj.clientWidth+'px';}
this._scrollToEntry();}else{lObj.style.display='none';}},_defaultColumn:{title:'',type:'text',key:false}}
a5_AJAX_tree=Class.create();a5_AJAX_tree.prototype={initialize:function(contId,data,options){this.contId=contId
var fullOptions={inputId:'',focusClassName:'',multiple:false,separator:'.',loadingMessage:'Loading...',dynamicDataURL:'',dynamicDataHandle:'',node:{className:'',selectedClassName:'',labelClassName:'',icon:'',expandedIcon:'',collapsedIcon:'',leaf:{firstImage:'',image:'',lastImage:''},branch:{firstExpandedImage:'',firstCollapsedImage:'',firstExpandedHoverImage:'',firstCollapsedHoverImage:'',expandedImage:'',collapsedImage:'',expandedHoverImage:'',collapsedHoverImage:'',lastExpandedImage:'',lastCollapsedImage:'',lastExpandedHoverImage:'',lastCollapsedHoverImage:''}},branch:{className:'',lineImage:'',nullImage:''},onFocus:0,onBlur:0,onRightClick:0,onNodeSelect:0,onNodeClick:0,onNodeExpand:0,onNodeCollapse:0,selection:[],value:[],_hasFocus:false};$u.o.assign(fullOptions,options);if(typeof a5_AJAX_treeDefaults!='undefined')$u.o.assign(fullOptions,a5_AJAX_treeDefaults);if(fullOptions.node.collapsedIcon=='')fullOptions.node.collapsedIcon=fullOptions.node.icon;if(fullOptions.node.expandedIcon=='')fullOptions.node.expandedIcon=fullOptions.node.collapsedIcon;if(fullOptions.node.selectedCollapsedIcon=='')fullOptions.node.selectedCollapsedIcon=fullOptions.node.selectedIcon;if(fullOptions.node.selectedExpandedIcon=='')fullOptions.node.selectedExpandedIcon=fullOptions.node.selectedCollapsedIcon;if(fullOptions.branch.lineImage=='')fullOptions.branch.lineImage=fullOptions.branch.nullImage;if(fullOptions.node.leaf.image=='')fullOptions.node.leaf.image=fullOptions.branch.nullImage;if(fullOptions.node.branch.expandedImage=='')fullOptions.node.branch.expandedImage=fullOptions.branch.nullImage;if(fullOptions.node.branch.collapsedImage=='')fullOptions.node.branch.collapsedImage=fullOptions.branch.nullImage;if(fullOptions.node.leaf.firstImage=='')fullOptions.node.leaf.firstImage=fullOptions.node.leaf.image;if(fullOptions.node.leaf.lastImage=='')fullOptions.node.leaf.lastImage=fullOptions.node.leaf.image;if(fullOptions.node.branch.firstExpandedImage=='')fullOptions.node.branch.firstExpandedImage=fullOptions.node.branch.expandedImage;if(fullOptions.node.branch.lastExpandedImage=='')fullOptions.node.branch.lastExpandedImage=fullOptions.node.branch.expandedImage;if(fullOptions.node.branch.firstCollapsedImage=='')fullOptions.node.branch.firstCollapsedImage=fullOptions.node.branch.collapsedImage;if(fullOptions.node.branch.lastCollapsedImage=='')fullOptions.node.branch.lastCollapsedImage=fullOptions.node.branch.collapsedImage;if(fullOptions.node.branch.firstExpandedHoverImage=='')fullOptions.node.branch.firstExpandedHoverImage=fullOptions.node.branch.expandedHoverImage;if(fullOptions.node.branch.lastExpandedHoverImage=='')fullOptions.node.branch.lastExpandedHoverImage=fullOptions.node.branch.expandedHoverImage;if(fullOptions.node.branch.firstCollapsedHoverImage=='')fullOptions.node.branch.firstCollapsedHoverImage=fullOptions.node.branch.collapsedHoverImage;if(fullOptions.node.branch.lastCollapsedHoverImage=='')fullOptions.node.branch.lastCollapsedHoverImage=fullOptions.node.branch.collapsedHoverImage;$u.o.assign(this,fullOptions);this.populate(data);this._keyWatch=new AUI.KeyWatcher([{key:'up',handle:this._keyPrevNode},{key:'down',handle:this._keyNextNode},{key:'left',handle:this._keyBranchNode},{key:'right',handle:this._keyChildNode},{key:'enter',handle:this._keyEnter},{key:'tab',handle:this._blur},{key:'shift+tab',handle:this._blur}],this);var contElement=$(contId);var HTMLFocusCatcher=document.createElement('input');HTMLFocusCatcher.id=contId+'.FOCUSCATCHER';HTMLFocusCatcher.readonly=true;HTMLFocusCatcher.style.position='absolute';HTMLFocusCatcher.style.top='-20px';HTMLFocusCatcher.style.left='-20px';HTMLFocusCatcher.style.height='1px';HTMLFocusCatcher.style.width='1px';HTMLFocusCatcher.style.fontSize='0px';$e.add(HTMLFocusCatcher,'focus',this._focus,this,true);$e.add(contElement,'click',this._focus,this,true);$e.add(contElement,'contextmenu',this._rClick,this,true);contElement.parentNode.insertBefore(HTMLFocusCatcher,contElement);},populate:function(data){this.data=this._expandTreeData(data);var HTMLNodes=this._generateHTMLNodes([],[],this.data,true,'');HTMLNodes.id=this.contId+'.TREE';var contElement=$(this.contId);contElement.innerHTML='';contElement.insertBefore(HTMLNodes,contElement.lastChild);},populateNode:function(nodeLoc,data){data=this._expandTreeData(data);var nodeImages=new Array();nodeImages[nodeImages.length]=$if(nodeLoc[0]==this.data.length-1,this.branch.nullImage,this.branch.lineImage);var dataNode=this.data[nodeLoc[0]];for(var i=1;i<nodeLoc.length;i++){nodeImages[i]=$if(nodeLoc[i]==dataNode.children.length-1,this.branch.nullImage,this.branch.lineImage);dataNode=dataNode.children[nodeLoc[i]];}
dataNode.children=data;dataNode.location=nodeLoc;dataNode.expanded=true;var HTMLNodes=this._generateHTMLNodes(nodeLoc,nodeImages,data,true,dataNode.branchClassName);$(this.contId+'.'+nodeLoc.join('.')).appendChild(HTMLNodes);var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;$e.remove(iNode,'mouseup',this._clickToggleBranch);$e.add(iNode,'mouseup',this._clickToggleBranch,this);if(this.node.branch.collapsedHoverImage!=''||dataNode.collapsedHoverImage!=''){$e.remove(iNode,'mouseover',this._nodeImageMouseOver);$e.remove(iNode,'mouseout',this._nodeImageMouseOut);$e.add(iNode,'mouseover',this._nodeImageMouseOver,this);$e.add(iNode,'mouseout',this._nodeImageMouseOut,this);}
if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage);else iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.expandedImage);},getDataNode:function(dataLoc){if(dataLoc.length==0)return 0;var dataNode=this.data[dataLoc[0]];if(typeof dataLoc[0]=='number'){var dataNode=this.data[dataLoc[0]];var parsedNodeLoc=[dataLoc[0]];}else{for(var i=0;i<this.data.length;i++){if(this.data[i].value.toLowerCase()==String(dataLoc[0]).toLowerCase()){var dataNode=this.data[i];var parsedNodeLoc=[i];break;}}}
for(var i=1;i<dataLoc.length;i++){if(typeof dataLoc[i]=='number'){dataNode=dataNode.children[dataLoc[i]];parsedNodeLoc[parsedNodeLoc.length]=dataLoc[i];}else{for(var j=0;j<dataNode.children.length;j++){if(dataNode.children[j].value.toLowerCase()==String(dataLoc[i]).toLowerCase()){dataNode=dataNode.children[j];parsedNodeLoc[parsedNodeLoc.length]=j;break;}}}}
dataNode.location=parsedNodeLoc;return dataNode;},scrollToNode:function(dataNode){var bId=this.contId+'.'+dataNode.location.join('.')+'.LABEL';if($(bId)){var bNode=$(bId);var cEle=$(this.contId);if(cEle.scrollTop>bNode.offsetTop-(bNode.parentNode.offsetHeight*2))cEle.scrollTop=bNode.offsetTop-(bNode.parentNode.offsetHeight*2)
else if(cEle.scrollTop+cEle.offsetHeight<bNode.offsetTop)cEle.scrollTop=bNode.offsetTop+(bNode.parentNode.offsetHeight)-cEle.offsetHeight;cEle.scrollLeft=bNode.offsetLeft-40;}},setValue:function(){this._deselectAll();var selClassName='';var dataNode=new Object();var dataLoc=0;var valArr=0;var valStart=arguments.length-1;if(this.multiple)valStart=0;for(var i=valStart;i<arguments.length;i++){dataNode=0;if(arguments[i].constructor==Array)dataNode=this.getDataNode(arguments[i]);else{valArr=String(arguments[i]).split(this.separator);if(valArr.length>1)dataNode=this.getDataNode(valArr);else{dataLoc=new Array();this._getDataNodeFromValue(arguments[i],this.data,dataLoc);dataLoc.reverse();dataNode=this.getDataNode(dataLoc);}}
if(typeof dataNode=='object'){selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[this.selection.length]=dataNode;}}},_expandTreeData:function(data){var tempData=new Object();for(var i=0;i<data.length;i++){if(typeof data[i]!='object'){tempData={html:''+$u.s.tran(data[i],['<','>'],['&lt;','&gt;']),value:''+data[i]};$u.o.assign(tempData,this._defaultNode,true);data[i]=tempData;}else{if(typeof data[i].value!='undefined')data[i].defaultValue=false;$u.o.assign(data[i],this._defaultNode,true);if(data[i].value==''&&data[i].html!='')data[i].value=data[i].html;else if(data[i].html==''&&data[i].value!='')data[i].html=$u.s.tran(data[i].value,['<','>'],['&lt;','&gt;']);if(data[i].children.constructor==Array)data[i].children=this._expandTreeData(data[i].children);}
if(i==data.length-1)data[i].isLast=true;else data[i].isLast=false;}
return data;},_getPrevVisDataNode:function(dataNode){var dataLoc=new Array();for(var i=0;i<dataNode.location.length;i++)dataLoc[i]=dataNode.location[i];if(dataLoc[dataLoc.length-1]==0){dataLoc.pop();return this.getDataNode(dataLoc);}else{dataLoc[dataLoc.length-1]--;var newDataNode=this.getDataNode(dataLoc);while(newDataNode.expanded){dataLoc.push(newDataNode.children.length-1);newDataNode=this.getDataNode(dataLoc);}
return newDataNode;}},_getNextVisDataNode:function(dataNode){var dataLoc=new Array();for(var i=0;i<dataNode.location.length;i++)dataLoc[i]=dataNode.location[i];if(dataNode.isLast&&!dataNode.expanded){dataLoc.pop();if(dataLoc.length==0)return false;var newDataNode=this.getDataNode(dataLoc);while(newDataNode.isLast){dataLoc.pop();if(dataLoc.length==0)return false;newDataNode=this.getDataNode(dataLoc);}
dataLoc[dataLoc.length-1]++;return this.getDataNode(dataLoc);}else{if(dataNode.expanded){dataLoc[dataLoc.length]=0;return this.getDataNode(dataLoc);}else{dataLoc[dataLoc.length-1]++;return this.getDataNode(dataLoc);}}},_getDataNodeFromValue:function(value,data,dataLoc){var dataNode=0;for(var i=0;i<data.length;i++){if(data[i].value==value){dataLoc[0]=i;break;}
if(data[i].children.constructor==Array)this._getDataNodeFromValue(value,data[i].children,dataLoc);if(dataLoc.length>0){dataLoc.push(i);break;}}},_getDataNodeValue:function(dataNode){if(dataNode.defaultValue){var valDataNode=new Object();var valDataLoc=new Array();var curValue='';for(var i=0;i<dataNode.location.length;i++)valDataLoc[i]=dataNode.location[i];for(var i=valDataLoc.length-1;i>=0;i--){valDataNode=this.getDataNode(valDataLoc);curValue=$if(i!=0,this.separator,'')+valDataNode.value+curValue;valDataLoc.pop();}
return curValue;}else{return dataNode.value;}},_generateHTMLNodes:function(parentNodeLocs,parentNodeLineImages,data,expanded,branchClassName){var ulNode=document.createElement('ul');var liNode=new Object();var divNode=new Object();var buttonNode=new Object();var tempNode=new Object();var tempNodeloc=new Array();var tempLineImages=new Array();var joinedParentLocs=parentNodeLocs.join('.');var baseId='';var isLast=false;var curIcon='';ulNode.className=this._gDef(branchClassName,this.branch.className);ulNode.style.margin='0px';ulNode.style.padding='0px';ulNode.style.listStyle='none';if(!expanded)ulNode.style.display='none';ulNode.unselectable='on';for(var i=0;i<data.length;i++){baseId=$if(joinedParentLocs!='',this.contId+'.'+joinedParentLocs+'.'+i,this.contId+'.'+i);liNode=document.createElement('li');liNode.style.margin='0px';liNode.style.padding='0px';liNode.id=baseId;liNode.setAttribute('A5AJAXTreeNodeLocation',$if(joinedParentLocs!='',joinedParentLocs+'.'+i,i))
liNode.unselectable='on';divNode=document.createElement('div');divNode.className=this._gDef(data[i].className,this.node.className);divNode.style.whiteSpace='nowrap';divNode.unselectable='on';if(i==data.length-1)isLast=true;for(var j=0;j<parentNodeLineImages.length;j++){tempNode=document.createElement('img');tempNode.src=parentNodeLineImages[j];tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';divNode.appendChild(tempNode);}
buttonNode=document.createElement('a');buttonNode.id=baseId+'.LABEL';buttonNode.tabIndex=1;buttonNode.href="#";$e.add(buttonNode,'mouseup',this._clickNode,this);buttonNode.className=this._gDef(data[i].labelClassName,this.node.labelClassName);buttonNode.unselectable='on';if(typeof data[i].children=='object'||typeof data[i].children=='string'){if(data[i].children.constructor!=Array)data[i].expanded=false;tempNode=document.createElement('img');if(data[i].expanded){curIcon=this._gDef(data[i].expandedIcon,this.node.expandedIcon);if(i==0&&parentNodeLocs.length==0)tempNode.src=this._gDef(data[i].expandedImage,this.node.branch.firstExpandedImage);else if(isLast)tempNode.src=this._gDef(data[i].expandedImage,this.node.branch.lastExpandedImage);else tempNode.src=this._gDef(data[i].expandedImage,this.node.branch.expandedImage);}else{curIcon=this._gDef(data[i].collapsedIcon,this.node.collapsedIcon);if(i==0&&parentNodeLocs.length==0)tempNode.src=this._gDef(data[i].collapsedImage,this.node.branch.firstCollapsedImage);else if(isLast)tempNode.src=this._gDef(data[i].collapsedImage,this.node.branch.lastCollapsedImage);else tempNode.src=this._gDef(data[i].collapsedImage,this.node.branch.collapsedImage);}
if(this.node.branch.collapsedHoverImage!=''||data[i].collapsedHoverImage!=''){$e.add(tempNode,'mouseover',this._nodeImageMouseOver,this);$e.add(tempNode,'mouseout',this._nodeImageMouseOut,this);}
tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';$e.add(tempNode,'mouseup',this._clickToggleBranch,this);divNode.appendChild(tempNode);if(curIcon!=''){buttonNode.innerHTML='<img id="'+baseId+'.LABELICON" src="'+curIcon+'" style="border: none" align="absmiddle" /> '+data[i].html;}else{buttonNode.innerHTML=data[i].html;}
divNode.appendChild(buttonNode);if(data[i].children.constructor==Array){if(parentNodeLocs.length==0){tempNodeLocs=new Array();tempLineImages=new Array();}else{tempNodeLocs=parentNodeLocs.concat([]);tempLineImages=parentNodeLineImages.concat([]);}
tempNodeLocs[tempNodeLocs.length]=i;tempLineImages[tempLineImages.length]=$if(isLast,this.branch.nullImage,this.branch.lineImage);liNode.appendChild(divNode);liNode.appendChild(this._generateHTMLNodes(tempNodeLocs,tempLineImages,data[i].children,data[i].expanded,data[i].branchClassName));}else liNode.appendChild(divNode);}else{tempNode=document.createElement('img');if(i==0&&parentNodeLocs.length==0)tempNode.src=this._gDef(data[i].image,this.node.leaf.firstImage);else if(isLast)tempNode.src=this._gDef(data[i].image,this.node.leaf.lastImage);else tempNode.src=this._gDef(data[i].image,this.node.leaf.image);tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';divNode.appendChild(tempNode);curIcon=this._gDef(data[i].icon,this.node.icon);if(curIcon!=''){buttonNode.innerHTML='<img id="'+baseId+'.LABELICON" src="'+curIcon+'" style="border: none" align="absmiddle" /> '+data[i].html;}else{buttonNode.innerHTML=data[i].html;}
divNode.appendChild(buttonNode);liNode.appendChild(divNode);}
ulNode.appendChild(liNode);}
return ulNode;},_clickToggleBranch:function(e,classInstance){var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5AJAXTreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);classInstance._toggleBranch(dataNode,true);},_toggleBranch:function(dataNode){if(dataNode.children.constructor!=Array){if(dataNode.dynamicDataHandle.constructor==Function||this.dynamicDataHandle.constructor==Function){if(dataNode.dynamicDataHandle.constructor==Function)var resData=dataNode.dynamicDataHandle(dataNode);else var resData=this.dynamicDataHandle(dataNode);if(resData.constructor==Array){this.populateNode(dataNode.location,resData);if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);}}else{var curValue=urlencode(this._getDataNodeValue(dataNode));var dataURL='';if(typeof dataNode.children=='object'){if(dataNode.children.url)dataURL=dataNode.children.url;if(dataURL=='')dataURL=this.dynamicDataURL;if(dataURL!='')new $a.simple(dataURL,{data:A5.ajax.addParamRequiredData($if(dataNode.children.data,dataNode.children.data+'&','')+'A5AJAXTreeNodeLoaction=['+dataNode.location.join(',')+']&A5AJAXTreeNodeValue='+curValue+'&__Ajax=true'),handle:this._responseHandle,handleContext:this})}else{dataURL=''+dataNode.children;if(dataURL.substr(0,1)=='?')dataURL=this.dynamicDataURL;if(dataURL!='')new $a.simple(dataURL,{data:A5.ajax.addParamRequiredData('A5AJAXTreeNodeLoaction=['+dataNode.location.join(',')+']&A5AJAXTreeNodeValue='+curValue+'&__Ajax=true'),handle:this._responseHandle,handleContext:this})}
$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').innerHTML=this.loadingMessage;}
var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.firstExpandedHoverImage,dataNode.expandedImage,this.node.branch.firstExpandedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.lastExpandedHoverImage,dataNode.expandedImage,this.node.branch.lastExpandedImage);else iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.expandedHoverImage,dataNode.expandedImage,this.node.branch.expandedImage);}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage);else iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.expandedImage);}
dataNode.expanded=true;}else{var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;var bNode=$(this.contId+'.'+dataNode.location.join('.')).lastChild;while(!bNode.tagName){bNode=bNode.previousSibling;}
if(bNode.style.display=='none'){if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.firstExpandedHoverImage,dataNode.expandedImage,this.node.branch.firstExpandedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.lastExpandedHoverImage,dataNode.expandedImage,this.node.branch.lastExpandedImage);else iNode.src=this._gDef(dataNode.expandedHoverImage,this.node.branch.expandedHoverImage,dataNode.expandedImage,this.node.branch.expandedImage);}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage);else iNode.src=this._gDef(dataNode.expandedImage,this.node.branch.expandedImage);}
var curIcon=this._gDef(dataNode.expandedIcon,this.node.expandedIcon);if(curIcon!=''){if($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON')){$(this.contId+'.'+dataNode.location.join('.')+'.LABELICON').src=curIcon;}}
bNode.style.display='block';dataNode.expanded=true;if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);}else{if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.collapsedHoverImage,this.node.branch.firstCollapsedHoverImage,dataNode.collapsedImage,this.node.branch.firstCollapsedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.collapsedHoverImage,this.node.branch.lastCollapsedHoverImage,dataNode.collapsedImage,this.node.branch.lastCollapsedImage);else iNode.src=this._gDef(dataNode.collapsedHoverImage,this.node.branch.collapsedHoverImage,dataNode.collapsedImage,this.node.branch.collapsedImage);}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)iNode.src=this._gDef(dataNode.collapsedImage,this.node.branch.firstCollapsedImage);else if(dataNode.isLast)iNode.src=this._gDef(dataNode.collapsedImage,this.node.branch.lastCollapsedImage);else iNode.src=this._gDef(dataNode.collapsedImage,this.node.branch.collapsedImage);}
var curIcon=this._gDef(dataNode.collapsedIcon,this.node.collapsedIcon);if(curIcon!=''){if($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON')){$(this.contId+'.'+dataNode.location.join('.')+'.LABELICON').src=curIcon;}}
bNode.style.display='none';dataNode.expanded=false;if(dataNode.onCollapse.constructor==Function)dataNode.onCollapse(dataNode);else if(this.onNodeCollapse.constructor==Function)this.onNodeCollapse(dataNode);}}},_selectNode:function(dataNode){var curValue=[];var selClassName='';if(this.multiple&&(this._keyWatch.ctrl||this._keyWatch.shift)){var addToSel=true;for(var i=0;i<this.selection.length;i++){if(this.selection[i].location.join('.')==dataNode.location.join('.')){selClassName=this._gDef(this.selection[i].selectedClassName,this.node.selectedClassName);if(selClassName!='')$rcn($(this.contId+'.'+this.selection[i].location.join('.')).firstChild,selClassName);this.selection.splice(i,1);addToSel=false;break;}}
if(addToSel){selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[this.selection.length]=dataNode;}}else{this._deselectAll();selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[0]=dataNode;}
for(var i=0;i<this.selection.length;i++){curValue[i]=this._getDataNodeValue(this.selection[i])}
var oldValue=curValue;this.value=curValue;if(this.inputId!='')$(this.inputId).value=curValue.join('\n');if(oldValue.join('\n')!=curValue.join('\n')){if(dataNode.onSelect.constructor==Function)dataNode.onSelect(dataNode);else if(this.onNodeSelect.constructor==Function)this.onNodeSelect(dataNode);}},_deselectAll:function(){var oldDataNode=new Object();for(var i=0;i<this.selection.length;i++){oldDataNode=this.selection[i];if(typeof oldDataNode=='object'){selClassName=this._gDef(oldDataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$rcn($(this.contId+'.'+oldDataNode.location.join('.')).firstChild,selClassName);}}
this.selection=new Array();},_nodeImageMouseOver:function(e,classInstance){var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5AJAXTreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);if(dataNode.expanded){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)this.src=classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.firstExpandedHoverImage);else if(dataNode.isLast)this.src=classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.lastExpandedHoverImage);else this.src=classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.expandedHoverImage);}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)this.src=classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.firstCollapsedHoverImage);else if(dataNode.isLast)this.src=classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.lastCollapsedHoverImage);else this.src=classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.collapsedHoverImage);}},_nodeImageMouseOut:function(e,classInstance){var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5AJAXTreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);if(dataNode.expanded){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)this.src=classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.firstExpandedImage);else if(dataNode.isLast)this.src=classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.lastExpandedImage);else this.src=classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.expandedImage);}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)this.src=classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.firstCollapsedImage);else if(dataNode.isLast)this.src=classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.lastCollapsedImage);else this.src=classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.collapsedImage);}},_clickNode:function(e,classInstance){$(classInstance.contId+'.FOCUSCATCHER').focus();var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5AJAXTreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);classInstance._selectNode(dataNode);if(dataNode.onClick.constructor==Function)dataNode.onClick(dataNode);else if(classInstance.onNodeClick.constructor==Function)classInstance.onNodeClick(dataNode);},_keyPrevNode:function(){var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){if(oldDataNode.location.join('')!='0'){var dataNode=this._getPrevVisDataNode(oldDataNode);this._selectNode(dataNode);this.scrollToNode(dataNode);}}else{this._selectNode(this.getDataNode([0]));}},_keyNextNode:function(){var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){var dataNode=this._getNextVisDataNode(oldDataNode);if(typeof dataNode.location!='undefined'){this._selectNode(dataNode);this.scrollToNode(dataNode);}}else{this._selectNode(this.getDataNode([0]));}},_keyBranchNode:function(){var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){if(oldDataNode.expanded==true){this._toggleBranch(oldDataNode);}else{var dataLoc=new Array();for(var i=0;i<oldDataNode.location.length-1;i++)dataLoc[i]=oldDataNode.location[i];if(dataLoc.length>0)this._selectNode(this.getDataNode(dataLoc));}}else{this._selectNode(this.getDataNode([0]));}},_keyChildNode:function(){var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){if(oldDataNode.expanded==false&&(typeof oldDataNode.children=='object'||typeof oldDataNode.children=='string')){this._toggleBranch(oldDataNode);}else if(typeof oldDataNode.children=='object'||typeof oldDataNode.children=='string'){var dataNode=this._getNextVisDataNode(oldDataNode);if(typeof dataNode.location!='undefined'){this._selectNode(dataNode);this.scrollToNode(dataNode);}}}else{this._selectNode(this.getDataNode([0]));}},_keyEnter:function(){var dataNode=this.selection[this.selection.length-1];if(typeof dataNode=='object'){if(typeof dataNode.children=='object'||typeof dataNode.children=='string')this._toggleBranch(dataNode);else{if(dataNode.onClick.constructor==Function)dataNode.onClick(dataNode);else if(this.onNodeClick.constructor==Function)this.onNodeClick(dataNode);}}},_rClick:function(e,classInstance){if(classInstance.onRightClick.constructor==Function){classInstance.onRightClick();e=$e.getEvent(e);$e.stopEvent(e);return false;}},_focus:function(e){if(this._hasFocus==false){$(this.contId+'.FOCUSCATCHER').style.top=$gpt($(this.contId))+'px';this._keyWatch.on();this._hasFocus=true;$e.add(document.documentElement,'click',this._blur,this,true);if(this.focusClassName!='')$acn($(this.contId),this.focusClassName);if(this.onFocus.constructor==Function)this.onBlur();}
e=$e.getEvent(e);$e.stopEvent(e);return false;},_blur:function(){this._hasFocus=false;this._keyWatch.off();if(this.focusClassName!='')$rcn($(this.contId),this.focusClassName);$e.remove(document.documentElement,'click',this._blur);if(this.onBlur.constructor==Function)this.onBlur();},_responseHandle:function(obj){var resJSON=eval('('+obj.responseText+')');this.populateNode(resJSON.location,resJSON.data);var dataNode=this.getDataNode(resJSON.location);var baseId=this.contId+'.'+resJSON.location.join('.');var buttonNode=$(baseId+'.LABEL');var curIcon=this._gDef(dataNode.expandedIcon,this.node.expandedIcon);if(curIcon!=''){buttonNode.innerHTML='<img id="'+baseId+'.LABELICON" src="'+curIcon+'" style="border: none" align="absmiddle" /> '+dataNode.html;}else{buttonNode.innerHTML=dataNode.html;}
if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);},_gDef:function(val,dVal){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultNode:{html:'',value:'',children:0,className:'',selectedClassName:'',labelClassName:'',branchClassName:'',icon:'',expandedIcon:'',collapsedIcon:'',image:'',expandedImage:'',collapsedImage:'',expandedHoverImage:'',collapsedHoverImage:'',onSelect:0,onClick:0,onExpand:0,onCollapse:0,dynamicDataHandle:0,expanded:false,defaultValue:true}}
a5_AJAX_window=Class.create();a5_AJAX_window.prototype={initialize:function(settings){this._dlgId='A5dlg'+this._dlgIndx[0];$u.o.assign(this,{className:'',style:'',lockUIClassName:'',title:{html:'',className:'',style:'',imageClose:'',show:true},body:{html:'',contentId:'',className:'',style:'',width:'',height:''},footer:{className:'',style:'',buttons:[],show:true},onClose:0,modal:true,autoPosition:true,autoShow:false});if(typeof a5_AJAX_windowDefaults!='undefined')$u.o.assign(this,a5_AJAX_windowDefaults);$u.o.assign(this,settings);var HTMLDlgEle=document.createElement('div');HTMLDlgEle.id=this._dlgId;HTMLDlgEle.className=this.className;HTMLDlgEle.style.display='none';HTMLDlgEle.style.position='absolute';this._zIndex=500+this._dlgIndx[0];HTMLDlgEle.style.zIndex=''+this._zIndex;var HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._dlgId+'.TITLE';HTMLDlgEle.appendChild(HTMLDlgTmplEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._dlgId+'.BODY';HTMLDlgEle.appendChild(HTMLDlgTmplEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._dlgId+'.FOOTER';HTMLDlgEle.appendChild(HTMLDlgTmplEle);document.body.appendChild(HTMLDlgEle);this._lockIndex=-1;if(this.body.contentId!=''){if($(this.body.contentId)){$(this._dlgId+'.BODY').appendChild($(this.body.contentId));}}
if(this.autoShow)this.show();AUI.Drag.create($(this._dlgId+'.TITLE'),{dragElementId:this._dlgId,onDragStart:function(){var ele=$(this.dragElementId);for(var i=1;i<ele.childNodes.length;i++){if(typeof ele.childNodes[i].tagName!='undefined'){ele.childNodes[i].style.visibility='hidden';}}
ele.style.opacity='.5';ele.style.filter='alpha(opacity=50)';},onDragEnd:function(){var ele=$(this.dragElementId);for(var i=0;i<ele.childNodes.length;i++){if(typeof ele.childNodes[i].tagName!='undefined')ele.childNodes[i].style.visibility='';}
ele.style.opacity='';ele.style.filter='';}});this._dlgIndx[0]=this._dlgIndx[0]+1;},position:function(val1,val2){var wEle=$(this._dlgId);if(val1.toLowerCase()=='center'){var vpSize=AUI.u.getVPSize();var vpScroll=AUI.u.getVPScroll();wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(val1.toLowerCase()=='dropdown'){var pEle=$(val2);if(pEle){$po(wEle,pEle,'dropdown');}}else if(typeof val1!='undefined'&&typeof val2!='undefined'){if(typeof val1=='Number')wEle.style.top=val1+'px';else wEle.style.top=val1;if(typeof val2=='Number')wEle.style.left=val2+'px';else wEle.style.left=val2;}},resize:function(wSize,hSize){this.body.width=wSize;this.body.height=hSize;$(this._dlgId).style.width=this.body.width;var bEle=$(this._dlgId+'.BODY');bEle.style.height=this.body.height;if(this.body.width!='')bEle.style.overflowX='auto';else bEle.style.overflowX='';if(this.body.height!='')bEle.style.overflowy='auto';else bEle.style.overflowy='';},refresh:function(){if($(this._dlgId+'.TITLE.CLOSE')){var ele=$(this._dlgId+'.TITLE.CLOSE');ele.style.display='none';var classInst=this;setTimeout(function(){classInst._refreshComplete();delete classInst;},10)}},_refreshComplete:function(){var ele=$(this._dlgId+'.TITLE.CLOSE');ele.style.display='';},show:function(){this._generateHTML();var wEle=$(this._dlgId);wEle.style.zIndex=this._zIndex;wEle.style.display='block';if(typeof arguments[0]!='undefined')this.position.apply(this,arguments);else if(this.autoPosition)this.position('center');if(this.modal)this._lockIndex=AUI.LockUI.page(this.lockUIClassName,this._zIndex);},hide:function(){if(this.modal)AUI.LockUI.pageFree();$(this._dlgId).style.display='none';this._lockIndex=-1;},_generateHTML:function(){var HTMLBEle=new Object();var tEle=$(this._dlgId+'.TITLE');var bEle=$(this._dlgId+'.BODY');var fEle=$(this._dlgId+'.FOOTER');$ss(tEle,this.title.style);$ss(bEle,this.body.style);$ss(fEle,this.footer.style);if(this.title.show){tEle.innerHTML=this.title.html;if(this.title.imageClose!=''){HTMLBEle=document.createElement('img');HTMLBEle.src=this.title.imageClose;HTMLBEle.id=this._dlgId+'.TITLE.CLOSE';HTMLBEle.style.position='absolute';HTMLBEle.style.right='2px';HTMLBEle.style.cursor='default';HTMLBEle.value='cancel';$e.add(HTMLBEle,'click',this._closeWindow,this);tEle.insertBefore(HTMLBEle,tEle.firstChild);}
tEle.className=this.title.className;tEle.style.display='block';}else tEle.style.display='none';if(this.body.contentId=='')bEle.innerHTML=this.body.html;bEle.className=this.body.className;bEle.style.height=this.body.height;if(this.body.width!='')bEle.style.overflowX='auto';else bEle.style.overflowX='';if(this.body.height!='')bEle.style.overflowy='auto';else bEle.style.overflowy='';if(this.footer.show){fEle.innerHTML='';for(var i=0;i<this.footer.buttons.length;i++){$u.o.assign(this.footer.buttons[i],this._buttonDefaults,true);HTMLBEle=document.createElement('button');HTMLBEle.className=this.footer.buttons[i].className;HTMLBEle.style.width=this.footer.buttons[i].width;HTMLBEle.innerHTML=this.footer.buttons[i].html;$sa(HTMLBEle,'A5Value',this.footer.buttons[i].value);$e.add(HTMLBEle,'click',this._closeWindow,this);fEle.appendChild(HTMLBEle);HTMLBEle=document.createTextNode(' ');fEle.appendChild(HTMLBEle);}
fEle.className=this.footer.className;fEle.style.display='block';}else fEle.style.display='none';var wEle=$(this._dlgId);wEle.style.width=this.body.width;wEle.className=this.className;},_closeWindow:function(e,classInst){var closeWindow=true;if(classInst.onClose!=0)closeWindow=classInst.onClose($ga(this,'A5Value'));if(closeWindow)classInst.hide();},_buttonDefaults:{html:'',value:'',width:'',className:''},_dlgIndx:[0]}
var a5_msg_box={show:function(title,html,type,handle){if(this._dlg==0){this._dlg=new a5_AJAX_window({title:{html:'',imageClose:'images/$$window.button.close.png.a5image'},body:{html:'',width:''},footer:{buttons:[]},modal:true,autoShow:false,onClose:function(val){var result=this.handle(val);if(typeof result!='boolean')result=true;return result;}});}else{this._dlg._zIndex=500+this._dlg._dlgIndx[0]+1;if(this._dlg._lockIndex!=-1)AUI.LockUI._plLevel=AUI.LockUI._plLevel.splice(this._dlg._lockIndex,1);}
if(typeof a5_AJAX_windowDefaults!='undefined')$u.o.assign(this._dlg,a5_AJAX_windowDefaults);this._dlg.title.html=title;this._dlg.body.html=html;this._dlg.handle=handle;this._dlg.body.width=this.width;this._dlg.body.height=this.height;if(this.className!='')this._dlg.className=this.className;if(this.lockUIClassName!='')this._dlg.lockUIClassName=this.lockUIClassName;if(this.titleClassName!='')this._dlg.title.className=this.titleClassName;if(this.bodyClassName!='')this._dlg.body.className=this.bodyClassName;if(this.footerClassName!='')this._dlg.footer.className=this.footerClassName;if(this.closeButtonImage!='')this._dlg.title.imageClose=this.closeButtonImage;if(this.buttonClassName=='')this.buttonClassName=this._dlg._buttonDefaults.className;if(this.buttonWidth=='')this.buttonWidth=this._dlg._buttonDefaults.width;type=type.toLowerCase();this._dlg.footer.show=true;if(type=='o'){this._dlg.footer.buttons=[{html:'OK',value:'ok',className:this.buttonClassName,width:this.buttonWidth}];}else if(type=='oc'){this._dlg.footer.buttons=[{html:'OK',value:'ok',className:this.buttonClassName,width:this.buttonWidth},{html:'Cancel',value:'cancel',className:this.buttonClassName,width:this.buttonWidth}];}else if(type=='yn'){this._dlg.footer.buttons=[{html:'Yes',value:'yes',className:this.buttonClassName,width:this.buttonWidth},{html:'No',value:'no',className:this.buttonClassName,width:this.buttonWidth}];}else if(type=='ync'){this._dlg.footer.buttons=[{html:'Yes',value:'yes',className:this.buttonClassName,width:this.buttonWidth},{html:'No',value:'no',className:this.buttonClassName,width:this.buttonWidth},{html:'Cancel',value:'cancel',className:this.buttonClassName,width:this.buttonWidth}];}else{this._dlg.footer.buttons=[];this._dlg.footer.show=false;}
this._dlg.show();},hide:function(){this._dlg.hide();},className:'',titleClassName:'',bodyClassName:'',footerClassName:'',buttonClassName:'',buttonWidth:'',closeButtonImage:'',lockUIClassName:'',width:'',height:'',_dlg:0}
a5_AJAX_accordion=Class.create();a5_AJAX_accordion.prototype={initialize:function(contId,panes){this.contId=contId;var settings=typeof arguments[2]=='object'?arguments[2]:{};$u.o.assign(this,{titleClassName:'',titleSelectedClassName:'',titleDisabledClassName:'',paneClassName:'',paneWidth:'',paneHeight:'',onChange:0,onBeforeChange:0,onLeave:0,onBeforeLeave:0,onRightClick:0,onDynamicLoad:0,singleBand:true,animation:{show:{type:'',duration:500},hide:{type:'',duration:500}}},true);if(typeof a5_AJAX_accordionDefaults!='undefined')$u.o.assign(this,a5_AJAX_accordionDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'accordion');if(typeof settings.titleClassName!='undefined'){if(settings.titleClassName.charAt(0)=='+')settings.titleClassName=this.titleClassName+' '+settings.titleClassName.substr(1);}
if(typeof settings.titleSelectedClassName!='undefined'){if(settings.titleSelectedClassName.charAt(0)=='+')settings.titleSelectedClassName=this.titleSelectedClassName+' '+settings.titleSelectedClassName.substr(1);}
if(typeof settings.titleDisabledClassName!='undefined'){if(settings.titleDisabledClassName.charAt(0)=='+')settings.titleDisabledClassName=this.titleDisabledClassName+' '+settings.titleDisabledClassName.substr(1);}
if(typeof settings.paneClassName!='undefined'){if(settings.paneClassName.charAt(0)=='+')settings.paneClassName=this.paneClassName+' '+settings.paneClassName.substr(1);}
$u.o.assign(this,settings);$(contId).style.width=this.paneWidth;var ele=new Object();this.bands=new Array();this.value=new Array();for(var i=0;i<panes.length;i++){this.bands[i]=new Object();$u.o.assign(this.bands[i],this._parseBand(panes[i]));if(this.bands[i].titleClassName.charAt(0)=='+')this.bands[i].titleClassName=this.titleClassName+' '+this.bands[i].titleClassName.substr(1);if(this.bands[i].titleSelectedClassName.charAt(0)=='+')this.bands[i].titleSelectedClassName=this.titleSelectedClassName+' '+this.bands[i].titleSelectedClassName.substr(1);if(this.bands[i].titleDisabledClassName.charAt(0)=='+')this.bands[i].titleDisabledClassName=this.titleDisabledClassName+' '+this.bands[i].titleDisabledClassName.substr(1);if(this.bands[i].paneClassName.charAt(0)=='+')this.bands[i].paneClassName=this.paneClassName+' '+this.bands[i].paneClassName.substr(1);ele=$(contId+'.'+i+'.TITLE');if(typeof ele!='undefined'){$e.add(ele,A5.d.evnts.click,this._selectBand,this);$e.add(ele,'click',function(e){$e.preventDefault(e);return false;});$e.add(ele,'contextmenu',this._rClick,this);if(!this.bands[i].expanded&&this.bands[i].show)ele.className=this._gDef(this.bands[i].titleClassName,this.titleClassName);else ele.className=this._gDef(this.bands[i].titleSelectedClassName,this.titleSelectedClassName);if(!this.bands[i].show)ele.style.display='none';if(this.bands[i].disabled)ele.className=this._gDef(this.bands[i].titleDisabledClassName,this.titleDisabledClassName);ele.setAttribute('A5AccordionCtrlIndex',''+i);}
ele=$(contId+'.'+i+'.PANE');if(typeof ele!='undefined'){ele.className=this._gDef(this.bands[i].paneClassName,this.paneClassName);ele.style.height=this._gDef(this.bands[i].paneHeight,this.paneHeight);if(!this.bands[i].expanded||!this.bands[i].show||this.bands[i].disabled)ele.style.display='none';else ele.style.display='block';}
if(this.bands[i].expanded&&this.bands[i].show&&!this.bands[i].disabled){this.value.push(this.bands[i].value);if(this.bands[i].onDynamicLoad.constructor==Function)this.bands[i].onDynamicLoad.call(this,this.bands[i]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.bands[i]);this.bands[i]._loaded=true;}}
this._curBandIndx=-1;},select:function(band){var toggle=typeof arguments[1]!='undefined'?arguments[1]:false;if(band.constructor!=Array)band=[band];for(var i=0;i<band.length;i++){var tIndx=this._getBandIndex(band[i]);if(this.bands[tIndx].show&&!this.bands[tIndx].disabled){var fResult=true;var poEle=false;if(typeof this.bands[this._curBandIndx]!='undefined'){if(this.bands[this._curBandIndx].onBeforeLeave.constructor==Function)fResult=this.bands[this._curBandIndx].onBeforeLeave.call(this,this.bands[this._curBandIndx]);else if(this.onBeforeLeave.constructor==Function)fResult=this.onBeforeLeave.call(this,this.bands[this._curBandIndx]);}
if(fResult){if(this.bands[tIndx].onBeforeChange.constructor==Function)fResult=this.bands[tIndx].onBeforeChange.call(this,this.bands[tIndx]);else if(this.onBeforeChange.constructor==Function)fResult=this.onBeforeChange.call(this,this.bands[tIndx]);}
if(fResult){if(typeof this.bands[this._curBandIndx]!='undefined'&&this.singleBand){if(this.bands[this._curBandIndx].disabled)$(this.contId+'.'+this._curBandIndx+'.TITLE').className=this._gDef(this.bands[this._curBandIndx].titleDisabledClassName,this.titleDisabledClassName);else $(this.contId+'.'+this._curBandIndx+'.TITLE').className=this._gDef(this.bands[this._curBandIndx].titleClassName,this.titleClassName);var pEle=$(this.contId+'.'+this._curBandIndx+'.PANE');if(this.animation.hide.type=='slide'&&typeof jQuery!='undefined')jQuery(pEle).slideUp(this.animation.hide.duration);else A5.u.element.hide(pEle,this.animation.hide);for(var j=0;j<this.value.length;j++)if(this.value[j]==this.bands[this._curBandIndx].value)this.value.splice(j,1);this.bands[this._curBandIndx].expanded=false;if(this.bands[this._curBandIndx].onLeave.constructor==Function)this.bands[this._curBandIndx].onLeave.call(this,this.bands[this._curBandIndx]);else if(this.onLeave.constructor==Function)this.onLeave.call(this,this.bands[this._curBandIndx]);}
if(!(this.singleBand&&this._curBandIndx==tIndx)){this._curBandIndx=tIndx;var pEle=$(this.contId+'.'+this._curBandIndx+'.PANE');if(pEle.style.display=='none'){$(this.contId+'.'+this._curBandIndx+'.TITLE').className=this._gDef(this.bands[this._curBandIndx].titleSelectedClassName,this.titleSelectedClassName);if(this.animation.show.type=='slide'&&typeof jQuery!='undefined')jQuery(pEle).slideDown(this.animation.show.duration);else A5.u.element.show(pEle,this.animation.show);this.value.push(this.bands[this._curBandIndx].value);if(!this.bands[tIndx]._loaded){if(this.bands[tIndx].onDynamicLoad.constructor==Function)this.bands[tIndx].onDynamicLoad.call(this,this.bands[tIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.bands[tIndx]);this.bands[tIndx]._loaded=true;}
this.bands[this._curBandIndx].expanded=true;}else if(toggle){if(this.bands[this._curBandIndx].disabled)ele.className=this._gDef(this.bands[this._curBandIndx].titleDisabledClassName,this.titleDisabledClassName);else $(this.contId+'.'+this._curBandIndx+'.TITLE').className=this._gDef(this.bands[this._curBandIndx].titleClassName,this.titleClassName);if(this.animation.hide.type=='slide'&&typeof jQuery!='undefined')jQuery(pEle).slideUp(this.animation.hide.duration);else A5.u.element.hide(pEle,this.animation.hide);for(var j=0;j<this.value.length;j++)if(this.value[j]==this.bands[this._curBandIndx].value)this.value.splice(j,1);this.bands[this._curBandIndx].expanded=false;if(this.bands[this._curBandIndx].onLeave.constructor==Function)this.bands[this._curBandIndx].onLeave.call(this,this.bands[this._curBandIndx]);else if(this.onLeave.constructor==Function)this.onLeave.call(this,this.bands[this._curBandIndx]);}}else this._curBandIndx=-1;if(this.bands[tIndx].onChange.constructor==Function)this.bands[tIndx].onChange.call(this,this.bands[tIndx]);else if(this.onChange.constructor==Function)this.onChange.call(this,this.bands[tIndx]);}}}},reset:function(){if(arguments.length==0){for(var i=0;i<this.bands.length;i++){this.bands[i]._loaded=false;if($(this.contId+'.'+i+'.PANE').style.display!='none'){if(this.bands[i].onDynamicLoad.constructor==Function)this.bands[i].onDynamicLoad.call(this,this.bands[i]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.bands[i]);}}}else{var tIndx=-1;for(var i=0;i<arguments.length;i++){tIndx=this._getBandIndex(arguments[i]);this.bands[tIndx]._loaded=false;if($(this.contId+'.'+tIndx+'.PANE').style.display!='none'){if(this.bands[tIndx].onDynamicLoad.constructor==Function)this.bands[tIndx].onDynamicLoad.call(this,this.bands[tIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.bands[tIndx]);}}}},populateBand:function(band,html){var tIndx=this._getBandIndex(band);$(this.contId+'.'+tIndx+'.PANE').innerHTML=html;},hideBand:function(band){var tIndx=this._getBandIndex(band);this.bands[tIndx].show=false;var ele=$(this.contId+'.'+tIndx+'.TITLE');if(typeof ele!='undefined')ele.style.display='none';var ele=$(this.contId+'.'+tIndx+'.PANE');if(typeof ele!='undefined')ele.style.display='none';},showBand:function(band){var tIndx=this._getBandIndex(band);this.bands[tIndx].show=true;var ele=$(this.contId+'.'+tIndx+'.TITLE');if(typeof ele!='undefined'){ele.style.display='';if(this.bands[tIndx].disabled)ele.className=this._gDef(this.bands[tIndx].titleDisabledClassName,this.titleDisabledClassName);else $(this.contId+'.'+tIndx+'.TITLE').className=this._gDef(this.bands[tIndx].titleClassName,this.titleClassName);}},disableBand:function(band){var tIndx=this._getBandIndex(band);this.bands[tIndx].disabled=true;var ele=$(this.contId+'.'+tIndx+'.TITLE');if(typeof ele!='undefined')ele.className=this._gDef(this.bands[tIndx].titleDisabledClassName,this.titleDisabledClassName);var ele=$(this.contId+'.'+tIndx+'.PANE');if(typeof ele!='undefined')ele.style.display='none';},enableBand:function(band){var tIndx=this._getBandIndex(band);this.bands[tIndx].disabled=false;var ele=$(this.contId+'.'+tIndx+'.TITLE');if(typeof ele!='undefined')ele.className=this._gDef(this.bands[tIndx].titleClassName,this.titleClassName);},addBand:function(pane,paneHTML){if(typeof pane!='object')pane={html:pane};var tIndx=this.bands.length;this.bands[tIndx]=new Object();$u.o.assign(this.bands[tIndx],this._parseBand(pane));var ele=document.createElement('a');ele.id=this.contId+'.'+tIndx+'.TITLE';ele.href="#";if(!this.bands[tIndx].expanded&&this.bands[tIndx].show)ele.className=this._gDef(this.bands[tIndx].titleClassName,this.titleClassName);else ele.className=this._gDef(this.bands[tIndx].titleSelectedClassName,this.titleSelectedClassName);if(!this.bands[tIndx].show)ele.style.display='none';if(this.bands[tIndx].disabled)ele.className=this._gDef(this.bands[tIndx].titleDisabledClassName,this.titleDisabledClassName);ele.innerHTML=this.bands[tIndx].html;$(this.contId).appendChild(ele);if(typeof ele!='undefined'){$e.add(ele,A5.d.evnts.click,this._selectBand,this);$e.add(ele,'click',function(e){$e.preventDefault(e);return false;});$e.add(ele,'contextmenu',this._rClick,this);if(!this.bands[tIndx].show)ele.style.display='none';ele.setAttribute('A5AccordionCtrlIndex',''+tIndx);}
ele=document.createElement('div');ele.id=this.contId+'.'+tIndx+'.PANE';ele.innerHTML=paneHTML;ele.className=this._gDef(this.bands[tIndx].paneClassName,this.paneClassName);ele.style.height=this._gDef(this.bands[tIndx].paneHeight,this.paneHeight);$(this.contId).appendChild(ele);if(!this.bands[tIndx].expanded||!this.bands[tIndx].show||this.bands[tIndx].disabled)ele.style.display='none';else{ele.style.display='block';this.value.push(this.bands[tIndx].value);if(this.bands[tIndx].onDynamicLoad.constructor==Function)this.bands[tIndx].onDynamicLoad.call(this,this.bands[tIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.bands[tIndx]);this.bands[tIndx]._loaded=true;}},removeBand:function(band){var tIndx=this._getBandIndex(band);$(this.contId).removeChild($(this.contId+'.'+tIndx+'.TITLE'));$(this.contId).removeChild($(this.contId+'.'+tIndx+'.PANE'));var ele=new Object();for(var i=tIndx+1;i<this.bands.length;i++){ele=$(this.contId+'.'+i+'.TITLE');ele.id=this.contId+'.'+(i-1)+'.TITLE';ele.setAttribute('A5AccordionCtrlIndex',''+(i-1));ele=$(this.contId+'.'+i+'.PANE');ele.id=this.contId+'.'+(i-1)+'.PANE';}
this.bands.splice(tIndx,1);},_getBandIndex:function(val){if(typeof val=='number')return val;else{for(var i=0;i<this.bands.length;i++)if(val==this.bands[i].value)return i;return 0;}},_selectBand:function(e,classInst){var tIndx=Number(this.getAttribute('A5AccordionCtrlIndex'));classInst.select(tIndx,true);e=$e.getEvent(e);$e.stopEvent(e);return false;},_rClick:function(e,classInst){var tIndx=Number(this.getAttribute('A5AccordionCtrlIndex'));e=$e.getEvent(e);$e.stopEvent(e);if(classInst.bands[tIndx].onRightClick.constructor==Function)classInst.bands[tIndx].onRightClick.call(classInst,classInst.bands[tIndx]);else if(classInst.onRightClick.constructor==Function)classInst.onRightClick.call(classInst,classInst.bands[tIndx]);return false;},_parseBand:function(pane){$u.o.assign(pane,this._defaultBand,true)
if(pane.html=='')pane.html=pane.value;if(pane.value=='')pane.value=pane.html;return pane;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultBand:{html:'',value:'',titleClassName:'',titleSelectedClassName:'',titleDisabledClassName:'',paneClassName:'',paneHeight:'',show:true,disabled:false,expanded:false,onChange:0,onBeforeChange:0,onLeave:0,onBeforeLeave:0,onRightClick:0,onDynamicLoad:0,_loaded:false}}
a5_AJAX_tab=Class.create();a5_AJAX_tab.prototype={initialize:function(contId,panes){this.contId=contId;var settings=typeof arguments[2]=='object'?arguments[2]:{};$u.o.assign(this,{tabClassName:'',tabSelectedClassName:'',tabDisabledClassName:'',paneClassName:'',paneWidth:'',paneHeight:'',onChange:0,onBeforeChange:0,onLeave:0,onBeforeLeave:0,onRightClick:0,onDynamicLoad:0,initialTab:0,animation:{show:{type:'',duration:500},hide:{type:'',duration:500}}},true);if(typeof a5_AJAX_tabDefaults!='undefined')$u.o.assign(this,a5_AJAX_tabDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'tab');if(typeof settings.tabClassName!='undefined'){if(settings.tabClassName.charAt(0)=='+')settings.tabClassName=this.tabClassName+' '+settings.tabClassName.substr(1);}
if(typeof settings.tabSelectedClassName!='undefined'){if(settings.tabSelectedClassName.charAt(0)=='+')settings.tabSelectedClassName=this.tabSelectedClassName+' '+settings.tabSelectedClassName.substr(1);}
if(typeof settings.tabDisabledClassName!='undefined'){if(settings.tabDisabledClassName.charAt(0)=='+')settings.tabDisabledClassName=this.tabDisabledClassName+' '+settings.tabDisabledClassName.substr(1);}
if(typeof settings.paneClassName!='undefined'){if(settings.paneClassName.charAt(0)=='+')settings.paneClassName=this.paneClassName+' '+settings.paneClassName.substr(1);}
$u.o.assign(this,settings);var ele=new Object();this.panes=new Array();for(var i=0;i<panes.length;i++){this.panes[i]=new Object();$u.o.assign(this.panes[i],this._parsePane(panes[i]));if(this.panes[i].tabClassName.charAt(0)=='+')this.panes[i].tabClassName=this.tabClassName+' '+this.panes[i].tabClassName.substr(1);if(this.panes[i].tabSelectedClassName.charAt(0)=='+')this.panes[i].tabSelectedClassName=this.tabSelectedClassName+' '+this.panes[i].tabSelectedClassName.substr(1);if(this.panes[i].tabDisabledClassName.charAt(0)=='+')this.panes[i].tabDisabledClassName=this.tabDisabledClassName+' '+this.panes[i].tabDisabledClassName.substr(1);if(this.panes[i].paneClassName.charAt(0)=='+')this.panes[i].paneClassName=this.paneClassName+' '+this.panes[i].paneClassName.substr(1);ele=$(contId+'.'+i+'.TAB');if(typeof ele!='undefined'){$e.add(ele,A5.d.evnts.click,this._selectTab,this);$e.add(ele,'click',function(e){$e.preventDefault(e);return false;});$e.add(ele,'contextmenu',this._rClick,this);if(i!=this.initialTab)ele.className=this._gDef(this.panes[i].tabClassName,this.tabClassName);else ele.className=this._gDef(this.panes[i].tabSelectedClassName,this.tabSelectedClassName);if(!this.panes[i].show)ele.style.display='none';if(this.panes[i].disabled)ele.className=this._gDef(this.panes[i].tabDisabledClassName,this.tabDisabledClassName);ele.setAttribute('A5TabCtrlIndex',''+i);}
ele=$(contId+'.'+i+'.PANE');if(typeof ele!='undefined'){ele.className=this._gDef(this.panes[i].paneClassName,this.paneClassName);ele.style.width=this._gDef(this.panes[i].paneWidth,this.paneWidth);ele.style.height=this._gDef(this.panes[i].paneHeight,this.paneHeight);if(i!=this.initialTab)ele.style.display='none';else ele.style.display='block';}}
if(this.panes.length>this.initialTab){this._curTabIndx=this.initialTab;this.value=this.panes[this._curTabIndx].value;if(this.panes[this._curTabIndx].onDynamicLoad.constructor==Function)this.panes[this._curTabIndx].onDynamicLoad.call(this,this.panes[this._curTabIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.panes[this._curTabIndx]);this.panes[this._curTabIndx]._loaded=true;}},select:function(tab){var tIndx=this._getTabIndex(tab);if(tIndx!=this._curTabIndx&&this.panes[tIndx].show&&!this.panes[tIndx].disabled){var fResult=true;if(typeof this.panes[this._curTabIndx]!='undefined'){if(this.panes[this._curTabIndx].onBeforeLeave.constructor==Function)fResult=this.panes[this._curTabIndx].onBeforeLeave.call(this,this.panes[this._curTabIndx]);else if(this.onBeforeLeave.constructor==Function)fResult=this.onBeforeLeave.call(this,this.panes[this._curTabIndx]);}
if(fResult){if(this.panes[tIndx].onBeforeChange.constructor==Function)fResult=this.panes[tIndx].onBeforeChange.call(this,this.panes[tIndx]);else if(this.onBeforeChange.constructor==Function)fResult=this.onBeforeChange.call(this,this.panes[tIndx]);}
if(fResult){if(typeof this.panes[this._curTabIndx]!='undefined'){if(this.panes[this._curTabIndx].disabled)$(this.contId+'.'+this._curTabIndx+'.TAB').className=this._gDef(this.panes[this._curTabIndx].tabDisabledClassName,this.tabDisabledClassName);else $(this.contId+'.'+this._curTabIndx+'.TAB').className=this._gDef(this.panes[this._curTabIndx].tabClassName,this.tabClassName);var pEle=$(this.contId+'.'+this._curTabIndx+'.PANE');var classInst=this;if(this.panes[this._curTabIndx].onLeave.constructor==Function)this.panes[this._curTabIndx].onLeave.call(this,this.panes[this._curTabIndx]);else if(this.onLeave.constructor==Function)this.onLeave.call(this,this.panes[this._curTabIndx]);this._curTabIndx=tIndx;var tAnim={};$u.o.assign(tAnim,this.animation.hide)
tAnim.onComplete=function(){classInst._selectComplete();delete classInst;};A5.u.element.hide(pEle,tAnim);}else{this._curTabIndx=tIndx;this._selectComplete();}}}},_selectComplete:function(){this.value=this.panes[this._curTabIndx].value;$(this.contId+'.'+this._curTabIndx+'.TAB').className=this._gDef(this.panes[this._curTabIndx].tabSelectedClassName,this.tabSelectedClassName);var pEle=$(this.contId+'.'+this._curTabIndx+'.PANE');A5.u.element.show(pEle,this.animation.show);if(this.panes[this._curTabIndx].onChange.constructor==Function)this.panes[this._curTabIndx].onChange.call(this,this.panes[this._curTabIndx]);else if(this.onChange.constructor==Function)this.onChange.call(this,this.panes[this._curTabIndx]);if(!this.panes[this._curTabIndx]._loaded){if(this.panes[this._curTabIndx].onDynamicLoad.constructor==Function)this.panes[this._curTabIndx].onDynamicLoad.call(this,this.panes[this._curTabIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.panes[this._curTabIndx]);this.panes[this._curTabIndx]._loaded=true}},reset:function(){if(arguments.length==0){for(var i=0;i<this.panes.length;i++){this.panes[i]._loaded=false;if(i==this._curTabIndx){if(this.panes[i].onDynamicLoad.constructor==Function)this.panes[i].onDynamicLoad.call(this,this.panes[i]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.panes[i]);}}}else{var tIndx=-1;for(var i=0;i<arguments.length;i++){tIndx=this._getTabIndex(arguments[i]);this.panes[tIndx]._loaded=false;if(tIndx==this._curTabIndx){if(this.panes[tIndx].onDynamicLoad.constructor==Function)this.panes[tIndx].onDynamicLoad.call(this,this.panes[tIndx]);else if(this.onDynamicLoad.constructor==Function)this.onDynamicLoad.call(this,this.panes[tIndx]);}}}},populatePane:function(tab,html){var tIndx=this._getTabIndex(tab);$(this.contId+'.'+tIndx+'.PANE').innerHTML=html;},hideTab:function(tab){var tIndx=this._getTabIndex(tab);this.panes[tIndx].show=false;var ele=$(this.contId+'.'+tIndx+'.TAB');if(typeof ele!='undefined')ele.style.display='none';if(tIndx==this._curTabIndx)this.select(this._getNextAvalibleTab(tIndx));},showTab:function(tab){var tIndx=this._getTabIndex(tab);this.panes[tIndx].show=true;var ele=$(this.contId+'.'+tIndx+'.TAB');if(typeof ele!='undefined')ele.style.display='';},disableTab:function(tab){var tIndx=this._getTabIndex(tab);this.panes[tIndx].disabled=true;var ele=$(this.contId+'.'+tIndx+'.TAB');if(typeof ele!='undefined')ele.className=this._gDef(this.panes[tIndx].tabDisabledClassName,this.tabDisabledClassName);if(tIndx==this._curTabIndx)this.select(this._getNextAvalibleTab(tIndx));},enableTab:function(tab){var tIndx=this._getTabIndex(tab);this.panes[tIndx].disabled=false;var ele=$(this.contId+'.'+tIndx+'.TAB');if(typeof ele!='undefined')ele.className=this._gDef(this.panes[tIndx].tabClassName,this.tabClassName);},addTab:function(pane,paneHTML){var tIndx=this.panes.length;this.panes[tIndx]=new Object();$u.o.assign(this.panes[tIndx],this._parsePane(pane));var ele=document.createElement('a');ele.id=this.contId+'.'+tIndx+'.TAB';ele.href="#";if(this.panes[tIndx].disabled)ele.className=this._gDef(this.panes[tIndx].tabDisabledClassName,this.tabDisabledClassName);else ele.className=this._gDef(this.panes[tIndx].tabClassName,this.tabClassName);if(!this.panes[tIndx].show)ele.style.display='none';ele.innerHTML=this.panes[tIndx].html;if(this.panes.length>1)$(this.contId+'.TABBAND').insertBefore(ele,$(this.contId+'.'+(tIndx-1)+'.TAB').nextSibling);else $(this.contId+'.TABBAND').insertBefore(ele,$(this.contId+'.TABBAND').lastChild);if(typeof ele!='undefined'){$e.add(ele,A5.d.evnts.click,this._selectTab,this);$e.add(ele,'click',function(e){$e.preventDefault(e);return false;});$e.add(ele,'contextmenu',this._rClick,this);if(!this.panes[tIndx].show)ele.style.display='none';ele.setAttribute('A5TabCtrlIndex',''+tIndx);}
ele=document.createElement('div');ele.id=this.contId+'.'+tIndx+'.PANE';ele.innerHTML=paneHTML;ele.className=this._gDef(this.panes[tIndx].paneClassName,this.paneClassName);ele.style.width=this._gDef(this.panes[tIndx].paneWidth,this.paneWidth);ele.style.height=this._gDef(this.panes[tIndx].paneHeight,this.paneHeight);ele.style.display='none';$(this.contId+'.PANES').appendChild(ele);},removeTab:function(tab){var tIndx=this._getTabIndex(tab);$(this.contId+'.TABBAND').removeChild($(this.contId+'.'+tIndx+'.TAB'));$(this.contId+'.PANES').removeChild($(this.contId+'.'+tIndx+'.PANE'));var ele=new Object();for(var i=tIndx+1;i<this.panes.length;i++){ele=$(this.contId+'.'+i+'.TAB');ele.id=this.contId+'.'+(i-1)+'.TAB';ele.setAttribute('A5TabCtrlIndex',''+(i-1));ele=$(this.contId+'.'+i+'.PANE');ele.id=this.contId+'.'+(i-1)+'.PANE';}
this.panes.splice(tIndx,1);if(tIndx==this._curTabIndx)this.select(this._getNextAvalibleTab(tIndx));else if(tIndx<this._curTabIndx)this._curTabIndx=this._curTabIndx-1;},_getTabIndex:function(val){if(typeof val=='number')return val;else{for(var i=0;i<this.panes.length;i++)if(val==this.panes[i].value)return i;return 0;}},_selectTab:function(e,classInst){var tIndx=Number(this.getAttribute('A5TabCtrlIndex'));classInst.select(tIndx);e=$e.getEvent(e);$e.stopEvent(e);return false;},_rClick:function(e,classInst){var tIndx=Number(this.getAttribute('A5TabCtrlIndex'));e=$e.getEvent(e);$e.stopEvent(e);if(classInst.panes[tIndx].onRightClick.constructor==Function)classInst.panes[tIndx].onRightClick.call(classInst,classInst.panes[tIndx]);else if(classInst.onRightClick.constructor==Function)classInst.onRightClick.call(classInst,classInst.panes[tIndx]);return false;},_getNextAvalibleTab:function(curIndex){for(var i=curIndex-1;i>-1;i--)if(!this.panes[i].disabled&&this.panes[i].show)return i;for(var i=curIndex+1;i<this.panes.length;i++)if(!this.panes[i].disabled&&this.panes[i].show)return i;return 0;},_parsePane:function(pane){if(typeof pane!='object')pane={html:pane};$u.o.assign(pane,this._defaultPane,true)
if(pane.html=='')pane.html=pane.value;if(pane.value=='')pane.value=pane.html;return pane;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultPane:{html:'',value:'',tabClassName:'',tabSelectedClassName:'',tabDisabledClassName:'',paneClassName:'',paneWidth:'',paneHeight:'',show:true,disabled:false,onChange:0,onBeforeChange:0,onLeave:0,onBeforeLeave:0,onRightClick:0,onDynamicLoad:0,_loaded:false}}
a5_AJAX_genie=Class.create();a5_AJAX_genie.prototype={initialize:function(contId,panes,settings){this.contId=contId;$u.o.assign(this,settings);$u.o.assign(this,{buttonMode:'hide',onCancel:0,onPrevious:0,onNext:0,onBeforeNext:0,onNavigateTo:0,onDone:0},true);this.panes=new Array();for(var i=0;i<panes.length;i++){this.panes[i]=new Object();$u.o.assign(this.panes[i],this._parsePane(panes[i],$if(i==panes.length-1,true,false)));if(i>0)$(this.contId+'.'+this.panes[i].name).style.display='none';else $(this.contId+'.'+this.panes[i].name).style.display='';}
var ele=$(this.contId+'.CANCEL');if(typeof ele!='undefined')$e.add(ele,'click',this._cancel,this,true);ele=$(this.contId+'.PREV');if(typeof ele!='undefined')$e.add(ele,'click',this._prev,this,true);if(this.buttonMode=='disable'||this.buttonMode=='swap'){ele.disabled=true;}else{ele.style.display='none';}
ele=$(this.contId+'.NEXT');if(typeof ele!='undefined')$e.add(ele,'click',this._next,this,true);ele=$(this.contId+'.DONE');if(typeof ele!='undefined')$e.add(ele,'click',this._done,this,true);if(this.buttonMode=='disable'){ele.disabled=true;}else{ele.style.display='none';}
this._prevPane=[0];this._curPane=0;},disableNext:function(){var ele=$(this.contId+'.NEXT');if(typeof ele!='undefined')ele.disabled=true;var ele=$(this.contId+'.DONE');if(typeof ele!='undefined')ele.disabled=true;},enableNext:function(){var ele=$(this.contId+'.NEXT');if(typeof ele!='undefined')ele.disabled=false;var ele=$(this.contId+'.DONE');if(typeof ele!='undefined')ele.disabled=false;},next:function(){this._prevPane.push(this._curPane);$(this.contId+'.'+this.panes[this._curPane].name).style.display='none';if(this.panes[this._curPane].nextPane!=''){for(var i=0;i<this.panes.length;i++){if(this.panes[i].name==this.panes[this._curPane].nextPane){this._curPane=i;break;}}}else this._curPane=this._curPane+1;$(this.contId+'.'+this.panes[this._curPane].name).style.display='';if(this.panes[this._curPane].isLast){var ele=$(this.contId+'.DONE');ele.disabled=false;ele.style.display='';ele=$(this.contId+'.NEXT');if(this.buttonMode=='disable'){ele.disabled=true;}else{ele.style.display='none';}}
var ele=$(this.contId+'.PREV');ele.disabled=false;ele.style.display='';if(this.panes[this._curPane].onNext.constructor==Function)this.panes[this._curPane].onNext.call(this,this.panes[this._curPane]);else if(this.onNext.constructor==Function)this.onNext.call(this,this.panes[this._curPane]);if(this.panes[this._curPane].onNavigateTo.constructor==Function)this.panes[this._curPane].onNavigateTo.call(this,this.panes[this._curPane]);else if(this.onNavigateTo.constructor==Function)this.onNavigateTo.call(this,this.panes[this._curPane]);},_next:function(){var fResult=true;if(this.panes[this._curPane].onBeforeNext.constructor==Function)fResult=this.panes[this._curPane].onBeforeNext.call(this,this.panes[this._curPane]);else if(this.onBeforeNext.constructor==Function)fResult=this.onBeforeNext.call(this,this.panes[this._curPane]);if(typeof fResult!='undefined'&&!fResult)return false;this.next();},_prev:function(){if(this._prevPane.length==2){var ele=$(this.contId+'.PREV');if(this.buttonMode=='disable'||this.buttonMode=='swap'){ele.disabled=true;}else{ele.style.display='none';}}
$(this.contId+'.'+this.panes[this._curPane].name).style.display='none';if(this.panes[this._curPane].isLast){var ele=$(this.contId+'.NEXT');ele.disabled=false;ele.style.display='';ele=$(this.contId+'.DONE');if(this.buttonMode=='disable'){ele.disabled=true;}else{ele.style.display='none';}}
this._curPane=this._prevPane[this._prevPane.length-1];this._prevPane.pop();$(this.contId+'.'+this.panes[this._curPane].name).style.display='';if(this.panes[this._curPane].onPrevious.constructor==Function)this.panes[this._curPane].onPrevious.call(this,this.panes[this._curPane]);else if(this.onPrevious.constructor==Function)this.onPrevious.call(this,this.panes[this._curPane]);if(this.panes[this._curPane].onNavigateTo.constructor==Function)this.panes[this._curPane].onNavigateTo.call(this,this.panes[this._curPane]);else if(this.onNavigateTo.constructor==Function)this.onNavigateTo.call(this,this.panes[this._curPane]);},_cancel:function(){if(this.panes[this._curPane].onCancel.constructor==Function)this.panes[this._curPane].onCancel.call(this,this.panes[this._curPane]);else if(this.onCancel.constructor==Function)this.onCancel.call(this,this.panes[this._curPane]);},_done:function(){if(this.panes[this._curPane].onDone.constructor==Function)this.panes[this._curPane].onDone.call(this,this.panes[this._curPane]);else if(this.onDone.constructor==Function)this.onDone.call(this,this.panes[this._curPane]);},_parsePane:function(pane,lastPane){if(typeof pane!='object')pane={name:''+pane};if(lastPane)pane.isLast=true;$u.o.assign(pane,this._defaultPane,true);return pane;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultPane:{name:'',nextPane:'',isLast:false,onCancel:0,onPrevious:0,onNext:0,onBeforeNext:0,onNavigateTo:0,onDone:0}}
a5_AJAX_repeatingForm=Class.create();a5_AJAX_repeatingForm.prototype={initialize:function(contId,tmlp,fields,data){this.contId=contId;this.html=tmlp;this.fields=fields;this.data=data;this.order=new Array();this._curRowIndx=-1;this._curFieldId='';if(this.html.constructor==Array)this.html=this.html.join('\n');var settings=typeof arguments[4]=='object'?arguments[4]:{};$u.o.assign(this,{rowClassName:'',rowAltClassName:'',rowFocusClassName:'',onAdd:0,onRemove:0,onClear:0,onMove:0,dropDownLocation:8,dropDownXOffset:0,dropDownYOffset:0,menuLocation:'dropdown',menuXOffset:1,menuYOffset:1},true);if(typeof a5_AJAX_repeatingFormDefaults!='undefined')$u.o.assign(this,a5_AJAX_repeatingFormDefaults);$u.o.assign(this,settings);for(var i=0;i<this.fields.length;i++){this.fields[i]=this._parseField(this.fields[i]);}
var rEle=new Object();for(var i=0;i<this.data.length;i++){if(!$(this.contId+'.'+i)){rEle=this._renderRow(i);$(this.contId).appendChild(rEle);}
this._initializeFields(i);this.order.push(i);}
this._reband();if($(this.contId+'.DROPDOWN'))$e.add(this.contId+'.DROPDOWN','mousedown',this._showMenu,this,true);if($(this.contId+'.INSERTBEFORE'))$e.add(this.contId+'.INSERTBEFORE','mousedown',this._insertBeforeRow,this,true);if($(this.contId+'.INSERTAFTER'))$e.add(this.contId+'.INSERTAFTER','mousedown',this._insertAfterRow,this,true);if($(this.contId+'.REMOVE'))$e.add(this.contId+'.REMOVE','mousedown',this._removeRow,this,true);if($(this.contId+'.CLEAR'))$e.add(this.contId+'.CLEAR','mousedown',this._clearRow,this,true);if($(this.contId+'.MOVEUP'))$e.add(this.contId+'.MOVEUP','mousedown',this._moveRowUp,this,true);if($(this.contId+'.MOVEDOWN'))$e.add(this.contId+'.MOVEDOWN','mousedown',this._moveRowDown,this,true);if($(this.contId+'.MOVEFIRST'))$e.add(this.contId+'.MOVEFIRST','mousedown',this._moveRowFirst,this,true);if($(this.contId+'.MOVELAST'))$e.add(this.contId+'.MOVELAST','mousedown',this._moveRowLast,this,true);if(this.order.length==0){indx=this.data.length;var newData={};for(var i=0;i<this.fields.length;i++)newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);var rEle=new Object();rEle=this._renderRow(indx);$(this.contId).appendChild(rEle);this._initializeFields(indx);this.order=[indx];}},addRow:function(newData){var indx=this.data.length;for(var i=0;i<this.fields.length;i++)if(typeof newData[this.fields[i].name]=='undefined')newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);rEle=this._renderRow(indx);$(this.contId).appendChild(rEle);this._initializeFields(indx);this.order.push(indx);this._reband();if(this.onAdd.constructor==Function)fResult=this.onAdd.call(this,indx,this.order.length-1);},removeRow:function(indx){$(this.contId+'.'+indx).style.display='none';for(var i=0;i<this.order.length;i++){if(this.order[i]==indx){this.order.splice(i,1);break;}}
this._reband();if(this.onRemove.constructor==Function)fResult=this.onRemove.call(this,indx,i);if(this.order.length==0){indx=this.data.length;var newData={};for(var i=0;i<this.fields.length;i++)newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);var rEle=new Object();rEle=this._renderRow(indx);$(this.contId).appendChild(rEle);this._initializeFields(indx);this.order=[indx];}},clearRow:function(indx){var fEle=new Object();for(var i=0;i<this.fields.length;i++){this.data[indx][this.fields[i].name]=this.fields[i].defaultValue;fEle=$n(this.contId+'.'+indx+'.'+this.fields[i].name);$svs(fEle,this.data[indx][this.fields[i].name]);}
this._reband();if(this.onClear.constructor==Function)fResult=this.onClear.call(this,indx);},clear:function(){var createNew=typeof arguments[0]!='undefined'?arguments[0]:true;var pEle=$(this.contId);$e.removeGroup(this.contId+'.EVENTS');for(var i=0;i<this.data.length;i++){pEle.removeChild($(this.contId+'.'+i));}
this.data=new Array();this.order=new Array();if(createNew){var indx=0;var newData={};for(var i=0;i<this.fields.length;i++)newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);var rEle=new Object();rEle=this._renderRow(indx);$(this.contId).appendChild(rEle);this._initializeFields(indx);this.order=[indx];}},moveRow:function(dIndx,oIndx){var oldOIndx=-1;for(var i=0;i<this.order.length;i++)if(this.order[i]==dIndx)oldOIndx=i;if(oIndx>oldOIndx)$(this.contId).insertBefore($(this.contId+'.'+dIndx),$(this.contId+'.'+this.order[oIndx]).nextSibling);else $(this.contId).insertBefore($(this.contId+'.'+dIndx),$(this.contId+'.'+this.order[oIndx]));this.order.splice(oldOIndx,1);this.order.splice(oIndx,0,dIndx);this._reband();if(this.onMove.constructor==Function)fResult=this.onMove.call(this,dIndx,oldOIndx,oIndx);},getData:function(){var indxvar=typeof arguments[0]!='undefined'?arguments[0]:'';var r=new Object();r.oldData=new Array();r.data=new Array();for(var i=0;i<this.order.length;i++){r.data[i]=new Object();r.oldData[i]=new Object();for(var j=0;j<this.fields.length;j++){r.data[i][this.fields[j].name]=$gvs(this.contId+'.'+this.order[i]+'.'+this.fields[j].name);if(this.fields[j].type=='number')r.data[i][this.fields[j].name]=$u.s.toNum(r.data[i][this.fields[j].name]);$u.o.assign(r.oldData[i],this.data[this.order[i]]);}
if(indxvar!=''){r.data[i][indxvar]=this.order[i];r.oldData[i][indxvar]=this.order[i];}}
return r;},getDataForCallback:function(){var prefix=typeof arguments[0]!='undefined'?arguments[0]:'';if(prefix!='')prefix=prefix+'.';var indxvar=typeof arguments[1]!='undefined'?arguments[1]:'';var r=this.getData(indxvar);var arr=new Array();var rd='';for(var i=0;i<this.fields.length;i++){if(typeof r.data[0][this.fields[i].name]=='object'){for(var j=0;j<r.data.length;j++){rd=r.data[j][this.fields[i].name];if(rd.constructor==Array)rd=rd.join('\n');else rd='';arr[arr.length]=prefix+this.fields[i].name+'['+(j+1)+']='+urlencode(rd);rd=r.oldData[j][this.fields[i].name];if(rd.constructor==Array)rd=rd.join('\n');else rd='';arr[arr.length]=prefix+'old.'+this.fields[i].name+'['+(j+1)+']='+urlencode(rd);}}else{for(var j=0;j<r.data.length;j++){arr[arr.length]=prefix+this.fields[i].name+'['+(j+1)+']='+urlencode(r.data[j][this.fields[i].name]);arr[arr.length]=prefix+'old.'+this.fields[i].name+'['+(j+1)+']='+urlencode(r.oldData[j][this.fields[i].name]);}}}
for(var i=0;i<r.data.length;i++){arr[arr.length]=prefix+indxvar+'['+(i+1)+']='+r.data[i][indxvar];arr[arr.length]=prefix+'old.'+indxvar+'['+(i+1)+']='+r.oldData[i][indxvar];}
return arr.join('&');},_renderRow:function(indx){var ele=document.createElement('div');ele.id=this.contId+'.'+indx;ele.className=this.rowClassName;ele.innerHTML=this.html.replace(/\{INDEX\}/g,''+indx);return ele;},_initializeFields:function(indx){var fEle=new Object();for(var i=0;i<this.fields.length;i++){fEle=$n(this.contId+'.'+indx+'.'+this.fields[i].name);$svs(fEle,this.data[indx][this.fields[i].name]);$sa(fEle,'A5RepeatingFormIndex',''+indx);$sa(fEle,'A5HarvestIgnore','true');$e.add(fEle,'focus',this._showDropdown,this,false,this.contId+'.EVENTS');$e.add(fEle,'blur',this._hideDropdown,this,false,this.contId+'.EVENTS');}},_insertBeforeRow:function(){var indx=this.data.length;var newData={};for(var i=0;i<this.fields.length;i++)newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);var rEle=new Object();rEle=this._renderRow(indx);$(this.contId).insertBefore(rEle,$(this.contId+'.'+this._curRowIndx));this._initializeFields(indx);for(var i=0;i<this.order.length;i++){if(this.order[i]==this._curRowIndx){this.order.splice(i,0,indx);break;}}
if(this.onAdd.constructor==Function)fResult=this.onAdd.call(this,indx,i);this._hideMenu();this._reband();},_insertAfterRow:function(){var indx=this.data.length;var newData={};for(var i=0;i<this.fields.length;i++)newData[this.fields[i].name]=this.fields[i].defaultValue;this.data.push(newData);var rEle=new Object();rEle=this._renderRow(indx);$(this.contId).insertBefore(rEle,$(this.contId+'.'+this._curRowIndx).nextSibling);this._initializeFields(indx);for(var i=0;i<this.order.length;i++){if(this.order[i]==this._curRowIndx){this.order.splice(i+1,0,indx);break;}}
if(this.onAdd.constructor==Function)fResult=this.onAdd.call(this,indx,i+1);this._hideMenu();this._reband();},_removeRow:function(){this.removeRow(this._curRowIndx);this._hideMenu();},_clearRow:function(){this.clearRow(this._curRowIndx);this._hideMenu(true);},_moveRowUp:function(){var oIndx=-1;for(var i=1;i<this.order.length;i++){if(this._curRowIndx==this.order[i]){oIndx=i-1;break;}}
if(oIndx!=-1)this.moveRow(this._curRowIndx,oIndx);this._hideMenu(true);},_moveRowDown:function(){var oIndx=-1;for(var i=0;i<this.order.length-1;i++){if(this._curRowIndx==this.order[i]){oIndx=i+1;break;}}
if(oIndx!=-1)this.moveRow(this._curRowIndx,oIndx);this._hideMenu(true);},_moveRowFirst:function(){this.moveRow(this._curRowIndx,0);this._hideMenu(true);},_moveRowLast:function(){this.moveRow(this._curRowIndx,this.order.length-1);this._hideMenu(true);},_showDropdown:function(e,classInst){if($(classInst.contId+'.'+classInst._curRowIndx))$rcn($(classInst.contId+'.'+classInst._curRowIndx),classInst.rowFocusClassName);var trIndx=Number($ga(this,'A5RepeatingFormIndex'));if(trIndx!=classInst._curRowIndx)$(classInst.contId+'.MENU').style.display='none';classInst._curRowIndx=trIndx;classInst._curFieldId=this.id;clearTimeout(classInst._tBarTimeout);$acn($(classInst.contId+'.'+classInst._curRowIndx),classInst.rowFocusClassName);var ele=$(classInst.contId+'.DROPDOWN');ele.style.display='';$po(ele,$(classInst.contId+'.'+classInst._curRowIndx),classInst.dropDownLocation,classInst.dropDownXOffset,classInst.dropDownYOffset-$(classInst.contId).scrollTop);},_hideDropdown:function(e,classInst){classInst._tBarTimeout=setTimeout(function(){classInst._hideDropdownComplete();},200);},_hideDropdownComplete:function(){$rcn($(this.contId+'.'+this._curRowIndx),this.rowFocusClassName);$(this.contId+'.DROPDOWN').style.display='none';$(this.contId+'.MENU').style.display='none';},_showMenu:function(e){var ele=$(this.contId+'.MENU');ele.style.display='';$po(ele,$(this.contId+'.DROPDOWN'),this.menuLocation,this.menuXOffset,this.menuYOffset);setTimeout(Function('$(\''+this._curFieldId+'\').focus()'),10);},_hideMenu:function(){var rFocus=typeof arguments[0]!='undefined'?arguments[0]:false;var ele=$(this.contId+'.MENU');ele.style.display='none';if(rFocus)setTimeout(Function('$(\''+this._curFieldId+'\').focus()'),10);},_parseField:function(field){if(typeof field!='object')field={name:field};$u.o.assign(field,{name:'',type:'string',defaultValue:''},true);return field;},_reband:function(){if(this.rowAltClassName!=''){for(var i=0;i<this.order.length;i++){if(i-(Math.floor(i/2)*2)==0)$(this.contId+'.'+this.order[i]).className=this.rowClassName;else $(this.contId+'.'+this.order[i]).className=this.rowAltClassName;}}}}
if(typeof A5=='undefined')var A5=new Object();A5.flags={}
A5.flags.supportsTouch=navigator.userAgent.match(/android/i)||!!('createTouch'in document)
A5.flags.supportsMouse=!(navigator.userAgent.match(/(iPad|iPhone|iPod)/i)?true:false);if(navigator.userAgent.match(/ipad/i)||navigator.userAgent.match(/playbook/i)||navigator.userAgent.match(/xoom/i)||navigator.userAgent.match(/kindle/i)||navigator.userAgent.match(/hp-tablet/i)||navigator.userAgent.match(/gt-p1000/i)||navigator.userAgent.match(/nexus 7/i)||navigator.userAgent.match(/tablet/i))A5.flags.isTablet=true;else A5.flags.isTablet=false;if(navigator.userAgent.match(/safari/i))A5.flags.isSafari=navigator.userAgent.match(/chrome/i)?false:true;else A5.flags.isSafari=false;A5.flags.isMobile=navigator.userAgent.match(/mobile/i)||navigator.userAgent.match(/android/i)?true:false;A5.flags.isWebKit=navigator.userAgent.match(/webkit/i)?true:false;A5.flags.isOpera=navigator.userAgent.match(/opera/i)?true:false;A5.flags.isFireFox=navigator.userAgent.match(/firefox/i)?true:false;A5.flags.isIE=navigator.userAgent.match(/msie/i)?true:false;A5.flags.isWindows=navigator.userAgent.match(/windows/i)?true:false;A5.flags.isIPhone=navigator.userAgent.match(/iphone/i)?true:false;A5.flags.isIPad=navigator.userAgent.match(/ipad/i)?true:false;A5.flags.isXoom=navigator.userAgent.match(/xoom/i)?true:false;A5.flags.isKindle=navigator.userAgent.match(/kindle/i)?true:false;A5.flags.isPlaybook=navigator.userAgent.match(/playbook/i)?true:false;A5.flags.isGalaxy=navigator.userAgent.match(/gt-p1000/i)?true:false;A5.flags.isTouchPad=navigator.userAgent.match(/hp-tablet/i)?true:false;A5.flags.isAndroid=navigator.userAgent.match(/Android/i)?true:false;A5.flags.userAgent=navigator.userAgent;A5.flags.isNotWebKit=!A5.flags.isWebKit;A5.flags.useBasicScroller=!A5.flags.isWebKit;A5.flags.isPortraitMode=window.orientation==0?true:false;A5.flags.iOSVersion=-1;if(A5.flags.isIPhone||A5.flags.isIPad){var ua=navigator.userAgent;ua=ua.substr(ua.indexOf('OS ')+3);A5.flags.iOSVersion=ua.split(' ')[0].split('_').join('.');}
A5.d={evnts:{down:'mousedown',up:'mouseup',move:'mousemove',click:'click',dblClick:'dblclick'}}
if(A5.flags.supportsTouch){A5.d={evnts:{down:'abstractdown',up:'abstractup',move:'abstractmove',click:'abstractclick',dblClick:'abstractdblclick'}}}
A5.form=new Object();A5.form.submit=a5_AJAX_Form;A5.form.prepare=a5_AJAX_FormPrepare;A5.form.harvest=a5_AJAX_Form_RegionHarvest;A5.form.reset=a5_AJAX_FormReset;A5.form.setErrors=a5_AJAX_Form_ErrorsSet;A5.form.clearErrors=a5_AJAX_Form_ErrorsClear;A5.form.populateSelect=function(eleId,currValue,data,clearExistingEntries){if(typeof clearExistingEntries=='string'){a5_AJAX_Form_populateSelect(eleId,currValue,data,clearExistingEntries);return false;}
var ele=$(eleId);var currIndex=0;if(clearExistingEntries){if(ele.options.length>0){for(var i=ele.options.length-1;i>=0;i--)ele.options[i]=null;ele.options[0]=null;}}else currIndex=ele.options.length;for(var i=0;i<data.length;i++){if(data[i].constructor==Array){if(data[i].length>1){ele.options[currIndex]=new Option(data[i][0],data[i][1]);}else{ele.options[currIndex]=new Option(data[i][0],data[i][0]);}}else{ele.options[currIndex]=new Option(data[i],data[i]);}
currIndex++;}
var optionFound=false;if(ele.options.length>0){for(var i=0;i<ele.options.length;i++){if(ele.options[i].value==currValue){optionFound=true;ele.options.selectedIndex=i;break;}}
if(optionFound==false){ele.options.add(new Option(currValue,currValue),0);ele.options.selectedIndex=0;}}}
A5.form.setCtrlDirty=a5_AJAX_Form_SetDirtyControl;A5.form._setDirty=a5_AJAX_Form_SetDirty;A5.form._setFocus=a5_AJAX_Form_SetFocus;A5.grid=new Object();A5.grid.action=a5_AJAX_GridAction;A5.grid.submit=a5_AJAX_GridSubmit;A5.ajax=new Object();A5.ajax.buildURLParam=a5_AJAX_Form_SubmitValueParam;A5.ajax.callback=a5_AJAX_Callback;A5.ajax.urlEncode=urlencode;if(!A5.ajax.addURLRequiredData)A5.ajax.addURLRequiredData=function(url){return url;};if(!A5.ajax.addParamRequiredData)A5.ajax.addParamRequiredData=function(data){return data;};A5.Accordion=a5_AJAX_accordion;A5.Tab=a5_AJAX_tab;A5.Genie=a5_AJAX_genie;A5.RepeatingForm=a5_AJAX_repeatingForm;A5.Watch={_w:{},add:function(wName,wTarg,wSettings){var eles2=new Array();if(wTarg.constructor==Array){for(var i=0;i<wTarg.length;i++)eles2.push($(wTarg[i]));}else eles2.push($(wTarg));var wNames='';var eleIds=new Array();for(var i=0;i<eles2.length;i++){eleIds.push(eles2[i].id);if($ga(eles2[i],'A5WatchNames')==''||$ga(eles2[i],'A5WatchNames')==null){$e.add(eles2[i],'change',this._onChange);if(eles2[i].tagName.toLowerCase()=='input'&&(eles2[i].type.toLowerCase()=='radio'||eles2[i].type.toLowerCase()=='checkbox'))$e.add(eles2[i],'click',this._onChange);$sa(eles2[i],'A5WatchNames',wName);}else{wNames=$ga(eles2[i],'A5WatchNames');wNames=wNames.split(';');if($u.a.find(wNames,wName)==-1){wNames.push(wName);$sa(eles2[i],'A5WatchNames',wNames.join(';'));}}}
if(typeof wSettings.data=='undefined')wSettings.data={};else if(typeof wSettings.data!='object')wSettings.data={value:wSettings.data};$u.o.assign(wSettings.data,{external:false,initial:false});if(typeof wSettings.fireInitial=='undefined')wSettings.fireInitial=true;this._w[wName]={ids:eleIds,data:wSettings.data,onChange:wSettings.onChange}
if(wSettings.fireInitial){var tempData=new Object();$u.o.assign(tempData,wSettings.data);tempData.external=true;tempData.initial=true;wSettings.onChange.call(eles2[0],tempData);}},remove:function(wName){if(typeof this._w[wName]!='undefined'){var wIds=this._w[wName].ids;var ele=0;var wNameIndx=-1;for(var i=0;i<wIds.length;i++){ele=$(wIds[i]);wNames=$ga(ele,'A5WatchNames');if(wNames!=''&&wNames!=null){wNames=wNames.split(';');if(wNames.length==1){$e.remove(ele,'change',this._onChange);if(ele.tagName.toLowerCase()=='input'&&(ele.type.toLowerCase()=='radio'||ele.type.toLowerCase()=='checkbox'))$e.remove(ele,'click',this._onChange);$sa(ele,'A5WatchNames','');}else{wNameIndx=$u.a.find(wNames,wName);wNames.splice(wNameIndx,1);$sa(ele,'A5WatchNames',wNames.join(';'));}}}
delete this._w[wName];}},fire:function(wName){if(typeof this._w[wName]!='undefined'){var wIds=this._w[wName].ids;var ele=$(wIds[0]);var tempData=new Object();$u.o.assign(tempData,this._w[wName].data);tempData.external=true;this._w[wName].onChange.call(ele,tempData);}},_onChange:function(){var wNames=$ga(this,'A5WatchNames');wNames=wNames.split(';');setTimeout(Function('var wNames = '+$u.o.toJSON(wNames)+'; for(var i=0; i<wNames.length; i++) if(A5.Watch._w[wNames[i]]) A5.Watch._w[wNames[i]].onChange.call(this,A5.Watch._w[wNames[i]].data);'),1);}}
A5.RichTextEdit=Class.create();A5.RichTextEdit.prototype={initialize:function(ctrlId,settings){if(!$(ctrlId))return false;this.ctrlId=ctrlId;$u.o.assign(settings,{defaultLinkedCSS:'',defaultCSS:'',onStateChange:0,onChange:0},true);$u.o.assign(this,settings);if(this.defaultCSS.constructor==Array)this.defaultCSS.join('\n');else if(this.defaultCSS.constructor!=String)this.defaultCSS='';this.defaultCSS='table, td {border: 1px dashed #aaa;}'+this.defaultCSS;var tEle=$(ctrlId);var iEle=document.createElement('iframe');iEle.id=ctrlId+'.HTMLEDITOR';if(tEle.style.width!='')iEle.style.width=tEle.style.width;else iEle.style.width=tEle.offsetWidth+'px';if(tEle.style.height!='')iEle.style.height=tEle.style.height;else iEle.style.height=tEle.offsetHeight+'px';iEle.style.overflow='auto';iEle.frameBorder='0';iEle.border='0';iEle.className=tEle.className;tEle.parentNode.insertBefore(iEle,tEle);tEle.style.display='none';this._iEle=iEle;this._tEle=tEle;if(document.all&&navigator.appName!='Opera'){this._iEle.contentWindow.document.designMode='on';this._eDoc=this._iEle.contentWindow.document;$e.add(this._iEle.contentWindow,'focus',this._focus,this,true);$e.add(this._iEle.contentWindow,'blur',this._blur,this,true);this.focus();}else{this._iEle.contentDocument.designMode='on';this._iEle.style.lineHeight='0';this._eDoc=this._iEle.contentDocument;$e.add(this._eDoc,'focus',this._focus,this,true);$e.add(this._eDoc,'blur',this._blur,this,true);}
this._eDoc.open();var initHTML=tEle.value;if(initHTML=='')initHTML='';this._eDoc.write('<head>'+$if(this.defaultLinkedCSS!='','<link rel="stylesheet" type="text/css" href="'+this.defaultLinkedCSS+'" />','')+$if(this.defaultCSS!='','<style type="text/css">'+this.defaultCSS+'</style>','')+'</head><body>'+initHTML+'</body>');this._eDoc.close();$e.add(this._eDoc,'keyup',this._getState,this,true);$e.add(this._eDoc,'keydown',this._keyDown,this,true);$e.add(this._eDoc,'mouseup',this._getState,this,true);this.state={bold:false,underline:false,italic:false,strikeThrough:false,justifyLeft:true,justifyCenter:false,justifyRight:false,justifyFull:false,fontName:'',fontSize:'',unorderedList:false,orderedList:false,canUndo:false,canRedo:false}
if(this.onStateChange.constructor==Function)this.onStateChange();this._blurTO=0;var classInst=this;setTimeout(function(){classInst._getClassNames();delete classInst;},10);this._kw=new AUI.KeyWatcher([{key:'ctrl+b',handle:this.bold},{key:'ctrl+i',handle:this.italic},{key:'ctrl+u',handle:this.underline}],this,this._iEle.contentWindow);},command:function(type){this._iEle.contentWindow.focus();var data=typeof(arguments[1]!='undefined')?arguments[1]:null;var lType=type.toLowerCase();if(lType=='backcolor'){var ele=this._getSelElement();if(!ele.tagName)return false;var tagName=ele.tagName.toLowerCase();var validTags=['p','pre','div','td','th','li','h1','h2','h3','h4','h5','h6','blockquote','dd','dt','legend','fieldset','caption','body'];if($u.a.find(validTags,tagName)==-1){while($u.a.find(validTags,tagName)==-1){ele=ele.parentNode;if(ele.tagName)tagName=ele.tagName.toLowerCase();}}
if($u.a.find(validTags,tagName)==-1)return false;if(ele.tagName.toLowerCase()!='body')ele.style.backgroundColor=data;}else if(lType=='hilitecolor'){if(!navigator.userAgent.toLowerCase().match('firefox'))type='backcolor';if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}else if(lType=='insertdate'){var dt=new Date()
dt=$u.d.toStr(dt,'[mm]/[dd]/[yyyy]');this._insertHTML('',''+dt);}else if(lType=='inserttime'){var tt=new Date()
tt=$u.d.toStr(tt,'[t:h]:[t:m][t:am]');this._insertHTML('',''+tt);}else if(lType=='inserttable'){data=data.split(',');data[0]=$u.s.toNum(data[0]);data[1]=$u.s.toNum(data[1]);var tableHTML=new Array();for(var i=0;i<data[1];i++){tableHTML.push(' <tr>');for(var j=0;j<data[0];j++){tableHTML.push('  <td>&nbsp;</td>');}
tableHTML.push(' </tr>');}
this._insertHTML('table',tableHTML.join('\n'));}else if(lType=='inserttablecolumn'){var ele=this._getSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var cellIndx=ele.cellIndex;if(data!=null){if(data.toLowerCase()=='after')cellIndx=cellIndx+1;}
while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;for(var i=0;i<ele.rows.length;i++){ele.rows[i].insertCell(cellIndx);ele.rows[i].cells[cellIndx].innerHTML='&nbsp;';}}else if(lType=='inserttablerow'){var ele=this._getSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var rowIndx=ele.parentNode.rowIndex;if(data!=null){if(data.toLowerCase()=='after')rowIndx=rowIndx+1;}
while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;var totalCells=0;for(var i=0;i<ele.rows.length;i++)totalCells=Math.max(totalCells,ele.rows[i].cells.length);ele.insertRow(rowIndx);for(var i=0;i<totalCells;i++){ele.rows[rowIndx].insertCell(i);ele.rows[rowIndx].cells[i].innerHTML='&nbsp;';}}else if(lType=='deletetablecolumn'){var ele=this._getSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var cellIndx=ele.cellIndex;while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;for(var i=0;i<ele.rows.length;i++){ele.rows[i].deleteCell(cellIndx);}}else if(lType=='deletetablerow'){var ele=this._getSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var rowIndx=ele.parentNode.rowIndex;while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;ele.deleteRow(rowIndx);}else if(lType=='setclassname'){var ele=this._getSelElement();if(ele.tagName.toLowerCase()!='body')ele.className=data;}else if(lType=='cut'||lType=='copy'||lType=='paste'){if(navigator.userAgent.toLowerCase().match('firefox')){alert('Firefox does not support '+lType+'. Use keyboard shortcut to '+lType+'.');}else this._eDoc.execCommand(type,false,data);}else{if(document.all&&navigator.appName!='Opera'){var range=this._eDoc.selection.createRange();range.expand('character');var range2=this._eDoc.selection.createRange();range2.expand('textedit');var node=range2.parentElement();while(node.tagName.toLowerCase()!='body')node=node.parentNode;if(node.innerHTML==this._eDoc.body.innerHTML){if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}}else{if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}}
this._getState();this.focus();},bold:function(){this.command('bold');return true;},italic:function(){this.command('italic');return true;},underline:function(){this.command('underline');return true;},toggleDesignMode:function(){var show=true;if(typeof arguments[0]!='undefined'){if(arguments[0].toLowerCase()=='code'||arguments[0].toLowerCase()=='textarea')show=false;if((this._iEle.style.display!='none'&&show)||(this._iEle.style.display=='none'&&!show))return false;}else{if(this._iEle.style.display!='none')show=false;}
if(show){if(this._tEle.value!=this.getHTML()){this.setHTML(this._tEle.value);}
this._iEle.style.display='';this._tEle.style.display='none';}else{this._tEle.value=this.getHTML();this._iEle.style.display='none';this._tEle.style.display='';}},getHTML:function(){var html=String(this._eDoc.body.innerHTML);html=html.replace(RegExp('\r','g'),'');html=html.replace(RegExp('\<p','gi'),'<div');html=html.replace(RegExp('\</p\>','gi'),'</div>');return html;},setHTML:function(html){this._eDoc.body.innerHTML=html;this._tEle.value=html
if(document.all&&navigator.appName!='Opera'&&this._iEle.style.display!='none'){this._iEle.style.display='none';this._iEle.style.display='';}},focus:function(){if(document.all&&navigator.appName!='Opera'){this._iEle.style.visibility='hidden';this._iEle.style.overflow='hidden';this._iEle.style.visibility='';this._iEle.style.overflow='';}
this._iEle.contentWindow.focus();},_keyDown:function(e){var keyCode=e.charCode||e.keyCode;if(keyCode==9){var isList=false;var ele=this._getSelElement();while(ele.tagName.toLowerCase()!='body'){if(ele.tagName.toLowerCase()=='li'){isList=true;break;}
ele=ele.parentNode;}
$e.preventDefault(e);if(isList){if(e.shiftKey)this.command('outdent');else this.command('indent');}else if(!e.shiftKey)this._insertHTML('','&nbsp;&nbsp;&nbsp;&nbsp;');}},_getState:function(e){if(document.all&&navigator.appName!='Opera'){}
if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();var range=selection.getRangeAt(0);var node=range.commonAncestorContainer;if(typeof node.tagName!='undefined')if(node.tagName.toLowerCase()=='html')return false;}
var oldState=$u.o.toJSON(this.state);this.state.bold=this._eDoc.queryCommandState('bold');this.state.underline=this._eDoc.queryCommandState('underline');this.state.italic=this._eDoc.queryCommandState('italic');this.state.strikeThrough=this._eDoc.queryCommandState('strikethrough');this.state.justifyLeft=this._eDoc.queryCommandState('justifyLeft');this.state.justifyCenter=this._eDoc.queryCommandState('justifyCenter');this.state.justifyRight=this._eDoc.queryCommandState('justifyRight');this.state.justifyFull=this._eDoc.queryCommandState('justifyFull');if(!this.state.justifyLeft&&!this.state.justifyCenter&&!this.state.justifyRight&&!this.state.justifyFull)this.state.justifyLeft=true;this.state.fontName=String(this._eDoc.queryCommandValue('fontName'));this.state.fontSize=String(this._eDoc.queryCommandValue('fontSize'));this.state.unorderedList=this._eDoc.queryCommandState('InsertUnorderedList');this.state.orderedList=this._eDoc.queryCommandState('InsertOrderedList');var newState=$u.o.toJSON(this.state);if(oldState!=newState){if(this.onStateChange.constructor==Function)this.onStateChange();}
this._tEle.value=this.getHTML();if(e){if(e.type.toLowerCase()=='keyup'){var keyCode=e.charCode||e.keyCode;if(!(keyCode>=16&&keyCode<=18)&&!(keyCode>=37&&keyCode<=40)&&keyCode!=27&&!(keyCode>=33&&keyCode<=36)&&keyCode!=45&&!(keyCode>=112&&keyCode<=123)){if(this.onChange.constructor==Function)this.onChange();}}}else if(this.onChange.constructor==Function)this.onChange();},_insertHTML:function(tagName,tagContent){this._iEle.contentWindow.focus();var attrContent=typeof arguments[2]!='undefined'?arguments[2]:{};var range;if(this._eDoc.selection&&this._eDoc.selection.createRange&&navigator.appName!='Opera'){range=this._eDoc.selection.createRange();var range2=this._eDoc.selection.createRange();range2.expand('textedit');if(range2.parentElement().innerHTML==this._eDoc.body.innerHTML){var attrArray=new Array();for(var prop in attrContent){attrArray.push(' ');if(prop=='style'){var sArr=new Array();for(var sProp in attrContent[prop]){sArr.push(sProp+': '+attrContent[prop][sProp]+';');}
sArr=sArr.join(' ');attrArray.push('style="'+sArr+'"');}else attrArray.push(prop+'="'+$u.s.tran(attrContent[prop],'"','\\"')+'"');}
attrArray=attrArray.join('');if(tagName!='')range.pasteHTML('<'+tagName+attrArray+'>'+tagContent+'</'+tagName+'>');else range.pasteHTML(tagContent);}}else if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();range=selection.getRangeAt(0);range.deleteContents();if(tagName!=''){var pEle=this._eDoc.createElement(tagName);pEle.innerHTML=tagContent;for(var prop in attrContent){if(prop=='style')$ss(pEle,attrContent[prop]);else pEle[prop]=attrContent[prop];}
if(this._eDoc.body.innerHTML==''){this._eDoc.body.appendChild(pEle)}else{range.insertNode(pEle);}}else{if(this._eDoc.queryCommandEnabled('inserthtml'))this._eDoc.execCommand('inserthtml',false,tagContent);}}},_getSelElement:function(){var range;if(this._eDoc.selection&&this._eDoc.selection.createRange&&navigator.appName!='Opera'){range=this._eDoc.selection.createRange();range.expand('character');return range.parentElement();}else if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();if(!selection.anchorNode.tagName)return selection.anchorNode.parentNode;else return selection.anchorNode;}
return false;},_getClassNames:function(){var classList=new Array();var fClassList=new Array();var ssRules=0;for(var i=0;i<this._eDoc.styleSheets.length;i++){ssRules=false;if(this._eDoc.styleSheets[i].cssRules)ssRules=this._eDoc.styleSheets[i].cssRules;else if(this._eDoc.styleSheets[i].rules)ssRules=this._eDoc.styleSheets[i].rules;if(ssRules){for(var j=0;j<ssRules.length;j++){classList=classList.concat(String(ssRules[j].selectorText).split(','));}}}
var tSel1=0;for(var i=0;i<classList.length;i++){if(classList[i].indexOf('.')!=-1){tSel1=classList[i].split('.');tSel1.shift();for(var j=0;j<tSel1.length;j++){tSel1[j]=$u.s.tran(tSel1[j],[' ','\n',':'],[' ',' ',' ']);tSel1[j]=$u.s.word(tSel1[j],1,' ');}
fClassList=fClassList.concat(tSel1);}}
fClassList=$u.a.dedup(fClassList);},_focus:function(){clearTimeout(this._blurTO);this._kw.on();},_blur:function(){var classInst=this;this._blurTO=setTimeout(function(){classInst._completeBlur();},100);},_completeBlur:function(){this._kw.off();}}
A5.RichTextEditor=Class.create();A5.RichTextEditor.prototype={initialize:function(ctrlId,settings){if(!$(ctrlId))return false;this.ctrlId=ctrlId;$u.o.assign(settings,{isPopup:false,onSave:0,onEdit:0,onChange:0,defaultLinkedCSS:'',defaultCSS:'',buttonClassName:'',buttonCheckedClassName:'',insertImage:{relativePath:'',styleName:'',titleText:'Insert Image',bodyText:'File:',editWatermarkText:'',editImage:''},insertFile:{relativePath:'',styleName:'',titleText:'Insert File',bodyText:'File:',editWatermarkText:'',editImage:''},popupWindow:{},insertWindow:{}},true);$u.o.assign(settings.popupWindow,{baseCtrlId:this.ctrlId,title:{show:false},header:{show:false},body:{content:{type:'element',elementId:this.ctrlId+'.window'}},footer:{show:false},type:'modal',resize:'both',autoShow:false,autoPosition:false,onResize:function(){var ele=$(this.baseCtrlId+'.HTMLEDITOR');var tEle=$(this.baseCtrlId);if(tEle.style.display=='none'){ele.style.height=(ele.offsetHeight+(AUI.Resize._s.height-AUI.Resize._s.initialHeight))+'px';ele.style.width='100%';tEle.style.height=ele.style.height;tEle.style.width='100%';}else{tEle.style.height=(tEle.offsetHeight+(AUI.Resize._s.height-AUI.Resize._s.initialHeight))+'px';tEle.style.width='100%';ele.style.height=tEle.style.height;ele.style.width='100%';}
ele=$(this.getWindowId('body'));ele.style.height='';if($(this.getWindowId('body-container')).style.width!=''){$(this.baseCtrlId+'.window.body').style.width='';$(this.baseCtrlId+'.window').style.width='';}
return true;}});$u.o.assign(settings.insertWindow,{baseCtrlId:this.ctrlId,title:{html:'Insert',tools:{items:[A5._windowDefaults.title.tools.defaults.close]}},header:{show:false},body:{content:{type:'url',url:'about:blank'}},footer:{show:false},type:'modal',resize:'both',autoShow:false,autoPosition:true});$u.o.assign(this,settings);if(this.isPopup){this._window=new A5.Window(this.popupWindow);}
this._iWindow=new A5.Window(this.insertWindow);$e.add(this._iWindow.getWindowId(),'a5insert',function(e,classInst){classInst._iWindow.hide();var insertType=$ga(this,'a5inserttype');if(insertType=='image'){var imageToInsert=$ga(this,'a5imagetoinsert');classInst._rteObj.command('insertimage',imageToInsert);}else if(insertType=='file'){var fileToInsert=$ga(this,'a5filetoinsert');var fileToInsertShort=fileToInsert.split('/').pop();classInst._rteObj._insertHTML('a',fileToInsertShort,{href:fileToInsert,target:'_blank'});}},this);this._rteObj=new A5.RichTextEdit(this.ctrlId,{onStateChange:function(){if(this.state.bold)$scn(this.ctrlId+'.bold',this.buttonCheckedClassName);else $scn(this.ctrlId+'.bold',this.buttonClassName);if(this.state.italic)$scn(this.ctrlId+'.italic',this.buttonCheckedClassName);else $scn(this.ctrlId+'.italic',this.buttonClassName);if(this.state.underline)$scn(this.ctrlId+'.underline',this.buttonCheckedClassName);else $scn(this.ctrlId+'.underline',this.buttonClassName);if(this.state.justifyLeft)$scn(this.ctrlId+'.justifyLeft',this.buttonCheckedClassName);else $scn(this.ctrlId+'.justifyLeft',this.buttonClassName);if(this.state.justifyCenter)$scn(this.ctrlId+'.justifyCenter',this.buttonCheckedClassName);else $scn(this.ctrlId+'.justifyCenter',this.buttonClassName);if(this.state.justifyRight)$scn(this.ctrlId+'.justifyRight',this.buttonCheckedClassName);else $scn(this.ctrlId+'.justifyRight',this.buttonClassName);if(this.state.justifyFull)$scn(this.ctrlId+'.justifyFull',this.buttonCheckedClassName);else $scn(this.ctrlId+'.justifyFull',this.buttonClassName);if(this.state.unorderedList)$scn(this.ctrlId+'.unorderedList',this.buttonCheckedClassName);else $scn(this.ctrlId+'.unorderedList',this.buttonClassName);if(this.state.orderedList)$scn(this.ctrlId+'.orderedList',this.buttonCheckedClassName);else $scn(this.ctrlId+'.orderedList',this.buttonClassName);if(this.state.fontName=='')$svs(this.ctrlId+'.fontName.value','Font name');else{if(typeof this.state.fontName=='string')$svs(this.ctrlId+'.fontName.value',this.state.fontName);else $svs(this.ctrlId+'.fontName.value','Font name');}
if(this.state.fontSize=='')$svs(this.ctrlId+'.fontSize.value','Font size');else{var val=$u.s.toNum(''+this.state.fontSize);var entry=['Font size','1 (8pt)','2 (10pt)','3 (12pt)','4 (14pt)','5 (18pt)','6 (24pt)','7 (36pt)'];if(val>entry.length)val=0;$svs(this.ctrlId+'.fontSize.value',entry[val]);}
mEle=$(this.ctrlId+'.format.menu');if(mEle){if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._formatMenuHide);}}
var mEle=$(this.ctrlId+'.fontName.menu');if(mEle){if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._fontNameMenuHide);}}
mEle=$(this.ctrlId+'.fontSize.menu');if(mEle){if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._fontNameMenuHide);}}
mEle=$(this.ctrlId+'.colorMenu');if(mEle){if(mEle.style.display!='none'){mEle.style.display='none';$(this.ctrlId+'.colorMenu.noColor').style.display='none';$e.remove(document.body,'mouseup',this._fontNameMenuHide);}}
mEle=$(this.ctrlId+'.tableMenu');if(mEle){if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._fontNameMenuHide);}}},onChange:this.onChange,defaultLinkedCSS:this.defaultLinkedCSS,defaultCSS:this.defaultCSS,buttonClassName:this.buttonClassName,buttonCheckedClassName:this.buttonCheckedClassName});$e.add(this.ctrlId+'.format','click',this._formatMenuShow,this,true);$e.add(this.ctrlId+'.fontName','click',this._fontNameMenuShow,this,true);$e.add(this.ctrlId+'.fontSize','click',this._fontSizeMenuShow,this,true);$e.add(this.ctrlId+'.foreColor','click',this._foreColorMenuShow,this,true);$e.add(this.ctrlId+'.hiliteColor','click',this._hiliteColorMenuShow,this,true);$e.add(this.ctrlId+'.backColor','click',this._backColorMenuShow,this,true);$e.add(this.ctrlId+'.table','click',this._tableMenuShow,this,true);if(this.isPopup){this._window.hide();}},command:function(type){var data=typeof(arguments[1]!='undefined')?arguments[1]:null;this._rteObj.command(type,data);},edit:function(tCtrlId){var ele=$(tCtrlId);this._rteObj.setHTML($gvs(ele));var tDCtrlId=tCtrlId;if(ele.style.display=='none'&&$(tDCtrlId+'.DISPLAY'))tDCtrlId=tDCtrlId+'.DISPLAY';this._window.show('popup',tDCtrlId);this._tCtrlId=tCtrlId;if(this.onEdit.constructor==Function)this.onEdit();this._rteObj.focus();},save:function(){$svs(this._tCtrlId,this._rteObj.getHTML());if(this.onSave.constructor==Function)this.onSave();this.hide();},resize:function(nWidth,nHeight){var ele=$(this.ctrlId+'.HTMLEDITOR');if(typeof nWidth=='number')nWidth=nWidth+'px';if(typeof nHeight=='number')nHeight=nHeight+'px';ele.style.width=nWidth;ele.style.height=nHeight;ele=$(this.ctrlId);ele.style.width=nWidth;ele.style.height=nHeight;},hide:function(){this._window.hide();},toggleDesignMode:function(){this._rteObj.toggleDesignMode(arguments[0]);},insert:function(insertType){if(insertType=='image'){this._iWindow.setTitle(this.insertImage.titleText);this._iWindow.body.content.url='__a5FileUploadMasterPage.a5w?fileUploadUrl=__a5HTMLEditorFileInsertPage.a5w&fileUploadAutoUpload=true&fileUploadText='+this.insertImage.bodyText+'&fileSelectImg='+this.insertImage.editImage+'&fileBoxWaterMark='+this.insertImage.editWatermarkText+'&stylesheetName='+this.insertImage.styleName+'&insertType=image&relativePath='+this.insertImage.relativePath+'&windowID='+this._iWindow.getWindowId();}else{this._iWindow.setTitle(this.insertFile.titleText);this._iWindow.body.content.url='__a5FileUploadMasterPage.a5w?fileUploadUrl=__a5HTMLEditorFileInsertPage.a5w&fileUploadAutoUpload=true&fileUploadText='+this.insertFile.bodyText+'&fileSelectImg='+this.insertFile.editImage+'&fileBoxWaterMark='+this.insertFile.editWatermarkText+'&stylesheetName='+this.insertFile.styleName+'&insertType=file&relativePath='+this.insertFile.relativePath+'&windowID='+this._iWindow.getWindowId();}
this._iWindow.refresh();this._iWindow.show();},_fontNameMenuShow:function(e){$e.stopEvent(e);var ele=$(this.ctrlId+'.fontName');var mEle=$(this.ctrlId+'.fontName.menu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._fontNameMenuHide,this,true);return false;},_fontNameMenuHide:function(){var mEle=$(this.ctrlId+'.fontName.menu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._fontNameMenuHide);}},_fontSizeMenuShow:function(e){$e.stopEvent(e);var ele=$(this.ctrlId+'.fontSize');var mEle=$(this.ctrlId+'.fontSize.menu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._fontSizeMenuHide,this,true);return false;},_fontSizeMenuHide:function(){var mEle=$(this.ctrlId+'.fontSize.menu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._fontSizeMenuHide);}},_foreColorMenuShow:function(e){$e.stopEvent(e);this._colorTarget='foreColor';var ele=$(this.ctrlId+'.foreColor');var mEle=$(this.ctrlId+'.colorMenu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._foreColorMenuHide,this,true);return false;},_foreColorMenuHide:function(){var mEle=$(this.ctrlId+'.colorMenu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._foreColorMenuHide);}},_hiliteColorMenuShow:function(e){$e.stopEvent(e);this._colorTarget='hilitecolor';var ele=$(this.ctrlId+'.hiliteColor');var mEle=$(this.ctrlId+'.colorMenu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._hiliteColorMenuHide,this,true);return false;},_hiliteColorMenuHide:function(){var mEle=$(this.ctrlId+'.colorMenu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._hiliteColorMenuHide);}},_backColorMenuShow:function(e){$e.stopEvent(e);this._colorTarget='backColor';var ele=$(this.ctrlId+'.backColor');var mEle=$(this.ctrlId+'.colorMenu');$(this.ctrlId+'.colorMenu.noColor').style.display='';mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._backColorMenuHide,this,true);return false;},_backColorMenuHide:function(){var mEle=$(this.ctrlId+'.colorMenu');if(mEle.style.display!='none'){mEle.style.display='none';$(this.ctrlId+'.colorMenu.noColor').style.display='none';$e.remove(document.body,'mouseup',this._backColorMenuHide);}},_tableMenuShow:function(e){$e.stopEvent(e);var ele=$(this.ctrlId+'.table');var mEle=$(this.ctrlId+'.tableMenu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._tableMenuHide,this,true);return false;},_tableMenuHide:function(){var mEle=$(this.ctrlId+'.tableMenu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._tableMenuHide);}},_tableMenuSizeHighlight:function(col,row){for(var i=1;i<=10;i++){for(var j=1;j<=8;j++){if(i<=col&&j<=row){$(this.ctrlId+'.tbl.'+i+'x'+j).firstChild.style.background='#ccc';}else{$(this.ctrlId+'.tbl.'+i+'x'+j).firstChild.style.background='white';}}}},_formatMenuShow:function(e){$e.stopEvent(e);var ele=$(this.ctrlId+'.format');var mEle=$(this.ctrlId+'.format.menu');mEle.style.display='';$po(mEle,ele,'dropdown');$e.add(document.body,'mouseup',this._formatMenuHide,this,true);return false;},_formatMenuHide:function(){var mEle=$(this.ctrlId+'.format.menu');if(mEle.style.display!='none'){mEle.style.display='none';$e.remove(document.body,'mouseup',this._formatMenuHide);}}}
A5.windows={_w:{},defaultContainer:'',get:function(targ){if(typeof targ=='number')return A5.windows._w[''+targ];},getFromElement:function(targ){var ele=$(targ);if(ele){while((ele.getAttribute('A5WindowType')==''||ele.getAttribute('A5WindowType')==null)&&ele.tagName.toLowerCase()!='body')ele=ele.parentNode;if(String(ele.getAttribute('A5WindowType'))!=''){targ=ele.id.substr(5);return A5.windows._w[targ];}}},getTop:function(){var max=0;var topIndx=-1;for(var prop in A5.windows._w){if(!A5.windows._w[prop].hidden){if(A5.windows._w[prop]._zIndex>max){max=A5.windows._w[prop]._zIndex;topIndx=A5.windows._w[prop]._windowCurIndx;}}}
if(topIndx!=-1)return A5.windows._w[''+topIndx];},_hidePopupsAbove:function(z){for(var prop in A5.windows._w){if(!A5.windows._w[prop].hidden){if((A5.windows._w[prop].type=='popup'||A5.windows._w[prop].type=='modal-popup')&&A5.windows._w[prop]._zIndex>=z)A5.windows._w[prop].hide();}}},_hidePopups:function(){var winChain=[arguments[0]];if(typeof arguments[0]=='number')winChain=A5.windows._w[''+arguments[0]]._winChain;for(var prop in A5.windows._w){if(!A5.windows._w[prop].hidden){if((A5.windows._w[prop].type=='popup'||A5.windows._w[prop].type=='modal-popup')&&$u.a.find(winChain,A5.windows._w[prop]._windowCurIndx)==-1)A5.windows._w[prop].hide();}}}}
$e.add(window,'unload',function(){for(var prop in A5.windows._w)delete A5.windows._w[prop];});A5.Window=Class.create();A5.Window.prototype={initialize:function(settings){this._windowId='A5dlg'+this._windowIndx[0];this._windowCurIndx=this._windowIndx[0];this._zIndex=500+this._windowCurIndx;this._isMaximized=false;$u.o.assign(this,{container:A5.windows.defaultContainer,type:'',theme:'',override:'base',autoPosition:true,autoShow:false,resize:'none',className:'',outerWrapClassName:'',innerWrapClassName:'',activeClassName:'',adjustmentClassName:'',style:0,width:'',height:'',lockUIClassName:'',title:{html:'',location:'',direction:'',className:'',style:0,show:true,tools:{inset:'2px',verticalInset:'',className:'',style:0,items:[]}},header:{className:'',style:0,show:false,html:''},tbar:{className:'',style:0,show:false,html:''},body:{className:'',style:0,scroll:false,content:{type:'',elementId:'',html:'',url:'',immediate:false}},buttons:{className:'',style:0,show:false,items:[]},bbar:{className:'',style:0,show:false,html:''},footer:{className:'',style:0,show:false,html:''},resizer:{className:'',style:0,thumbImage:''},pointer:{show:false,location:'auto',size:10,upClassName:'',leftClassName:'',downClassName:'',rightClassName:''},animation:{disabled:false,show:{type:'',duration:500},hide:{type:'',duration:500}},_defaultTools:{},disableMove:false,disableResize:false,onInitialize:0,onBeforeShow:0,onShow:0,onBeforeHide:0,onHide:0,onFocus:0,onMove:0,onResize:0});if(typeof A5._windowDefaults!='undefined')$u.o.assign(this,A5._windowDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'window');$u.o.assign(this,settings);A5.overrides.assign(this,'window',this.override);if(this.type==''){this.type='modeless';}else this.type=this.type.toLowerCase();if(this.type!='modal'&&this.type!='popup'&&this.type!='modal-popup')this.type='modeless';this._maxDlgZIndx[0]=this._zIndex;this.resize=this.resize.toLowerCase();var resizeRegEx=RegExp('[^A-z]');if(this.resize.split(resizeRegEx).join('')=='widthheight'||this.resize.split(resizeRegEx).join('')=='heightwidth')this.resize='both';else if(this.resize!='height'&&this.resize!='width'&&this.resize!='both')this.resize='none';this.title.location=this.title.location.toLowerCase();if(this.title.location!='bottom')this.title.location=='top';this.body.content.type=this.body.content.type.toLowerCase();if(this.body.content.type!='element'&&this.body.content.type!='url'&&this.body.content.type!='blank')this.body.content.type='static';if(typeof this.autoPosition=='boolean'){if(this.autoPosition)this.autoPosition='center';else this.autoPosition='none';}else if(this.autoPosition!='center'&&this.autoPosition!='none'&&this.autoPosition!='in-view')this.autoPosition='center';if((this.animation.show.type==''||this.animation.show.type.toLowerCase()=='none')&&(this.animation.hide.type==''||this.animation.hide.type.toLowerCase()=='none'))this.animation.disabled=true;this.hidden=true;var HTMLDlgMainEle=document.createElement('div');HTMLDlgMainEle.id=this._windowId;$sa(HTMLDlgMainEle,'A5WindowIndex',this._windowCurIndx);$sa(HTMLDlgMainEle,'A5WindowType',this.type);$sa(HTMLDlgMainEle,'A5WindowBodyType',$if(this.body.content.type=='url','iframe','div'));$sa(HTMLDlgMainEle,'A5WindowActiveClassName',this.activeClassName);$sa(HTMLDlgMainEle,'A5WindowAdjustClassName',this.adjustmentClassName);HTMLDlgMainEle.className=this.className;if(typeof this.style=='object'||typeof this.style=='string')$ss(HTMLDlgMainEle,this.style);if(this.animation.disabled){if(document.all&&navigator.appName!='Opera')HTMLDlgMainEle.style.display='none';else HTMLDlgMainEle.style.visibility='hidden';}else HTMLDlgMainEle.style.display='none';HTMLDlgMainEle.style.position='absolute';HTMLDlgMainEle.style.top='-5000px';HTMLDlgMainEle.style.left='0px';HTMLDlgMainEle.style.padding='0px';HTMLDlgMainEle.style.zIndex=''+this._zIndex;var css=$gs(HTMLDlgMainEle);if(css.search('box-sizing:')==-1)$ss(HTMLDlgMainEle,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLDlgEle=document.createElement('div');HTMLDlgEle.id=this._windowId+'.POINTER';$ss(HTMLDlgEle,'display: none; position: absolute;');HTMLDlgMainEle.appendChild(HTMLDlgEle);HTMLDlgEle=document.createElement('div');HTMLDlgEle.id=this._windowId+'.INNER';HTMLDlgEle.className=this.outerWrapClassName;$ss(HTMLDlgEle,' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');if(document.all)HTMLDlgEle.style.width='100%';HTMLDlgMainEle.appendChild(HTMLDlgEle);var HTMLDlgTitleEle=document.createElement('div');HTMLDlgTitleEle.id=this._windowId+'.TITLE';HTMLDlgTitleEle.className=this.title.className;if(typeof this.title.style=='object'||typeof this.title.style=='string')$ss(HTMLDlgTitleEle,this.title.style);if(!this.title.show)HTMLDlgTitleEle.style.display='none';$sa(HTMLDlgTitleEle,'A5WindowDisplayElement',$if(this.title.show,'true','false'));if(this.resize=='both')$e.add(HTMLDlgTitleEle,A5.d.evnts.dblClick,this.toggleMaximize,this,true,this._windowId+'.EVENTS');if(this.title.location!='bottom')HTMLDlgEle.appendChild(HTMLDlgTitleEle);var HTMLDlgTmplEle2=document.createElement('span');HTMLDlgTmplEle2.id=this._windowId+'.TITLE.TEXT';HTMLDlgTitleEle.appendChild(HTMLDlgTmplEle2);HTMLDlgTmplEle2=document.createElement('div');HTMLDlgTmplEle2.id=this._windowId+'.TITLE.TOOLS';HTMLDlgTmplEle2.className=this.title.tools.className;if(typeof this.title.tools.style=='object'||typeof this.title.tools.style=='string')$ss(HTMLDlgTmplEle2,this.title.tools.style);HTMLDlgTmplEle2.style.position='absolute';if(this.title.direction.toLowerCase()=='rtl'){HTMLDlgTitleEle.style.textAlign='right';HTMLDlgTmplEle2.style.left=this.title.tools.inset;}else HTMLDlgTmplEle2.style.right=this.title.tools.inset;if(this.title.location=='bottom')HTMLDlgTmplEle2.style.bottom=this.title.tools.verticalInset;else HTMLDlgTmplEle2.style.top=this.title.tools.verticalInset;var HTMLBEle=0;$e.add(HTMLDlgTmplEle2,'mousedown',function(e){$e.stopEvent(e);return false;},false,this._windowId+'.EVENTS');$e.add(HTMLDlgTmplEle2,'touchstart',function(e){$e.stopEvent(e);return false;},false,this._windowId+'.EVENTS');HTMLDlgTitleEle.insertBefore(HTMLDlgTmplEle2,HTMLDlgTitleEle.firstChild);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.HEADER';HTMLDlgTmplEle.className=this.header.className;if(typeof this.header.style=='object'||typeof this.header.style=='string')$ss(HTMLDlgTmplEle,this.header.style);if(!this.header.show)HTMLDlgTmplEle.style.display='none';$sa(HTMLDlgTmplEle,'A5WindowDisplayElement',$if(this.header.show,'true','false'));HTMLDlgTmplEle.innerHTML=this.header.html;HTMLDlgEle.appendChild(HTMLDlgTmplEle);var HTMLDlgBodyContEle=document.createElement('div');HTMLDlgBodyContEle.id=this._windowId+'.BODYCONTAINER';HTMLDlgBodyContEle.className=this.innerWrapClassName;HTMLDlgEle.appendChild(HTMLDlgBodyContEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.TBAR';HTMLDlgTmplEle.className=this.tbar.className;if(typeof this.tbar.style=='object'||typeof this.tbar.style=='string')$ss(HTMLDlgTmplEle,this.tbar.style);if(!this.tbar.show)HTMLDlgTmplEle.style.display='none';$sa(HTMLDlgTmplEle,'A5WindowDisplayElement',$if(this.tbar.show,'true','false'));HTMLDlgTmplEle.innerHTML=this.tbar.html;HTMLDlgBodyContEle.appendChild(HTMLDlgTmplEle);if(this.body.content.type=='url'){HTMLDlgTmplEle=document.createElement('iframe');HTMLDlgTmplEle.frameBorder='0';HTMLDlgTmplEle.border='0';}else HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.BODY';HTMLDlgTmplEle.className=this.body.className;if(typeof this.body.style=='object'||typeof this.body.style=='string')$ss(HTMLDlgTmplEle,this.body.style);HTMLDlgTmplEle.style.position='relative';if(this.body.scroll&&this.body.content.type!='url'){if(typeof this.body.scroll=='object'){if(typeof this.body.scroll.theme=='undefined')this.body.scroll.theme=this.theme;A5.u.drag.add(HTMLDlgTmplEle,'scroll',this.body.scroll);}else A5.u.drag.add(HTMLDlgTmplEle,'scroll',{axis:'both',theme:this.theme});}
if(this.body.content.type=='url'){HTMLDlgTmplEle.style.padding='0px';HTMLDlgTmplEle.style.width='100%';if(!document.all)HTMLDlgTmplEle.style.marginBottom='-2px';}
var css=$gs(HTMLDlgTmplEle);if(css.search('box-sizing:')==-1)$ss(HTMLDlgTmplEle,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLDlgBodyContEle.appendChild(HTMLDlgTmplEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.BUTTONS';HTMLDlgTmplEle.className=this.buttons.className;if(typeof this.buttons.style=='object'||typeof this.buttons.style=='string')$ss(HTMLDlgTmplEle,this.buttons.style);if(this.buttons.items.length>0&&!this.buttons.show)this.buttons.show=true;if(!this.buttons.show)HTMLDlgTmplEle.style.display='none';$sa(HTMLDlgTmplEle,'A5WindowDisplayElement',$if(this.buttons.show,'true','false'));HTMLDlgBodyContEle.appendChild(HTMLDlgTmplEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.BBAR';HTMLDlgTmplEle.className=this.bbar.className;if(typeof this.bbar.style=='object'||typeof this.bbar.style=='string')$ss(HTMLDlgTmplEle,this.bbar.style);if(!this.bbar.show)HTMLDlgTmplEle.style.display='none';$sa(HTMLDlgTmplEle,'A5WindowDisplayElement',$if(this.bbar.show,'true','false'));HTMLDlgTmplEle.innerHTML=this.bbar.html;HTMLDlgBodyContEle.appendChild(HTMLDlgTmplEle);HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.FOOTER';HTMLDlgTmplEle.className=this.footer.className;if(typeof this.footer.style=='object'||typeof this.footer.style=='string')$ss(HTMLDlgTmplEle,this.footer.style);if(!this.footer.show)HTMLDlgTmplEle.style.display='none';$sa(HTMLDlgTmplEle,'A5WindowDisplayElement',$if(this.footer.show,'true','false'));HTMLDlgTmplEle.innerHTML=this.footer.html;HTMLDlgEle.appendChild(HTMLDlgTmplEle);if(this.title.location=='bottom')HTMLDlgEle.appendChild(HTMLDlgTitleEle);if(this.resize!='none'){HTMLDlgTmplEle=document.createElement('div');HTMLDlgTmplEle.id=this._windowId+'.RESIZER';HTMLDlgTmplEle.className=this.resizer.className;if(typeof this.resizer.style=='object'||typeof this.resizer.style=='string')$ss(HTMLDlgTmplEle,this.resizer.style);if(this.resizer.thumbImage!=''&&(this.resize=='width'||this.resize=='both')){var HTMLIEle=A5.u.icon.element(this.resizer.thumbImage);HTMLIEle.id=this._windowId+'.RESIZERTHUMB';HTMLIEle.style.position='absolute';HTMLIEle.style.right='0px';HTMLIEle.style.bottom='0px';var resizeType='br';HTMLIEle.style.cursor='se-resize';if(this.resize=='width'){resizeType='r';HTMLIEle.style.cursor='e-resize';}
HTMLDlgTmplEle.appendChild(HTMLIEle);AUI.Resize.create(HTMLIEle,{resizeElementId:this._windowId,type:resizeType,minHeight:55,onResizeStart:function(e,sObj){var ele=$(this.resizeElementId+'.BODYCONTAINER');sObj.bodyWidth=ele.offsetWidth;var ele=$(this.resizeElementId+'.BODY');if(sObj.type!='r')sObj.bodyHeight=ele.offsetHeight;else sObj.bodyHeight=ele.style.height;ele=$(this.resizeElementId);var hOff=Math.min(4,Math.max(ele.offsetHeight-ele.clientHeight,0));var wOff=Math.min(4,Math.max(ele.offsetWidth-ele.clientWidth,0));ele.style.width=(ele.offsetWidth-wOff)+'px';ele.style.height=(ele.offsetHeight-hOff)+'px';ele.style.padding='0px';$e.execute(ele,'mousedown');if(document.all&&navigator.appName!='Opera')ele.lastChild.style.display='none';else ele.lastChild.style.visibility='hidden';$(this.resizeElementId+'.TITLE.TOOLS').style.display='none';$(this.resizeElementId+'.RESIZERTHUMB').style.display='none';var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$acn(ele,adjClassName);},onResizeEnd:function(e,sObj){var bcEle=$(this.resizeElementId+'.BODYCONTAINER');bcEle.style.width=(sObj.bodyWidth+(sObj.width-sObj.initialWidth))+'px';var ele=$(this.resizeElementId+'.BODY');if(document.all&&navigator.appName!='Opera')$(this.resizeElementId).lastChild.style.display='';else $(this.resizeElementId).lastChild.style.visibility='';if(ele.tagName.toLowerCase()=='iframe'){var sizeAdj=(ele.offsetWidth-ele.clientWidth)+(bcEle.offsetWidth-bcEle.clientWidth);ele.style.width=(bcEle.offsetWidth-sizeAdj)+'px';}
if(sObj.type!='r')ele.style.height=(sObj.bodyHeight+(sObj.height-sObj.initialHeight))+'px';else ele.style.height=sObj.bodyHeight;$(this.resizeElementId+'.HEADER').style.width=ele.style.width;$(this.resizeElementId+'.FOOTER').style.width=ele.style.width;$e.execute(ele,'a5resize');ele=$(this.resizeElementId);ele.style.width='';ele.style.height='';ele.style.padding='';var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$rcn(ele,adjClassName);$(this.resizeElementId+'.TITLE.TOOLS').style.display='';$(this.resizeElementId+'.RESIZERTHUMB').style.display='';$e.execute(ele,'resizeComplete');}});}
HTMLDlgEle.appendChild(HTMLDlgTmplEle);if(this.resize=='height'||this.resize=='both'){HTMLDlgTmplEle.style.cursor='s-resize';AUI.Resize.create(HTMLDlgTmplEle,{resizeElementId:this._windowId,type:'b',minHeight:50,onResizeStart:function(e,sObj){var ele=$(this.resizeElementId);var hOff=Math.min(4,Math.max(ele.offsetHeight-ele.clientHeight,0));var wOff=Math.min(4,Math.max(ele.offsetWidth-ele.clientWidth,0));ele.style.width=(ele.offsetWidth-wOff)+'px';ele.style.height=(ele.offsetHeight-hOff)+'px';ele.style.padding='0px';$e.execute(ele,'mousedown');sObj.bodyHeight=$(this.resizeElementId+'.BODY').offsetHeight;if(document.all&&navigator.appName!='Opera')ele.lastChild.style.display='none';else ele.lastChild.style.visibility='hidden';$(this.resizeElementId+'.TITLE.TOOLS').style.display='none';var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$acn(ele,adjClassName);},onResizeEnd:function(e,sObj){var ele=$(this.resizeElementId);if(document.all&&navigator.appName!='Opera')ele.lastChild.style.display='';else ele.lastChild.style.visibility='';$(this.resizeElementId+'.TITLE.TOOLS').style.display='';ele.style.width='';ele.style.height='';ele.style.padding='';var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$rcn(ele,adjClassName);var eleB=$(this.resizeElementId+'.BODY');eleB.style.height=(sObj.bodyHeight+(sObj.height-sObj.initialHeight))+'px';$e.execute(eleB,'a5resize');$e.execute(ele,'resizeComplete');}});}}
this._ignoreMouse=false;$e.add(HTMLDlgMainEle,'mousedown',function(e){$e.stopPropagation(e);if(!this._ignoreMouse){A5.windows._hidePopups(this._windowCurIndx);if(!(this.type=='modal'||this.type=='modal-popup'))this._moveToFront();}},this,true,this._windowId+'.EVENTS');$e.add(HTMLDlgMainEle,'touchstart',function(e){$e.stopPropagation(e);A5.windows._hidePopups(this._windowCurIndx);if(!(this.type=='modal'||this.type=='modal-popup'))this._moveToFront();this._ignoreMouse=true;setTimeout(Function('A5.windows._w[\''+this._windowCurIndx+'\']._ignoreMouse = false;'),500);},this,true,this._windowId+'.EVENTS');if(this.onResize.constructor==Function){$e.add(HTMLDlgMainEle,'resizeComplete',function(){this.onResize();},this,true,this._windowId+'.EVENTS');}
if(this.onMove.constructor==Function){$e.add(HTMLDlgMainEle,'dragComplete',function(){this.onMove();},this,true,this._windowId+'.EVENTS');}
if(this.container!='')$(this.container).appendChild(HTMLDlgMainEle);else if($('AUILockUIPage'))document.body.insertBefore(HTMLDlgMainEle,$('AUILockUIPage').nextSibling);else document.body.insertBefore(HTMLDlgMainEle,document.body.firstChild);this._lockIndex=-1;if(this.body.content.type=='element'){if($(this.body.content.elementId)){var contentEle=$(this.body.content.elementId);if($(this._windowId+'.BODY.SCROLLWRAPPER'))$(this._windowId+'.BODY.SCROLLWRAPPER').appendChild(contentEle);else $(this._windowId+'.BODY').appendChild(contentEle);contentEle.style.display='';delete contentEle;}}
this._tools=new Array();for(var i=0;i<this.title.tools.items.length;i++){this.addTool(this.title.tools.items[i]);}
this._buttons=new Array();for(var i=0;i<this.buttons.items.length;i++){this.addButton(this.buttons.items[i]);}
AUI.Drag.create($(this._windowId+'.TITLE'),{coord:'custom',dragElementId:this._windowId,onDragStart:function(){var ele=$(this.dragElementId);$e.execute(ele,'mousedown');for(var i=0;i<ele.lastChild.childNodes.length;i++){if(typeof ele.lastChild.childNodes[i].tagName!='undefined'){if(ele.lastChild.childNodes[i].id!=this.dragElementId+'.TITLE')ele.lastChild.childNodes[i].style.visibility='hidden';}}
var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$acn(ele,adjClassName);},onDragEnd:function(){var ele=$(this.dragElementId);for(var i=0;i<ele.lastChild.childNodes.length;i++){if(typeof ele.lastChild.childNodes[i].tagName!='undefined')ele.lastChild.childNodes[i].style.visibility='';}
var adjClassName=$ga(ele,'A5WindowAdjustClassName');if(adjClassName!='')$rcn(ele,adjClassName);$e.execute(ele,'dragComplete');}});this.setMoveDisabled(this.disableMove);this.setResizeDisabled(this.disableResize);A5.windows._w[''+this._windowIndx[0]]=this;this._a={};this._winChain=[this._windowCurIndx];if(this.type=='popup')this._popupHide=function(){this.hide();};this._windowIndx[0]=this._windowIndx[0]+1;this._initShow=false;this._initCSSAnim=false;this._dock='';this._oldTop='0px';this._resize();this.setTitle(this.title.html);if(this.body.content.immediate)this.refresh();if(this.autoShow)this.show();},destroy:function(){$e.removeGroup(this._windowId+'.EVENTS');AUI.Resize.destroy($(this._windowId+'.RESIZERTHUMB'));AUI.Resize.destroy($(this._windowId+'.RESIZER'));AUI.Drag.destroy($(this._windowId+'.TITLE'));var wEle=$(this._windowId);if(wEle){var pEle=wEle.parentNode;pEle.removeChild(wEle);}},show:function(){if(window.event){if(window.event.type=='touchend'||window.event.type=='touchstart'){$e.preventDefault(window.event);}}
if(this.hidden){if(this.onBeforeShow.constructor==Function){var result=this.onBeforeShow.call(this);if(typeof result!='boolean')result=true;if(!result)return false;}
var wEle=$(this._windowId);wEle.style.top=this._oldTop;if(this.activeClassName!='')$acn(wEle,this.activeClassName);this._moveToFront();var pRegex=/^[0-9]+%$/;if(this.animation.disabled){if(document.all&&navigator.appName!='Opera')wEle.style.display='';else wEle.style.visibility='';if(pRegex.test(this.width)||pRegex.test(this.height))this._stretch();if(typeof arguments[0]!='undefined')this.setPosition.apply(this,arguments);else if(this.autoPosition!='none'&&this._initShow)this.setPosition(this.autoPosition);else if(!this._initShow)this.setPosition('center');if(!this._initShow&&this.onInitialize.constructor==Function)this.onInitialize.call(this);}else{wEle.style.display='';wEle.style.visibility='hidden';if(pRegex.test(this.width)||pRegex.test(this.height))this._stretch();if(typeof arguments[0]!='undefined')this.setPosition.apply(this,arguments);else if(this.autoPosition!='none'&&this._initShow)this.setPosition(this.autoPosition);else if(!this._initShow)this.setPosition('center');if(!this._initShow&&this.onInitialize.constructor==Function)this.onInitialize.call(this);var animType=this.animation.show.type;if(animType.substr(0,3)=='css'&&A5.u.css.supportsTransition){var anim='';var dur=this.animation.show.duration;if(typeof dur!='number')dur=500;if(animType.substr(0,9)=='css-slide'){if(animType=='css-slide'){if(this._dock=='b')animType='css-slide-bottom';else if(this._dock=='l')animType='css-slide-left';else if(this._dock=='r')animType='css-slide-right';else animType='css-slide-top';}
var loc=AUI.u.getVPScroll();var vpSize=AUI.u.getVPSize();loc.x=wEle.offsetLeft-loc.x;loc.y=wEle.offsetTop-loc.y;if(animType=='css-slide-bottom')wEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px',((vpSize.height-loc.y)+wEle.offsetHeight)+'px');else if(animType=='css-slide-left')wEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('-'+(loc.x+wEle.offsetWidth)+'px','0px');else if(animType=='css-slide-right')wEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D(((vpSize.width-loc.x)+wEle.offsetWidth)+'px','0px');else wEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px','-'+(loc.y+wEle.offsetHeight)+'px');anim=['var wEle = $(\''+this._windowId+'\');','wEle.style.display = \'\';','wEle.style[\''+A5.u.css.properties.transitionDOM+'\'] = \''+A5.u.css.properties.transform+' '+dur+'ms ease-in-out\';','wEle.style[\''+A5.u.css.properties.transformDOM+'\'] = A5.u.css.transform2D(0,0);'].join('\n');}
setTimeout(Function(anim),1);if(!this._initCSSAnim){$e.add(wEle,A5.u.css.properties.transitionEndEvent,function(e){this.style[A5.u.css.properties.transitionDOM]='';if($ga(this,'A5WINDOWHIDE')=='true'){this.style.display='none';this.style[A5.u.css.properties.transformDOM]='';$sa(this,'A5WINDOWHIDE','');}},{},false,this._windowId+'.EVENTS');this._initCSSAnim=true;}}
$sa(wEle,'A5WINDOWHIDE','');wEle.style.visibility='';wEle.style.display='none';if(animType.substr(0,3)!='css')A5.u.element.show(wEle,this.animation.show);else wEle.style.display='';}
if(this.body.content.type=='url'){var bcEle=$(this._windowId+'.BODYCONTAINER');var bEle=$(this._windowId+'.BODY');if(document.all&&bcEle.style.width==''){this.width='4in';bcEle.style.width=this.width;}
var sizeAdj=(bEle.offsetWidth-bEle.clientWidth)+(bcEle.offsetWidth-bcEle.clientWidth);bEle.style.width=(bcEle.offsetWidth-sizeAdj)+'px';}
if(!this._initShow&&!this.body.content.immediate)this.refresh();if(this.onFocus.constructor==Function)this.onFocus.call(this);if(typeof this._targetId!='undefined'){var pWin=A5.windows.getFromElement(this._targetId);this._winChain=[];if(pWin)this._winChain=this._winChain.concat(pWin._winChain);this._winChain.push(this._windowCurIndx);}
if(this.type=='modal'||this.type=='modal-popup'){this._lockIndex=AUI.LockUI.page(this.lockUIClassName,this._zIndex,this._windowId);setTimeout(function(){$e.add('AUILockUIPage','mousedown',A5.windows._hidePopups);},1000);}
if(this.type=='popup'||this.type=='modal-popup'){var classInst=this;this._luiTO=setTimeout(function(){$e.add(document.documentElement,'mousedown',classInst._popupHide,classInst,true,classInst._windowId+'.EVENTS');$e.add(document.documentElement,'touchstart',classInst._popupHide,classInst,true,classInst._windowId+'.EVENTS');delete classInst;},1000);}
A5.windows._hidePopups(this._windowCurIndx);$e.execute(this.getWindowId('body'),'a5resize');this.hidden=false;if(this.onShow.constructor==Function)this.onShow.call(this);}else this.focus();this._initShow=true;},hide:function(){if(window.event){if(window.event.type=='touchend'||window.event.type=='touchstart'){$e.preventDefault(window.event);}}
if(!this.hidden){clearTimeout(this._luiTO);if(this.onBeforeHide.constructor==Function){var result=this.onBeforeHide.call(this);if(typeof result!='boolean')result=true;if(!result)return false;}
if(this.type=='modal'||this.type=='modal-popup')AUI.LockUI.pageFree(this._windowId);if(this.type=='popup'||this.type=='modal-popup'){$e.remove(document.documentElement,'mousedown',this._popupHide);$e.remove(document.documentElement,'touchstart',this._popupHide);}
var wEle=$(this._windowId);this._oldTop=wEle.style.top;if(this.animation.disabled){wEle.style.top='-5000px';if(document.all&&navigator.appName!='Opera')wEle.style.display='none';else wEle.style.visibility='hidden';}else{var animType=this.animation.hide.type;if(animType.substr(0,3)=='css'&&A5.u.css.supportsTransition){var anim='';var dur=this.animation.hide.duration;if(typeof dur!='number')dur=500;if(animType.substr(0,9)=='css-slide'){if(animType=='css-slide'){if(this._dock=='b')animType='css-slide-bottom';else if(this._dock=='l')animType='css-slide-left';else if(this._dock=='r')animType='css-slide-right';else animType='css-slide-top';}
var loc=AUI.u.getVPScroll();var vpSize=AUI.u.getVPSize();loc.x=wEle.offsetLeft-loc.x;loc.y=wEle.offsetTop-loc.y;wEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D(0,0);anim=['var wEle = $(\''+this._windowId+'\');','wEle.style.display = \'\';','wEle.style[\''+A5.u.css.properties.transitionDOM+'\'] = \''+A5.u.css.properties.transform+' '+dur+'ms ease-in-out\';'];var trans='';if(animType=='css-slide-bottom')trans=A5.u.css.transform2D('0px',((vpSize.height-loc.y)+wEle.offsetHeight)+'px');else if(animType=='css-slide-left')trans=A5.u.css.transform2D('-'+(loc.x+wEle.offsetWidth)+'px','0px');else if(animType=='css-slide-right')trans=A5.u.css.transform2D(((vpSize.width-loc.x)+wEle.offsetWidth)+'px','0px');else trans=A5.u.css.transform2D('0px','-'+(loc.y+wEle.offsetHeight)+'px');anim.push('wEle.style[\''+A5.u.css.properties.transformDOM+'\'] = \''+trans+'\';');anim=anim.join('\n');}
$sa(wEle,'A5WINDOWHIDE','true');setTimeout(Function(anim),1);if(!this._initCSSAnim){$e.add(wEle,A5.u.css.properties.transitionEndEvent,function(e){this.style.top='-5000px';this.style[A5.u.css.properties.transitionDOM]='';if($ga(this,'A5WINDOWHIDE')=='true'){this.style.display='none';this.style[A5.u.css.properties.transformDOM]='';$sa(this,'A5WINDOWHIDE','');}},{},false,this._windowId+'.EVENTS');this._initCSSAnim=true;}}else{wEle.style.top='-5000px';if(animType.substr(0,3)!='css')A5.u.element.hide(wEle,this.animation.hide);else wEle.style.display='none';}}
if(this.activeClassName!='')$rcn(wEle,this.activeClassName);this._lockIndex=-1;this.hidden=true;A5.windows._hidePopupsAbove(this._zIndex);if(this.onHide.constructor==Function)this.onHide.call(this);this._focusTopWindow();}},focus:function(){this._moveToFront();if(this.onFocus.constructor==Function)this.onFocus.call(this);},refresh:function(){if(this.body.content.type=='static'){$(this.getWindowId('body')).innerHTML=this.body.content.html;}else if(this.body.content.type=='url'){$(this._windowId+'.BODY').src=A5.ajax.addURLRequiredData(this.body.content.url);}},maximize:function(){if(!this._isMaximized){var wEle=$(this._windowId);var bEle=$(this._windowId+'.BODY');this._restoreScroll=this._getVPScroll();this._restoreTop=wEle.style.top;this._restoreLeft=wEle.style.left;this._restoreWidth=bEle.style.width;this._restoreHeight=bEle.style.height;this.setPosition('0px','0px');this.setSize('100%','100%');AUI.Drag.disable(this._windowId);AUI.Resize.disable(this._windowId);this.focus();this._isMaximized=true;}},restore:function(){if(this._isMaximized){document.body.style.overflow='';this.setPosition(this._restoreTop,this._restoreLeft);this.setSize(this._restoreWidth,this._restoreHeight);this.setMoveDisabled(this.disableMove);this.setResizeDisabled(this.disableResize);window.scrollTo(this._restoreScroll.x,this._restoreScroll.y);this.focus();this._isMaximized=false;}},toggleMaximize:function(){if(this._isMaximized)this.restore();else this.maximize();},addButton:function(btnObj){var fEle=$(this._windowId+'.BUTTONS');$u.o.assign(btnObj,this._buttonDefaults,true);if(btnObj.name=='')btnObj.name=btnObj.html.split(RegExp('[^A-z ]')).join('');this._buttons.push(new A5.Button(btnObj));var HTMLBEle=this._buttons[this._buttons.length-1].create({'id':this._windowId+'.BUTTON.'+btnObj.name,'A5WindowButtonType':'button','A5WindowButtonIndex':''+(this._buttons.length-1),'A5WindowButtonName':btnObj.name});$e.add(HTMLBEle,A5.d.evnts.click,this._windowAction,this,false,this._windowId+'.EVENTS');HTMLBEle.style.width=btnObj.width;fEle.appendChild(HTMLBEle);if(btnObj.show==false)this._buttons[this._buttons.length-1].setDisplay(false);if(btnObj.disabled)this._buttons[this._buttons.length-1].setDisabled(true);fEle.appendChild(document.createTextNode(' '));},removeButton:function(btnName){var fEle=$(this._windowId+'.BUTTONS');for(var i=this._buttons.length-1;i>=0;i--){$sa(this._windowId+'.BUTTON.'+this._buttons[i].name,'A5WindowButtonIndex',i-1);if(this._buttons[i].name==btnName){this._buttons.splice(i,1);$e.remove(this._windowId+'.BUTTON.'+btnName,A5.d.evnts.click,this._windowAction);fEle.removeChild($(this._windowId+'.BUTTON.'+btnName));break;}}},setButtonDisabled:function(btnName,disableBool){for(var i=this._buttons.length-1;i>=0;i--){if(this._buttons[i].name==btnName){this._buttons[i].setDisabled(disableBool);break;}}},setButtonDisplay:function(btnName,displayBool){for(var i=this._buttons.length-1;i>=0;i--){if(this._buttons[i].name==btnName){this._buttons[i].setDisplay(displayBool);break;}}},getButton:function(btnName){for(var i=this._buttons.length-1;i>=0;i--){if(this._buttons[i].name==btnName)return this._buttons[i];}
return false;},clearButtons:function(){var fEle=$(this._windowId+'.BUTTONS');for(var i=this._buttons.length-1;i>=0;i--){$e.remove(this._windowId+'.BUTTON.'+this._buttons[i].name,A5.d.evnts.click,this._windowAction);}
fEle.innerHTML='&nbsp;';this._buttons=new Array();},addTool:function(toolObj){var tEle=$(this._windowId+'.TITLE.TOOLS');if(typeof toolObj=='string'){if(typeof this._defaultTools[toolObj]=='object')toolObj=this._defaultTools[toolObj];else return false;}
$u.o.assign(toolObj,this._toolDefaults,true);var HTMLBEle=A5.u.icon.element(toolObj.image);HTMLBEle.id=this._windowId+'.TITLE.TOOLS.'+toolObj.name;HTMLBEle.style.cursor='default';if(!A5.flags.isMobile&&toolObj.imageHover!=''){$e.add(HTMLBEle,'mouseover',Function('A5.u.icon.update(this,\''+toolObj.imageHover+'\');'),{},false,this._windowId+'.EVENTS');$e.add(HTMLBEle,'mouseout',Function('A5.u.icon.update(this,\''+toolObj.image+'\');'),{},false,this._windowId+'.EVENTS');}else toolObj.imageHover=toolObj.image;if(toolObj.imagePressed!=''){$e.add(HTMLBEle,A5.d.evnts.down,Function('A5.u.icon.update(this,\''+toolObj.imagePressed+'\');'),{},false,this._windowId+'.EVENTS');$e.add(HTMLBEle,A5.d.evnts.up,Function('A5.u.icon.update(this,\''+toolObj.imageHover+'\');'),{},false,this._windowId+'.EVENTS');}
if(toolObj.disabled){HTMLBEle.disabled=true;$acn(HTMLBEle,toolObj.disabledClassName);}else{HTMLBEle.disabled=false;$rcn(HTMLBEle,toolObj.disabledClassName);}
if(!toolObj.show)HTMLBEle.style.display='none';else HTMLBEle.style.display='';$sa(HTMLBEle,'A5WindowButtonType','tool');$sa(HTMLBEle,'A5WindowButtonName',toolObj.name);$sa(HTMLBEle,'A5WindowButtonIndex',''+this._tools.length);$e.add(HTMLBEle,A5.d.evnts.click,this._windowAction,this,false,this._windowId+'.EVENTS');tEle.appendChild(HTMLBEle);this._tools.push(toolObj);},removeTool:function(toolName){var tEle=$(this._windowId+'.TITLE.TOOLS');for(var i=this._tools.length-1;i>=0;i--){$sa(this._windowId+'.'+this._tools[i].name,'A5WindowButtonIndex',i-1);if(this._tools[i].name==toolName){this._tools.splice(i,1);$e.remove(this._windowId+'.TITLE.TOOLS.'+toolName,A5.d.evnts.click,this._windowAction);tEle.removeChild($(this._windowId+'.TITLE.TOOLS.'+toolName));break;}}},setToolDisabled:function(toolName,disableBool){for(var i=this._tools.length-1;i>=0;i--){if(this._tools[i].name==toolName){this._tools[i].disabled=disableBool;var bEle=$(this._windowId+'.TITLE.TOOLS.'+toolName);if(disableBool){bEle.disabled=true;if(this._tools[i].disabledClassName!='')$acn(bEle,this._tools[i].disabledClassName);}else{bEle.disabled=false;if(this._tools[i].disabledClassName!='')$rcn(bEle,this._tools[i].disabledClassName);}
break;}}},setToolDisplay:function(toolName,displayBool){for(var i=this._tools.length-1;i>=0;i--){if(this._tools[i].name==toolName){var bEle=$(this._windowId+'.TITLE.TOOLS.'+toolName);if(displayBool)bEle.style.display='';else bEle.style.display='none';break;}}},clearTools:function(){var tEle=$(this._windowId+'.TITLE.TOOLS');for(var i=this._tools.length-1;i>=0;i--){$e.remove(this._windowId+'.TITLE.TOOL.'+this._tools[i].name,A5.d.evnts.click,this._windowAction);}
tEle.innerHTML='&nbsp;';this._tools=new Array();},setPosition:function(val1,val2){if(this._dock!=''){this.setMoveDisabled(this.disableMove);if(this.container!=''){$e.remove(this.container,'a5resize',this._keepDocked);$e.remove(this.container,'scroll',this._keepDocked);}else{$e.remove(window,'resize',this._keepDocked);$e.remove(window,'scroll',this._keepDocked);}
this._dock='';}
var setPointerHandled=false;var wEle=$(this._windowId);if(val1.toLowerCase()=='center'){var vpSize=this._getVPSize();var vpScroll=this._getVPScroll();wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(val1.toLowerCase()=='in-view'){var vpScroll=this._getVPScroll();var vpSize=this._getVPSize();if(vpScroll.y+vpSize.height<wEle.offsetTop+wEle.offsetHeight||vpScroll.y>wEle.offsetTop)wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';if(vpScroll.x+vpSize.width<wEle.offsetLeft+wEle.offsetWidth||vpScroll.x>wEle.offsetLeft)wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(val1.toLowerCase()=='dropdown'||val1.toLowerCase()=='dropdown-right'||val1.toLowerCase()=='flyout'||val1.toLowerCase()=='flyout-bottom'||val1.toLowerCase()=='popup'||val1.toLowerCase()=='popup-bottom'){var pEle=$(val2);if(pEle){$po(wEle,pEle,val1.toLowerCase(),$if(this.pointer.show,this.pointer.size,0));if(this.pointer.show)this._setPointer(val1,wEle,pEle);setPointerHandled=true;}}else if(val1.toLowerCase()=='dock'){this._dock=val2.toLowerCase().substr(0,1);AUI.Drag.disable(this._windowId);if(this.container!=''){$e.add(this.container,'a5resize',this._keepDocked,this,true,this._windowId+'.EVENTS');$e.add(this.container,'scroll',this._keepDocked,this,true,this._windowId+'.EVENTS');}else{$e.add(window,'resize',this._keepDocked,this,true,this._windowId+'.EVENTS');$e.add(window,'scroll',this._keepDocked,this,true,this._windowId+'.EVENTS');}
var vpSize=this._getVPSize();var vpScroll=this._getVPScroll();if(this._dock=='t'){wEle.style.top=vpScroll.y+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(this._dock=='b'){wEle.style.top=((vpSize.height+vpScroll.y)-wEle.offsetHeight)+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(this._dock=='l'){wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=vpScroll.x+'px';}else if(this._dock=='r'){wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=((vpSize.width+vpScroll.x)-wEle.offsetWidth)+'px';}}else if(typeof val1!='undefined'&&typeof val2!='undefined'){if(typeof val1=='Number')wEle.style.top=val1+'px';else wEle.style.top=val1;if(typeof val2=='Number')wEle.style.left=val2+'px';else wEle.style.left=val2;}
if(!setPointerHandled&&this.pointer.show)this._setPointer(val1,wEle,false);if(this.onMove.constructor==Function)this.onMove();this._oldTop=wEle.style.top;},setSize:function(wSize,hSize){this.width=wSize;this.height=hSize;this._resize();if(this.onResize.constructor==Function)this.onResize();},setTitle:function(title){this.title.html=title;if(this.title.html=='')this.title.html='&nbsp;';$(this._windowId+'.TITLE.TEXT').innerHTML=title;},setDisplay:function(part,show){part=part.toLowerCase();var eleId=this.getWindowId(part);if(eleId!=this._windowId){var ele=$(eleId);if(!show)ele.style.display='none';else ele.style.display='';$sa(ele,'A5WindowDisplayElement',$if(show,'true','false'));}},setMoveDisabled:function(disableBool){if(disableBool)AUI.Drag.disable(this._windowId);else AUI.Drag.enable(this._windowId);this.disableMove=disableBool;},setResizeDisabled:function(disableBool){if(disableBool)AUI.Resize.disable(this._windowId);else AUI.Resize.enable(this._windowId);this.disableResize=disableBool;},addAction:function(name,func){this._a[name]=func;},getWindowId:function(part){part=typeof arguments[0]!='undefined'?arguments[0].toString():'';part=part.toLowerCase();var eleId=this._windowId;if(part=='title')eleId=eleId+'.TITLE';else if(part=='header')eleId=eleId+'.HEADER';else if(part=='body-container')eleId=eleId+'.BODYCONTAINER';else if(part=='tbar')eleId=eleId+'.TBAR';else if(part=='body'){if($(eleId+'.BODY.SCROLLWRAPPER'))eleId=eleId+'.BODY.SCROLLWRAPPER';else eleId=eleId+'.BODY';}else if(part=='bbar')eleId=eleId+'.BBAR';else if(part=='buttons')eleId=eleId+'.BUTTONS';else if(part=='footer')eleId=eleId+'.FOOTER';return eleId;},_resize:function(){var bcEle=$(this._windowId+'.BODYCONTAINER');var bEle=$(this._windowId+'.BODY');var pRegex=/^[0-9]+%$/;if(pRegex.test(this.width)||pRegex.test(this.height)){if(this.container!='')$e.add(this.container,'a5resize',this._stretch,this,true,this._windowId+'.EVENTS');else $e.add(window,'resize',this._stretch,this,true,this._windowId+'.EVENTS');this._stretch();this._hasStretch=true;}else if(this._hasStretch){if(this.container!='')$e.remove(this.container,'a5resize',this._stretch);else $e.remove(window,'resize',this._stretch);this._hasStretch=false;}
if(!pRegex.test(this.width)){if(this.width.split(':')[0]=='max')bcEle.style.maxWidth=this.width.split(':')[1];else bcEle.style.width=this.width;}
if(!pRegex.test(this.height)){if(this.height.split(':')[0]=='max')bEle.style.maxHeight=this.height.split(':')[1];else bEle.style.height=this.height;}
if(this.body.content.type=='url'&&!this.hidden){if(document.all&&this.width==''){this.width='4in';bcEle.style.width=this.width;}
var sizeAdj=(bEle.offsetWidth-bEle.clientWidth)+(bcEle.offsetWidth-bcEle.clientWidth);bEle.style.width=(bcEle.offsetWidth-sizeAdj)+'px';}
$e.execute(bEle,'a5resize');},_keepDocked:function(){var wEle=$(this._windowId);var vpSize=this._getVPSize();var vpScroll=this._getVPScroll();if(this._dock=='t'){wEle.style.top=vpScroll.y+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(this._dock=='b'){wEle.style.top=((vpSize.height+vpScroll.y)-wEle.offsetHeight)+'px';wEle.style.left=Math.max(Math.round(((vpSize.width)/2)-(wEle.offsetWidth/2)+vpScroll.x),0)+'px';}else if(this._dock=='l'){wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=vpScroll.x+'px';}else if(this._dock=='r'){wEle.style.top=Math.max(Math.round(((vpSize.height)/2)-(wEle.offsetHeight/2)+vpScroll.y),0)+'px';wEle.style.left=((vpSize.width+vpScroll.x)-wEle.offsetWidth)+'px';}},_stretch:function(){var pRegex=/^[0-9]+%$/;var cs=this._getVPSize();var wEle=$(this._windowId);var bEle=$(this._windowId+'.BODY');var bcEle=bEle.parentNode;if(pRegex.test(this.width)){var w=cs.width-(wEle.offsetWidth-bEle.offsetWidth);w=(w/100)*$u.s.toNum(this.width);bcEle.style.width=w+'px';if(this.body.content.type=='url'&&!this.hidden){if(document.all&&this.width==''){this.width='4in';bcEle.style.width=this.width;}
var sizeAdj=(bEle.offsetWidth-bEle.clientWidth)+(bcEle.offsetWidth-bcEle.clientWidth);bEle.style.width=(bcEle.offsetWidth-sizeAdj)+'px';}}
if(pRegex.test(this.height)){var h=cs.height-(wEle.offsetHeight-bEle.offsetHeight);h=(h/100)*$u.s.toNum(this.height);bEle.style.height=h+'px';}
$e.execute(bEle,'a5resize');},_setPointer:function(val,wEle,pEle){var pntEle=$(this._windowId+'.POINTER');pntEle.style.top='';pntEle.style.left='';var loc='up';var pEleOffset=0;var wEleOffset=0;if(this.pointer.location=='up'||this.pointer.location=='down'||this.pointer.location=='left'||this.pointer.location=='right'){loc=this.pointer.location;}else if(val.toLowerCase()=='dropdown'||val.toLowerCase()=='dropdown-right'){if($gpt(wEle)>$gpt(pEle))loc='up';else loc='down';}else if(val.toLowerCase()=='flyout'||val.toLowerCase()=='flyout-bottom'){if($gpl(wEle)>$gpl(pEle))loc='left';else loc='right';}
if(loc=='up'||loc=='down'){if(loc=='up'){pntEle.className=this.pointer.upClassName;pntEle.style.display='';}else{pntEle.className=this.pointer.downClassName;pntEle.style.display='';}
pntEle.style.left='50%';if(pEle){var wEleOffset=$gpl(wEle);var pEleOffset=$gpl(pEle);var wEleOffsetMax=wEleOffset+wEle.offsetWidth-this.pointer.size;var pEleOffsetMax=pEleOffset+pEle.offsetWidth-this.pointer.size;wEleOffset+=this.pointer.size;pEleOffset+=this.pointer.size;var tOffsetStart=Math.min(Math.max(wEleOffset,pEleOffset),wEleOffsetMax);var tOffsetEnd=Math.max(Math.min(wEleOffsetMax,pEleOffsetMax),wEleOffset);var tOffset=(tOffsetStart-wEleOffset)+this.pointer.size+Math.round((tOffsetEnd-tOffsetStart)/2);pntEle.style.left=tOffset+'px';}}else if(loc=='left'||loc=='right'){if(loc=='left'){pntEle.className=this.pointer.leftClassName;pntEle.style.display='';}else{pntEle.className=this.pointer.rightClassName;pntEle.style.display='';}
pntEle.style.top='50%';if(pEle){var wEleOffset=$gpt(wEle);var pEleOffset=$gpt(pEle);var wEleOffsetMax=wEleOffset+wEle.offsetHeight-this.pointer.size;var pEleOffsetMax=pEleOffset+pEle.offsetHeight-this.pointer.size;wEleOffset+=this.pointer.size;pEleOffset+=this.pointer.size;var tOffsetStart=Math.min(Math.max(wEleOffset,pEleOffset),wEleOffsetMax);var tOffsetEnd=Math.max(Math.min(wEleOffsetMax,pEleOffsetMax),wEleOffset);var tOffset=(tOffsetStart-wEleOffset)+this.pointer.size+Math.round((tOffsetEnd-tOffsetStart)/2);pntEle.style.top=tOffset+'px';}}else pntEle.style.display='none';},_getVPSize:function(){if(this.container=='')return AUI.u.getVPSize();else{var cEle=$(this.container);return{width:cEle.offsetWidth,height:cEle.offsetHeight};}},_getVPScroll:function(){if(this.container=='')return AUI.u.getVPScroll();else{var cEle=$(this.container);return{x:cEle.scrollLeft,y:cEle.scrollTop};}},_focusTopWindow:function(){var ele=0;var maxVZ=0;var wZIndex=0;var topIndx=-1;for(var i=this._windowIndx[0]-1;i>=0;i--){ele=$('A5dlg'+i);if(ele){if(ele.style.visibility!='hidden'){wZIndex=Number(ele.style.zIndex);if(wZIndex>maxVZ){maxVZ=wZIndex
topIndx=i;}}}}
$e.execute($('A5dlg'+topIndx),'mousedown');},_moveToFront:function(){var ele=$(this._windowId);var bEle=0;var tWZIndex=Number(ele.style.zIndex);if(tWZIndex==this._maxDlgZIndx[0]&&this._initShow)return false;ele.style.zIndex=''+(this._maxDlgZIndx[0]);this._zIndex=this._maxDlgZIndx[0];var wType='';var fExt='';var bType='';var aClassName='';var wZIndex=0;var modalIndex=0;if(AUI.LockUI._plLevel)modalIndex=AUI.LockUI._plLevel.length-1;for(var i=this._windowIndx[0]-1;i>=0;i--){ele=$('A5dlg'+i);if(ele){wType=$ga(ele,'A5WindowType');bType=$ga(ele,'A5WindowBodyType');aClassName=$ga(ele,'A5WindowActiveClassName');if(i!=this._windowCurIndx){if(aClassName!='')$rcn(ele,aClassName);if(bType=='iframe'){bEle=$('A5dlg'+i+'.BODY');fExt=bEle.src.toString().split('.').pop().substr(0,3).toLowerCase();if(fExt=='pdf')bEle.style.visibility='hidden';}
wZIndex=Number(ele.style.zIndex);if(wZIndex>tWZIndex){ele.style.zIndex=''+(wZIndex-1);A5.windows._w[i]._zIndex=wZIndex-1;if((wType=='modal'||wType=='modal-popup')&&ele.style.display!='none'&&ele.style.display!='hidden'){AUI.LockUI._plLevel[modalIndex]=AUI.LockUI._plLevel[modalIndex]-1;modalIndex--;}}}else{if(aClassName!='')$acn(ele,aClassName);if(bType=='iframe'){$('A5dlg'+i+'.BODY').style.visibility='';}}}}
if(AUI.LockUI._plLevel.length!=0){var newZIndx=0;for(var i=0;i<AUI.LockUI._plLevel.length;i++)newZIndx=Math.max(newZIndx,AUI.LockUI._plLevel[i]);$('AUILockUIPage').style.zIndex=''+newZIndx;}},_windowAction:function(e,classInst){var index=Number($ga(this,'A5WindowButtonIndex'));var type=$ga(this,'A5WindowButtonType');if(index>=0){var action='';if(type=='tool'&&typeof classInst._tools[index]!=undefined){if(classInst._tools[index].action.constructor==Function){classInst._tools[index].action.call(classInst);}else{action=classInst._tools[index].action.toString().toLowerCase();}}else if(type=='button'&&typeof classInst._buttons[index]!=undefined){if(classInst._buttons[index].action.constructor==Function){classInst._buttons[index].action.call(classInst);}else{action=classInst._buttons[index].action.toString().toLowerCase();}}
if(action!=''){if(action=='close'||action=='cancel'||action=='hide')classInst.hide();else if(action=='refresh')classInst.refresh();else if(action=='maximize')classInst.maximize();else if(action=='restore')classInst.restore();else if(action=='togglemaximize')classInst.toggleMaximize();else if(typeof classInst._a[action]!='undefined')classInst._a[action].call(classInst);}}},_buttonDefaults:{html:'',action:'close',name:'',disabled:false,show:true,width:''},_toolDefaults:{image:'',imageHover:'',imagePressed:'',action:'close',name:'',disabled:false,show:true,className:'',disabledClassName:'',style:0},_windowIndx:[0],_maxDlgZIndx:[0]}
A5.msgBox={show:function(title,html,type){if(!this._window){$u.o.assign(this.window,{theme:this.theme,type:'modal',_msgBoxAction:'cancel',autoShow:false,onBeforeHide:function(){var result=this.handle(this._msgBoxAction);if(typeof result!='boolean')result=true;return result;}});this._window=new A5.Window(this.window);if(typeof this._window._defaultTools!='undefined'){if(typeof this._window._defaultTools.close!='undefined')this._window.addTool(this._window._defaultTools.close);}else if(typeof A5._windowDefaults!='undefined'){if(typeof A5._windowDefaults.title!='undefined'){if(typeof A5._windowDefaults.title.tools!='undefined'){if(typeof A5._windowDefaults.title.tools.defaults!='undefined'){if(typeof A5._windowDefaults.title.tools.defaults.close!='undefined')this._window.addTool(A5._windowDefaults.title.tools.defaults.close);}}}}}else{this._window._msgBoxAction='cancel';if(this._window._lockIndex!=-1)AUI.LockUI._plLevel=AUI.LockUI._plLevel.splice(this._window._lockIndex,1);}
this._window.body.content.html=html;if(typeof arguments[3]!='undefined')this._window.handle=arguments[3];else this._window.handle=function(){};if(this.className!='')this._window.className=this.className;if(this.lockUIClassName!='')this._window.lockUIClassName=this.lockUIClassName;if(this.titleClassName!='')this._window.title.className=this.titleClassName;if(this.bodyClassName!='')this._window.body.className=this.bodyClassName;if(this.footerClassName!='')this._window.BUTTONS.className=this.footerClassName;if(this.closeButtonImage!='')this._window.title.imageClose=this.closeButtonImage;if(this.buttonClassName=='')this.buttonClassName=this._window._buttonDefaults.className;if(this.buttonWidth=='')this.buttonWidth=this._window._buttonDefaults.width;this._window.setToolDisplay('close',true);$(this._window.getWindowId('buttons')).style.textAlign=this.buttonAlign;var showButtons=true;var buttons=[];if(type.constructor==Array){for(var i=0;i<type.length;i++){buttons.push({action:Function('this._msgBoxAction = \''+type[i].value+'\'; this.hide();'),className:this.buttonClassName,width:this.buttonWidth});$u.o.assign(buttons[i],type[i]);}}else{type=type.toLowerCase();var obutton={className:this.buttonClassName,width:this.buttonWidth};var cbutton={className:this.buttonClassName,width:this.buttonWidth};var ybutton={className:this.buttonClassName,width:this.buttonWidth};var nbutton={className:this.buttonClassName,width:this.buttonWidth};$u.o.assign(obutton,this.buttons.ok);$u.o.assign(cbutton,this.buttons.cancel);$u.o.assign(ybutton,this.buttons.yes);$u.o.assign(nbutton,this.buttons.no);obutton.action=function(){this._msgBoxAction='ok';this.hide();};cbutton.action=function(){this._msgBoxAction='cancel';this.hide();};ybutton.action=function(){this._msgBoxAction='yes';this.hide();};nbutton.action=function(){this._msgBoxAction='no';this.hide();};if(type=='o'){buttons=[obutton];}else if(type=='oc'){buttons=[obutton,cbutton];}else if(type=='yn'){buttons=[ybutton,nbutton];}else if(type=='ync'){buttons=[ybutton,nbutton,cbutton];}else{showButtons=false;if(type=='wait')this._window.setToolDisplay('close',false);}}
if(showButtons){this._window.clearButtons();for(var i=0;i<buttons.length;i++){this._window.addButton(buttons[i]);}
this._window.setDisplay('buttons',true);}else{this._window.setDisplay('buttons',false);}
this._window.setTitle(title);this._window.setSize(this.width,this.height);this._window.refresh();this._window.show();},hide:function(){if(this._window)this._window.hide();},theme:'',className:'',titleClassName:'',bodyClassName:'',footerClassName:'',buttonClassName:'',buttonWidth:'',buttonAlign:'',closeButtonImage:'',lockUIClassName:'',width:'',height:'',buttons:{ok:{html:'OK'},cancel:{html:'Cancel'},yes:{html:'Yes'},no:{html:'No'}},window:{},_window:false,_win:{}}
A5.TabBand=Class.create();A5.TabBand.prototype={initialize:function(ctrlId,items){var settings=typeof arguments[2]=='object'?arguments[2]:{};$u.o.assign(this,{override:'base',location:'top',className:'',separator:{className:'',show:false},tab:{className:'',selectedClassName:'',disabledClassName:'',closeClassName:'',closeIcon:'',closeHoverIcon:'',closeIconStyle:0},scrollButtons:{overlay:false,fullHeight:false,prevClassName:'',prevDisabledClassName:'',prevImage:'',prevDisabledImage:'',nextClassName:'',nextDisabledClassName:'',nextImage:'',nextDisabledImage:''},tools:{className:'',items:[]},onBeforeChange:0,onChange:0,onBeforeLeave:0,onLeave:0,onRightClick:0,onInitial:0,onBeforeRemove:0,onRemove:0},true);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'tabBand');if(typeof settings.className!='undefined'){if(settings.className.charAt(0)=='+')settings.className=this.className+' '+settings.className.substr(1);}
if(typeof settings.separator!='undefined'){if(typeof settings.separator.className!='undefined'){if(settings.separator.className.charAt(0)=='+')settings.separator.className=this.separator.className+' '+settings.separator.className.substr(1);}}
if(typeof settings.tab!='undefined'){if(typeof settings.tab.className!='undefined'){if(settings.tab.className.charAt(0)=='+')settings.tab.className=this.tab.className+' '+settings.tab.className.substr(1);}
if(typeof settings.tab.selectedClassName!='undefined'){if(settings.tab.selectedClassName.charAt(0)=='+')settings.tab.selectedClassName=this.tab.selectedClassName+' '+settings.tab.selectedClassName.substr(1);}
if(typeof settings.tab.disabledClassName!='undefined'){if(settings.tab.disabledClassName.charAt(0)=='+')settings.tab.disabledClassName=this.tab.disabledClassName+' '+settings.tab.disabledClassName.substr(1);}}
if(typeof settings.scrollButtons!='undefined'){if(typeof settings.scrollButtons.prevClassName!='undefined'){if(settings.scrollButtons.prevClassName.charAt(0)=='+')settings.scrollButtons.prevClassName=this.scrollButtons.prevClassName+' '+settings.scrollButtons.prevClassName.substr(1);}
if(typeof settings.scrollButtons.prevDisabledClassName!='undefined'){if(settings.scrollButtons.prevDisabledClassName.charAt(0)=='+')settings.scrollButtons.prevDisabledClassName=this.scrollButtons.prevDisabledClassName+' '+settings.scrollButtons.prevDisabledClassName.substr(1);}
if(typeof settings.scrollButtons.nextClassName!='undefined'){if(settings.scrollButtons.nextClassName.charAt(0)=='+')settings.scrollButtons.nextClassName=this.scrollButtons.nextClassName+' '+settings.scrollButtons.nextClassName.substr(1);}
if(typeof settings.scrollButtons.nextDisabledClassName!='undefined'){if(settings.scrollButtons.nextDisabledClassName.charAt(0)=='+')settings.scrollButtons.nextDisabledClassName=this.scrollButtons.nextDisabledClassName+' '+settings.scrollButtons.nextDisabledClassName.substr(1);}}
$u.o.assign(this,settings);A5.overrides.assign(this,'tabBand',this.override);this.location=this.location.toLowerCase();if(this.location!='bottom')this.location='top';var ele=$(ctrlId);this._ele=ele;this.ctrlId=ele.id;ele.innerHTML='';ele.className=this.className;ele.style.overflow='hidden';ele.style.position='relative';if(A5.flags.supportsTouch||A5.u.drag.useDragScrolling=='always'){$e.add(ele,'a5dragscrolldischange',this._dragScrollDisChange,this);$e.add(ele,'a5dragscrollend',this._dragScrollEnd,this,true);A5.u.drag.add(ele,'custom',{overlay:this.scrollButtons.overlay,axis:'x',tolerance:5,onStart:function(d,c,e){d.tEle=$(this.id+'.TABTABLE');d.pEle=$(this.id+'.PTOOLBAR');d.nEle=$(this.id+'.NTOOLBAR');d.tabOffset=$u.s.toNum(d.tEle.style.left);d.tabMinLeft=(d.tEle.offsetWidth-(this.offsetWidth-$if(!c.overlay,d.pEle.offsetWidth+d.nEle.offsetWidth+4,4)))*-1;d.tabDis=0;if(d.tabOffset<=d.tabMinLeft)d.tabDis=1;else if(d.tabOffset==0)d.tabDis=-1;$e.stopEvent(e);},onMove:function(d){var val=Math.min(Math.max(d.tabOffset+d.moveX,d.tabMinLeft),0);if(val==d.tabMinLeft&&d.tabDis!=1){d.tabDis=1;$sa(this,'a5dragscrolldisable','n');$e.execute(this,'a5dragscrolldischange');}else if(val==0&&d.tabDis!=-1){d.tabDis=-1;$sa(this,'a5dragscrolldisable','p');$e.execute(this,'a5dragscrolldischange');}else if(d.tabDis!=0&&val<0&&val>d.tabMinLeft){d.tabDis=0;$sa(this,'a5dragscrolldisable','');$e.execute(this,'a5dragscrolldischange');}
d.tEle.style.left=val+'px';},onEnd:function(d,e){$e.stopEvent(e);$e.execute(this,'a5dragscrollend');}});}
var tblEle=document.createElement('table');tblEle.id=this.ctrlId+'.TABTABLE';this._tblEle=tblEle;tblEle.cellSpacing=0;tblEle.cellPadding=0;tblEle.style.position='relative';ele.appendChild(tblEle);tblEle.insertRow(0);var ptbEle=document.createElement('div');ptbEle.id=this.ctrlId+'.PTOOLBAR';this._ptbEle=ptbEle;ptbEle.style.position='absolute';ptbEle.style.left='0px';if(this.scrollButtons.fullHeight)ptbEle.style.height='100%';if(this.location=='bottom')ptbEle.style.top='0px';else ptbEle.style.bottom='0px';var ntbEle=document.createElement('div');ntbEle.id=this.ctrlId+'.NTOOLBAR';this._ntbEle=ntbEle;ntbEle.style.position='absolute';ntbEle.style.right='0px';if(this.scrollButtons.fullHeight)ntbEle.style.height='100%';if(this.location=='bottom')ntbEle.style.top='0px';else ntbEle.style.bottom='0px';ele.appendChild(ptbEle);ele.appendChild(ntbEle);var pbEle=document.createElement('a');pbEle.id=this.ctrlId+'.PREV';this._pbEle=pbEle;pbEle.className=this.scrollButtons.prevClassName;pbEle.innerHTML=A5.u.icon.html(this.scrollButtons.prevImage,'id="'+this.ctrlId+'.PREVIMG" style="border: none;"');pbEle.style.display='none';ptbEle.appendChild(pbEle);$e.add(pbEle,A5.d.evnts.click,this._scrollPrev,this,true);$e.add(pbEle,A5.d.evnts.dblClick,this._scrollPrev,this,true);var nbEle=document.createElement('a');nbEle.id=this.ctrlId+'.NEXT';this._nbEle=nbEle;nbEle.className=this.scrollButtons.nextClassName;nbEle.innerHTML=A5.u.icon.html(this.scrollButtons.nextImage,'id="'+this.ctrlId+'.NEXTIMG" style="border: none;"');nbEle.style.display='none';ntbEle.appendChild(nbEle);$e.add(nbEle,A5.d.evnts.click,this._scrollNext,this,true);$e.add(nbEle,A5.d.evnts.dblClick,this._scrollNext,this,true);this._firstTabIndx=-1;this._lastTabIndx=-1;this._items=new Array();for(var i=0;i<items.length;i++){this._add(items[i]);}
this._firstTabIndx=this._getFirstAvailableTab();this._lastTabIndx=this._getLastAvailableTab();this._canScroll=false;this._scrollTab=this._firstTabIndx;this._scrollOffset=0;this._scrollTempOffset=0;this._scrollAnimateInc=0;this._scrollTO=0;this._scrollRJ=false;this._canScrollNext=true;this._canScrollPrev=false;this._setScrollDisabled('p',false);if(this.separator.show){var sepEle=document.createElement('div');sepEle.className=this.separator.className;if(this.location=='bottom'){ele.insertBefore(sepEle,ele.firstChild);ptbEle.style.top=sepEle.offsetHeight+'px';ntbEle.style.top=sepEle.offsetHeight+'px';}else{ele.appendChild(sepEle);ptbEle.style.bottom=sepEle.offsetHeight+'px';ntbEle.style.bottom=sepEle.offsetHeight+'px';}
ptbEle.style.display='none';ptbEle.style.display='';ntbEle.style.display='none';ntbEle.style.display='';}
this.refresh();this.value='';$e.add(window,'resize',this.refresh,this,true);},add:function(tObj){this._add(tObj);this._firstTabIndx=this._getFirstAvailableTab();this._lastTabIndx=this._getLastAvailableTab();this.refresh();},_add:function(tObj){tObj=this._parseTab(tObj);var tIndx=this._items.length;this._items.push(tObj);var tbEle=this._ele;var tEle=document.createElement('a');tEle.href="#";tEle.className=this._gDef(tObj.className,this.tab.className);if(tObj.disabled)$acn(tEle,this._gDef(tObj.disabledClassName,this.tab.disabledClassName));if(!tObj.show)tEle.style.display='none';tEle.innerHTML='<span>&nbsp;'+tObj.html+'&nbsp;</span>';if(tObj.close){var iEle=A5.u.icon.element(this._gDef(tObj.closeIcon,this.tab.closeIcon));var cStyle=this._gDef(tObj.closeIconStyle,this.tab.closeIconStyle);if(typeof cStyle=='string'||typeof cStyle=='object')$ss(iEle,cStyle);iEle.style.verticalAlign='top';iEle.style.borderStyle='none';tEle.appendChild(iEle);$acn(tEle,this._gDef(tObj.closeClassName,this.tab.closeClassName));if(!A5.flags.isMobile){$e.add(iEle,'mouseover',this._closeMOver,this);$e.add(iEle,'mouseout',this._closeMOut,this);}
$e.add(iEle,A5.d.evnts.click,this._close,this);}
var tblEle=this._tblEle;var cellIndx=tblEle.rows[0].cells.length;tblEle.rows[0].insertCell(cellIndx);tblEle.rows[0].cells[cellIndx].appendChild(tEle);$e.add(tEle,A5.d.evnts.click,this._click,this);$e.add(tEle,'click',function(e){$e.preventDefault(e);return false;});$e.add(tEle,'contextmenu',this._rClick,this);},insert:function(tObj,tId){var tIndx=this._getTabIndex(tId);tObj=this._parseTab(tObj);this._items.splice(tIndx,0,tObj);var tbEle=this._ele;var tEle=document.createElement('a');tEle.href="#";tEle.className=this._gDef(tObj.className,this.tab.className);if(tObj.disabled)$acn(tEle,this._gDef(tObj.disabledClassName,this.tab.disabledClassName));if(!tObj.show)tEle.style.display='none';tEle.innerHTML='<span>&nbsp;'+tObj.html+'&nbsp;</span>';if(tObj.close){var iEle=A5.u.icon.element(this._gDef(tObj.closeIcon,this.tab.closeIcon));var cStyle=this._gDef(tObj.closeIconStyle,this.tab.closeIconStyle);if(typeof cStyle=='string'||typeof cStyle=='object')$ss(iEle,cStyle);iEle.style.verticalAlign='top';iEle.style.borderStyle='none';tEle.appendChild(iEle);$acn(tEle,this._gDef(tObj.closeClassName,this.tab.closeClassName));if(!A5.flags.isMobile){$e.add(iEle,'mouseover',this._closeMOver,this);$e.add(iEle,'mouseout',this._closeMOut,this);}
$e.add(iEle,A5.d.evnts.click,this._close,this);}
var tblEle=this._tblEle;var cellIndx=tIndx;tblEle.rows[0].insertCell(cellIndx);tblEle.rows[0].cells[cellIndx].appendChild(tEle);$e.add(tEle,A5.d.evnts.click,this._click,this);$e.add(tEle,'click',function(e){$e.preventDefault(e);return false;});$e.add(tEle,'contextmenu',this._rClick,this);this._firstTabIndx=this._getFirstAvailableTab();this._lastTabIndx=this._getLastAvailableTab();this.refresh();},remove:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;var fResult=true;if(this._items[tIndx].onBeforeRemove.constructor==Function)fResult=this._items[tIndx].onBeforeRemove.call(this,this._items[tIndx]);else if(this.onBeforeRemove.constructor==Function)fResult=this.onBeforeRemove.call(this,this._items[tIndx]);if(fResult){var tEle=this._getTab(tIndx);$e.remove(tEle,A5.d.evnts.click,this._click);$e.remove(tEle,'contextmenu',this._rClick);if(tEle.lastChild.tagName){if(tEle.lastChild.tagName.toLowerCase()=='img'){if(!A5.flags.isMobile){$e.remove(tEle.lastChild,'mouseover',this._closeMOver);$e.remove(tEle.lastChild,'mouseout',this._closeMOut);}
$e.remove(tEle.lastChild,A5.d.evnts.click,this._close);}}
delete tEle;if(tIndx<this._scrollTab)this._scrollTab--;this._tblEle.rows[0].deleteCell(tIndx);if(this._items[tIndx].onRemove.constructor==Function)this._items[tIndx].onRemove.call(this,this._items[tIndx]);else if(this.onRemove.constructor==Function)this.onRemove.call(this,this._items[tIndx]);this._items.splice(tIndx,1);}
this.refresh();if(tIndx==this._curTabIndx){if(typeof this._items[tIndx]!='undefined'){if(!this._items[tIndx].disabled&&this._items[tIndx].show){this._curTabIndx=-1;this.select(tIndx);return false;}}
this.select(this._getNearestAvailableTab(this._curTabIndx));}else{if(this._curTabIndx>tIndx)this._curTabIndx--;}
if(this._items.length==0)this._curTabIndx=-1;},enable:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;this._items[tIndx].disabled=false;var ele=this._getTab(tIndx);if(ele)$rcn(ele,this._gDef(this._items[tIndx].className,this.tab.className));this.refresh();},disable:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;this._items[tIndx].disabled=true;var ele=this._getTab(tIndx);if(ele)$acn(ele,this._gDef(this._items[tIndx].disabledClassName,this.tab.disabledClassName));this.refresh();},show:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;this._items[tIndx].show=true;var ele=this._getTab(tIndx);if(ele)ele.style.display='';this.refresh();},hide:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;this._items[tIndx].show=false;var ele=this._getTab(tIndx);if(ele)ele.style.display='none';this.refresh();if(tIndx==this._curTabIndx)this.select(this._getNearestAvailableTab(this._curTabIndx));},select:function(tId){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;if(tIndx!=this._curTabIndx&&this._items[tIndx].show&&!this._items[tIndx].disabled){var fResult=true;if(typeof this._items[this._curTabIndx]!='undefined'){if(this._items[this._curTabIndx].onBeforeLeave.constructor==Function)fResult=this._items[this._curTabIndx].onBeforeLeave.call(this,this._items[this._curTabIndx]);else if(this.onBeforeLeave.constructor==Function)fResult=this.onBeforeLeave.call(this,this._items[this._curTabIndx]);}
if(fResult){if(this._items[tIndx].onBeforeChange.constructor==Function)fResult=this._items[tIndx].onBeforeChange.call(this,this._items[tIndx]);else if(this.onBeforeChange.constructor==Function)fResult=this.onBeforeChange.call(this,this._items[tIndx]);}
if(fResult){if(typeof this._items[this._curTabIndx]!='undefined'){var tEle=this._getTab(this._curTabIndx);if(this._items[this._curTabIndx].disabled)tEle.className=this._gDef(this._items[this._curTabIndx].disabledClassName,this.tab.disabledClassName);else tEle.className=this._gDef(this._items[this._curTabIndx].className,this.tab.className);if(this._items[this._curTabIndx].close)$acn(tEle,this._gDef(this._items[this._curTabIndx].closeClassName,this.tab.closeClassName));if(this._items[this._curTabIndx].onLeave.constructor==Function)this._items[this._curTabIndx].onLeave.call(this,this._items[this._curTabIndx]);else if(this.onLeave.constructor==Function)this.onLeave.call(this,this._items[this._curTabIndx]);}
this._curTabIndx=tIndx;this.value=this._items[this._curTabIndx].value;var tEle=this._getTab(this._curTabIndx)
tEle.className=this._gDef(this._items[this._curTabIndx].selectedClassName,this.tab.selectedClassName);if(this._items[this._curTabIndx].close)$acn(tEle,this._gDef(this._items[this._curTabIndx].closeClassName,this.tab.closeClassName));if(this._items[tIndx].onChange.constructor==Function)this._items[tIndx].onChange.call(this,this._items[tIndx]);else if(this.onChange.constructor==Function)this.onChange.call(this,this._items[tIndx]);if(!this._items[tIndx]._initial){if(this._items[tIndx].onInitial.constructor==Function)this._items[tIndx].onInitial.call(this,this._items[tIndx]);else if(this.onInitial.constructor==Function)this.onInitial.call(this,this._items[tIndx]);this._items[tIndx]._initial=true;}
this.scrollTo(tIndx);}}},reset:function(){var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;if(tIndx!=this._curTabIndx){this._items[tIndx]._initial=false;}else{if(this._items[tIndx].onInitial.constructor==Function)this._items[tIndx].onInitial.call(this,this._items[tIndx]);else if(this.onInitial.constructor==Function)this.onInitial.call(this,this._items[tIndx]);}},refresh:function(){var tbEle=this._ele;var tblEle=this._tblEle;var pbEle=this._pbEle;var nbEle=this._nbEle;this._firstTabIndx=this._getFirstAvailableTab();this._lastTabIndx=this._getLastAvailableTab();if(tblEle.offsetWidth+6>tbEle.offsetWidth&&!this._canScroll){pbEle.style.display='';nbEle.style.display='';tblEle.style.marginLeft=(pbEle.offsetWidth)+'px';this._canScroll=true;}else if(tblEle.offsetWidth+6<=tbEle.offsetWidth&&this._canScroll){pbEle.style.display='none';nbEle.style.display='none';tblEle.style.left='';tblEle.style.marginLeft='';this._setScrollDisabled('p',false);this._canScrollPrev=false;this._setScrollDisabled('n',true);this._canScrollNext=true;this._scrollTab=this._firstTabIndx;this._scrollOffset=0;this._scrollRJ=false;this._canScroll=false;}else if(this._canScroll){var ptbEle=this._ptbEle;var ntbEle=this._ntbEle;if((tblEle.offsetWidth-this._scrollOffset)<(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth)))this._scrollTab=this._items.length-1;this._scrollReset();}},scrollTo:function(tId){if(!this._canScroll)return false;var scrollAnimate=typeof arguments[1]!='undefined'?arguments[1]:true;var tIndx=this._getTabIndex(tId);if(tIndx==-1)return false;else if(!this._items[tIndx].show)return false;var tbEle=this._ele;var tblEle=this._tblEle;var ptbEle=this._ptbEle;var ntbEle=this._ntbEle;var tEle=tblEle.rows[0].cells[tIndx];if((tEle.offsetLeft+tEle.offsetWidth-this._scrollOffset)>(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth))||(tblEle.offsetWidth-this._scrollOffset)<(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth))){this._scrollRJ=true;this._scrollTab=tIndx;this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft+tblEle.rows[0].cells[this._scrollTab].offsetWidth+4;this._scrollOffset=this._scrollOffset-(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth));this._scrollAnimate(scrollAnimate);if(this._scrollTab==this._lastTabIndx){this._setScrollDisabled('n',false);this._canScrollNext=false;}
this._setScrollDisabled('p',true);this._canScrollPrev=true;}else if(tEle.offsetLeft<this._scrollOffset){this._scrollRJ=false;this._scrollTab=tIndx;this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft;this._scrollAnimate(scrollAnimate);if(this._scrollTab==this._firstTabIndx){this._setScrollDisabled('p',false);this._canScrollPrev=false;}
this._setScrollDisabled('n',true);this._canScrollNext=true;}},setHTML:function(tId,html){var tIndx=this._getTabIndex(tId);this._items[tIndx].html=html;this._tblEle.rows[0].cells[tIndx].firstChild.firstChild.innerHTML='&nbsp;'+html+'&nbsp;';},_scrollReset:function(){if(this._scrollTab==-1)return false;var tbEle=this._ele;var tblEle=this._tblEle;var ptbEle=this._ptbEle;var ntbEle=this._ntbEle;var tEle=tblEle.rows[0].cells[this._scrollTab];if(tblEle.offsetWidth-this._scrollOffset<(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth))){this._scrollRJ=true;this._scrollTab=this._lastTabIndx;this._scrollOffset=tEle.offsetLeft+tEle.offsetWidth+4;this._scrollOffset=this._scrollOffset-(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth));this._scrollAnimate(true);}else{if(this._scrollRJ){this._scrollOffset=tEle.offsetLeft+tEle.offsetWidth+4;this._scrollOffset=this._scrollOffset-(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth));if(this._scrollOffset<0){this._scrollOffset=0;this._scrollTab=this._firstTabIndx;this._scrollRJ=false;}
this._scrollAnimate(true);}else if(this._scrollOffset!=tEle.offsetLeft){this._scrollOffset=tEle.offsetLeft;this._scrollAnimate(true);}}
if(this._scrollTab==this._lastTabIndx&&this._canScrollNext){this._setScrollDisabled('n',false);this._canScrollNext=false;}else if(this._scrollTab!=this._lastTabIndx&&!this._canScrollNext){this._setScrollDisabled('n',true);this._canScrollNext=true;}
if(this._scrollTab==this._firstTabIndx&&this._canScrollPrev){this._setScrollDisabled('p',false);this._canScrollPrev=false;}else if(this._scrollTab!=this._lastTabIndx&&!this._canScrollNext){this._setScrollDisabled('p',true);this._canScrollPrev=true;}},_scrollPrev:function(){if(this._canScrollPrev){var tbEle=this._ele;var tblEle=this._tblEle;var ptbEle=this._ptbEle;var ntbEle=this._ntbEle;this._scrollTab=this._getPrevAvailableTab(this._scrollTab);if(this._scrollTab==-1){this._scrollRJ=false;this._scrollTab=this._firstTabIndx;}
if(this._scrollRJ){this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft+tblEle.rows[0].cells[this._scrollTab].offsetWidth+4;this._scrollOffset=this._scrollOffset-(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth));if(this._scrollOffset<0){this._scrollOffset=0;this._scrollTab=this._firstTabIndx;this._scrollRJ=false;}
this._scrollAnimate(true);}else{this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft;this._scrollAnimate(true);}
if(this._scrollTab==this._firstTabIndx&&this._canScrollPrev){this._setScrollDisabled('p',false);this._canScrollPrev=false;}else if(this._scrollTab!=this._lastTabIndx&&!this._canScrollNext){this._setScrollDisabled('p',true);this._canScrollPrev=true;}
if(!this._canScrollNext){this._setScrollDisabled('n',true);this._canScrollNext=true;}}},_scrollNext:function(){if(this._canScrollNext){var tbEle=this._ele;var tblEle=this._tblEle;var ptbEle=this._ptbEle;var ntbEle=this._ntbEle;var nextTab=this._getNextAvailableTab(this._scrollTab);if(!this._scrollRJ){if((tblEle.offsetWidth-this._scrollOffset-tblEle.rows[0].cells[this._scrollTab].offsetWidth)<(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth))){this._scrollRJ=true;nextTab=this._lastTabIndx;}else{this._scrollTab=nextTab;this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft;this._scrollAnimate(true);}}
if(this._scrollRJ){this._scrollTab=nextTab;this._scrollOffset=tblEle.rows[0].cells[this._scrollTab].offsetLeft+tblEle.rows[0].cells[this._scrollTab].offsetWidth+4;this._scrollOffset=this._scrollOffset-(tbEle.offsetWidth-$if(this.scrollButtons.overlay,0,ptbEle.offsetWidth+ntbEle.offsetWidth));this._scrollAnimate(true);}
if(this._scrollTab==this._lastTabIndx&&this._canScrollNext){this._setScrollDisabled('n',false);this._canScrollNext=false;}else if(this._scrollTab!=this._lastTabIndx&&!this._canScrollNext){this._setScrollDisabled('n',true);this._canScrollNext=true;}
if(!this._canScrollPrev){this._setScrollDisabled('p',true);this._canScrollPrev=true;}}},_scrollAnimate:function(){var tblEle=this._tblEle;if(typeof arguments[0]!='undefined'){if(arguments[0]){clearTimeout(this._scrollTO);this._scrollAnimateInc=5;}else{tblEle.style.left='-'+this._scrollOffset+'px';this._scrollTempOffset=this._scrollOffset;return false;}}
this._scrollAnimateInc--;if(this._scrollAnimateInc==0){tblEle.style.left='-'+this._scrollOffset+'px';this._scrollTempOffset=this._scrollOffset;}else{this._scrollTempOffset=Math.round(this._scrollOffset-((this._scrollOffset-this._scrollTempOffset)/2.5));tblEle.style.left='-'+this._scrollTempOffset+'px';var classInst=this;this._scrollTO=setTimeout(function(){classInst._scrollAnimate();delete classInst;},30);}},_setScrollDisabled:function(dir,state){if(dir=='p'){if(state){this._pbEle.className=this.scrollButtons.prevClassName;A5.u.icon.update(this._pbEle.firstChild,this.scrollButtons.prevImage);}else{this._pbEle.className=this._gDef(this.scrollButtons.prevDisabledClassName,this.scrollButtons.prevClassName);A5.u.icon.update(this._pbEle.firstChild,this._gDef(this.scrollButtons.prevDisabledImage,this.scrollButtons.prevImage));}}else{if(state){this._nbEle.className=this.scrollButtons.nextClassName;A5.u.icon.update(this._nbEle.firstChild,this.scrollButtons.nextImage);}else{this._nbEle.className=this._gDef(this.scrollButtons.nextDisabledClassName,this.scrollButtons.nextClassName);A5.u.icon.update(this._nbEle.firstChild,this._gDef(this.scrollButtons.nextDisabledImage,this.scrollButtons.nextImage));}}},_dragScrollDisChange:function(e,classInst){if(classInst._canScroll){var val=$ga(this,'a5dragscrolldisable');if(val=='n'){classInst._setScrollDisabled('n',false);classInst._canScrollNext=false;}else if(val=='p'){classInst._setScrollDisabled('p',false);classInst._canScrollPrev=false;}else{classInst._setScrollDisabled('n',true);classInst._setScrollDisabled('p',true);classInst._canScrollNext=true;classInst._canScrollPrev=true;}}},_dragScrollEnd:function(){var tblEle=this._tblEle;this._scrollOffset=Math.abs($u.s.toNum(tblEle.style.left));for(var i=0;i<tblEle.rows[0].cells.length;i++){if(tblEle.rows[0].cells[i].offsetLeft>=this._scrollOffset){this._scrollTab=i;break;}}},_close:function(e,classInst){var tIndx=this.parentNode.parentNode.cellIndex;if(!classInst._items[tIndx].disabled)classInst.remove(tIndx);$e.stopEvent(e);return false;},_closeMOver:function(e,classInst){var tIndx=this.parentNode.parentNode.cellIndex;A5.u.icon.update(this,classInst._gDef(classInst._items[tIndx].closeIconHover,classInst.tab.closeIconHover));},_closeMOut:function(e,classInst){var tIndx=this.parentNode.parentNode.cellIndex;A5.u.icon.update(this,classInst._gDef(classInst._items[tIndx].closeIcon,classInst.tab.closeIcon));},_click:function(e,classInst){var tIndx=this.parentNode.cellIndex;classInst.select(tIndx);e=$e.getEvent(e);$e.stopEvent(e);return false;},_rClick:function(e,classInst){var tIndx=this.parentNode.cellIndex;e=$e.getEvent(e);$e.stopEvent(e);if(classInst._items[tIndx].onRightClick.constructor==Function)classInst._items[tIndx].onRightClick.call(classInst,classInst._items[tIndx]);else if(classInst.onRightClick.constructor==Function)classInst.onRightClick.call(classInst,classInst._items[tIndx]);return false;},_getTab:function(val){if(val>=0&&val<this._items.length){var cEle=this._tblEle.rows[0].cells[val];var tEle=cEle.firstChild;return tEle;}
return false;},_getTabIndex:function(val){if(typeof val=='number'){if(val>-1&&val<this._items.length)return val;else return-1;}else{for(var i=0;i<this._items.length;i++)if(val==this._items[i].value)return i;return-1;}},_getNextAvailableTab:function(curIndex){for(var i=curIndex+1;i<this._items.length;i++)if(!this._items[i].disabled&&this._items[i].show)return i;return-1;},_getPrevAvailableTab:function(curIndex){for(var i=curIndex-1;i>-1;i--)if(!this._items[i].disabled&&this._items[i].show)return i;return-1;},_getNearestAvailableTab:function(curIndex){for(var i=curIndex-1;i>-1;i--)if(!this._items[i].disabled&&this._items[i].show)return i;for(var i=curIndex+1;i<this._items.length;i++)if(!this._items[i].disabled&&this._items[i].show)return i;return-1;},_getLastAvailableTab:function(){for(var i=this._items.length-1;i>-1;i--)if(!this._items[i].disabled&&this._items[i].show)return i;return-1;},_getFirstAvailableTab:function(curIndex){for(var i=0;i<this._items.length;i++)if(!this._items[i].disabled&&this._items[i].show)return i;return-1;},_parseTab:function(tObj){if(typeof tObj!='object')tObj={html:tObj.toString()};if(typeof tObj.close=='undefined')tObj.close=this.tab.close;$u.o.assign(tObj,this._defaultTab,true)
if(tObj.html=='')tObj.html=tObj.value;if(tObj.value=='')tObj.value=tObj.html;if(typeof tObj.className!='undefined'){if(tObj.className.charAt(0)=='+')tObj.className=this.tab.className+' '+tObj.className.substr(1);}
if(typeof tObj.selectedClassName!='undefined'){if(tObj.selectedClassName.charAt(0)=='+')tObj.selectedClassName=this.tab.selectedClassName+' '+tObj.selectedClassName.substr(1);}
if(typeof tObj.disabledClassName!='undefined'){if(tObj.disabledClassName.charAt(0)=='+')tObj.disabledClassName=this.tab.disabledClassName+' '+tObj.disabledClassName.substr(1);}
return tObj;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultTab:{html:'',value:'',className:'',selectedClassName:'',disabledClassName:'',close:false,closeIcon:'',closeIconHover:'',closeIconStyle:'',show:true,disabled:false,onChange:0,onBeforeChange:0,onLeave:0,onBeforeLeave:0,onRightClick:0,onInitial:0,onBeforeRemove:0,onRemove:0,_initial:false}}
A5.TabbedInterfaceComponentHelper=Class.create();A5.TabbedInterfaceComponentHelper.prototype={initialize:function(tbiId,settings){this.tbiId=tbiId;$u.o.assign(settings,{compact:false,fill:false,minHeight:0,tabBand:{},pane:{padding:4,header:{className:'',style:0},footer:{className:'',style:0}}},true);if(typeof settings.tabBand.hide=='undefined')settings.tabBand.hide=settings.compact;$u.o.assign(this,settings);this.tabBand.onBeforeChange=function(item){if(this._panes[this._curTabIndx]){if(this._panes[this._curTabIndx].type=='grid'){var gridObjName=this._panes[this._curTabIndx].name.toUpperCase()+'_GridObj';if(window[gridObjName]){window[gridObjName].blur();}}}
if(this.value){if(this.value!=''){if($(this.value)){var ele=$(this.value);if(document.all&&navigator.appName!='Opera')ele.style.display='none';else{ele.style.visibility='hidden';ele.style.top='-200%';}}}}
var indx=-1;for(var i=0;i<this._panes.length;i++){if(this._panes[i]._id==item.value){indx=i;break;}}
var canChange=true;if(indx>-1){if(this._panes[indx].onBeforeChange.constructor==Function)canChange=this._panes[indx].onBeforeChange.call(this._tbObj,this._panes[indx]);}
return canChange;}
this.tabBand.onChange=function(item){if(this.value){if(this.value!=''){var ele=$(this.value);if(document.all&&navigator.appName!='Opera')ele.style.display='';else{ele.style.visibility='';ele.style.top='0px';}
if(this._paneHeight){$(this.value+'.PANE').style.height=(this._paneHeight-$(this.value+'.HEADER').offsetHeight-$(this.value+'.FOOTER').offsetHeight)+'px';}
var indx=-1;for(var i=0;i<this._panes.length;i++){if(this._panes[i]._id==item.value){indx=i;break;}}
if($(this.tbiId+'.TITLE'))$(this.tbiId+'.TITLE').innerHTML=item.html+'&nbsp;';if($(this.tbiId+'.CLOSE')){if(item.close)$(this.tbiId+'.CLOSE').style.display='';else $(this.tbiId+'.CLOSE').style.display='none';}
if($(this.tbiId+'.PREV')){if(indx>0)$(this.tbiId+'.PREV').src=this.scrollButtons.prevImage;else if(this.scrollButtons.prevDisabledImage!='')$(this.tbiId+'.PREV').src=this.scrollButtons.prevDisabledImage;}
if($(this.tbiId+'.NEXT')){if(indx<this._panes.length-1)$(this.tbiId+'.NEXT').src=this.scrollButtons.nextImage;else if(this.scrollButtons.nextDisabledImage!='')$(this.tbiId+'.NEXT').src=this.scrollButtons.nextDisabledImage;}
if(this._panes[indx].autoRefresh){if(this._panes[indx].type=='static'){$(this.value+'.CONTENT').innerHTML=this._panes[indx].html;}else if(this._panes[indx].type=='dynamic'){$(this.value+'.CONTENT').innerHTML=this._panes[indx].html;var data=this._panes[indx].data+$if(this._panes[indx].data!='','&','')+A5.ajax.buildURLParam('_containerId',this._panes[indx]._id+'.CONTENT');A5.ajax.callback(this._panes[indx].url,data);}else if(this._panes[indx].type=='url'){var url=this._panes[indx].url
if(this._panes[indx].data!='')url=url+'?'+this._panes[indx].data;$(this.value+'.PANE').src=A5.ajax.addURLRequiredData(url);}else if(this._panes[indx].type=='grid'){var data=this._panes[indx].data;$u.o.assign(data,{gridDiv:this._panes[indx]._id+'.CONTENT'});A5.component.runGrid(data);}else if(this._panes[indx].type=='dialog2'||this._panes[indx].type=='customComponent'){var data=this._panes[indx].data;var divIDProp=this._panes[indx].type+'Div';data[divIDProp]=this._panes[indx]._id+'.CONTENT'
A5.component.runGenericComponent(data);}else if(this._panes[indx].type=='report'){var data=this._panes[indx].data;$u.o.assign(data,{reportIFrame:this._panes[indx]._id+'.PANE'});A5.component.runReport(data);}else if(pSettings.type=='htmlReport'){var data=this._panes[indx].data;$u.o.assign(data,{reportDiv:this._panes[indx]._id+'.CONTENT'});A5.component.runReport(data);}}
if(indx>-1){if(this._panes[indx].onChange.constructor==Function)this._panes[indx].onChange.call(this._tbObj,this._panes[indx]);}}}}
this.tabBand.onBeforeRemove=function(item){var result=true;if(item.paneType=='grid'){var gridObjName=item.name.toUpperCase()+'_GridObj';if(window[gridObjName]){if(!window[gridObjName]._confirmAction())result=false;}}
var indx=-1;for(var i=0;i<this._panes.length;i++){if(this._panes[i]._id==item.value){indx=i;break;}}
var userResult=true
if(indx>-1){if(this._panes[indx].onBeforeRemove.constructor==Function)userResult=this._panes[indx].onBeforeRemove.call(this._tbObj,this._panes[indx]);}
return result&&userResult;}
this.tabBand.onRemove=function(item){var indx=-1;for(var i=0;i<this._panes.length;i++){if(this._panes[i]._id==item.value){indx=i;break;}}
if(indx>-1){if(this._panes[indx].onRemove.constructor==Function)this._panes[indx].onRemove.call(this._tbObj,this._panes[indx]);if(typeof document.documentElement.style.opacity!='undefined'||!(document.all&&navigator.appName!='Opera')){var name=this._panes[indx].name.toUpperCase();if(item.paneType=='grid'&&window[name+'_GridObj']){window[name+'_GridObj']._destroy();eval('delete '+name+'_GridObj');}else if(item.paneType=='dialog2'&&window[name+'_DlgObj']){window[name+'_DlgObj']._destroy();eval(name+'_DlgObj = false; try{delete '+name+'_DlgObj;}catch(err){}');}else if(item.paneType=='customComponent'&&window[name+'_CustObj']){window[name+'_CustObj']._destroy();eval('delete '+name+'_CustObj');}}}
$(this.tbiId+'.PANES').removeChild($(item.value));this._panes.splice(indx,1);}
this._tbObj=new A5.TabBand(tbiId+'.TABBAND',[],this.tabBand);this._tbObj.tbiId=tbiId;$(this.tbiId+'.TABBAND').style.display='none';this._tbObj._panes=[];this._curPaneId='';this._paneIndx=0;this._rlTO=0;if($(this.tbiId+'.CLOSE'))$(this.tbiId+'.PREV').src=this._tbObj.tab.closeIcon;if($(this.tbiId+'.PREV'))$(this.tbiId+'.PREV').src=this._tbObj.scrollButtons.prevImage;if($(this.tbiId+'.NEXT'))$(this.tbiId+'.NEXT').src=this._tbObj.scrollButtons.nextImage;if(this.fill){$e.add(document.body,'load',this._refreshLayout,this,true);$e.add(window,'resize',this._refreshLayout,this,true);}},add:function(pSettings){$u.o.assign(pSettings,this._dPane,true);pSettings._id=this.tbiId+'.PANE.'+this._paneIndx;if(pSettings.title=='')pSettings.title=pSettings.name;else if(pSettings.name=='')pSettings.name=pSettings.title;if(!pSettings.multiple){for(var i=0;i<this._tbObj._panes.length;i++){if(pSettings.name==this._tbObj._panes[i].name){this._tbObj.select(this._tbObj._panes[i]._id);this._tbObj.setHTML(i,pSettings.title);if(this._tbObj._panes[i].autoRefreshOnAdd&&!this._tbObj._panes[i].autoRefresh){if(this._tbObj._panes[i].type=='static'){$(this.value+'.CONTENT').innerHTML=this._tbObj._panes[i].html;}else if(this._tbObj._panes[i].type=='dynamic'){$(this.value+'.CONTENT').innerHTML=this._tbObj._panes[i].html;var data=this._tbObj._panes[i].data+$if(this._tbObj._panes[i].data!='','&','')+A5.ajax.buildURLParam('_containerId',this._tbObj._panes[i]._id+'.CONTENT');A5.ajax.callback(this._tbObj._panes[i].url,data);}else if(this._tbObj._panes[i].type=='url'){var url=this._tbObj._panes[i].url
if(this._tbObj._panes[i].data!='')url=url+'?'+this._tbObj._panes[i].data;$(pSettings._id+'.PANE').src=A5.ajax.addURLRequiredData(url);}else if(this._tbObj._panes[i].type=='grid'){var data=this._tbObj._panes[i].data;$u.o.assign(data,{gridDiv:this._tbObj._panes[i]._id+'.CONTENT'});A5.component.runGrid(data);}else if(this._tbObj._panes[i].type=='dialog2'||this._tbObj._panes[i].type=='customComponent'){var data=this._tbObj._panes[i].data;var divIDProp=this._tbObj._panes[i].type+'Div';data[divIDProp]=this._tbObj._panes[i]._id+'.CONTENT'
A5.component.runGenericComponent(data);}else if(this._tbObj._panes[i].type=='report'){var data=this._tbObj._panes[i].data;$u.o.assign(data,{reportIFrame:this._tbObj._panes[i]._id+'.PANE'});A5.component.runReport(data);}else if(pSettings.type=='htmlReport'){var data=this._tbObj._panes[i].data;$u.o.assign(data,{reportDiv:this._tbObj._panes[i]._id+'.CONTENT'});A5.component.runReport(data);}}
this._showMenu(false);return false;}}}
if(!this.tabBand.hide)$(this.tbiId+'.TABBAND').style.display='';var pEle=$(this.tbiId+'.PANES');var cEle=document.createElement('div');cEle.id=pSettings._id;cEle.style.position='absolute';cEle.style.top='0px';cEle.style.left='0px';cEle.style.width='100%';if(document.all&&navigator.appName!='Opera')cEle.style.display='none';else{cEle.style.visibility='hidden';cEle.style.top='-200%';}
pEle.appendChild(cEle);var ele=document.createElement('div');ele.id=pSettings._id+'.HEADER';ele.className=this._gDef(pSettings.header.className,this.pane.header.className);var tStyle=$if(pSettings.header.style!=0,pSettings.header.style,this.pane.header.style);if(typeof tStyle=='object'||typeof tStyle=='string')$ss(ele,tStyle);if(!pSettings.header.show)ele.style.display='none';ele.innerHTML=pSettings.header.html;cEle.appendChild(ele);if(pSettings.type=='static'||pSettings.type=='dynamic'||pSettings.type=='grid'||pSettings.type=='dialog2'||pSettings.type=='customComponent'||pSettings.type=='htmlReport'){ele=document.createElement('div');ele.id=pSettings._id+'.PANE';ele.style.position='relative';ele.style.overflow='auto';ele.style.height='0px';var sEle=document.createElement('div');sEle.id=pSettings._id+'.CONTENT';sEle.style.padding=this.pane.padding+'px';ele.appendChild(sEle);cEle.appendChild(ele);sEle.innerHTML=pSettings.html;if(pSettings.type=='dynamic'){var data=pSettings.data+$if(pSettings.data!='','&','')+A5.ajax.buildURLParam('_containerId',pSettings._id+'.CONTENT');if(!pSettings.autoRefresh)A5.ajax.callback(pSettings.url,data)}else if(pSettings.type=='grid'){var data=pSettings.data;$u.o.assign(data,{gridDiv:pSettings._id+'.CONTENT'});A5.component.runGrid(data);}else if(pSettings.type=='dialog2'||pSettings.type=='customComponent'){var data=pSettings.data;var divIDProp=pSettings.type+'Div';data[divIDProp]=pSettings._id+'.CONTENT'
A5.component.runGenericComponent(data);}else if(pSettings.type=='htmlReport'){var data=pSettings.data;$u.o.assign(data,{reportDiv:pSettings._id+'.CONTENT'});A5.component.runReport(data);}}else if(pSettings.type=='url'||pSettings.type=='report'){ele=document.createElement('iframe');ele.id=pSettings._id+'.PANE';ele.frameBorder='0';ele.border='0';ele.style.width='100%';ele.style.margin='0px';ele.style.marginBottom='-2px';ele.style.height='0px';var url=pSettings.url;if(pSettings.data!='')url=url+'?'+pSettings.data;cEle.appendChild(ele);if(pSettings.type=='report'){var data=pSettings.data;$u.o.assign(data,{reportIFrame:pSettings._id+'.PANE'});A5.component.runReport(data);}else{ele.src=url;}}else if(this._tbObj._panes.length==0){pEle.innerHTML='';$(this.tbiId+'.TABBAND').style.display='none';return false;}
ele=document.createElement('div');ele.id=pSettings._id+'.FOOTER';ele.className=this._gDef(pSettings.footer.className,this.pane.footer.className);tStyle=$if(pSettings.footer.style!=0,pSettings.footer.style,this.pane.footer.style);if(typeof tStyle=='object'||typeof tStyle=='string')$ss(ele,tStyle);if(!pSettings.footer.show)ele.style.display='none';ele.innerHTML=pSettings.footer.html;cEle.appendChild(ele);this._tbObj._panes.push(pSettings);this._tbObj.add({html:pSettings.title,value:pSettings._id,name:pSettings.name,paneType:pSettings.type,close:pSettings.close,onRightClick:pSettings.onRightClick,onInitial:pSettings.onInitial});var tARef=pSettings.autoRefresh;pSettings.autoRefresh=false;this._tbObj.select(pSettings._id);pSettings.autoRefresh=tARef;this._tbObj._panes.autoRefresh=tARef;this._paneIndx++;this._showMenu(false);return true;},getElement:function(paneName){var part=typeof arguments[1]!='undefined'?arguments[1]:'';var idPrefix='';var type='';for(var i=0;i<this._tbObj._panes.length;i++){if(paneName==this._tbObj._panes[i].name){idPrefix=this._tbObj._panes[i]._id;type=this._tbObj._panes[i].type;}}
if(idPrefix!=''){if(part=='header')return $(idPrefix+'.HEADER');else if(part=='footer')return $(idPrefix+'.FOOTER');else{if(type=='url'||type=='report')return $(idPrefix+'.PANE');else return $(idPrefix+'.CONTENT');}}
return false;},_showMenu:function(val){if(this.compact){$(this.tbiId+'.TITLEPANEL').style.height='';if(val){$(this.tbiId+'.TITLEPANEL').style.height=$(this.tbiId+'.TITLEPANEL').offsetHeight+'px';$(this.tbiId+'.MENUPANEL').style.display='';$(this.tbiId+'.CONTENTPANEL').style.display='none';$(this.tbiId+'.PANETITLE').style.display='none';$(this.tbiId+'.MENUTITLE').style.display='';}else{$(this.tbiId+'.MENUPANEL').style.display='none';$(this.tbiId+'.CONTENTPANEL').style.display='';$(this.tbiId+'.PANETITLE').style.display='';$(this.tbiId+'.MENUTITLE').style.display='none';}}
if(this.fill)this.refreshLayout();},_refreshLayout:function(){var classInst=this;clearTimeout(this._rlTO);this._rlTO=setTimeout(function(){classInst.refreshLayout();delete classInst;},100);},refreshLayout:function(){var ele=$(this.tbiId);var mEle=$(this.tbiId+'.MENU');var cs=AUI.u.getVPSize();var pageHeight=document.documentElement.offsetHeight;var borderHeight=ele.offsetHeight-ele.clientHeight;if(pageHeight==cs.height)pageHeight=document.body.scrollHeight;else if(pageHeight>cs.height&&(document.all&&navigator.appName!='Opera'))pageHeight=document.body.clientHeight;var newHeight=(cs.height-(borderHeight+pageHeight-ele.offsetHeight));if(newHeight<30)return false;if(newHeight<this.minHeight)newHeight=this.minHeight;if(ele.style.height==newHeight+'px'){if(this._tbObj.value){if(this._tbObj.value!=''){$e.execute(this._tbObj.value+'.PANE','a5resize');}}
return false;}
ele.style.height=newHeight+'px';if(mEle&&$(this.tbiId+'.MENUPANEL').style.display!='none'){mEle.style.height='';var menuHeight=newHeight-4;if($(this.tbiId+'.MENUPANEL_HEADER'))menuHeight-=$(this.tbiId+'.MENUPANEL_HEADER').offsetHeight;var mcEle=false;for(var i=0;i<mEle.childNodes.length;i++){if(typeof mEle.childNodes[i].tagName!='undefined'){mcEle=mEle.childNodes[i];break;}}
mEle.style.overflow='auto';mEle.style.position='relative';if(mcEle)menuHeight-=(mEle.scrollHeight-mcEle.scrollHeight);mEle.style.height=menuHeight+'px';}
if(this._tbObj.value){if(this._tbObj.value!=''){var pEle=$(this._tbObj.value+'.PANE');if(this.tabBand.hide)this._tbObj._paneHeight=(newHeight-1);else this._tbObj._paneHeight=(newHeight-$(this.tbiId+'.TABBAND').offsetHeight-1);if(pEle)pEle.style.height=(this._tbObj._paneHeight-$(this._tbObj.value+'.HEADER').offsetHeight-$(this._tbObj.value+'.FOOTER').offsetHeight)+'px';$(this.tbiId+'.PANES').style.height=this._tbObj._paneHeight+'px';$e.execute(pEle,'a5resize');}}},setTabHTML:function(tName,tHTML){for(var i=0;i<this._tbObj._panes.length;i++){if(tName==this._tbObj._panes[i].name){this._tbObj.setHTML(i,tHTML);}}},closeOpenPanes:function(){for(var i=this._tbObj._panes.length-1;i>=0;i--){if(this._tbObj._panes[i].close)this._tbObj.remove(i);}},selectPane:function(title){for(var i=0;i<tbiObj._tbObj._panes.length;i++){if(tbiObj._tbObj._panes[i].title==title){tbiObj._tbObj.select(i);break;}}},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_dPane:{name:'',title:'',type:'static',html:'',url:'',data:'',close:true,autoRefresh:false,autoRefreshOnAdd:false,multiple:false,onChange:0,onBeforeChange:0,onRightClick:0,onInitial:0,onBeforeRemove:0,onRemove:0,header:{className:'',style:0,show:false,html:''},footer:{className:'',style:0,show:false,html:''}}}
A5.Tree=Class.create({initialize:function(contId,data,options){this.contId=contId
var fullOptions={override:'base',inputId:'',disabledClassName:'',focusClassName:'',multiple:false,loopNavigate:false,loopNavigateNullSelection:true,allowNullSelection:true,separator:'.',loadingMessage:'Loading...',dynamicDataURL:'',dynamicDataURLParams:'',dynamicDataHandle:'',node:{className:'',hoverClassName:'',selectedClassName:'',labelClassName:'',icon:'',expandedIcon:'',collapsedIcon:'',leaf:{firstImage:'',image:'',lastImage:''},branch:{firstExpandedImage:'',firstCollapsedImage:'',firstExpandedHoverImage:'',firstCollapsedHoverImage:'',expandedImage:'',collapsedImage:'',expandedHoverImage:'',collapsedHoverImage:'',lastExpandedImage:'',lastCollapsedImage:'',lastExpandedHoverImage:'',lastCollapsedHoverImage:''}},branch:{className:'',lineImage:'',nullImage:''},onFocus:0,onBlur:0,onRightClick:0,onNodeSelect:0,onNodeClick:0,onNodeExpand:0,onBeforeNodeExpand:0,onNodeCollapse:0,onNodeDraw:0,onBeforePopulate:0,onPopulate:0,selection:[],value:[],disabled:false,_hasFocus:false};$u.o.assign(fullOptions,options);if(typeof A5._treeDefaults!='undefined')$u.o.assign(fullOptions,A5._treeDefaults);if(typeof fullOptions.theme!='undefined')A5.themes.assign(fullOptions,fullOptions.theme,'tree');if(fullOptions.node.collapsedIcon=='')fullOptions.node.collapsedIcon=fullOptions.node.icon;if(fullOptions.node.expandedIcon=='')fullOptions.node.expandedIcon=fullOptions.node.collapsedIcon;if(fullOptions.node.selectedCollapsedIcon=='')fullOptions.node.selectedCollapsedIcon=fullOptions.node.selectedIcon;if(fullOptions.node.selectedExpandedIcon=='')fullOptions.node.selectedExpandedIcon=fullOptions.node.selectedCollapsedIcon;if(fullOptions.branch.lineImage=='')fullOptions.branch.lineImage=fullOptions.branch.nullImage;if(fullOptions.node.leaf.image=='')fullOptions.node.leaf.image=fullOptions.branch.nullImage;if(fullOptions.node.branch.expandedImage=='')fullOptions.node.branch.expandedImage=fullOptions.branch.nullImage;if(fullOptions.node.branch.collapsedImage=='')fullOptions.node.branch.collapsedImage=fullOptions.branch.nullImage;if(fullOptions.node.leaf.firstImage=='')fullOptions.node.leaf.firstImage=fullOptions.node.leaf.image;if(fullOptions.node.leaf.lastImage=='')fullOptions.node.leaf.lastImage=fullOptions.node.leaf.image;if(fullOptions.node.branch.firstExpandedImage=='')fullOptions.node.branch.firstExpandedImage=fullOptions.node.branch.expandedImage;if(fullOptions.node.branch.lastExpandedImage=='')fullOptions.node.branch.lastExpandedImage=fullOptions.node.branch.expandedImage;if(fullOptions.node.branch.firstCollapsedImage=='')fullOptions.node.branch.firstCollapsedImage=fullOptions.node.branch.collapsedImage;if(fullOptions.node.branch.lastCollapsedImage=='')fullOptions.node.branch.lastCollapsedImage=fullOptions.node.branch.collapsedImage;if(fullOptions.node.branch.firstExpandedHoverImage=='')fullOptions.node.branch.firstExpandedHoverImage=fullOptions.node.branch.expandedHoverImage;if(fullOptions.node.branch.lastExpandedHoverImage=='')fullOptions.node.branch.lastExpandedHoverImage=fullOptions.node.branch.expandedHoverImage;if(fullOptions.node.branch.firstCollapsedHoverImage=='')fullOptions.node.branch.firstCollapsedHoverImage=fullOptions.node.branch.collapsedHoverImage;if(fullOptions.node.branch.lastCollapsedHoverImage=='')fullOptions.node.branch.lastCollapsedHoverImage=fullOptions.node.branch.collapsedHoverImage;$u.o.assign(this,fullOptions);A5.overrides.assign(this,'tree',this.override);this.populate(data);this._keyWatch=new AUI.KeyWatcher([{key:'up',handle:this._keyPrevNode},{key:'down',handle:this._keyNextNode},{key:'home',handle:this._keyFirstNode},{key:'end',handle:this._keyLastNode},{key:'left',handle:this._keyBranchNode},{key:'right',handle:this._keyChildNode},{key:'enter',handle:this._keyEnter}],this);var contElement=$(contId);var HTMLFocusCatcher=document.createElement('button');HTMLFocusCatcher.id=contId+'.FOCUSCATCHER';$ss(HTMLFocusCatcher,'position: absolute; font-size: 0px; outline: none; opacity: 0; filter: alpha(opacity=0); height: 0px; width: '+contElement.offsetWidth+'px')
$e.add(HTMLFocusCatcher,'keydown',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);});$e.add(HTMLFocusCatcher,'keypress',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);});$e.add(HTMLFocusCatcher,'focus',this._focus,this,true);$e.add(contElement,A5.d.evnts.click,this._focus,this,true);$e.add(contElement,'contextmenu',this._rClick,this,true);contElement.parentNode.insertBefore(HTMLFocusCatcher,contElement);if(this.disabled)this.setDisabled(true);if(!this.allowNullSelection&&data.length!=0)this._selectNode(this.getDataNode([0]));},populate:function(data){if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,data,'full');if(typeof res=='boolean'){if(!res)return false;}}
$e.removeGroup(this.contId+'.EVENTS');this.data=this._expandTreeData(data);var HTMLNodes=this._generateHTMLNodes([],[],this.data,true,'');HTMLNodes.id=this.contId+'.TREE';var contElement=$(this.contId);contElement.innerHTML='';contElement.insertBefore(HTMLNodes,contElement.lastChild);if(this.onPopulate.constructor==Function)this.onPopulate.call(this,this.data,'full');},populateNode:function(nodeLoc,data){if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,data,'node',nodeLoc);if(typeof res=='boolean'){if(!res)return false;}}
data=this._expandTreeData(data);var nodeImages=new Array();nodeImages[nodeImages.length]=$if(nodeLoc[0]==this.data.length-1,this.branch.nullImage,this.branch.lineImage);var dataNode=this.data[nodeLoc[0]];for(var i=1;i<nodeLoc.length;i++){nodeImages[i]=$if(nodeLoc[i]==dataNode.children.length-1,this.branch.nullImage,this.branch.lineImage);dataNode=dataNode.children[nodeLoc[i]];}
dataNode.children=data;dataNode.location=nodeLoc;dataNode.expanded=true;var HTMLNodes=this._generateHTMLNodes(nodeLoc,nodeImages,data,true,dataNode.branchClassName);$(this.contId+'.'+nodeLoc.join('.')).appendChild(HTMLNodes);var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;$e.remove(iNode,A5.d.evnts.up,this._clickToggleBranch);$e.add(iNode,A5.d.evnts.up,this._clickToggleBranch,this,false,this.contId+'.EVENTS');if(!A5.flags.isMobile&&(this.node.branch.collapsedHoverImage!=''||dataNode.collapsedHoverImage!='')){$e.remove(iNode,'mouseover',this._nodeImageMouseOver);$e.remove(iNode,'mouseout',this._nodeImageMouseOut);$e.add(iNode,'mouseover',this._nodeImageMouseOver,this,false,this.contId+'.EVENTS');$e.add(iNode,'mouseout',this._nodeImageMouseOut,this,false,this.contId+'.EVENTS');}
if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.expandedImage));if(this.onPopulate.constructor==Function)this.onPopulate.call(this,dataNode.children,'node',nodeLoc);},getDataNode:function(dataLoc){if(dataLoc.length==0)return 0;var dataNode=this.data[dataLoc[0]];if(typeof dataLoc[0]=='number'){var dataNode=this.data[dataLoc[0]];var parsedNodeLoc=[dataLoc[0]];}else{for(var i=0;i<this.data.length;i++){if(this.data[i].value.toLowerCase()==String(dataLoc[0]).toLowerCase()){var dataNode=this.data[i];var parsedNodeLoc=[i];break;}}}
for(var i=1;i<dataLoc.length;i++){if(typeof dataLoc[i]=='number'){dataNode=dataNode.children[dataLoc[i]];parsedNodeLoc[parsedNodeLoc.length]=dataLoc[i];}else{for(var j=0;j<dataNode.children.length;j++){if(dataNode.children[j].value.toLowerCase()==String(dataLoc[i]).toLowerCase()){dataNode=dataNode.children[j];parsedNodeLoc[parsedNodeLoc.length]=j;break;}}}}
dataNode.location=parsedNodeLoc;return dataNode;},scrollToNode:function(dataNode){var bId=this.contId+'.'+dataNode.location.join('.')+'.LABEL';if($(bId)){var bNode=$(bId);var cEle=$(this.contId);if(cEle.scrollTop>bNode.offsetTop-(bNode.parentNode.offsetHeight*2))cEle.scrollTop=bNode.offsetTop-(bNode.parentNode.offsetHeight*2)
else if(cEle.scrollTop+cEle.offsetHeight<bNode.offsetTop)cEle.scrollTop=bNode.offsetTop+(bNode.parentNode.offsetHeight)-cEle.offsetHeight;cEle.scrollLeft=bNode.offsetLeft-40;}},setDisabled:function(val){if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;},setValue:function(){var oldValue=this.value;this._deselectAll();var selClassName='';var dataNode=new Object();var tDataNode=new Object();var dataLoc=0;var valArr=0;var args=[];for(var i=0;i<arguments.length;i++)args.push(arguments[i]);var executeSelect=true;if(typeof args[args.length-1]=='boolean')executeSelect=args.pop();if(args.length==1&&args[0].constructor==Array){if(typeof args[0][0]=='string')args=args[0]}
var valStart=args.length-1;if(this.multiple)valStart=0;for(var i=valStart;i<args.length;i++){dataNode=0;if(args[i].constructor==Array)dataNode=this.getDataNode(args[i]);else{valArr=String(args[i]).split(this.separator);if(valArr.length>1)dataNode=this.getDataNode(valArr);else{dataLoc=new Array();this._getDataNodeFromValue(args[i],this.data,dataLoc);dataLoc.reverse();dataNode=this.getDataNode(dataLoc);}}
if(typeof dataNode=='object'){if(dataNode.location.length>1){var loc=[];for(var k=0;k<dataNode.location.length-1;k++){loc.push(dataNode.location[k]);tDataNode=this.getDataNode(loc);if(!tDataNode.expanded)this._toggleBranch(tDataNode);}}
selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[this.selection.length]=dataNode;}}
var curValue=[];for(var i=0;i<this.selection.length;i++){curValue[i]=this._getDataNodeValue(this.selection[i]);}
this.value=curValue;if(this.inputId!=''){$(this.inputId).value=curValue.join('\n');if(executeSelect)$e.execute(this.inputId,'change');}
if(oldValue.join('\n')!=curValue.join('\n')){if(typeof dataNode=='object'){if(dataNode.onSelect.constructor==Function&&executeSelect)dataNode.onSelect(dataNode);}else if(this.onNodeSelect.constructor==Function&&executeSelect)this.onNodeSelect(dataNode);}},navigate:function(dir){if(this.disabled)return false;if(dir.toLowerCase().substr(0,4)=='prev')this._keyPrevNode();else if(dir.toLowerCase()=='next')this._keyNextNode();else if(dir.toLowerCase()=='out')this._keyBranchNode();else if(dir.toLowerCase()=='in')this._keyChildNode();else if(dir.toLowerCase()=='home')this._keyFirstNode();else if(dir.toLowerCase()=='end')this._keyLastNode();else if(dir.toLowerCase()=='enter')this._keyEnter();},_expandTreeData:function(data){if(this.disabled)return false;var tempData=new Object();for(var i=0;i<data.length;i++){if(typeof data[i]!='object'){tempData={html:''+$u.s.tran(data[i],['<','>'],['&lt;','&gt;']),value:''+data[i]};$u.o.assign(tempData,this._defaultNode,true);data[i]=tempData;}else{if(typeof data[i].value!='undefined')data[i].defaultValue=false;$u.o.assign(data[i],this._defaultNode,true);if(data[i].value==''&&data[i].html!='')data[i].value=data[i].html;else if(data[i].html==''&&data[i].value!='')data[i].html=$u.s.tran(data[i].value,['<','>'],['&lt;','&gt;']);if(data[i].children.constructor==Array)data[i].children=this._expandTreeData(data[i].children);}
if(i==data.length-1)data[i].isLast=true;else data[i].isLast=false;}
return data;},_getFirstVisDataNode:function(){return this.getDataNode([0]);},_getLastVisDataNode:function(){var dataNode=this.data[this.data.length-1];var dataLoc=new Array();dataLoc.push(this.data.length-1);while(dataNode.children.constructor==Array&&dataNode.expanded){dataLoc.push(dataNode.children.length-1);dataNode=dataNode.children[dataNode.children.length-1];}
return this.getDataNode(dataLoc);},_getPrevVisDataNode:function(dataNode){var dataLoc=new Array();for(var i=0;i<dataNode.location.length;i++)dataLoc[i]=dataNode.location[i];if(dataLoc.length==1&&dataLoc[0]==0){if(this.loopNavigate){if(this.allowNullSelection&&this.loopNavigateNullSelection)return false;else return this._getLastVisDataNode();}
return dataNode;}
if(dataLoc[dataLoc.length-1]==0){dataLoc.pop();return this.getDataNode(dataLoc);}else{dataLoc[dataLoc.length-1]--;var newDataNode=this.getDataNode(dataLoc);while(newDataNode.expanded){dataLoc.push(newDataNode.children.length-1);newDataNode=this.getDataNode(dataLoc);}
return newDataNode;}},_getNextVisDataNode:function(dataNode){var dataLoc=new Array();for(var i=0;i<dataNode.location.length;i++)dataLoc[i]=dataNode.location[i];if(dataNode.isLast&&!dataNode.expanded){dataLoc.pop();if(dataLoc.length==0){if(this.loopNavigate){if(this.allowNullSelection&&this.loopNavigateNullSelection)return false;else return this._getFirstVisDataNode();}
return dataNode;}
var newDataNode=this.getDataNode(dataLoc);while(newDataNode.isLast){dataLoc.pop();if(dataLoc.length==0){if(this.loopNavigate){if(this.allowNullSelection&&this.loopNavigateNullSelection)return false;else return this._getFirstVisDataNode();}
return dataNode;}
newDataNode=this.getDataNode(dataLoc);}
dataLoc[dataLoc.length-1]++;return this.getDataNode(dataLoc);}else{if(dataNode.expanded){dataLoc[dataLoc.length]=0;return this.getDataNode(dataLoc);}else{dataLoc[dataLoc.length-1]++;return this.getDataNode(dataLoc);}}},_getDataNodeFromValue:function(value,data,dataLoc){var dataNode=0;for(var i=0;i<data.length;i++){if(data[i].value==value){dataLoc[0]=i;break;}
if(data[i].children.constructor==Array)this._getDataNodeFromValue(value,data[i].children,dataLoc);if(dataLoc.length>0){dataLoc.push(i);break;}}},_getDataNodeValue:function(dataNode){if(dataNode.defaultValue){var valDataNode=new Object();var valDataLoc=new Array();var curValue='';for(var i=0;i<dataNode.location.length;i++)valDataLoc[i]=dataNode.location[i];for(var i=valDataLoc.length-1;i>=0;i--){valDataNode=this.getDataNode(valDataLoc);curValue=$if(i!=0,this.separator,'')+valDataNode.value+curValue;valDataLoc.pop();}
return curValue;}else{return dataNode.value;}},_generateHTMLNodes:function(parentNodeLocs,parentNodeLineImages,data,expanded,branchClassName){var ulNode=document.createElement('ul');var liNode=new Object();var divNode=new Object();var buttonNode=new Object();var tempNode=new Object();var tempNodeloc=new Array();var tempLineImages=new Array();var joinedParentLocs=parentNodeLocs.join('.');var baseId='';var isLast=false;var curIcon='';var hasONDEvnt=this.onNodeDraw.constructor==Function;ulNode.className=this._gDef(branchClassName,this.branch.className);ulNode.style.margin='0px';ulNode.style.padding='0px';ulNode.style.listStyle='none';if(!expanded)ulNode.style.display='none';ulNode.unselectable='on';for(var i=0;i<data.length;i++){baseId=$if(joinedParentLocs!='',this.contId+'.'+joinedParentLocs+'.'+i,this.contId+'.'+i);liNode=document.createElement('li');liNode.style.margin='0px';liNode.style.padding='0px';liNode.id=baseId;liNode.setAttribute('A5TreeNodeLocation',$if(joinedParentLocs!='',joinedParentLocs+'.'+i,i))
liNode.unselectable='on';divNode=document.createElement('div');divNode.className=this._gDef(data[i].className,this.node.className);divNode.style.whiteSpace='nowrap';divNode.unselectable='on';if(i==data.length-1)isLast=true;for(var j=0;j<parentNodeLineImages.length;j++){tempNode=A5.u.icon.element(parentNodeLineImages[j]);tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';divNode.appendChild(tempNode);}
buttonNode=document.createElement('a');buttonNode.id=baseId+'.LABEL';buttonNode.tabIndex=-1;buttonNode.href="#";$e.add(buttonNode,A5.d.evnts.up,this._clickNode,this,false,this.contId+'.EVENTS');$e.add(buttonNode,'click',function(e){$e.preventDefault(e);return false;},null,false,this.contId+'.EVENTS');if(!A5.flags.isMobile){$e.add(buttonNode,'mouseover',this._mOverNode,this,false,this.contId+'.EVENTS');$e.add(buttonNode,'mouseout',this._mOutNode,this,false,this.contId+'.EVENTS');$sa(buttonNode,'A5TreeNodeHoverClassName',this._gDef(data[i].hoverClassName,this.node.hoverClassName));}
buttonNode.className=this._gDef(data[i].labelClassName,this.node.labelClassName);buttonNode.unselectable='on';if(typeof data[i].children=='object'||typeof data[i].children=='string'){if(data[i].children.constructor!=Array)data[i].expanded=false;tempNode=A5.u.icon.element(this._gDef(data[i].expandedImage,this.node.branch.firstExpandedImage));if(data[i].expanded){curIcon=this._gDef(data[i].expandedIcon,this.node.expandedIcon);if(i==0&&parentNodeLocs.length==0)A5.u.icon.update(tempNode,this._gDef(data[i].expandedImage,this.node.branch.firstExpandedImage));else if(isLast)A5.u.icon.update(tempNode,this._gDef(data[i].expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(tempNode,this._gDef(data[i].expandedImage,this.node.branch.expandedImage));}else{curIcon=this._gDef(data[i].collapsedIcon,this.node.collapsedIcon);if(i==0&&parentNodeLocs.length==0)A5.u.icon.update(tempNode,this._gDef(data[i].collapsedImage,this.node.branch.firstCollapsedImage));else if(isLast)A5.u.icon.update(tempNode,this._gDef(data[i].collapsedImage,this.node.branch.lastCollapsedImage));else A5.u.icon.update(tempNode,this._gDef(data[i].collapsedImage,this.node.branch.collapsedImage));}
if(!A5.flags.isMobile&&(this.node.branch.collapsedHoverImage!=''||data[i].collapsedHoverImage!='')){$e.add(tempNode,'mouseover',this._nodeImageMouseOver,this,false,this.contId+'.EVENTS');$e.add(tempNode,'mouseout',this._nodeImageMouseOut,this,false,this.contId+'.EVENTS');}
tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';$e.add(tempNode,A5.d.evnts.up,this._clickToggleBranch,this,false,this.contId+'.EVENTS');divNode.appendChild(tempNode);if(curIcon!=''){buttonNode.innerHTML=A5.u.icon.html(curIcon,'id="'+baseId+'.LABELICON" style="border: none" align="absmiddle"')+' '+data[i].html;}else{buttonNode.innerHTML=data[i].html;}
divNode.appendChild(buttonNode);if(data[i].children.constructor==Array){if(parentNodeLocs.length==0){tempNodeLocs=new Array();tempLineImages=new Array();}else{tempNodeLocs=parentNodeLocs.concat([]);tempLineImages=parentNodeLineImages.concat([]);}
tempNodeLocs[tempNodeLocs.length]=i;tempLineImages[tempLineImages.length]=$if(isLast,this.branch.nullImage,this.branch.lineImage);liNode.appendChild(divNode);liNode.appendChild(this._generateHTMLNodes(tempNodeLocs,tempLineImages,data[i].children,data[i].expanded,data[i].branchClassName));}else liNode.appendChild(divNode);}else{tempNode=A5.u.icon.element(this._gDef(data[i].image,this.node.leaf.firstImage));if(i==0&&parentNodeLocs.length==0)A5.u.icon.update(tempNode,this._gDef(data[i].image,this.node.leaf.firstImage));else if(isLast)A5.u.icon.update(tempNode,this._gDef(data[i].image,this.node.leaf.lastImage));else A5.u.icon.update(tempNode,this._gDef(data[i].image,this.node.leaf.image));tempNode.style.verticalAlign='middle';tempNode.align='absmiddle';divNode.appendChild(tempNode);curIcon=this._gDef(data[i].icon,this.node.icon);if(curIcon!=''){buttonNode.innerHTML=A5.u.icon.html(curIcon,'id="'+baseId+'.LABELICON" style="border: none" align="absmiddle"')+' '+data[i].html;}else{buttonNode.innerHTML=data[i].html;}
divNode.appendChild(buttonNode);liNode.appendChild(divNode);}
ulNode.appendChild(liNode);if(hasONDEvnt)this.onNodeDraw.call(this,buttonNode,data[i],i);}
return ulNode;},_clickToggleBranch:function(e,classInstance){if(this.disabled)return false;var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5TreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);classInstance._toggleBranch(dataNode,true);},_toggleBranch:function(dataNode){if(this.disabled)return false;if(dataNode.onBeforeExpand.constructor==Function)dataNode.onBeforeExpand(dataNode);else if(this.onBeforeNodeExpand.constructor==Function)this.onBeforeNodeExpand(dataNode);if(dataNode.children.constructor!=Array){if(dataNode.dynamicDataHandle.constructor==Function||this.dynamicDataHandle.constructor==Function){if(dataNode.dynamicDataHandle.constructor==Function)var resData=dataNode.dynamicDataHandle(dataNode);else var resData=this.dynamicDataHandle(dataNode);if(resData.constructor==Array){this.populateNode(dataNode.location,resData);if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);}}else{var curValue=urlencode(this._getDataNodeValue(dataNode));var dataURL='';var dataURLParams='';if(this.dynamicDataURLParams.constructor==Function)dataURLParams='&'+this.dynamicDataURLParams(dataNode);else if(this.dynamicDataURLParams!='')dataURLParams='&'+this.dynamicDataURLParams;if(typeof dataNode.children=='object'){if(dataNode.children.url)dataURL=dataNode.children.url;if(dataURL=='')dataURL=this.dynamicDataURL;if(dataURL!='')new $a.simple(dataURL,{data:$if(dataNode.children.data,dataNode.children.data+'&','')+'A5AJAXTreeNodeLocation=['+dataNode.location.join(',')+']&A5AJAXTreeNodeValue='+curValue+'&__Ajax=true'+dataURLParams,handle:this._responseHandle,handleContext:this})}else{dataURL=''+dataNode.children;if(dataURL.substr(0,1)=='?')dataURL=this.dynamicDataURL;if(dataURL!='')new $a.simple(dataURL,{data:'A5AJAXTreeNodeLocation=['+dataNode.location.join(',')+']&A5AJAXTreeNodeValue='+curValue+'&__Ajax=true'+dataURLParams,handle:this._responseHandle,handleContext:this})}
$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').innerHTML=this.loadingMessage;}
var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.firstExpandedHoverImage,dataNode.expandedImage,this.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.lastExpandedHoverImage,dataNode.expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.expandedHoverImage,dataNode.expandedImage,this.node.branch.expandedImage));}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.expandedImage));}
dataNode.expanded=true;}else{var iNode=$(this.contId+'.'+dataNode.location.join('.')+'.LABEL').previousSibling;var bNode=$(this.contId+'.'+dataNode.location.join('.')).lastChild;while(!bNode.tagName){bNode=bNode.previousSibling;}
if(bNode.style.display=='none'){if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.firstExpandedHoverImage,dataNode.expandedImage,this.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.lastExpandedHoverImage,dataNode.expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.expandedHoverImage,this.node.branch.expandedHoverImage,dataNode.expandedImage,this.node.branch.expandedImage));}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.lastExpandedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.expandedImage,this.node.branch.expandedImage));}
var curIcon=this._gDef(dataNode.expandedIcon,this.node.expandedIcon);if(curIcon!=''){if($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON')){A5.u.icon.update($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON'),curIcon);}}
bNode.style.display='block';dataNode.expanded=true;if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);}else{if(arguments[1]){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.collapsedHoverImage,this.node.branch.firstCollapsedHoverImage,dataNode.collapsedImage,this.node.branch.firstCollapsedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.collapsedHoverImage,this.node.branch.lastCollapsedHoverImage,dataNode.collapsedImage,this.node.branch.lastCollapsedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.collapsedHoverImage,this.node.branch.collapsedHoverImage,dataNode.collapsedImage,this.node.branch.collapsedImage));}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(iNode,this._gDef(dataNode.collapsedImage,this.node.branch.firstCollapsedImage));else if(dataNode.isLast)A5.u.icon.update(iNode,this._gDef(dataNode.collapsedImage,this.node.branch.lastCollapsedImage));else A5.u.icon.update(iNode,this._gDef(dataNode.collapsedImage,this.node.branch.collapsedImage));}
var curIcon=this._gDef(dataNode.collapsedIcon,this.node.collapsedIcon);if(curIcon!=''){if($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON')){A5.u.icon.update($(this.contId+'.'+dataNode.location.join('.')+'.LABELICON'),curIcon);}}
bNode.style.display='none';dataNode.expanded=false;if(dataNode.onCollapse.constructor==Function)dataNode.onCollapse(dataNode);else if(this.onNodeCollapse.constructor==Function)this.onNodeCollapse(dataNode);}}},_selectNode:function(dataNode){if(this.disabled)return false;var curValue=[];var oldValue=this.value;var selClassName='';var oEle=0;if(this.multiple&&(this._keyWatch.ctrl||this._keyWatch.shift)){var addToSel=true;for(var i=0;i<this.selection.length;i++){if(this.selection[i].location.join('.')==dataNode.location.join('.')){selClassName=this._gDef(this.selection[i].selectedClassName,this.node.selectedClassName);oEle=$(this.contId+'.'+this.selection[i].location.join('.'));if(selClassName!=''&&oEle)$rcn(oEle.firstChild,selClassName);this.selection.splice(i,1);addToSel=false;break;}}
if(addToSel){selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[this.selection.length]=dataNode;}}else{this._deselectAll();selClassName=this._gDef(dataNode.selectedClassName,this.node.selectedClassName);if(selClassName!='')$acn($(this.contId+'.'+dataNode.location.join('.')).firstChild,selClassName);this.selection[0]=dataNode;}
for(var i=0;i<this.selection.length;i++){curValue[i]=this._getDataNodeValue(this.selection[i])}
this.value=curValue;if(this.inputId!=''){$(this.inputId).value=curValue.join('\n');$e.execute(this.inputId,'change');}
if(oldValue.join('\n')!=curValue.join('\n')){if(dataNode.onSelect.constructor==Function)dataNode.onSelect(dataNode);else if(this.onNodeSelect.constructor==Function)this.onNodeSelect(dataNode);}},_deselectAll:function(){if(this.disabled)return false;var oldDataNode=new Object();var oEle=0;for(var i=0;i<this.selection.length;i++){oldDataNode=this.selection[i];if(typeof oldDataNode=='object'){selClassName=this._gDef(oldDataNode.selectedClassName,this.node.selectedClassName);oEle=$(this.contId+'.'+oldDataNode.location.join('.'));if(selClassName!=''&&oEle)$rcn(oEle.firstChild,selClassName);}}
this.selection=new Array();this.value=new Array();},_nodeImageMouseOver:function(e,classInstance){if(classInstance.disabled)return false;var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5TreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);if(dataNode.expanded){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(this,classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.firstExpandedHoverImage));else if(dataNode.isLast)A5.u.icon.update(this,classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.lastExpandedHoverImage));else A5.u.icon.update(this,classInstance._gDef(dataNode.expandedHoverImage,classInstance.node.branch.expandedHoverImage));}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.firstCollapsedHoverImage));else if(dataNode.isLast)A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.lastCollapsedHoverImage));else A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedHoverImage,classInstance.node.branch.collapsedHoverImage));}},_nodeImageMouseOut:function(e,classInstance){if(classInstance.disabled)return false;var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5TreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);if(dataNode.expanded){if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(this,classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.firstExpandedImage));else if(dataNode.isLast)A5.u.icon.update(this,classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.lastExpandedImage));else A5.u.icon.update(this,classInstance._gDef(dataNode.expandedImage,classInstance.node.branch.expandedImage));}else{if(dataNode.location[dataNode.location.length-1]==0&&dataNode.location.length==1)A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.firstCollapsedImage));else if(dataNode.isLast)A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.lastCollapsedImage));else A5.u.icon.update(this,classInstance._gDef(dataNode.collapsedImage,classInstance.node.branch.collapsedImage));}},_clickNode:function(e,classInstance){if(classInstance.disabled)return false;$(classInstance.contId+'.FOCUSCATCHER').focus();classInstance._keyWatch.shift=false;classInstance._keyWatch.ctrl=false;if(typeof e.shiftKey!='undefined'){classInstance._keyWatch.shift=e.shiftKey;classInstance._keyWatch.ctrl=e.ctrlKey;}
var liEle=this.parentNode.parentNode;var dataLocArr=String(liEle.getAttribute('A5TreeNodeLocation')).split('.');for(var i=0;i<dataLocArr.length;i++)dataLocArr[i]=Number(dataLocArr[i]);var dataNode=classInstance.getDataNode(dataLocArr,false);classInstance._selectNode(dataNode);if(dataNode.onClick.constructor==Function)dataNode.onClick(dataNode);else if(classInstance.onNodeClick.constructor==Function)classInstance.onNodeClick(dataNode);},_mOverNode:function(e,classInstance){var hoverCN=$ga(this,'A5TreeNodeHoverClassName');if(hoverCN!='')$acn(this.parentNode,hoverCN);},_mOutNode:function(e,classInstance){var hoverCN=$ga(this,'A5TreeNodeHoverClassName');if(hoverCN!='')$rcn(this.parentNode,hoverCN);},_keyPrevNode:function(){if(this.disabled)return false;var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){var dataNode=this._getPrevVisDataNode(oldDataNode);if(typeof dataNode.location!='undefined'){this._selectNode(dataNode);this.scrollToNode(dataNode);}else{this._deselectAll();}}else{this._selectNode(this._getLastVisDataNode());}},_keyNextNode:function(){if(this.disabled)return false;var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){var dataNode=this._getNextVisDataNode(oldDataNode);if(typeof dataNode.location!='undefined'){this._selectNode(dataNode);this.scrollToNode(dataNode);}else{this._deselectAll();}}else{this._selectNode(this._getFirstVisDataNode());}},_keyFirstNode:function(){if(this.disabled)return false;this._selectNode(this._getFirstVisDataNode());},_keyLastNode:function(){if(this.disabled)return false;this._selectNode(this._getLastVisDataNode());},_keyBranchNode:function(){if(this.disabled)return false;var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){if(oldDataNode.expanded==true){this._toggleBranch(oldDataNode);}else{var dataLoc=new Array();for(var i=0;i<oldDataNode.location.length-1;i++)dataLoc[i]=oldDataNode.location[i];if(dataLoc.length>0)this._selectNode(this.getDataNode(dataLoc));}}else{this._selectNode(this.getDataNode([0]));}},_keyChildNode:function(){if(this.disabled)return false;var oldDataNode=this.selection[this.selection.length-1];if(typeof oldDataNode=='object'){if(oldDataNode.expanded==false&&(typeof oldDataNode.children=='object'||typeof oldDataNode.children=='string')){this._toggleBranch(oldDataNode);}else if(typeof oldDataNode.children=='object'||typeof oldDataNode.children=='string'){var dataNode=this._getNextVisDataNode(oldDataNode);if(typeof dataNode.location!='undefined'){this._selectNode(dataNode);this.scrollToNode(dataNode);}}}else{this._selectNode(this.getDataNode([0]));}},_keyEnter:function(){if(this.disabled)return false;var dataNode=this.selection[this.selection.length-1];if(typeof dataNode=='object'){if(typeof dataNode.children=='object'||typeof dataNode.children=='string')this._toggleBranch(dataNode);else{if(dataNode.onClick.constructor==Function)dataNode.onClick(dataNode);else if(this.onNodeClick.constructor==Function)this.onNodeClick(dataNode);}}},_rClick:function(e,classInstance){if(classInstance.disabled)return false;if(classInstance.onRightClick.constructor==Function){classInstance.onRightClick();e=$e.getEvent(e);$e.stopEvent(e);return false;}},_focus:function(e){if(this._hasFocus==false){this._keyWatch.on();this._hasFocus=true;$e.executeGroup('A5ControlsFocusCatcher');$e.removeGroup('A5ControlsFocusCatcher');$e.add(document.documentElement,A5.d.evnts.up,this._blur,this,true,'A5ControlsFocusCatcher');if(this.focusClassName!='')$acn($(this.contId),this.focusClassName);if(this.onFocus.constructor==Function)this.onFocus();}
e=$e.getEvent(e);$e.stopEvent(e);return false;},_blur:function(){this._hasFocus=false;this._keyWatch.off();if(this.focusClassName!='')$rcn($(this.contId),this.focusClassName);$e.remove(document.documentElement,A5.d.evnts.up,this._blur);if(this.onBlur.constructor==Function)this.onBlur();},_responseHandle:function(obj){var resJSON=eval('('+obj.responseText+')');this.populateNode(resJSON.location,resJSON.data);var dataNode=this.getDataNode(resJSON.location);var baseId=this.contId+'.'+resJSON.location.join('.');var buttonNode=$(baseId+'.LABEL');var curIcon=this._gDef(dataNode.expandedIcon,this.node.expandedIcon);if(curIcon!=''){buttonNode.innerHTML=A5.u.icon.html(curIcon,'id="'+baseId+'.LABELICON" style="border: none" align="absmiddle"')+' '+dataNode.html;}else{buttonNode.innerHTML=dataNode.html;}
if(dataNode.onExpand.constructor==Function)dataNode.onExpand(dataNode);else if(this.onNodeExpand.constructor==Function)this.onNodeExpand(dataNode);},_gDef:function(val,dVal){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultNode:{html:'',value:'',children:0,className:'',selectedClassName:'',hoverClassName:'',labelClassName:'',branchClassName:'',icon:'',expandedIcon:'',collapsedIcon:'',image:'',expandedImage:'',collapsedImage:'',expandedHoverImage:'',collapsedHoverImage:'',onSelect:0,onClick:0,onExpand:0,onBeforeExpand:0,onCollapse:0,dynamicDataHandle:0,expanded:false,defaultValue:true}});A5.scrollers={_i:{}};A5.Scroller=Class.create({initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',name:'SCROLLER',flow:'ttb',location:'after',className:'',focusClassName:'',dialClassName:'',style:'',min:0,max:100,step:1,offset:{top:'0px',bottom:'0px',left:'0px',right:'0px'},message:function(d){return d;},slider:{className:'',innerClassName:'',handle:{className:'',style:''},shadow:{show:true,className:'',style:''},message:{show:'auto',className:'',topClassName:'',bottomClassName:'',leftClassName:'',rightClassName:'',style:'',lowSwitch:75,highSwitch:75}},dial:{show:'downhold',invertDrag:false,className:'',message:{location:'center',className:''},style:'',pixelStep:4,size:2},onScroll:0,onBeforeScroll:0,onSelect:0,onBeforeSelect:0});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'scroller');$u.o.assign(this,settings);A5.overrides.assign(this,'panelCard',this.override);this._initRender();this.setValue(this.min,false);A5.scrollers._i[contId]=this;},refresh:function(){var ds=A5.u.drag._w[this.contId+'.'+this.name].c;ds.pps=this.dial.pixelStep;ds.rng=Math.abs(this.max-this.min);ds.step=this.step;if(ds.rng==0)this._sEle.style.display='none';else this._sEle.style.display='';if(this.flow=='ttb'||this.flow=='btt'){this._sEle.style.top=this.offset.top;this._sEle.style[this._sLoc]=this.offset[this._sLoc];this._sEle.style.bottom=this.offset.bottom;}else{sEle.style.left=this.offset.left;sEle.style[this._sLoc]=this.offset[this._sLoc];sEle.style.right=this.offset.right;}
this.setValue(this.value,false);},setValue:function(val){if(this._da)return false;this._val=Math.min(this.max,Math.max(val,this.min));this._r(this.value);if(arguments[1]!=false)this._sel('');else this.value=this._val;this._sShd();},setDisplay:function(part,val){if(typeof part!='string'){ele=$(this.contId+'.'+this.name);if(part)ele.style.display='';else ele.style.display='none';return true;}else{if(part=='dial'){if(val&&this._dEle.style.display=='none'){$acn(this._sEle,this.dialClassName);if(this.flow=='ttb'||this.flow=='btt')this._dEle.style.display='table-cell';else this._dEle.style.display='block';if(this.dial.message.location!='none'&&this.slider.message.show=='auto')this._sbEle.lastChild.firstChild.style.display='none';this._rMsg();return true;}else if(!val&&this._dEle.style.display!='none'){$rcn(this._sEle,this.dialClassName);this._dEle.style.display='none';this._sbEle.lastChild.style.top=this._sbEle.firstChild.style.top;if(!this._da){this._sbEle.firstChild.style.display='none';$rcn(this._sEle,this.focusClassName);}
if(this.slider.message.show=='always'||(this._da&&this.slider.message.show=='auto'))this._sbEle.lastChild.firstChild.style.display='';else this._sbEle.lastChild.firstChild.style.display='none';return true;}}}
return false;},_r:function(){this._rMsg();var amnt=Math.abs((this._val-this.min)/(this.max-this.min))*100;var mcn='';this._vp=amnt;if(this.flow=='ttb'){this._sbEle.lastChild.style.top=amnt+'%';if(amnt>=this.slider.message.highSwitch)mcn=this.slider.message.className+' '+this.slider.message.bottomClassName;else if(amnt<this.slider.message.lowSwitch)mcn=this.slider.message.className+' '+this.slider.message.topClassName;else mcn=this.slider.message.className}else if(this.flow=='btt'){this._sbEle.lastChild.style.bottom=amnt+'%';if(amnt>=this.slider.message.highSwitch)mcn=this.slider.message.className+' '+this.slider.message.topClassName;else if(amnt<this.slider.message.lowSwitch)mcn=this.slider.message.className+' '+this.slider.message.bottomClassName;else mcn=this.slider.message.className}else if(this.flow=='rtl'){this._sbEle.lastChild.style.right=amnt+'%';if(amnt>=this.slider.message.highSwitch)mcn=this.slider.message.className+' '+this.slider.message.leftClassName;else if(amnt<this.slider.message.lowSwitch)mcn=this.slider.message.className+' '+this.slider.message.rightClassName;else mcn=this.slider.message.className}else if(this.flow=='ltr'){this._sbEle.lastChild.style.left=amnt+'%';if(amnt>=this.slider.message.highSwitch)mcn=this.slider.message.className+' '+this.slider.message.rightClassName;else if(amnt<this.slider.message.lowSwitch)mcn=this.slider.message.className+' '+this.slider.message.leftClassName;else mcn=this.slider.message.className}
if(this._oldMCN!=mcn){this._sbEle.lastChild.firstChild.className=mcn;this._oldMCN=mcn;}},_rMsg:function(val){if(this._dEle.style.display!='none'&&this.dial.message.location!='none'){var dPreMsg=[];var dSufMsg=[];if(this.dial.size>0){for(var i=1;i<this.dial.size+1;i++){if(this._val-(this.step*i)>=this.min)dPreMsg.unshift('<div id="'+this.contId+'.'+this.name+'.DIAL.'+(i*-1)+'" class="'+this.dial.message.className+'">'+this.message.call(this,this._val-(this.step*i),'dial',i*-1)+'</div>');if(this._val+(this.step*i)<=this.max)dSufMsg.push('<div id="'+this.contId+'.'+this.name+'.DIAL.'+(i)+'" class="'+this.dial.message.className+'">'+this.message.call(this,this._val+(this.step*i),'dial',i)+'</div>');}
this._dEle.innerHTML='<div style="position: relative; display: inline-block;"><div style="position: absolute; bottom: 100%;">'+dPreMsg.join('')+'</div><div id="'+this.contId+'.'+this.name+'.DIAL.0" class="'+this.dial.message.className+'">'+this.message.call(this,this._val,'dial',0)+'</div><div style="position: absolute; top: 100%;">'+dSufMsg.join('')+'</div></div>';}else{this._dEle.innerHTML='<div style="position: relative; display: inline-block;"><div id="'+this.contId+'.'+this.name+'.DIAL.0" class="'+this.dial.message.className+'">'+this.message.call(this,this._val,'dial',0)+'</div></div>';}
if(this.dial.location=='track'){var ele=this._dEle.firstChild;ele.style.position='absolute';if(this.flow=='ttb'){if(this._vp<=50)ele.style.top=this._vp+'%';else ele.style.bottom=(100-this._vp)+'%';}else if(this.flow=='btt'){if(this._vp<=50)ele.style.bottom=this._vp+'%';else ele.style.top=(100-this._vp)+'%';}else if(this.flow=='ltr'){if(this._vp<=50)ele.style.left=this._vp+'%';else ele.style.right=(100-this._vp)+'%';}else if(this.flow=='rtl'){if(this._vp<=50)ele.style.right=this._vp+'%';else ele.style.left=(100-this._vp)+'%';}}}
if(this._sbEle.lastChild.firstChild.style.display!='none')this._sbEle.lastChild.firstChild.innerHTML=this.message.call(this,this._val,'slider');},_sel:function(p){var indx=typeof arguments[1]!='undefined'?arguments[1]:null;if(this.onBeforeSelect.constructor==Function){var result=this.onBeforeSelect.call(this,this._val,p,indx);if(typeof result=='boolean'&&!result){this._val=this.value;this._r();return false;}}
this.value=this._val;if(this.onSelect.constructor==Function)this.onSelect.call(this,this.value,p,indx);this._sShd();},_sShd:function(){if(this.flow=='ttb')this._sbEle.firstChild.style.top=this._sbEle.lastChild.style.top;else if(this.flow=='btt')this._sbEle.firstChild.style.bottom=this._sbEle.lastChild.style.bottom;else if(this.flow=='rtl')this._sbEle.firstChild.style.right=this._sbEle.lastChild.style.right;else if(this.flow=='ltr')this._sbEle.firstChild.style.left=this._sbEle.lastChild.style.left;},_svp:function(val,p){val=(Math.round(((val/100)*Math.abs(this.max-this.min))/this.step)*this.step)+this.min;val=Math.round(val*this.step)/this.step;if(val!=this._val){this._val=val;if(this.onBeforeScroll.constructor==Function){var r=this.onBeforeScroll.call(this,val,p);if(typeof r=='number')val=r;}
this._r();if(this.onScroll.constructor==Function)this.onScroll.call(this,val,p);this._sMove=true;}},_tap:function(e){var p='slider';var c=$e.getCoors(e);if(!this._da)this._cvEle.style.display='none';var ele=document.elementFromPoint(c.clientX,c.clientY);if(!this._da)this._cvEle.style.display='';var id='';if(this._dEle.style.display!='none'){while(ele!=document.body&&ele!=this._sEle){if(ele==this._dEle){p='dial';break;}else if(ele==this._sbEle.lastChild.firstChild){p='dial';id=ele.id;break;}
if(ele.id!='')id=ele.id;ele=ele.parentNode;}}
if(p=='dial'){id=id.split('.');var indx=id.pop();id=id.join('.')
if(id==this.contId+'.'+this.name+'.DIAL'||id==this.contId+'.'+this.name+'.MESSAGE')indx=Number(indx);else indx=null;if(this.contId+'.'+this.name+'.DIAL')
this._sel('dial',indx);this._sbEle.firstChild.style.top=this._sbEle.lastChild.style.top;if(this.dial.show!='always')this.setDisplay('dial',false);else this._sbEle.firstChild.style.display='none';}else if(this._sMove){if(this.slider.message.show=='auto'&&!(this._dEle.style.display!='none'&&this.dial.message.location=='none'))this._sbEle.lastChild.firstChild.style.display='none';if(this._dEle.style.display=='none'){this._sbEle.firstChild.style.display='none';this._sel('slider');}
this._sMove=false;}
$rcn(this._sEle,this.focusClassName);},_initRender:function(){var cEle=$(this.contId);var sEle=document.createElement('div');sEle.id=this.contId+'.'+this.name;if(this.style!='')$ss(sEle,this.style);$ss(sEle,$gs(sEle)+'; position: absolute; -moz-user-select: -moz-none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none;');sEle.className=this.className;var html='';var msgDis='none';var msgDisType='table-cell';var dialDis='none';if(this.slider.message.show=='always'&&this.dial.show!='always')msgDis='';if(this.flow=='ttb'||this.flow=='btt'){var loc='top';var dialLoc='middle';var sLoc='right';if(this.flow=='btt')loc='bottom';if(this.dial.location=='low'){if(this.flow=='ttb')dialLoc='top';else dialLoc='bottom';}else if(this.dial.location=='high'){if(this.flow=='ttb')dialLoc='bottom';else dialLoc='top';}
if(this.location=='after'){html=['<div style="display: table; height: 100%;">','<div style="display: table-row;">','<div id="'+this.contId+'.'+this.name+'.DIAL" class="'+this.dial.className+'" style="'+this.dial.style+'; display: '+dialDis+'; vertical-align: '+dialLoc+'; position: relative;"></div>','<div class="'+this.slider.className+'" id="'+this.contId+'.'+this.name+'.SLIDER" style="display: table-cell;">','<div class="'+this.slider.innerClassName+'" style="position: absolute; top: 0px; bottom: 0px;">','<div style="position: absolute; width: 100%;">','<div class="'+this.slider.shadow.className+'" style="'+this.slider.shadow.style+'; display: none; position: absolute; '+loc+': 0%;"></div>','<div class="'+this.slider.handle.className+'" style="'+this.slider.handle.style+'; position: absolute; '+loc+': 0%;">','<div id="'+this.contId+'.'+this.name+'.MESSAGE.0" class="'+this.slider.message.className+'" style="display: '+msgDis+';"></div>','</div>','</div>','</div>','</div>','</div>','</div>','<div id="'+this.contId+'.'+this.name+'.COVER" style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background: transparent;"></div>'].join('');}else if(this.location=='before'){html=['<div style="display: table; height: 100%;">','<div style="display: table-row;">','<div class="'+this.slider.className+'" id="'+this.contId+'.'+this.name+'.SLIDER" style="display: table-cell;">','<div class="'+this.slider.innerClassName+'" style="position: absolute; top: 0px; bottom: 0px;">','<div style="position: absolute; width: !00%;">','<div class="'+this.slider.shadow.className+'" style="'+this.slider.shadow.style+'; display: none; position: absolute; '+loc+': 0%;"></div>','<div class="'+this.slider.handle.className+'" style="'+this.slider.handle.style+'; position: absolute; '+loc+': 0%;">','<div id="'+this.contId+'.'+this.name+'.MESSAGE.0" class="'+this.slider.message.className+'" style="display: '+msgDis+';"></div>','</div>','</div>','</div>','</div>','<div id="'+this.contId+'.'+this.name+'.DIAL" class="'+this.dial.className+'" style="'+this.dial.style+'; display: '+dialDis+'; vertical-align: '+dialLoc+'; position: relative;"></div>','</div>','</div>','<div id="'+this.contId+'.'+this.name+'.COVER" style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background: transparent;"></div>'].join('');sLoc='left';}
sEle.style.top=this.offset.top;sEle.style[sLoc]=this.offset[sLoc];sEle.style.bottom=this.offset.bottom;}else{var loc='left';var dialLoc='center';var sLoc='bottom';if(this.flow=='rlt')loc='right';if(this.dial.location=='low'){if(this.flow=='ltr')dialLoc='left';else dialLoc='right';}else if(this.dial.location=='high'){if(this.flow=='ltr')dialLoc='right';else dialLoc='left';}
if(this.location=='after'){html=['<div id="'+this.contId+'.'+this.name+'.DIAL" class="'+this.dial.className+'" style="'+this.dial.style+'; display: '+dialDis+'; text-align: '+dialLoc+'; position: relative;"></div>','<div class="'+this.slider.className+'" id="'+this.contId+'.'+this.name+'.SLIDER">','<div class="'+this.slider.innerClassName+'" style="position: absolute; left: 0px; right: 0px;">','<div style="position: absolute; height: 100%;">','<div class="'+this.slider.shadow.className+'" style="'+this.slider.shadow.style+'; display: none; position: absolute; '+loc+': 0%;"></div>','<div class="'+this.slider.handle.className+'" style="'+this.slider.handle.style+'; position: absolute; '+loc+': 0%;">','<div id="'+this.contId+'.'+this.name+'.MESSAGE.0" class="'+this.slider.message.className+'" style="display: '+msgDis+';"></div>','</div>','</div>','</div>','</div>','<div id="'+this.contId+'.'+this.name+'.COVER" style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background: transparent;"></div>'].join('');}else if(this.location=='before'){html=['<div class="'+this.slider.className+'" id="'+this.contId+'.'+this.name+'.SLIDER">','<div class="'+this.slider.innerClassName+'" style="position: absolute; left: 0px; right: 0px;">','<div style="position: absolute; height: 100%;">','<div class="'+this.slider.shadow.className+'" style="'+this.slider.shadow.style+'; display: none; position: absolute; '+loc+': 0%;"></div>','<div class="'+this.slider.handle.className+'" style="'+this.handle.shadow.style+'; position: absolute; '+loc+': 0%;">','<div id="'+this.contId+'.'+this.name+'.MESSAGE.0" class="'+this.slider.message.className+'" style="display: '+msgDis+';"></div>','</div>','</div>','</div>','</div>','<div id="'+this.contId+'.'+this.name+'.DIAL" class="'+this.dial.className+'" style="'+this.dial.style+'; display: '+dialDis+'; text-align: '+dialLoc+'; position: relative;"></div>','<div id="'+this.contId+'.'+this.name+'.COVER" style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background: transparent;"></div>'].join('');sLoc='top';}
sEle.style.left=this.offset.left;sEle.style[sLoc]=this.offset[sLoc];sEle.style.right=this.offset.right;msgDisType='block';}
sEle.innerHTML=html;if(cEle.style.position!='absolute')cEle.style.position='relative';cEle.appendChild(sEle);if(!$ga(cEle,'A5CustomScroll')&&cEle.style.overflow!='hidden'){var offset=A5.u.convertUnits(this.offset[sLoc],'px');if(this.flow=='ttb'||this.flow=='btt'){var tOff=A5.u.convertUnits(this.offset.top,'px');var bOff=A5.u.convertUnits(this.offset.bottom,'px');if(sLoc=='left')$e.add(cEle,'scroll',Function('var ele = $(\''+this.contId+'.'+this.name+'\'); ele.style.top = (this.scrollTop+'+tOff+')+\'px\'; ele.style.bottom = ('+bOff+'-this.scrollTop)+\'px\'; ele.style.'+sLoc+' = (this.scrollLeft-'+offset+')+\'px\';'));else $e.add(cEle,'scroll',Function('var ele = $(\''+this.contId+'.'+this.name+'\'); ele.style.top = (this.scrollTop+'+tOff+')+\'px\'; ele.style.bottom = ('+bOff+'-this.scrollTop)+\'px\'; ele.style.'+sLoc+' = ('+offset+'-this.scrollLeft)+\'px\';'));sEle.style.top=(cEle.scrollTop+tOff)+'px';sEle.style.bottom=(bOff-cEle.scrollTop)+'px';}else{var lOff=A5.u.convertUnits(this.offset.left,'px');var rOff=A5.u.convertUnits(this.offset.right,'px');if(sLoc=='top')$e.add(cEle,'scroll',Function('var ele = $(\''+this.contId+'.'+this.name+'\'); ele.style.left = (this.scrollLeft+'+lOff+')+\'px\'; ele.style.right = ('+rOff+'-this.scrollLeft)+\'px\'; ele.style.'+sLoc+' = (this.scrollTop-'+offset+')+\'px\';'));else $e.add(cEle,'scroll',Function('var ele = $(\''+this.contId+'.'+this.name+'\'); ele.style.left = (this.scrollLeft+'+lOff+')+\'px\'; ele.style.right = ('+rOff+'-this.scrollLeft)+\'px\'; ele.style.'+sLoc+' = ('+offset+'-this.scrollTop)+\'px\';'));sEle.style.left=(cEle.scrollTop+lOff)+'px';sEle.style.right=(rOff-cEle.scrollTop)+'px';}}
var dEle=$(this.contId+'.'+this.name+'.DIAL');var sbEle=$(this.contId+'.'+this.name+'.SLIDER').firstChild.firstChild;if(this.flow=='ttb'||this.flow=='btt'){var offset=Math.round(sbEle.lastChild.offsetHeight/2)+'px';sbEle.style.top=offset;sbEle.style.bottom=offset;if(this.flow=='ttb'){sbEle.firstChild.style.marginTop='-'+offset;sbEle.lastChild.style.marginTop='-'+offset;}else{sbEle.firstChild.style.marginBottom='-'+offset;sbEle.lastChild.style.marginBottom='-'+offset;}}else{var offset=Math.round(sbEle.lastChild.offsetWidth/2)+'px';sbEle.style.left=offset;sbEle.style.right=offset;if(this.flow=='ltr'){sbEle.firstChild.style.marginLeft='-'+offset;sbEle.lastChild.style.marginLeft='-'+offset;}else{sbEle.firstChild.style.marginRight='-'+offset;sbEle.lastChild.style.marginRight='-'+offset;}}
this._sLoc=sLoc;this._sEle=sEle;this._dEle=dEle;this._sbEle=sbEle;this._cvEle=$(this.contId+'.'+this.name+'.COVER');$e.add(sEle,'abstractdown',function(e){$e.stopPropagation(e);});$e.add(sEle,'abstractup',Function('if($(\''+this.contId+'.'+this.name+'.DIAL\').style.display == \'none\') $rcn(this,\''+this.focusClassName+'\');'));if(this.dial.show=='downhold')$e.add(sEle,'abstractdownhold',Function('A5.scrollers._i[\''+this.contId+'\'].setDisplay(\'dial\',true);'));else if(this.dial.show=='dblclick')$e.add(sEle,'abstractdblclick',Function('A5.scrollers._i[\''+this.contId+'\'].setDisplay(\'dial\',true);'));$e.add(sEle,'abstracttap',this._tap,this,true);A5.u.drag.add(sEle,'custom',{tolerance:-1,contId:this.contId,flow:this.flow,location:this.location,'sEle':sEle,'dEle':dEle,'sbEle':sbEle,'cvEle':this._cvEle,fcn:this.focusClassName,amnt:-1,sss:this.slider.shadow.show,dsm:this.dial.show,dml:this.dial.message.location,pps:this.dial.pixelStep,rng:Math.abs(this.max-this.min),step:this.step,dIvrtD:this.dial.invertDrag,sMsg:this.slider.message.show,onStart:function(i,s,e){$acn(sEle,s.fcn);s.cvEle.style.display='none';if(s.dEle.style.display=='none'&&s.sMsg!='never')s.sbEle.lastChild.firstChild.style.display='';if(s.flow=='ttb'||s.flow=='btt'){if(s.flow=='ttb')i.so=$u.s.toNum(s.sbEle.lastChild.style.top);else if(s.flow=='btt')i.so=$u.s.toNum(s.sbEle.lastChild.style.bottom);i.ss=s.sbEle.offsetHeight;i.sas=s.sbEle.parentNode.parentNode.offsetWidth;}else if(s.flow=='rtl'||s.flow=='ltr'){if(s.flow=='rtl')i.so=$u.s.toNum(s.sbEle.lastChild.style.right);else if(s.flow=='ltr')i.so=$u.s.toNum(s.sbEle.lastChild.style.left);i.ss=s.sbEle.offsetWidth;i.sas=s.sbEle.parentNode.parentNode.offsetHeight;}
i.sib=false;if(s.sss)s.sbEle.firstChild.style.display='';var ele=document.elementFromPoint(i.x,i.y);while(ele!=document.body&&ele!=s.sEle){if(ele==s.sbEle.parentNode.parentNode||ele==s.sbEle.lastChild){i.sib=true;break;}else if(ele==s.sbEle.lastChild.firstChild&&s.dEle.style.display!='none')break;ele=ele.parentNode;}
i.osib=i.sib;if(i.sib){if(ele!=s.sbEle.lastChild){if(s.flow=='rtl'||s.flow=='ltr')var m=i.x-$gpl(s.sbEle)+document.body.scrollLeft;else var m=i.y-$gpt(s.sbEle)+document.body.scrollTop;if(s.flow=='rtl'||s.flow=='btt')m=m*-1;A5.scrollers._i[s.contId]._svp(Math.max(0,Math.min(100,(100/i.ss)*m)),'slider');if(s.flow=='ttb')i.so=$u.s.toNum(s.sbEle.lastChild.style.top);else if(s.flow=='btt')i.so=$u.s.toNum(s.sbEle.lastChild.style.bottom);else if(s.flow=='rtl')i.so=$u.s.toNum(s.sbEle.lastChild.style.right);else if(s.flow=='ltr')i.so=$u.s.toNum(s.sbEle.lastChild.style.left);}else A5.scrollers._i[s.contId]._rMsg(A5.scrollers._i[s.contId].value);}else A5.scrollers._i[s.contId]._rMsg(A5.scrollers._i[s.contId].value);A5.scrollers._i[s.contId]._da=true;},onMove:function(i,s,e){var m=i.moveY;var am=i.moveX;var p='slider';if(s.flow=='rtl'||s.flow=='ltr'){am=m;m=i.moveX;}
if(s.flow=='rtl'||s.flow=='btt')m=m*-1;if(i.osib&&s.dsm=='drag'){if(s.location!='before')am=am*-1;if(am>i.sas&&i.sib!=false){A5.scrollers._i[s.contId].setDisplay('dial',true);i.sib=false;i.sts=Math.max(0,Math.min(100,(i.so+((100/i.ss)*m))));i.stm=m;}else if(am<=i.sas&&i.sib==false){A5.scrollers._i[s.contId].setDisplay('dial',false);i.sib=true;}}
if(i.sib)var amnt=Math.max(0,Math.min(100,(i.so+((100/i.ss)*m))));else{if(s.dIvrtD)m=m*-1;if(i.osib)var amnt=i.sts+((((100/s.pps)/s.rng)*s.step)*(m-i.stm));else var amnt=i.so+((((100/s.pps)/s.rng)*s.step)*m);amnt=Math.max(0,Math.min(100,amnt));var p='dial';}
if(amnt!=i.amnt){i.amnt=amnt;A5.scrollers._i[s.contId]._svp(amnt,p);}},onEnd:function(i,s,e){s.cvEle.style.display='';A5.scrollers._i[s.contId]._da=false;if(s.sMsg=='auto'&&!(s.dEle.style.display!='none'&&s.dml=='none'))s.sbEle.lastChild.firstChild.style.display='none';if(s.dEle.style.display=='none'){s.sbEle.firstChild.style.display='none';A5.scrollers._i[s.contId]._sel('slider');$rcn(s.sEle,s.fcn);}}});if(this.dial.show=='always')this.setDisplay('dial',true);if(Math.abs(this.max-this.min)==0)sEle.style.display='none';else sEle.style.display='';}});A5.ViewBox=Class.create({initialize:function(contId,data,settings){if(typeof settings=='undefined'){settings=data;data=null;}
this.contId=contId;$u.o.assign(this,{theme:'',override:'base',type:'template',inputId:'',focusClassName:'',disabledClassName:'',template:'',multiple:false,separator:'\n',selectionMode:'default',loopNavigate:false,loopNavigateNullSelection:true,allowNullSelection:true,allowNullDeselection:false,allowAnyValue:false,autoRefresh:false,scroll:{},layout:'',layouts:{},items:{},onDraw:0,onBeforeDraw:0,onPopulate:0,onBeforePopulate:0,onBeforeSelect:0,onSelect:0,onSelectComplete:0,onClick:0,onDblClick:0,onRightClick:0,onDown:0,onUp:0,onSwipe:0,onDownHold:0,onFocus:0,onBlur:0,value:[],state:{}});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'viewBox');$u.o.assign(this,settings);A5.overrides.assign(this,'viewBox',this.override);for(var t in this.items){$u.o.assign(this.items[t],this._itemD,true);}
for(var l in this.layouts){$u.o.assign(this.layouts[l],this._layoutD,true);for(var t in this.layouts[l].items){$u.o.assign(this.layouts[l].items[t],this._itemD,true);}}
var egName='VIEWBOX.'+contId;var cEle=$(contId);$e.add(cEle,A5.d.evnts.click,this._click,this,false,egName);$e.add(cEle,A5.d.evnts.dblClick,this._dblClick,this,false,egName);$e.add(cEle,'contextmenu',this._rClick,this,false,egName);$e.add(cEle,A5.d.evnts.down,this._down,this,false,egName);$e.add(cEle,A5.d.evnts.up,this._up,this,false,egName);$e.add(cEle,'abstractdownhold',this._downHold,this,false,egName);$e.add(cEle,'abstractswipe',this._swipe,this,false,egName);this._oid='';this._s={id:[],cn:[]};this._i={ids:[],i:[],ia:[],v:[]};this._cl=this.layouts[this.layout];if(this.scroll!=false){var sObj={theme:'',axis:'both'};$u.o.assign(sObj,this.scroll);$u.o.assign(sObj,this._cl.scroll);if(sObj.theme=='')sObj.theme=this.theme;A5.u.drag.add(cEle,'scroll',sObj);}
this._keyWatch=new AUI.KeyWatcher([{key:'up',handle:this._keyPrevItem},{key:'down',handle:this._keyNextItem},{key:'left',handle:this._keyPrevItem},{key:'right',handle:this._keyNextItem},{key:'home',handle:this._keyFirstItem},{key:'end',handle:this._keyLastItem},{key:'enter',handle:this._keyEnter}],this);this._hasFocus=false;var HTMLFocusCatcher=document.createElement('button');HTMLFocusCatcher.id=contId+'.FOCUSCATCHER';$ss(HTMLFocusCatcher,'position: absolute; display: block; font-size: 0px; outline: none; opacity: 0; filter: alpha(opacity=0); height: 0px; width: '+cEle.offsetWidth+'px')
$e.add(HTMLFocusCatcher,'keydown',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);},false,egName);$e.add(HTMLFocusCatcher,'keypress',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);},false,egName);$e.add(HTMLFocusCatcher,'focus',this._focus,this,true,egName);cEle.parentNode.insertBefore(HTMLFocusCatcher,cEle);if(data!=null)this.populate(data);else if(this._cl.type=='static')this.refresh();},destroy:function(){this._keyWatch.off();A5.u.drag.remove($(this.contId),'scroll');$e.removeGroup('VIEWBOX.'+this.contId);},populate:function(d){var keepVal=typeof arguments[1]!='undefined'?arguments[1]:false;var anim=typeof arguments[2]!='undefined'?arguments[2]:false;var fireEvnts=typeof arguments[3]!='undefined'?arguments[3]:true;if(this.onBeforePopulate.constructor==Function&&fireEvnts){var res=this.onBeforePopulate.call(this,d);if(typeof res=='boolean'){if(!res)return false;}}
this.data=d;this.refresh(keepVal);if(this.onPopulate.constructor==Function&&fireEvnts)this.onPopulate.call(this,d);},refresh:function(){this._refreshing=true;var keepVal=typeof arguments[0]!='undefined'?arguments[0]:true;var oldVals=[].concat(this.value);this._cl=this.layouts[this.layout];if(this._cl.type=='static'){if(this._cl.html.constructor==Function)var html=this._cl.html.call(this);else var html=this._cl.html;}else{if(typeof this._cl._t=='undefined')this._cl._t=A5.u.template.parse(this._cl.template);var html=A5.u.template.expand(this.data,{template:this._cl._t},{value:this.value,state:this.state});}
var cEle=$(this.contId);if($ga(cEle,'A5CustomScroll')){var sObj={axis:'both'};$u.o.assign(sObj,this.scroll);$u.o.assign(sObj,this._cl.scroll);$u.o.assign(A5.u.drag._w[cEle.id].s,sObj);delete A5.u.drag._st[cEle.id];}
if(this.onBeforeDraw.constructor==Function)this.onBeforeDraw.call(this,html);A5.u.element.setContent(cEle,html);if(!keepVal)this.value=[];this._s={id:[],cn:[]};this._i={ids:[],i:[],ia:[],v:[]};var itd=[];this._getIds(cEle,itd);itd.sort(function(a,b){if(a.ni>b.ni)return 1;else if(a.ni<b.ni)return-1;return 0;});for(var i=0;i<itd.length;i++){this._i.ids.push(itd[i].id);this._i.v.push(itd[i].v);this._i.i.push(itd[i].i);this._i.ia.push(itd[i].ia);}
if(!this.allowNullSelection&&this._i.ids.length!=0&&!(keepVal&&oldVals.length!=0))this.navigate('first');if(keepVal)this.setValue(this.value,false);if(this.onDraw.constructor==Function)this.onDraw.call(this,cEle);this._refreshing=false;},setState:function(s){$u.o.assign(this.state,s);},getState:function(s){return this.state;},clearState:function(s){this.state={};},setValue:function(v){var es=typeof arguments[1]!='undefined'?arguments[1]:true;var ids=[];if(v.constructor!=Array)v=[v];if(!this.multiple)v=[v[0]];var iIds=false;for(var i=0;i<v.length;i++){tIds=this._valueToId(v[i]);if(tIds)ids=ids.concat(tIds);}
this._deselAll();if(this.allowAnyValue)this.value=v;this._sel(ids,es);if(this.allowAnyValue)this.value=v;},setLayout:function(layout){this.layout=layout;this.refresh();},setDisabled:function(b){if(this.disabledClassName!=''){if(b)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);}
this.disabled=b;},scrollToItem:function(v){var tIds=this._valueToId(v);if(tIds){var ele=$(tIds[0]);if(ele){var cEle=$(this.contId);var s=typeof arguments[1]!='undefined'?arguments[1]:{};A5.u.element.setScroll(cEle,ele,s);}}},setElementDisabled:function(v,b){var ids=this._valueToId(v);if(ids){var ele=false;var v=[].concat(this.value);var setVal=false;var ia='';for(var i=0;i<ids.length;i++){ele=$(ids[i]);$sa(ele,'a5-disabled',''+b);ele.disabled=b;ia=$ga(ele,'a5-item');ia=ia.split(':').shift();var cn=this._getItemObj(ia).disabledClassName;if(cn!=''){if(b)$acn(ele,cn);else $rcn(ele,cn);}
if(b){var indx=$u.a.find(this._s.id,ids[i]);if(indx!=-1){v.splice(indx,1);setVal=true;}}}
if(setVal)this.setValue(v);}},getElement:function(v){var ids=this._valueToId(v);if(!ids)return false;var eles=[];for(var i=0;i<ids.length;i++)eles.push($(ids[i]));return eles;},setElementClass:function(v,c){var eles=this.getElement(v);$scn(eles,c);},addElementClass:function(v,c){var eles=this.getElement(v);$acn(eles,c);},removeElementClass:function(v,c){var eles=this.getElement(v);$rcn(eles,c);},navigate:function(d){if(this._i.ids.length==0)return false;d=d.toLowerCase();if(this.value.length==0){if(d[0]=='n')d='first';else if(d[0]=='p')d='last';}
if(d[0]=='n'){var v=this._getNextId(this._s.id[0]);if(v)this.setValue('#'+v);}else if(d[0]=='p'){var v=this._getPrevId(this._s.id[0]);if(v)this.setValue('#'+v);}else if(d[0]=='f'){if(this._idSelectable(this._i.ids[0]))var v=this._i.ids[0];else var v=this._getNextId(this._i.ids[0]);if(v)this.setValue('#'+v);}else if(d[0]=='l'){if(this._idSelectable(this._i.ids[this._i.ids.length-1]))var v=this._i.ids[this._i.ids.length-1];else var v=this._getPrevId(this._i.ids[this._i.ids.length-1]);if(v)this.setValue('#'+v);}},_click:function(e,ci){if(A5.u.drag._sDif>=$e.abstractEvents.click.scrollMax)return false;if(ci.disabled)return false;var id='';var r=ci._aEle(e);if(ci._hasFocus==false)ci._focus(e);$(ci.contId+'.FOCUSCATCHER').focus();if(r&&ci._startItem){if(ci._startItem.i==r.i){if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){id=r.ele.id;var io=ci._getItemObj(r.i);if(io.selectable){if(!(ci.multiple&&ci.selectionMode=='additive'))ci._deselAll(r.ele.id);ci._selLow(r.v,r.ia,io,r.ele,true);ci._selComp(true);}
if(io.onClick.constructor==Function)io.onClick.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onClick.constructor==Function)ci.onClick.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onClick.constructor==Function)ci.onClick.call(ci,false,false,false,false,e);}else{if(ci.onClick.constructor==Function)ci.onClick.call(ci,false,false,false,false,e);}
if(this._oid==id)this._isdc=true;else{this._isdc=false;this._oid=id;}
delete r;},_dblClick:function(e,ci){if(ci.disabled||!this._isdc)return false;var r=ci._aEle(e);if(r){if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){var io=ci._getItemObj(r.i);if(io.onDblClick.constructor==Function)io.onDblClick.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onDblClick.constructor==Function)ci.onDblClick.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onDblClick.constructor==Function)ci.onDblClick.call(ci,false,false,false,false,e);delete r;},_rClick:function(e,ci){if(ci.disabled)return false;var r=ci._aEle(e);if(r){if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){var io=ci._getItemObj(r.i);if(io.onRightClick.constructor==Function)io.onRightClick.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onRightClick.constructor==Function)ci.onRightClick.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onRightClick.constructor==Function)ci.onRightClick.call(ci,false,false,false,false,e);delete r;},_down:function(e,ci){if(ci.disabled)return false;var r=ci._aEle(e);ci._startItem=false;if(r){var io=ci._getItemObj(r.i);ci._startItem={i:r.i,ia:r.ia,v:r.v,id:r.ele.id};if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){if(io.onDown.constructor==Function)io.onDown.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onDown.constructor==Function)ci.onDown.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onDown.constructor==Function)ci.onDown.call(ci,false,false,false,false,e);delete r;},_up:function(e,ci){if(ci.disabled)return false;var r=ci._aEle(e);if(r){if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){var io=ci._getItemObj(r.i);if(io.onUp.constructor==Function)io.onUp.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onUp.constructor==Function)ci.onUp.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onUp.constructor==Function)ci.onUp.call(ci,false,false,false,false,e);delete r;},_downHold:function(e,ci){if(ci.disabled)return false;var r=ci._aEle(e);if(r){if($ga(r.ele,'a5-disabled')!='true'&&!r.ele.disabled){var io=ci._getItemObj(r.i);if(io.onDownHold.constructor==Function)io.onDownHold.call(ci,r.v,r.ia,io,r.ele,e);else if(ci.onDownHold.constructor==Function)ci.onDownHold.call(ci,r.v,r.ia,io,r.ele,e);}}else if(ci.onDownHold.constructor==Function)ci.onDownHold.call(ci,false,false,false,false,e);delete r;},_swipe:function(e,ci){if(ci.disabled)return false;if(ci._startItem){var ele=$(ci._startItem.id);if($ga(ele,'a5-disabled')!='true'&&!ele.disabled){var io=ci._getItemObj(ci._startItem.i);if(io.onSwipe.constructor==Function)io.onSwipe.call(ci,ci._startItem.v,ci._startItem.ia,io,$(ci._startItem.id),e);else if(ci.onSwipe.constructor==Function)ci.onSwipe.call(ci,ci._startItem.v,ci._startItem.ia,io,$(ci._startItem.id),e);}}else if(ci.onSwipe.constructor==Function)ci.onSwipe.call(ci,false,false,false,false,e);},_focus:function(e){if(this._hasFocus==false){this._keyWatch.on();this._hasFocus=true;$e.executeGroup('A5ControlsFocusCatcher');$e.removeGroup('A5ControlsFocusCatcher');$e.add(document.documentElement,A5.d.evnts.up,this._blur,this,true,'A5ControlsFocusCatcher');if(this.focusClassName!='')$acn($(this.contId),this.focusClassName);if(this.onFocus.constructor==Function)this.onFocus();}
$e.stopEvent(e);return false;},_blur:function(){this._hasFocus=false;this._keyWatch.off();if(this.focusClassName!='')$rcn($(this.contId),this.focusClassName);$e.remove(document.documentElement,A5.d.evnts.up,this._blur);if(this.onBlur.constructor==Function)this.onBlur();},_keyPrevItem:function(){if(this.disabled)return false;this.navigate('prev');},_keyNextItem:function(){if(this.disabled)return false;this.navigate('next');},_keyFirstItem:function(){if(this.disabled)return false;this.navigate('first');},_keyLastItem:function(){if(this.disabled)return false;this.navigate('last');},_keyEnter:function(){if(this.disabled)return false;if(this._s.id.length!=0){var ele=$(this._s.id[0]);var ia=$ga(ele,'a5-item');ia=ia.split(':');var v=this._getValue(ele);var i=ia.shift();ia=ia.join(':');var io=this._getItemObj(i);if(io.onClick.constructor==Function)io.onClick.call(this,v,ia,io,ele);else if(this.onClick.constructor==Function)this.onClick.call(this,v,ia,io,ele);}else if(this.onClick.constructor==Function)this.onClick.call(this,false,false,false,false);},_sel:function(ids,es){var indx='';var id='';var v='';var i=null;var ele=null;var fEle=false;for(var k=0;k<ids.length;k++){id=ids[k];indx=$u.a.find(this._i.ids,id);if(indx!=-1){v=this._i.v[indx];i=this._getItemObj(this._i.i[indx]);ele=$(id);if(!fEle)fEle=ele;this._selLow(v,this._i.ia[indx],i,ele,es);}}
if(fEle)this.scrollToItem('#'+fEle.id);this._selComp(es);},_selLow:function(v,ia,i,ele,es){var indx=$u.a.find(this._s.id,ele.id);if(indx!=-1){if(this.allowNullDeselection==false&&this.value.length==1){if(es){var r=true;if(i.onBeforeSelect.constructor==Function)r=i.onBeforeSelect.call(this,v,ia,i,ele);else if(this.onBeforeSelect.constructor==Function)r=this.onBeforeSelect.call(this,v,ia,i,ele);if(typeof r=='undefined'||r){if(i.onSelect.constructor==Function)i.onSelect.call(this,v,ia,i,ele);else if(this.onSelect.constructor==Function)this.onSelect.call(this,v,ia,i,ele);}}
return false;}
$rcn(this._s.id[indx],this._s.cn[indx]);this.value.splice(indx,1);this._s.id.splice(indx,1);this._s.cn.splice(indx,1);}else{var r=true;if(es){if(i.onBeforeSelect.constructor==Function)r=i.onBeforeSelect.call(this,v,ia,i,ele);else if(this.onBeforeSelect.constructor==Function)r=this.onBeforeSelect.call(this,v,ia,i,ele);}
if(typeof r=='undefined'||r){this.value.push(v);this._s.id.push(ele.id);this._s.cn.push(i.selectedClassName);$acn(ele,i.selectedClassName);if(es){if(i.onSelect.constructor==Function)i.onSelect.call(this,v,ia,i,ele);else if(this.onSelect.constructor==Function)this.onSelect.call(this,v,ia,i,ele);}
return true;}}
return false;},_selComp:function(es){if(this.inputId!=''){$(this.inputId).value=this.value.join(this.separator);if(es)$e.execute(this.inputId,'change');}
if(es&&this.onSelectComplete.constructor==Function)this.onSelectComplete.call(this,this.value);if(this.autoRefresh&&!this._refreshing)this.refresh();},_deselAll:function(keepId){var ns={id:[],cn:[]};var val=[];for(var j=0;j<this._s.id.length;j++){if(this._s.id[j]==keepId){ns.id.push(this._s.id[j]);ns.cn.push(this._s.cn[j]);val.push(this._getValue($(keepId)));}else $rcn(this._s.id[j],this._s.cn[j]);}
this.value=val;this._s=ns;},_aEle:function(e,cEle){var cEle=$(this.contId);var coor=$e.getCoors(e);var ele=document.elementFromPoint(coor.clientX,coor.clientY);if(!ele)return false;var ta='';while(ele!=cEle&&ele!=document.body){ia=$ga(ele,'a5-item');if(ia!=null&&ia!=''){ia=ia.split(':');var v=this._getValue(ele);var i=ia.shift();ia=ia.join(':');var io=this._getItemObj(i);if(typeof io=='undefined')return false;else return{i:i,ia:ia,v:v,ele:ele};}
ele=ele.parentNode;}
return false;},_getIds:function(cEle,d){var indx=typeof arguments[2]=='number'?arguments[2]:0;var ele=cEle.firstChild;if(!ele)return indx;indx=this._pushId(ele,d,indx);while(ele.nextSibling){ele=ele.nextSibling;indx=this._pushId(ele,d,indx);}
return indx;},_pushId:function(ele,d,indx){if(ele.nodeType==1){var ia=$ga(ele,'a5-item');if(ia!=null&&ia!=''){if(ele.id=='')ele.id=A5.u.getUniqueId();ia=ia.split(':');var i=ia.shift();var io=this._getItemObj(i);if(io.selectable){var v=this._getValue(ele);var ni=$ga(ele,'a5-navindex');indx++;if(ni==''||ni==null)ni=10000+indx;d.push({id:ele.id,v:v,i:i,ia:ia.join(':'),ni:ni});}}
if(ele.firstChild)indx=this._getIds(ele,d,indx);}
return indx;},_getValue:function(ele){var v=$ga(ele,'a5-value');if(v==''||v==null)v=ele.id;return v;},_getNextId:function(id){var cEle=$(this.contId);var indx=$u.a.find(this._i.ids,id);if(indx==-1)return false;indx=indx+1;if(indx>=this._i.ids.length){if(this.loopNavigate){if(this.loopNavigateNullSelection&&this.allowNullSelection){this._deselAll();this._selComp(true);return false;}
indx=0;}else return false;}
var nId='';for(var i=indx;i<this._i.ids.length;i++){nId=this._i.ids[i];if(this._idSelectable(nId,cEle))return nId;}
if(this.loopNavigate){if(this.loopNavigateNullSelection&&this.allowNullSelection){this._deselAll();this._selComp(true);return false;}
for(var i=0;i<indx;i++){nId=this._i.ids[i];if(this._idSelectable(nId,cEle))return nId;}}
return false;},_getPrevId:function(id){var cEle=$(this.contId);var indx=$u.a.find(this._i.ids,id);if(indx==-1)return false;indx=indx-1;if(indx<0){if(this.loopNavigate){if(this.loopNavigateNullSelection&&this.allowNullSelection){this._deselAll();this._selComp(true);return false;}
indx=this._i.ids.length-1;}else return false;}
var pId='';for(var i=indx;i>=0;i--){pId=this._i.ids[i];if(this._idSelectable(pId,cEle))return pId;}
if(this.loopNavigate){if(this.loopNavigateNullSelection&&this.allowNullSelection){this._deselAll();this._selComp(true);return false;}
for(var i=this._i.ids.length-1;i>indx;i--){pId=this._i.ids[i];if(this._idSelectable(pId,cEle))return pId;}}
return false;},_idSelectable:function(id,cEle){var sEle=$(id);if(!sEle||$ga(sEle,'a5-disabled')=='true')return false;while(sEle!=cEle&&sEle!=document.body){if(sEle.style.display=='none'||sEle.style.visibility=='hidden')return false;sEle=sEle.parentNode;}
return true;},_valueToId:function(v){if(!v)return false;var ids=[];if(v.length>0){if(v[0]=='#')return[v.substr(1)];else if(v[0]=='@'){v=v.split(':');var i=v.shift();var ia=v.join(':');for(var k=0;k<this._i.v.length;k++){if(this._i.i[k]==i&&this._i.ia[k]==ia)ids.push(this._i.ids[k]);}}else{for(var k=0;k<this._i.v.length;k++){if(this._i.v[k]==v)ids.push(this._i.ids[k]);}}}
if(ids.length!=0)return ids;else return false;},_getItemObj:function(i){if(typeof this._cl.items[i]=='object')return this._cl.items[i];else return this.items[i];},_layoutD:{type:'template',html:'',template:'',scroll:{},items:{}},_itemD:{selectable:true,selectedClassName:'',disabledClassName:'',onClick:false,onDblClick:false,onRightClick:false,onBeforeSelect:false,onSelect:false,onDown:false,onUp:false,onSwipe:false,onDownHold:false}});A5.ListBox=Class.create();A5.ListBox.prototype={initialize:function(contId,data,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',inputId:'',disabledClassName:'',focusClassName:'',multiple:false,separator:'\n',selectionMode:'default',loopNavigate:false,loopNavigateNullSelection:true,allowNullSelection:true,allowNullDeselection:false,defaultValues:false,calculateValue:0,scroll:{},layout:'',layouts:{},data:{nullHTML:''},columnLayout:{header:{show:true,className:'',item:{className:'',hoverClassName:'',order:{ascendingImage:'',descendingImage:'',className:'',style:0},resize:{location:'after',className:'',handle:{className:'',size:'14px'}}}},data:{item:{className:'',style:''}}},view:{type:'default',size:50,maxSize:0,offset:10,navigation:{pull:{allow:true,size:40},prev:{html:'Prev',className:'',pressedClassName:''},next:{html:'Next',className:'',pressedClassName:''}}},group:{auto:[],navigator:{show:false,location:'right',offset:4,size:28,process:function(d){return d;},className:'',focusClassName:'',style:0}},scroller:{show:false},header:{show:true,html:'',className:'',style:0},footer:{show:true,html:'',className:'',style:0},lock:{className:'',html:''},content:{header:{show:true,html:'',className:'',style:0},footer:{show:true,html:'',className:'',style:0}},item:{className:'',hoverClassName:'',selectedClassName:'',style:0,titleClassName:'',separatorClassName:'',template:''},items:{},animation:{swap:{flow:'ltr',duration:600},lock:{duration:200}},state:{view:{start:0,end:0,hasPrev:false,hasNext:false}},filter:false,order:false,disabled:false,readOnly:false,onFocus:0,onBlur:0,onRightClick:0,onSelect:0,onBeforeSelect:0,onClick:0,onDblClick:0,onPopulate:0,onBeforePopulate:0,onListDraw:0,onBeforeListDraw:0,onItemDraw:0,onBeforeItemDraw:0,onNavigate:0,onBeforeAddRows:0,onAddRows:0,onBeforeRemoveRows:0,onRemoveRows:0,onBeforeUpdateRow:0,onUpdateRow:0,onBeforeFilter:0,onFilter:0,onBeforeOrder:0,onOrder:0,selection:[],selectionData:[],selectionKey:[],value:[],_hasFocus:false});if(typeof A5._listBoxDefaults!='undefined')$u.o.assign(this,A5._listBoxDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'listbox');$u.o.assign(this,settings);if(typeof this.scroller.theme=='undefined')this.scroller.theme=this.theme;A5.overrides.assign(this,'listBox',this.override);if(typeof this.item.template!='undefined'){if(this.layout=='')this.layout='*default';this.layouts['*default']={type:'template',template:this.item.template};}
if(typeof this.item.calculateValue!='undefined')this.calculateValue=this.item.calculateValue;if(this._template!=''&&this.calculateValue.constructor!=Function){this.calculateValue=function(data){if(data.constructor==Object){var val=new Array();for(prop in data)val.push(data[prop]);return val.join('\n');}else if(data.constructor==Array){return data.join('\n');}else return data;}}
var contEle=$(this.contId);if(contEle.style.position!='absolute')contEle.style.position='relative';$ss(contEle,$gs(contEle)+'; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');$sa(contEle,'A5StoredStylePadding',contEle.style.padding);this._keyWatch=new AUI.KeyWatcher([{key:'up',handle:this._keyPrevItem},{key:'down',handle:this._keyNextItem},{key:'left',handle:this._keyPrevItem},{key:'right',handle:this._keyNextItem},{key:'home',handle:this._keyFirstItem},{key:'end',handle:this._keyLastItem},{key:'enter',handle:this._keyEnter}],this);this._hasFocus=false;var egName='LISTBOX.'+contId;var HTMLFocusCatcher=document.createElement('button');HTMLFocusCatcher.id=contId+'.FOCUSCATCHER';$ss(HTMLFocusCatcher,'position: absolute; display: block; font-size: 0px; outline: none; opacity: 0; filter: alpha(opacity=0); height: 0px; width: '+contEle.offsetWidth+'px')
$e.add(HTMLFocusCatcher,'keydown',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);},false,egName);$e.add(HTMLFocusCatcher,'keypress',function(e){var keyCode=e.charCode||e.keyCode;if(keyCode!=9)$e.preventDefault(e);},false,egName);$e.add(HTMLFocusCatcher,'focus',this._focus,this,true,egName);$e.add(contEle,A5.d.evnts.click,this._onClick,this,true,egName);$e.add(contEle,A5.d.evnts.dblClick,this._onDblClick,this,true,egName);$e.add(contEle,'contextmenu',this._rClick,this,true,egName);$e.add(contEle,A5.d.evnts.down,this._down,this,true,egName);$e.add(contEle,'a5listnavevent',this._navEvnt,this,true,egName);contEle.parentNode.insertBefore(HTMLFocusCatcher,contEle);this._data=[].concat(data);this._clOrderCol=-1;this._clOrderCols=[];this._clOrderDir=0;this._clfWidth=-1;this._clfFlex=false;this._clfCSC={i:false,dir:0};this._ioStyle=false;this.view._ds=-1;this.view._de=-1;this._curL='';this._curLObj={};this._hPad=0;this._vPad=0;this._cssSelP=this.contId.split(/[\W]*/).join('');this._isInit=true;this.refresh();this.setDisabled(this.disabled);this._isInit=false;this._l=-2;this._tl=-2;this._lTO=0;},destroy:function(){this._keyWatch.off();A5.u.drag.remove($(this.contId+'.GROUPNAV'),'custom');A5.u.drag.remove($(this.contId+'.CHEADER'),'custom');A5.u.drag.remove($(this.contId+'.CONTENTWRAPPER'),'scroll');$e.removeGroup('LISTBOX.'+this.contId);},setDisabled:function(val){if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;},setLayout:function(layout){this.layout=layout;this.refresh();},setColumnOrderImage:function(indx,dir){if(dir==0)indx=false;if(this.columnLayout.header.show&&this._curLObj.columns.length!=0){if(typeof this._clfCSC.i=='number')$(this.contId+'.CHEADER.'+this._clfCSC.i+'.IMG').style.display='none';this._clfCSC={i:indx,d:dir};if(typeof this._clfCSC.i=='number'){var iEle=$(this.contId+'.CHEADER.'+this._clfCSC.i+'.IMG');iEle.style.display='';if(this._clfCSC.d<0)A5.u.icon.update(iEle,this.columnLayout.header.item.order.descendingImage);else A5.u.icon.update(iEle,this.columnLayout.header.item.order.ascendingImage);}}else this._clfCSC={i:indx,d:dir};},setDisplay:function(part,val){if(part=='column-header'){this.columnLayout.header.show=val;this.refresh();}else if(part=='content-header'){var ele=$(this.contId+'.CONTENT.HEADER');this.content.header.show=val;if(val)ele.style.display='';else ele.style.display='none';}else if(part=='content-footer'){var ele=$(this.contId+'.CONTENT.FOOTER');this.content.footer.show=val;if(val)ele.style.display='';else ele.style.display='none';}else if(part=='header'){var ele=$(this.contId+'.HEADER');this.header.show=val;if(val)ele.style.display='';else ele.style.display='none';this._resize();}else if(part=='footer'){var ele=$(this.contId+'.FOOTER');this.footer.show=val;if(val)ele.style.display='';else ele.style.display='none';this._resize();}else if(part=='scroller'){if(this._scr){this._scr.setDisplay(val);if(val)this._scr.refresh();}}},setLock:function(val){if((this._l<0&&!val)||(this._l>0&&val))return false;var lEle=$(this.contId+'.LOCK');if(val){if(this._l==-1&&!this._isInit){this._tl=2;return true;}else{lEle.className=this.lock.className;lEle.innerHTML=this.lock.html;lEle.style.display='';lEle.style.opacity='1';this._l=1;this._tl=2;}}else{if(this._l==1&&!this._isInit){this._tl=-2;return true;}else{lEle.style.opacity='0';this._l=-1;this._tl=-2;}}
var classInst=this;setTimeout(function(){classInst._lockComp();delete classInst;},this.animation.lock.duration+10);},_lockComp:function(){this._l=this._l*2;if(this._l<0&&$(this.contId+'.LOCK'))$(this.contId+'.LOCK').style.display='none';if(this._l!=this._tl){if(this._tl<0)this.setLock(false);else this.setLock(true);}},refresh:function(){var keepVal=typeof arguments[0]!='undefined'?arguments[0]:true;var egName='LISTBOX.'+this.contId;var lEle=$(this.contId);this._oldWidth=lEle.offsetWidth;this._clOrderCol=-1;this._clOrderCols=[];this._clOrderDir=0;this._clfWidth=-1;this._clfFlex=false;this._clfCSC={i:false,dir:0};this._ioStyle=false;this._tempIsDyn=false;var lObj=this.layouts[this.layout];$u.o.assign(lObj,this._lDefaults,true);var pScroll=false;if(this._curLObj==lObj)pScroll=true;if(this._isInit){lEle.innerHTML='';var hEle=document.createElement('div');hEle.id=this.contId+'.HEADER';$sa(hEle,'a5-item','*header');hEle.className=this.header.className;hEle.innerHTML=this.header.html;if(typeof this.header.style=='object'||typeof this.header.style=='string')$ss(hEle,this.header.style);$ss(hEle,$gs(hEle)+'; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');lEle.appendChild(hEle);var chEle=document.createElement('div');chEle.id=this.contId+'.CHEADER';chEle.className=this.columnLayout.header.className;$ss(chEle,'overflow: hidden; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');var chgEle=document.createElement('div');chgEle.id=this.contId+'.CHEADER.GROUP';chgEle.style.whiteSpace='nowrap';chEle.appendChild(chgEle);var crEle=document.createElement('div');crEle.id=this.contId+'.COLRESIZE';crEle.className=this.columnLayout.header.item.resize.className;$ss(crEle,'position: absolute; top: 0px; display: none;');chEle.appendChild(crEle);A5.u.drag.add(chEle,'custom',{stopPropagation:true,tolerance:-1,contId:this.contId,crEle:crEle,onStart:function(d,c){var ele=document.elementFromPoint(d.x,d.y);var attr=String($ga(ele,'a5-item')).split(':');if(attr[0]=='*col-resize'){d.a=true;d.sw=ele.parentNode.offsetWidth;c.indx=Number(attr[1]);c.crEle.style.left=ele.parentNode.offsetLeft+'px';c.crEle.style.height=ele.parentNode.offsetHeight+'px';c.crEle.style.width=d.sw+'px';c.crEle.style.display='';}},onMove:function(d,c){if(d.a)c.crEle.style.width=(d.sw+d.moveX)+'px';},onEnd:function(d,c){if(d.a){c.m=d.moveX;$e.execute(this,'a5listcoldrag');d.a=false;c.crEle.style.display='none';}}});$e.add(chEle,'a5listcoldrag',this._colResize,this,true,egName);lEle.appendChild(chEle);if((!A5.flags.supportsTouch&&!(this.useDragScrolling=='always'&&A5.u.css.supportsTransition))||this.useDragScrolling=='never')var tProp='';else var tProp='translate3d(0px,0px,0px)';var cwEle=document.createElement('div');cwEle.id=this.contId+'.CONTENTWRAPPER';$e.add(cwEle,A5.u.css.properties.transitionEndEvent,function(){this.style[A5.u.css.properties.transitionDOM]='';});$ss(cwEle,'position: relative; -webkit-transform: '+tProp+'; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');lEle.appendChild(cwEle);var cdhEle=document.createElement('div');cdhEle.id=this.contId+'.CONTENT.HEADER';cdhEle.className=this.content.header.className+' '+this._cssSelP+'W';$sa(cdhEle,'a5-item','*content-header');if(typeof this.content.header.style=='object'||typeof this.content.header.style=='string')$ss(cdhEle,this.content.header.style);cdhEle.style['WebkitTransform']=tProp;cwEle.appendChild(cdhEle);var cEle=document.createElement('div');cEle.id=this.contId+'.CONTENT';cEle.style['WebkitTransform']=tProp;cwEle.appendChild(cEle);var cdfEle=document.createElement('div');cdfEle.id=this.contId+'.CONTENT.FOOTER';cdfEle.className=this.content.footer.className+' '+this._cssSelP+'W';$sa(cdfEle,'a5-item','*content-footer');if(typeof this.content.footer.style=='object'||typeof this.content.footer.style=='string')$ss(cdfEle,this.content.footer.style);cdfEle.style.clear='both';cdfEle.style['WebkitTransform']=tProp;cwEle.appendChild(cdfEle);if(A5.flags.isFireFox)$e.add(cwEle,'transitionend',Function('var cEle = $(\''+this.contId+'.CONTENTTEMP\'); if(cEle){ this.style[\'MozTransition\'] = \'\'; $(\''+this.contId+'\').removeChild(cEle);}'),false,egName);else if(A5.flags.isOpera)$e.add(cwEle,'oTransitionEnd',Function('var cEle = $(\''+this.contId+'.CONTENTTEMP\'); if(cEle){ this.style[\'OTransition\'] = \'\'; $(\''+this.contId+'\').removeChild(cEle);}'),false,egName);else if(A5.flags.isWebKit)$e.add(cwEle,'webkitTransitionEnd',Function('var cEle = $(\''+this.contId+'.CONTENTTEMP\'); if(cEle){ this.style[\'WebkitTransition\'] = \'\'; $(\''+this.contId+'\').removeChild(cEle);}'),false,egName);var cfEle=document.createElement('div');cfEle.style.clear='both';cwEle.appendChild(cfEle);var fEle=document.createElement('div');fEle.id=this.contId+'.FOOTER';$sa(fEle,'a5-item','*footer');fEle.className=this.footer.className;fEle.innerHTML=this.footer.html;if(typeof this.footer.style=='object'||typeof this.footer.style=='string')$ss(fEle,this.footer.style);$ss(fEle,$gs(fEle)+'; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');lEle.appendChild(fEle);if(this.view.type=='dynamic'||this.view.type=='page'){if(this.view.navigation.pull.allow){this.scroll._pn={id:this.contId,size:this.view.navigation.pull.size,axis:'y',nACn:this.view.navigation.next.pressedClassName,pACn:this.view.navigation.prev.pressedClassName,pe:0,pre:0};if(this.scroll.onPull)this.scroll._pn.pe=this.scroll.onPull;if(this.scroll.onPullRelease)this.scroll._pn.pre=this.scroll.onPullRelease;if(lObj.type=='template-horizontal')this.scroll._pn.axis='x';this.scroll.onPull=function(i,s,x,y){var v=y;if(s._pn.axis=='x')v=x;clearTimeout(s._rTO);if(v<s._pn.size*-1)$acn(s._pn.id+'.PREV',s._pn.pACn);else $rcn(s._pn.id+'.PREV',s._pn.pACn);if(v>s._pn.size)$acn(s._pn.id+'.NEXT',s._pn.nACn);else $rcn(s._pn.id+'.NEXT',s._pn.nACn);if(s._pn.pe.constructor==Function)s._pn.pe.apply(this,arguments);}
this.scroll.onPullRelease=function(i,s,x,y){var v=y;if(s._pn.axis=='x')v=x;if(Math.abs(v)>s._pn.size){$rcn(s._pn.id+'.PREV',s._pn.pACn);$rcn(s._pn.id+'.NEXT',s._pn.nACn);var dir='p';if(v>s._pn.size)dir='n';A5.u.drag.setDisabled(this,'scroll',true,false);s._rTO=setTimeout(Function('$sa(\''+s._pn.id+'\',\'a5listnavdir\',\''+dir+'\'); $e.execute(\''+s._pn.id+'\',\'a5listnav\');'),s.momentum.duration);}
if(s._pn.pre.constructor==Function)s._pn.pre.apply(this,arguments);}
$e.add(lEle,'a5listnav',this._viewNavEvnt,this,false,egName);}}
var sObj={theme:'',axis:'both'};$u.o.assign(sObj,this.scroll);$u.o.assign(sObj,lObj.scroll);if(sObj.theme=='')sObj.theme=this.theme;A5.u.drag.add(cwEle,'scroll',sObj);$e.add(lEle,'a5resize',this._resize,this,true,egName);if(this.scroller.show){if(typeof this.scroller.message=='string'){this.scroller.mTmpl=A5.u.template.parse(this.scroller.message);this.scroller.message=function(d){var html=d;if(this._d){html=A5.u.template.expand(this._d[this._dm[d]],{template:this.mTmpl});html=html.split('{*row}').join(d);html=html.split('{*dataRow}').join(this._d[this._dm[d]]['*renderIndex']);html=html.split('{*dataRowOneBased}').join(this._d[this._dm[d]]['*renderIndex']+1);html=html.split('{*key}').join(this._dm[d]);this.mTmpl.html=[];}
return html;}}else if(typeof this.scroller.message=='undefined')this.scroller.message=function(d){return d+1};else{this.scroller._message=this.scroller.message;this.scroller.message=function(d){return this._message(this._d[this._dm[d]])};}
this._scr=new A5.Scroller(this.contId+'.CONTENTWRAPPER',this.scroller);this._scr._onSelect=this._scr.onSelect;this._scr.onSelect=function(val){$e.execute(this.contId,'a5listscroller');if(this._onSelect.constructor==Function)this._onSelect.call(this,val);}
$e.add(cwEle,'a5listscroller',this._scrollerEvnt,this,true,egName);}
var gnEle=document.createElement('div');gnEle.id=this.contId+'.GROUPNAV';gnEle.className=this.group.navigator.className;if(typeof this.group.navigator.style=='object'||typeof this.group.navigator.style=='string')$ss(gnEle,this.group.navigator.style);gnEle.style['WebkitTransform']='translate3d(0px,0px,0px)';lEle.appendChild(gnEle);if(!$(cwEle.id+'.SCROLLWRAPPER')){$e.add(cwEle,'scroll',function(e,classInst){var gnEle=$(classInst.contId+'.GROUPNAV');gnEle.style.marginTop=(this.scrollTop-Math.round(gnEle.offsetHeight/2))+'px';if(classInst.group.navigator.location=='left'||classInst.group.navigator.location=='right')gnEle.style.marginTop=(this.scrollTop-Math.round(gnEle.offsetHeight/2))+'px';else gnEle.style.marginLeft=(this.scrollLeft-Math.round(gnEle.offsetWidth/2))+'px';},this,false,egName);}
A5.u.drag.add(gnEle,'custom',{stopPropagation:true,tolerance:-1,focusCls:this.group.navigator.focusClassName,onStart:function(d,c){var bcr=this.getBoundingClientRect()
if(c.daxis=='y'){c.eleOff=bcr.top;c.eleSize=this.offsetHeight;}else{c.eleOff=bcr.left;c.eleSize=this.offsetWidth;}
c.group=-1;this.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px','0px');if(c.focusCls!='')$acn(this,c.focusCls);c.onMove.call(this,d,c);},onMove:function(d,c){var off=d[c.daxis];var grp=-1;if(off<c.eleOff)grp=0;else if(off>c.eleOff+c.eleSize)grp=c.groups;else grp=Math.round(((off-c.eleOff)/c.eleSize)*c.groups);if(grp!=c.group){c.group=grp;$e.execute(this,'a5listgotogroup');}},onEnd:function(d,c){this.style[A5.u.css.properties.transformDOM]=c._trans;if(c.focusCls!='')$rcn(this,c.focusCls);}});$e.add(gnEle,'a5listgotogroup',function(){var grp=A5.u.drag._w[this.contId+'.GROUPNAV'].c.group;this.scrollToItem(this._groupsNDI[grp],{mode:'top'});},this,true,egName);var lcEle=document.createElement('div');lcEle.id=this.contId+'.LOCK';$ss(lcEle,'position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; background: white; display: none;');lcEle.style[A5.u.css.properties.transitionDOM]='opacity '+this.animation.lock.duration+'ms ease';lEle.appendChild(lcEle);this.setLock(true);this.setLock(false);$e.add(cwEle,'scroll',this._scroll,this,false,egName);lEle.style.overflow='hidden';lEle.style.padding='0px';cwEle.style.height='100px';if($ga(cwEle,'A5CustomScroll')){cwEle.style.overflow='hidden';cwEle.style.overflowX='hidden';cwEle.style.overflowY='hidden';}else cwEle.style.overflow='auto';cEle.innerHTML='';cEle.style.display='';cEle.style.position='relative';}else{var chEle=$(this.contId+'.CHEADER');var chgEle=$(this.contId+'.CHEADER.GROUP');var cwEle=$(this.contId+'.CONTENTWRAPPER');var cdhEle=$(this.contId+'.CONTENT.HEADER');var cdfEle=$(this.contId+'.CONTENT.FOOTER');var hEle=$(this.contId+'.HEADER');var fEle=$(this.contId+'.FOOTER');var cEle=$(this.contId+'.CONTENT');var gnEle=$(this.contId+'.GROUPNAV');if($ga(cwEle,'A5CustomScroll')){if(this.view.type=='dynamic'||this.view.type=='page'){if(this.view.navigation.pull.allow){this.scroll._pn.axis='y';if(lObj.type=='template-horizontal')this.scroll._pn.axis='x';}}
var sObj={axis:'both'};$u.o.assign(sObj,this.scroll);$u.o.assign(sObj,lObj.scroll);$u.o.assign(A5.u.drag._w[cwEle.id].s,sObj);delete A5.u.drag._st[cwEle.id];}}
cEle.style.whiteSpace='';if(this.columnLayout.header.show&&lObj.columns.length!=0)chEle.style.display='';else chEle.style.display='none';if(this.header.show&&this.header.html!=''){hEle.style.display='';if(this._isInit)hEle.innerHTML=this.header.html;}else hEle.style.display='none';if(this.footer.show&&this.footer.html!=''){fEle.style.display='';if(this._isInit)fEle.innerHTML=this.footer.html;}else fEle.style.display='none';if(this.content.header.show){cdhEle.style.display='';if(this._isInit)cdhEle.innerHTML=this.content.header.html;}else cdhEle.style.display='none';if(this.content.footer.show){cdfEle.style.display='';if(this._isInit)cdfEle.innerHTML=this.content.footer.html;}else cdfEle.style.display='none';if(this.group.navigator.show){gnEle.style.display='';if(this.group.navigator.location=='left'||this.group.navigator.location=='right')A5.u.drag._w[gnEle.id].c.daxis='y';else A5.u.drag._w[gnEle.id].c.daxis='x';}else gnEle.style.display='none';if(this._curL=='template-horizontal'&&lObj.type!='template-horizontal'){cwEle.style.whiteSpace='';cdhEle.style.display='';cEle.style.display='';cdfEle.style.display='';}
var os={left:0,top:0};os=A5.u.element.getScroll(cwEle);if(lObj.type=='template'||lObj.type=='template-flow'||lObj.type=='template-horizontal'){if(lObj.template.constructor==Array)lObj.template=lObj.template.join('');this._template=lObj.template;if(this._template.constructor==Function)this._tempIsDyn=true;if(lObj.type=='template-flow'){this._ioStyle={cssFloat:'left',styleFloat:'left'};}else if(lObj.type=='template-horizontal'){this._ioStyle={display:'inline-block',verticalAlign:'top'};if(this._curL!='template-horizontal'){cwEle.style.whiteSpace='nowrap';cdhEle.style.display='inline-block';cEle.style.display='inline-block';cdfEle.style.display='inline-block';}}
if(lObj.item.width.substr(0,4).toLowerCase()=='fill'||lObj.item.height.substr(0,4).toLowerCase()=='fill'){cEle.innerHTML='<div class="'+this.item.className+'" style="visibility: hidden;">&nbsp;</div>';var cs={paddingTop:'',paddingBottom:'',paddingRight:'',paddingLeft:'',borderTopWidth:'',borderRightWidth:'',borderBottomWidth:'',borderLeftWidth:''};var csi={marginLeft:'',margingRight:'',marginTop:'',marginBottom:''};if(typeof window.getComputedStyle!='undefined'){cs=window.getComputedStyle(lEle);csi=window.getComputedStyle(cEle.firstChild);}else if(lEle.currentStyle){cs=lEle.currentStyle;csi=cEle.firstChild.currentStyle;}
var hPad=0;if(cs.paddingLeft!='')hPad=hPad+A5.u.convertUnits(cs.paddingLeft,'px');if(cs.paddingRight!='')hPad=hPad+A5.u.convertUnits(cs.paddingRight,'px');if(cs.borderLeftWidth!='')hPad=hPad+A5.u.convertUnits(cs.borderLeftWidth,'px');if(cs.borderRightWidth!='')hPad=hPad+A5.u.convertUnits(cs.borderRightWidth,'px');if(csi.marginLeft!='')hPad=hPad+A5.u.convertUnits(csi.marginLeft,'px');if(csi.marginRight!='')hPad=hPad+A5.u.convertUnits(csi.marginRight,'px');var vPad=0;if(cs.paddingTop!='')vPad=vPad+A5.u.convertUnits(cs.paddingTop,'px');if(cs.paddingBottom!='')vPad=vPad+A5.u.convertUnits(cs.paddingBottom,'px');if(cs.borderTopWidth!='')vPad=vPad+A5.u.convertUnits(cs.borderTopWidth,'px');if(cs.borderBottomWidth!='')vPad=vPad+A5.u.convertUnits(cs.borderBottomWidth,'px');if(csi.marginTop!='')vPad=vPad+A5.u.convertUnits(csi.marginTop,'px');if(csi.marginBottom!='')vPad=vPad+A5.u.convertUnits(csi.marginBottom,'px');this._hPad=hPad;this._vPad=vPad;cEle.innerHTML=''}
var cObj=0;var chiEle=0;var ctiEle=0;if(this.columnLayout.header.show){for(var i=0;i<lObj.columns.length;i++){cObj=lObj.columns[i];$u.o.assign(cObj,this._cDefaults,true);chiEle=document.createElement('div');chiEle.id=this.contId+'.CHEADER.'+i;$sa(chiEle,'a5-item','*col:'+i);chiEle.innerHTML=cObj.header.html;chiEle.className=this._gDef(cObj.header.className,this.columnLayout.header.item.className)+' '+this._cssSelP+'C'+i;if(!A5.flags.isMobile){$e.add(chiEle,'mouseover',Function('$acn(this,\''+this._gDef(cObj.header.hoverClassName,this.columnLayout.header.item.hoverClassName)+'\');'),false,false,egName);$e.add(chiEle,'mouseout',Function('$rcn(this,\''+this._gDef(cObj.header.hoverClassName,this.columnLayout.header.item.hoverClassName)+'\');'),false,false,egName);}
this._clOrderCols.push(cObj.order);$ss(chiEle,this._gDef(cObj.header.style,this.columnLayout.header.item.style)+'; position: relative; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: inline-block; vertical-align: bottom; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');ctiEle=A5.u.icon.element(this.columnLayout.header.item.order.ascendingImage);ctiEle.id=this.contId+'.CHEADER.'+i+'.IMG';$acn(ctiEle,this.columnLayout.header.item.order.className);if(typeof this.columnLayout.header.item.order.style=='string'||typeof this.columnLayout.header.item.order.style=='object')$ss(ctiEle,this.columnLayout.header.item.order.style);ctiEle.style.display='none';chiEle.appendChild(ctiEle);chgEle.appendChild(chiEle);}}}else if(lObj.type=='column'){if(lObj.template.constructor==Array)lObj.template=lObj.template.join('');this._aTemplate=lObj.template;if(this._aTemplate.constructor==Function)this._tempIsDyn=true;chgEle.innerHTML='';chgEle.style.width='';var cObj=0;var tHTML=[];var chiEle=0;lObj._fTotal=0;lObj._wTotal=0;for(var i=0;i<lObj.columns.length;i++){cObj=lObj.columns[i];$u.o.assign(cObj,this._cDefaults,true);if(cObj.width.substr(0,5)=='flex('){cObj._w='0px';cObj._f=Math.abs($u.s.toNum(cObj.width));lObj._fTotal+=cObj._f;}else{cObj._w=cObj.width;cObj._f=0;lObj._wTotal+=A5.u.convertUnits(cObj.width,'px');}}
if(lObj._fTotal!=0){cEle.innerHTML='<div class="'+this._gDef(lObj.item.className,this.item.className)+'" style="'+this._gDef(lObj.item.style,this.item.style)+'; visibility: hidden; height: '+(cEle.offsetHeight+1000)+'px;"><div>&nbsp;</div></div>';this._clftWidth=cEle.firstChild.firstChild.offsetWidth;this._clftWidthDif=lEle.offsetWidth-this._clftWidth;cEle.innerHTML='';}
var crLoc='right';if(this.columnLayout.header.item.resize.location=='before')crLoc='left';for(var i=0;i<lObj.columns.length;i++){cObj=lObj.columns[i];tHTML.push('<div class="'+this._gDef(cObj.data.className,this.columnLayout.data.item.className)+' '+this._cssSelP+'C'+i+'" style="'+this._gDef(cObj.data.style,this.columnLayout.data.item.style)+'; overflow: hidden; text-overflow: ellipsis; white-space: pre; display: inline-block; vertical-align: bottom; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;">'+cObj.data.template+'</div>');if(this.columnLayout.header.show){chiEle=document.createElement('div');chiEle.id=this.contId+'.CHEADER.'+i;$sa(chiEle,'a5-item','*col:'+i);chiEle.innerHTML=cObj.header.html;chiEle.className=this._gDef(cObj.header.className,this.columnLayout.header.item.className)+' '+this._cssSelP+'C'+i;if(!A5.flags.isMobile){$e.add(chiEle,'mouseover',Function('$acn(this,\''+this._gDef(cObj.header.hoverClassName,this.columnLayout.header.item.hoverClassName)+'\');'),false,false,egName);$e.add(chiEle,'mouseout',Function('$rcn(this,\''+this._gDef(cObj.header.hoverClassName,this.columnLayout.header.item.hoverClassName)+'\');'),false,false,egName);}
this._clOrderCols.push(cObj.order);$ss(chiEle,this._gDef(cObj.header.style,this.columnLayout.header.item.style)+'; position: relative; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: inline-block; vertical-align: bottom; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');ctiEle=A5.u.icon.element(this.columnLayout.header.item.order.ascendingImage);ctiEle.id=this.contId+'.CHEADER.'+i+'.IMG';$acn(ctiEle,this.columnLayout.header.item.order.className);if(typeof this.columnLayout.header.item.order.style=='string'||typeof this.columnLayout.header.item.order.style=='object')$ss(ctiEle,this.columnLayout.header.item.order.style);ctiEle.style.display='none';chiEle.appendChild(ctiEle);if(cObj.resize){ctiEle=document.createElement('div');ctiEle.className=this.columnLayout.header.item.resize.handle.className;$sa(ctiEle,'a5-item','*col-resize:'+i);$ss(ctiEle,'position: absolute; top: 0px; bottom: 0px; '+crLoc+': 0px; width: '+this.columnLayout.header.item.resize.handle.size+'; cursor: e-resize;');chiEle.appendChild(ctiEle);}
chgEle.appendChild(chiEle);}}
this._clfFlex=lObj._fTotal!=0?true:false;this._template=tHTML.join('');if(this._tempIsDyn){this._cTemplate=this._template;this._template=function(d){return this._cTemplate+'<div>'+this._aTemplate(d)+'</div>';};}else this._template=this._template+'<div>'+this._aTemplate+'</div>';}
this._curL=lObj.type;this._curLObj=lObj;this._resize(true);if(!this._tempIsDyn&&this._template!='')this._template=A5.u.template.parse(this._template);this.populate(this._data,keepVal,false,this._isInit);if(pScroll)A5.u.element.setScroll(cwEle,os.left,os.top);else{A5.u.element.setScroll(cwEle,0,0);this._scroll.call(cwEle,{},this);}},populate:function(data){var keepVal=typeof arguments[1]!='undefined'?arguments[1]:false;if(keepVal)var oldVals=[].concat(this.value);var anim=typeof arguments[2]!='undefined'?arguments[2]:false;var fireEvnts=typeof arguments[3]!='undefined'?arguments[3]:true;if(this.onBeforePopulate.constructor==Function&&fireEvnts){var res=this.onBeforePopulate.call(this,data);if(typeof res=='boolean'){if(!res)return false;}}
if(this.view.type=='dynamic'||this.view.type=='page'){this.view._s=0;this.view._e=this.view.size;this.state.view={start:0,end:0,hasPrev:false,hasNext:false}}
if(anim)this._swapList(anim);this._data=[];this._dataMap=[];this._data=this._data.concat(data);this._groups=[];this._groupsN=[];this._groupsNDI=[];$(this.contId+'.CONTENT').innerHTML='';this._values=new Array();var strData=''
var tData=[].concat(this._data);for(var i=0;i<tData.length;i++){if(typeof tData[i]=='object')tData[i]['*key']=i;}
if(this.filter||this.order||this.group.auto.length>0){var tData2=[];for(var i=0;i<tData.length;i++){strData=this._getStrData(tData[i]);if(strData!='-'&&strData!='*title'&&strData!='*static')tData2.push(tData[i]);}
tData=tData2;}
if(this.filter){var tData2=[];if(this.filter.constructor==Object){for(var i=0;i<tData.length;i++){for(var fCol in this.filter){if(this.filter[fCol](tData[i][fCol])){tData2.push(tData[i]);break;}}}}else{for(var i=0;i<tData.length;i++){if(this.filter(tData[i]))tData2.push(tData[i]);}}
tData=tData2;}
if(this.group.auto.length>0&&tData.length!=0){var gData=[[].concat(tData)];var tData2=[];for(var i=0;i<this.group.auto.length;i++){$u.o.assign(this.group.auto[i],this._gDefaults,true);for(var j=0;j<gData.length;j++){if(gData[j].constructor==Array){this._orderData(this.group.auto[i].order,gData[j],false);tData2=this._groupData(gData[j],i);gData.splice.apply(gData,[j,1].concat(tData2));j=j+tData2.length;}}}}
if(this.columnLayout.header.show&&this._curLObj.columns.length!=0){if(this._clOrderCol>-1)$(this.contId+'.CHEADER.'+this._clOrderCol+'.IMG').style.display='none';this._clOrderDir=0;if(typeof this._clfCSC.i=='number'){var iEle=$(this.contId+'.CHEADER.'+this._clfCSC.i+'.IMG');iEle.style.display='';if(this._clfCSC.d<0)A5.u.icon.update(iEle,this.columnLayout.header.item.order.descendingImage);else A5.u.icon.update(iEle,this.columnLayout.header.item.order.ascendingImage);}}
if(this.order){if(this.group.auto.length>0){for(var j=0;j<gData.length;j++){if(gData[j].constructor==Array)this._orderData(this.order,gData[j],true);}}else this._orderData(this.order,tData,true);}
if(this.group.auto.length>0&&tData.length!=0){tData=[];for(var j=0;j<gData.length;j++){if(gData[j].constructor==Array)tData=tData.concat(gData[j]);else tData.push(gData[j]);}}
var rIndex=0;var strData='';for(var i=0;i<tData.length;i++){strData=this._getStrData(tData[i]);if(strData!='-'&&strData!='*title'&&strData!='*static'){if(typeof tData[i]=='object'){tData[i]['*renderIndex']=rIndex;tData[i]['*value']=this.calculateValue(tData[i],rIndex);this._values.push(tData[i]['*value']);this._dataMap.push(tData[i]['*key']);}else{this._values.push(this.calculateValue(tData[i],rIndex));this._dataMap.push(rIndex);}
rIndex++;}else if(strData=='*title'){if(tData[i]['navigate']==true||typeof tData[i]['navigate']=='undefined'){if(typeof tData[i]['*navTitle']!='undefined')this._groups.push(tData[i]['*navTitle']);else this._groups.push(this.group.navigator.process(tData[i]['*title']));if(typeof tData[i]['*name']!='undefined')this._groupsN.push(tData[i]['*name']);else this._groupsN.push(this._groups[this._groups.length-1]);this._groupsNDI.push(rIndex);}}}
if(this.scroller.show){if(this.view.type=='dynamic'||this.view.type=='page'){this._scr.value=0;A5.u.element.setScroll($(this.contId+'.CONTENTWRAPPER'),0,0);}
if(this._dataMap.length==0)this._scr.max=0;else this._scr.max=this._dataMap.length-1;this._scr._dm=this._dataMap;this._scr._d=this._data;this._scr.refresh();}
this._renderData(tData,0,0,'populate');if(!this.allowNullSelection&&data.length!=0&&!(keepVal&&oldVals.length!=0))this._selectItem(0);if(keepVal){if(this.allowNullDeselection)this._deselectAll();this.setValue(oldVals,false);}
if(this.value.length==0){var cwEle=$(this.contId+'.CONTENTWRAPPER');var scrl=A5.u.element.getScroll(cwEle);A5.u.element.setScroll(cwEle,scrl.left,scrl.top);}
if(this.onPopulate.constructor==Function&&fireEvnts)this.onPopulate.call(this,this._rData);},_groupData:function(data,indx){var grp='';var oldGrp='';var gData=[];var tData=[];for(var i=0;i<data.length;i++){grp=this.group.auto[indx].group(data[i]);if(grp!=oldGrp){if(tData.length!=0){gData.push({'*title':this.group.auto[indx].header.html.call(this,oldGrp,tData),navigate:this.group.auto[indx].navigate,className:this.group.auto[indx].header.className});gData.push(tData);if(this.group.auto[indx].footer.show){if(this.group.auto[indx].footer.html.constructor==Function)gData.push({'*static':this.group.auto[indx].footer.html.call(this,oldGrp,tData),className:this.group.auto[indx].footer.className});else gData.push({'*static':this.group.auto[indx].footer.html,className:this.group.auto[indx].footer.className});}}
tData=[];oldGrp=grp;}
tData.push(data[i]);}
if(tData.length!=0){gData.push({'*title':this.group.auto[indx].header.html.call(this,oldGrp,tData),navigate:this.group.auto[indx].navigate,className:this.group.auto[indx].header.className});gData.push(tData);if(this.group.auto[indx].footer.show){if(this.group.auto[indx].footer.html.constructor==Function)gData.push({'*static':this.group.auto[indx].footer.html.call(this,oldGrp,tData),className:this.group.auto[indx].footer.className});else gData.push({'*static':this.group.auto[indx].footer.html,className:this.group.auto[indx].footer.className});}}
return gData;},_orderData:function(order,data,showColIcon){if(data.length==0)return data;if(order.constructor==Function)data.sort(order);else{var func=[];if(order.constructor==Object||order.constructor==Array){var tCode='';var fCol='';if(order.constructor==Array){var dir=0;for(var i=0;i<order.length;i++){dir=1;if(typeof order[i]=='string')tCol=order[i];else{tCol=order[i][0];dir=order[i][1];}
if(func.length==0){func.push(this._orderFuncGen(tCol,dir,data));fCol=tCol}else{func.push('if(result == 0){');func.push(this._orderFuncGen(tCol,dir,data));func.push('}');}}}else{for(var tCol in order){if(func.length==0){func.push(this._orderFuncGen(tCol,order[tCol],data));fCol=tCol}else{func.push('if(result == 0){');func.push(this._orderFuncGen(tCol,order[tCol],data));func.push('}');}}}
func.push('return result;');if(this.columnLayout.header.show&&this._curLObj.columns.length!=0&&showColIcon){this._clOrderCol=$u.a.find(this._clOrderCols,fCol);if(this._clOrderCol>-1){this._clOrderDir=order[fCol];var iEle=$(this.contId+'.CHEADER.'+this._clOrderCol+'.IMG');iEle.style.display='';if(this._clOrderDir<0)A5.u.icon.update(iEle,this.columnLayout.header.item.order.descendingImage);else A5.u.icon.update(iEle,this.columnLayout.header.item.order.ascendingImage);}}}else{var ofPrefix='var v1 = arguments[0]; var v2 = arguments[1]; var result = 0;';var ofBody='result = v1-v2;';var ofSuffix='return result;';if(typeof data[0]=='string')ofBody='if(v1.toLowerCase()<v2.toLowerCase()) result = -1; if(v1.toLowerCase()>v2.toLowerCase()) result = 1;';else if(typeof data[0]=='boolean')ofBody='if(v1<v2) result = -1; if(v1>v2) result = 1;';if(order<0)ofSuffix='return result*-1;';func=[ofPrefix,ofBody,ofSuffix];}
data.sort(Function(func.join('')));}
return data;},_orderFuncGen:function(col,dir,data){var tCol=col.split(':');var tColName=tCol[0];var ofPrefix='var v1 = arguments[0].'+tColName+'; var v2 = arguments[1].'+tColName+'; if(v1 == null) v1 = \'\'; if(v2 == null) v2 = \'\'; var result = 0;';var ofBody='result = v1-v2;';var ofSuffix='';if(typeof data[0][tColName]=='string'||data[0][tColName]==null){ofPrefix=ofPrefix+'v1 = v1.replace(/(<([^>]+)>)/ig,\'\');v2 = v2.replace(/(<([^>]+)>)/ig,\'\');';if(tCol.length>1){if(tCol[1]=='number')ofPrefix=ofPrefix+' v1 = $u.s.toNum(v1); v2 = $u.s.toNum(v2);';else if(tCol[1]=='date'){tCol.shift();tCol.shift();ofPrefix=ofPrefix+' var tDate = new Date(); var tFrm = tDate._parseFormat(\''+tCol.join(':')+'\'); tDate.fromFormat(v1,tFrm); v1 = new Date(tDate); tDate.fromFormat(v2,tFrm); v2 = new Date(tDate);';}else if(tCol[1]=='boolean'){ofPrefix=ofPrefix+' v1 = $u.s.toBool(v1); v2 = $u.s.toBool(v2);';ofBody='if(v1<v2) result = -1; if(v1>v2) result = 1;';}else if(tCol[1]=='first'){ofPrefix=ofPrefix+' v1 = v1.substr(0,'+tCol[2]+'); v2 = v2.substr(0,'+tCol[2]+');';ofBody='if(v1<v2) result = -1; if(v1>v2) result = 1;';}else if(tCol[1]=='length'){ofPrefix=ofPrefix+' v1 = v1.length; v2 = v2.length;';}}else ofBody='if(v1.toLowerCase()<v2.toLowerCase()) result = -1; if(v1.toLowerCase()>v2.toLowerCase()) result = 1;';}else if(typeof data[0][tColName]=='boolean')ofBody='if(v1<v2) result = -1; if(v1>v2) result = 1;';if(dir<0)ofSuffix='result = result*-1;';return ofPrefix+ofBody+ofSuffix;},appendRows:function(data){var indx=this._data.length;if(this.onBeforeAddRows.constructor==Function){var res=this.onBeforeAddRows.call(this,data,{type:'append'});if(typeof res=='boolean'){if(!res)return false;}}
this._data=this._data.concat(data);if(this.filter||this.order||this.group.auto.length>0)this.populate(this._data,true,false,false);else{var dIndx=this._dataMap.length;for(var i=indx;i<this._data.length;i++){if(this._isData(this._data[i])){if(typeof this._data[i]=='object'){this._data[i]['*key']=i;this._data[i]['*renderIndex']=this._dataMap.length;this._data[i]['*value']=this.calculateValue(this._data[i],this._dataMap.length);this._values.push(this._data[i]['*value']);this._dataMap.push(this._data[i]['*key']);}else{this._values.push(this.calculateValue(this._data[i],this._dataMap.length));this._dataMap.push(rIndex);}}}
if(this.scroller.show){if(this._dataMap.length==0)this._scr.max=0;else this._scr.max=this._dataMap.length-1;this._scr._dm=this._dataMap;this._scr._d=this._data;this._scr.refresh();}
this._renderData([].concat(this._data),indx,dIndx,'append-rows');}
if(this.onAddRows.constructor==Function)this.onAddRows.call(this,this._rData,{type:'append'});},removeRows:function(rows){var rowsI=[];for(var i=0;i<rows.length;i++){if(typeof rows[i]!='number')rows[i]=this._getIndex(rows[i],true);if(rows[i]!=-1)rowsI.push(this._dataMap[rows[i]]);}
if(this.onBeforeRemoveRows.constructor==Function){var res=this.onBeforeRemoveRows.call(this,rowsI);if(typeof res=='boolean'){if(!res)return false;}}
rowsI.sort(function(a,b){return b-a});for(var i=0;i<rowsI.length;i++)this._data.splice(rowsI[i],1);this.populate(this._data,true,false,false);if(this.onRemoveRows.constructor==Function)this.onRemoveRows.call(this);},insertRows:function(indx,data){if(typeof indx!='number')indx=this._getIndex(indx);indx=this._dataMap[indx];if(typeof indx=='undefined')this.appendRows(data);else{if(this.onBeforeAddRows.constructor==Function){var res=this.onBeforeAddRows.call(this,data,{type:'insert',index:indx});if(typeof res=='boolean'){if(!res)return false;}}
var tData=[indx,0].concat(data);this._data.splice.apply(this._data,tData);this.populate(this._data,true,false,false);if(this.onAddRows.constructor==Function)this.onAddRows.call(this,this._rData,{type:'insert',index:indx});}},updateRow:function(indx,rowData){if(typeof indx!='number')indx=this._getIndex(indx,true);if(indx==-1)return false;dIndx=indx;indx=this._dataMap[indx];if(this.onBeforeUpdateRow.constructor==Function){var res=this.onBeforeUpdateRow.call(this,indx,rowData);if(typeof res=='boolean'){if(!res)return false;}}
if(typeof rowData=='object')$u.o.assign(this._data[indx],rowData);else this._data[indx]=rowData;if(this.filter||this.order||this.group.auto.length>0)this.populate(this._data,true,false,false);else{var tData={};$u.o.assign(tData,this._data[indx]);if(this._template==''){if(this._hasOBIDEvnt)this.onBeforeItemDraw.call(this,tData,dIndx);var html=tData.toString();var value=tData.toString();}else{var temp=this._template;if(this._tempIsDyn)var temp=A5.u.template.parse(temp(iData));if(this._hasOBIDEvnt)this.onBeforeItemDraw.call(this,tData,dIndx);var html=this._fillTemplate(temp,tData);html=html.split('{*row}').join(indx);html=html.split('{*dataRow}').join(dIndx);html=html.split('{*dataRowOneBased}').join(dIndx+1);var value=this.calculateValue(tData,indx);}
this._data[indx]['*value']=value;this._values[dIndx]=value;var ele=$(this.contId+'.'+dIndx);if(ele){ele.innerHTML=html;if(this._hasOIDEvnt)this.onItemDraw.call(this,ele,tData,dIndx);if(this.onListDraw.constructor==Function)this.onListDraw.call(this,this._rData,-1);}}
if(this.onUpdateRow.constructor==Function)this.onUpdateRow.call(this,indx,this._data[indx]);},setFilter:function(filter){if(this.onBeforeFilter.constructor==Function){var res=this.onBeforeFilter.call(this,filter);if(typeof res=='boolean'){if(!res)return false;}}
if(this._data.length==0)return false;if(filter.constructor==Object){this.filter={};for(var fCol in filter){if(filter[fCol].constructor==Function)this.filter[fCol]=filter[fCol];else if(filter[fCol].constructor==RegExp)this.filter[fCol]=Function('return ('+filter[fCol].toString()+').test(arguments[0]);');}}else if(filter.constructor==Function)this.filter=filter;else if(filter.constructor==RegExp)this.filter=Function('return ('+filter.toString()+').test(arguments[0]);');else this.filter=false;this.populate(this._data,true,false,false);if(this.onFilter.constructor==Function)this.onFilter.call(this);},setOrder:function(order){if(this.onBeforeOrder.constructor==Function){var res=this.onBeforeOrder.call(this,order);if(typeof res=='boolean'){if(!res)return false;}}
if(this._data.length==0)return false;this.order=order;this.populate(this._data,true,false,false);if(this.onOrder.constructor==Function)this.onOrder.call(this);},setValue:function(val){if(this.readOnly)return false;var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;var fireSelect=false;if(val.constructor==Object){if(val.select=='all')val=[].concat(this._values);else if(val.select=='group'){var g=val.group;if(g.constructor!=Array)g=[g];var gIndx=0;var sIndx=0;var eIndx=0;var sel=[]
for(var i=0;i<g.length;i++){gIndx=$u.a.find(this._groupsN,g[i]);if(gIndx!=-1){sIndx=this._groupsNDI[gIndx];eIndx=this._rData.length-1;if(gIndx<this._groupsN.length-1)eIndx=this._groupsNDI[gIndx+1]-1;for(var k=sIndx;k<=eIndx;k++)sel.push(k);}}
if(val.additive){sel=sel.concat(this.selection);sel=$u.a.dedup(sel);}
val=sel;}else if(val.select=='view'){var v2=[]
for(var i=this.view._ds-1;i<=this.view._de;i++)v2.push(this._rData[i]['*value']);if(val.additive){v2=v2.concat(this.value);v2=$u.a.dedup(v2);}
val=v2;}else val='';}
if(val.constructor==Array){val=[].concat(val);for(var i=0;i<val.length;i++)val[i]=this._getIndex(val[i]);if(val.join('\n')==this.selection.join('\n'))executeSelect=false;if(val.length==0){if(this.allowNullSelection){if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect(-1);if(typeof result!='boolean')result=true;if(!result)return false;}
this._deselectAll();if(executeSelect)fireSelect=true;}}else{if(this.multiple){if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect.apply(this,val);if(typeof result!='boolean')result=true;if(!result)return false;}
this._deselectAll()
for(var i=0;i<val.length;i++)this._selectItem(val[i],true,false);if(this.selection.length!=0)this.scrollToItem(this.selection[0]);if(executeSelect)fireSelect=true;}else{this._selectItem(val.pop(),false,executeSelect);}}}else{val=this._getIndex(val);if((val==-1&&this.value.length==0)||(val==this.selection[0]))executeSelect=false;if(this.allowNullDeselection)this._deselectAll();if(val==-1){if(this.allowNullSelection){if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect(-1);if(typeof result!='boolean')result=true;if(!result)return false;}
this._deselectAll();if(executeSelect)fireSelect=true;}}else this._selectItem(val,false,executeSelect);}
if(fireSelect){if(this.inputId!=''){$(this.inputId).value=this.value.join(this.separator);$e.execute(this.inputId,'change');}
if(this.onSelect.constructor==Function)this.onSelect(-1);}},getData:function(val){val=this._getIndex(val);if(val>-1){if(typeof this._dataMap[val]=='number')return this._data[this._dataMap[val]];else return this._values[val];}},valueInList:function(val){val=this._getIndex(val,true);if(val>-1)return true;return false;},scrollToItem:function(val){if(this._data.length==0){var cEle=$(this.contId+'.CONTENTWRAPPER');A5.u.element.setScroll(cEle,0,0);return false;}
val=this._getIndex(val);if((this.view.type=='dynamic'||this.view.type=='page')&&this.view._ds!=-1&&this.view._de!=-1&&this._rData.length!=0){if(val<this._rData[this.view._ds]['*renderIndex']||val>this._rData[this.view._de]['*renderIndex']){this._viewNav('goto',val);if(this._rData[this.view._de]['*renderIndex']<val)val=this._rData[this.view._de]['*renderIndex'];this.scrollToItem(val,{mode:'top'});return true;}}
var ele=$(this.contId+'.'+val);if(ele){if(ele.previousSibling){if($ga(ele.previousSibling,'A5IsListTitle')=='true')ele=ele.previousSibling;}
var cEle=$(this.contId+'.CONTENTWRAPPER');var s=typeof arguments[1]!='undefined'?arguments[1]:{};if(this._curL=='template-horizontal')s.axis='x';else s.axis='y';A5.u.element.setScroll(cEle,ele,s);this._scroll.call(cEle,{},this);}},navigate:function(dir){var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;dir=dir.toLowerCase();if(dir.substr(0,4)=='prev')this._keyPrevItem(executeSelect);else if(dir=='next')this._keyNextItem(executeSelect);else if(dir=='home')this._keyFirstItem(executeSelect);else if(dir=='end')this._keyLastItem(executeSelect);else if(this.view.type=='dynamic'){if(dir=='page-prev')this._viewNav('p');else if(dir=='page-next')this._viewNav('n');}else{if(dir=='page-prev')this._keyFirstItem(executeSelect);else if(dir=='page-next')this._keyLastItem(executeSelect);}},resize:function(){this._resize(true);},_getIndex:function(val){var indx=this.allowNullSelection||arguments[1]?-1:0;if(typeof val=='undefined')return indx;else if(typeof val!='number'){val=''+val;for(var i=0;i<this._values.length;i++){if(this._values[i].toLowerCase()==val.toLowerCase()){indx=i;break;}}}else indx=val;return indx;},_renderData:function(data,startIndx,tIndx,src){this._rData=data;this._hasOBIDEvnt=this.onBeforeItemDraw.constructor==Function;this._hasOIDEvnt=this.onItemDraw.constructor==Function;if(this.onBeforeListDraw.constructor==Function)this.onBeforeListDraw.call(this,data,startIndx);var lEle=$(this.contId+'.CONTENT');var strData='';var sIndx=startIndx;var eIndx=data.length-1;if(this.view.type=='dynamic'){this.state.view.hasPrev=false;this.state.view.hasNext=false;sIndx=this.view._s;if(sIndx>eIndx){if(this.onListDraw.constructor==Function)this.onListDraw.call(this,data,startIndx);return;}
if(src!='view-add'){if(startIndx!=0){if(this.view._e-this.view._s<this.view.size){sIndx=startIndx;this.view._e=Math.min(data.length-1,this.view._s+this.view.size);}else{if(this.onListDraw.constructor==Function)this.onListDraw.call(this,data,startIndx);return;}}else{this.view._ds=-1;this.view._de=-1;if(this.view._s!=0){var phEle=document.createElement('div');phEle.id=this.contId+'.PREV';phEle.className=this.view.navigation.prev.className;phEle.innerHTML=this.view.navigation.prev.html;$sa(phEle,'a5-item','*prev');lEle.appendChild(phEle);$(this.contId+'.CONTENT.HEADER').style.display='none';this.state.view.hasPrev=true;}else if(this.content.header.show)$(this.contId+'.CONTENT.HEADER').style.display='';}}else{sIndx=startIndx;var nEle=$(this.contId+'.NEXT');if(nEle)lEle.removeChild(nEle);}
this.view._e=Math.min(eIndx,this.view._e);eIndx=this.view._e;this.state.view.start=this.view._s;this.state.view.end=this.view._e;tIndx=tIndx+sIndx;}
if(this._template==''){for(var i=sIndx;i<=eIndx;i++){strData=this._getStrData(data[i]);if(strData=='-'||strData=='*title'||strData=='*static')this._renderSep(data[i],lEle);else{if(this.view._ds==-1)this.view._ds=i;this.view._de=i;this._renderSimpleItem(data[i],tIndx,i,lEle);tIndx++;}}}else{var applytDefVals=typeof this.defaultValues=='object'?true:false;for(var i=sIndx;i<=eIndx;i++){strData=this._getStrData(data[i]);if(strData=='-'||strData=='*title'||strData=='*static')this._renderSep(data[i],lEle);else{if(this.view._ds==-1)this.view._ds=i;this.view._de=i;if(applytDefVals)$u.o.assign(data[i],this.defaultValues,true);this._renderItem(data[i],data[i]['*renderIndex'],i,lEle);}}}
if(this.view.type=='dynamic'){if(this.view._e!=data.length-1){var pfEle=document.createElement('div');pfEle.id=this.contId+'.NEXT';pfEle.className=this.view.navigation.next.className;pfEle.innerHTML=this.view.navigation.next.html;$sa(pfEle,'a5-item','*next');lEle.appendChild(pfEle);$(this.contId+'.CONTENT.FOOTER').style.display='none';this.state.view.hasNext=true;}else if(this.content.footer.show)$(this.contId+'.CONTENT.FOOTER').style.display='';if(this.onNavigate.constructor==Function)this.onNavigate.call(this,this.view._s,this.view._e);}else{if(this.onNavigate.constructor==Function)this._navEvnt();}
if(this.onListDraw.constructor==Function)this.onListDraw.call(this,data,startIndx);if(this.group.navigator.show&&src!='view-nav'){var gnEle=$(this.contId+'.GROUPNAV');if(this.group.navigator.location=='left'||this.group.navigator.location=='right')gnEle.innerHTML='<div>'+this._groups.join('</div><div>')+'</div>';else gnEle.innerHTML='<div style="display: inline-block;">'+this._groups.join('</div>&nbsp;<div style="display: inline-block;">')+'</div>';gnEle.style.position='absolute';gnEle.style.top='';gnEle.style.left='';gnEle.style.right='';gnEle.style.bottom='';gnEle.style[this.group.navigator.location]=this.group.navigator.offset+'px';if(this._groups.length==0)gnEle.style.display='none';else{gnEle.style.display='';this.group.navigator._trans='';if(this.group.navigator.location=='left'||this.group.navigator.location=='right'){gnEle.style.top='50%';var cwEle=$(this.contId+'.CONTENTWRAPPER');gnEle.style.marginTop=((cwEle.offsetTop/2)-Math.round(gnEle.offsetHeight/2))+'px';if(gnEle.offsetWidth>this.group.navigator.size&&this.group.navigator.size>0){if(this.group.navigator.location=='right')A5.u.drag._w[this.contId+'.GROUPNAV'].c._trans=A5.u.css.transform2D((gnEle.offsetWidth-this.group.navigator.size)+'px','0px');else A5.u.drag._w[this.contId+'.GROUPNAV'].c._trans=A5.u.css.transform2D('-'+(gnEle.offsetWidth-this.group.navigator.size)+'px','0px');}}else{gnEle.style.left='50%';gnEle.style.marginLeft=(Math.round(gnEle.offsetWidth/2))+'px';if(gnEle.offsetHeight>this.group.navigator.size&&this.group.navigator.size>0){if(this.group.navigator.location=='bottom')A5.u.drag._w[this.contId+'.GROUPNAV'].c._trans=A5.u.css.transform2D('0px',(gnEle.offsetHeight-this.group.navigator.size)+'px');else A5.u.drag._w[this.contId+'.GROUPNAV'].c._trans=A5.u.css.transform2D('0px','-'+(gnEle.offsetHeight-this.group.navigator.size)+'px');}}
gnEle.style[A5.u.css.properties.transformDOM]=A5.u.drag._w[this.contId+'.GROUPNAV'].c._trans;}
A5.u.drag._w[this.contId+'.GROUPNAV'].c.groups=this._groups.length-1;}},_renderItem:function(iData,indx,itemIndx,lEle){var tHTML='';var temp=this._template;if(this._tempIsDyn)var temp=A5.u.template.parse(temp(iData));if(this._hasOBIDEvnt){var tData={};$u.o.assign(tData,iData);this.onBeforeItemDraw.call(this,tData,indx);tHTML=this._fillTemplate(temp,tData);}else{tHTML=this._fillTemplate(temp,iData);}
tHTML=tHTML.split('{*row}').join(itemIndx);tHTML=tHTML.split('{*dataRow}').join(indx);tHTML=tHTML.split('{*dataRowOneBased}').join(indx+1);this._renderItemLow(tHTML,indx,lEle,iData);},_fillTemplate:function(temp,data){var html=A5.u.template.expand(data,{template:temp,nullHTML:this.data.nullHTML});temp.html=[];html=html.split('{*key}').join(data['*key']);return html;},_renderSimpleItem:function(iData,indx,itemIndx,lEle){if(this._hasOBIDEvnt)this.onBeforeItemDraw.call(this,iData,indx);this._renderItemLow(iData.toString(),indx,lEle,iData);},_renderItemLow:function(html,indx,lEle,iData){var ele=document.createElement('div');ele.id=this.contId+'.'+indx;ele.innerHTML=html;ele.className=this._gDef(this._curLObj.item.className,this.item.className)+' '+$if(this._curL=='column',this._cssSelP+'W',this._cssSelP+'DIS');if($u.a.find(this.selectionKey,iData['*key'])!=-1)$acn(ele,this._gDef(this._curLObj.item.selectedClassName,this.item.selectedClassName));if(typeof this.item.style=='object'||typeof this.item.style=='string'||typeof this._curLObj.item.style=='object'||typeof this._curLObj.item.style=='string')$ss(ele,this._gDef(this._curLObj.item.style,this.item.style));if(this._ioStyle!=false)$ss(ele,this._ioStyle);$sa(ele,'a5-item',''+indx);if(!A5.flags.isMobile&&(this.item.hoverClassName!=''||this._curLObj.item.hoverClassName!='')){var egName='LISTBOX.'+this.contId;$e.add(ele,'mouseover',Function('$acn(this,\''+this._gDef(this._curLObj.item.hoverClassName,this.item.hoverClassName)+'\');'),false,false,egName);$e.add(ele,'mouseout',Function('$rcn(this,\''+this._gDef(this._curLObj.item.hoverClassName,this.item.hoverClassName)+'\');'),false,false,egName);}
lEle.appendChild(ele);if(this._hasOIDEvnt)this.onItemDraw.call(this,ele,iData,indx);},_renderSep:function(sep,lEle){if(sep=='-'){var ele=document.createElement('hr');ele.className=this._gDef(this._curLObj.item.separatorClassName,this.item.separatorClassName);}else if(typeof sep['*title']!='undefined'){var ele=document.createElement('div');ele.className=this._gDef(sep.className,this._curLObj.item.titleClassName,this.item.titleClassName);ele.innerHTML=sep['*title'];$sa(ele,'A5IsListTitle','true');}else if(typeof sep['*static']!='undefined'){var ele=document.createElement('div');ele.className=this._gDef(sep.className,this._curLObj.item.className,this.item.className);ele.innerHTML=sep['*static'];}
if(this._curL=='column')ele.className=ele.className+' '+this._cssSelP+'W';ele.style.clear='both';lEle.appendChild(ele);},_getStrData:function(data){if(typeof data=='string')return data;else if(typeof data=='object'){if(typeof data['*title']!='undefined')return'*title';else if(typeof data['*static']!='undefined')return'*static';}
return'';},_isData:function(data){if(data=='-')return false;else if(typeof data=='object'){if(typeof data['*title']!='undefined'||typeof data['*static']!='undefined')return false;}
return true;},_selectItem:function(indx){if(this.disabled||this.readOnly)return false;var multiOverride=typeof arguments[1]!='undefined'?arguments[1]:false;var executeSelect=typeof arguments[2]!='undefined'?arguments[2]:true;if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect(indx);if(typeof result!='boolean')result=true;if(!result)return false;}
var addToSel=indx==-1?false:true;if(this.multiple&&(this._keyWatch.ctrl||this._keyWatch.shift||multiOverride||this.selectionMode=='additive')){for(var i=0;i<this.selection.length;i++){if(this.selection[i]==indx){this.selection.splice(i,1);this.selectionData.splice(i,1);this.selectionKey.splice(i,1);this.value.splice(i,1);$rcn(this.contId+'.'+indx,this._gDef(this._curLObj.item.selectedClassName,this.item.selectedClassName));addToSel=false;break;}}}else{if(this.allowNullDeselection&&this.selection.length==1&&this.selection[0]==indx)addToSel=false;this._deselectAll();}
if(addToSel||(!this.allowNullSelection&&this.selection.length==0)){this.value.push(this._values[indx]);this.selection.push(indx);if(typeof this._dataMap[indx]=='number'){this.selectionData.push(this._data[this._dataMap[indx]]);this.selectionKey.push(this._dataMap[indx]);}else{this.selectionData.push();this.selectionKey.push(this._values[indx]);}
$acn(this.contId+'.'+indx,this._gDef(this._curLObj.item.selectedClassName,this.item.selectedClassName));if(!multiOverride)this.scrollToItem(indx);if(this.inputId!=''){$(this.inputId).value=this.value.join(this.separator);if(executeSelect)$e.execute(this.inputId,'change');}
if(this.onSelect.constructor==Function&&executeSelect)this.onSelect(indx);}else if(this.inputId!=''){$(this.inputId).value=this.value.join(this.separator);if(executeSelect)$e.execute(this.inputId,'change');}},_deselectAll:function(){if(this.disabled)return false;for(var i=0;i<this.selection.length;i++)$rcn(this.contId+'.'+this.selection[i],this._gDef(this._curLObj.item.selectedClassName,this.item.selectedClassName));this.value=new Array();this.selection=new Array();this.selectionData=new Array();this.selectionKey=new Array();},_resize:function(){var forceSize=typeof arguments[0]=='boolean'?arguments[0]:false;if(this._curL=='template'||this._curL=='template-flow'||this._curL=='template-horizontal'){if(this._curLObj.item.width.substr(0,4).toLowerCase()=='fill'||this._curLObj.item.height.substr(0,4).toLowerCase()=='fill'||forceSize)this._size();}else if(this._curL=='column'){if(this._curLObj._fTotal!=0||forceSize)this._size();}
var lEle=$(this.contId);var cwEle=$(this.contId+'.CONTENTWRAPPER');var scrl=A5.u.element.getScroll(cwEle);A5.u.element.setScroll(cwEle,scrl.left,scrl.top);if(lEle.style.height!=''||lEle.style.maxHeight!=''||(lEle.style.position=='absolute'&&lEle.style.top!=''&&lEle.style.bottom!='')){var hEle=$(this.contId+'.HEADER');var fEle=$(this.contId+'.FOOTER');var chEle=$(this.contId+'.CHEADER');cwEle.style.height='';if(lEle.style.height==''&&lEle.style.maxHeight!='')var contentHeight=A5.u.convertUnits(lEle.style.maxHeight,'px');else var contentHeight=lEle.clientHeight;if(hEle)contentHeight-=hEle.offsetHeight;if(fEle)contentHeight-=fEle.offsetHeight;if(chEle)contentHeight-=chEle.offsetHeight;if(lEle.style.height=='')contentHeight=Math.min(contentHeight,cwEle.scrollHeight);cwEle.style.height=contentHeight+'px';}else $(this.contId+'.CONTENTWRAPPER').style.height='';},_size:function(){var lEle=$(this.contId);if(this._curL=='template'||this._curL=='template-flow'||this._curL=='template-horizontal'){var w=false;var h=false;var css='';var bSize=false;if(this._curLObj.item.width.substr(0,4).toLowerCase()=='fill'){bSize=true;w=(lEle.offsetWidth-this._hPad-A5.u.convertUnits(this._curLObj.item.width.substr(5),'px'))+'px';}else if(this._curLObj.item.width!='')w=this._curLObj.item.width;if(this._curLObj.item.height.substr(0,4).toLowerCase()=='fill'){bSize=true;h=(lEle.offsetHeight-this._vPad-A5.u.convertUnits(this._curLObj.item.height.substr(5),'px'))+'px';}else if(this._curLObj.item.height!='')h=this._curLObj.item.height;if(bSize)css='box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;';if(w)css=css+'width: '+w+';';if(h)css=css+'height: '+h+';';A5.u.css.setSelector('.'+this._cssSelP+'DIS',css);A5.u.css.deleteSelector('.'+this._cssSelP+'W');}else if(this._curL=='column'){var chgEle=$(this.contId+'.CHEADER.GROUP');var cdhEle=$(this.contId+'.CONTENT.HEADER');var cdfEle=$(this.contId+'.CONTENT.FOOTER');var cEle=$(this.contId+'.CONTENT');if(this._curLObj._fTotal!=0){var clftWidth=cEle.offsetWidth-this._clftWidthDif;if(clftWidth>this._curLObj._wTotal){var rWidth=clftWidth-this._curLObj._wTotal;for(var i=0;i<this._curLObj.columns.length;i++){cObj=this._curLObj.columns[i];if(cObj._f!=0)cObj._w=Math.round((rWidth*(cObj._f/this._curLObj._fTotal))-.49)+'px';}}}
this._clfWidth=0;for(var i=0;i<this._curLObj.columns.length;i++){cObj=this._curLObj.columns[i];A5.u.css.setSelector('.'+this._cssSelP+'C'+i,'width: '+cObj._w+';');this._clfWidth+=A5.u.convertUnits(cObj._w,'px');}
this._clfWidth+=1;if(!this._clfFlex)A5.u.css.setSelector('.'+this._cssSelP+'W','width: '+this._clfWidth+'px;');else A5.u.css.deleteSelector('.'+this._cssSelP+'W');chgEle.style.width=(this._clfWidth+cEle.offsetWidth)+'px';}},_colResize:function(){var m=A5.u.drag._w[this.contId+'.CHEADER'].c.m;if(this.columnLayout.header.item.resize.location=='before')m=m*-1;var col=A5.u.drag._w[this.contId+'.CHEADER'].c.indx;var colObj=this._curLObj.columns[col];var ow=$(this.contId+'.CHEADER.'+col).offsetWidth;if(colObj._f==0){var w=Math.max(10,ow+m);colObj._w=w+'px';colObj.width=w+'px';}else{if(colObj._f!=this._curLObj._fTotal){var newF=$u.n.round((colObj._f/ow)*(ow+m),2);this._curLObj._fTotal=this._curLObj._fTotal+newF-colObj._f;colObj._f=newF;colObj.width='flex('+newF+')';}}
this._size();},_scrollerEvnt:function(){this._scr._a=true;this.scrollToItem(this._scr.value,{mode:'top'});this._scr._a=false;},_viewNavEvnt:function(e,classInst){A5.u.drag.setDisabled(this.id+'.CONTENTWRAPPER','scroll',false,false);classInst._viewNav($ga(this,'a5listnavdir'));},_viewNav:function(loc){var sEle=$(this.contId+'.CONTENTWRAPPER');var scrl=A5.u.element.getScroll(sEle);var iEle=false;var iOff=0;var iIndx=this._rData[this.view._ds]['*renderIndex'];if(loc=='p'){if(this.view._s==0)return false;iEle=$(this.contId+'.'+iIndx);this.view._s=Math.max(0,this.view._s-this.view.size+this.view.offset);this.view._e=this.view._s+this.view.size;}else if(loc=='n'){if(this.view._e>=this._rData.length-1)return false;iIndx=this._rData[this.view._de]['*renderIndex'];iEle=$(this.contId+'.'+iIndx);this.view._s=Math.min(Math.max(0,this.view._e-this.view.offset),this._rData.length-this.view.size);this.view._e=this.view._s+this.view.size;}else if(loc=='goto'){var indx=arguments[1];if(this._tempalte!=''){for(var i=indx;i<this._rData.length;i++){if(this._isData(this._rData[i])){if(this._rData[i]['*renderIndex']>=indx){indx=i;break;}}}}
this.view._s=Math.min(Math.max(0,indx-this.view.offset),this._rData.length-this.view.size);this.view._e=this.view._s+this.view.size;}else return false;if(loc!='goto'){if(this._curL=='template-horizontal')iOff=iEle.offsetLeft-scrl.left
else iOff=iEle.offsetTop-scrl.top;}
$(this.contId+'.CONTENT').innerHTML='';this._renderData(this._rData,0,0,'view-nav');if(loc!='goto'){iEle=$(this.contId+'.'+iIndx);if(this._curL=='template-horizontal')A5.u.element.setScroll(sEle,iEle.offsetLeft-iOff,scrl.top);else A5.u.element.setScroll(sEle,scrl.left,iEle.offsetTop-iOff);}
if(this.scroller.show){if(!this._scr._a){if(this.view._e==this._rData.length-1)this._scr.setValue(this._rData[this.view._de]['*renderIndex'],false);else this._scr.setValue(this._rData[this.view._ds]['*renderIndex'],false);this._scr._sShd();}}},_keyPrevItem:function(){if(this.disabled)return false;var executeSelect=typeof arguments[0]!='undefined'?arguments[0]:true;if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect();if(typeof result!='boolean')result=true;if(!result)return false;}
oldIndx=this.selection[this.selection.length-1];if(typeof oldIndx!='undefined'){if(oldIndx>0){oldIndx=oldIndx-1;if(oldIndx<this._rData[this.view._ds]['*renderIndex']&&(this.view.type=='dynamic'||this.view.type=='page')){this._viewNav('p');this._selectItem(oldIndx);}else this._selectItem(oldIndx);}else if(this.loopNavigate){if(this.view.type=='dynamic'||this.view.type=='page')this._viewNav('l');if(this.loopNavigateNullSelection&&this.allowNullSelection){if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect(-1);if(typeof result!='boolean')result=true;if(!result)return false;}
this._deselectAll();if(this.onSelect.constructor==Function&&executeSelect)this.onSelect(-1);}else this._selectItem(this._values.length-1);}}else{if(this.view.type=='dynamic'||this.view.type=='page'){if(this.loopNavigate)this._viewNav('l');else this._viewNav('f');}
if(this.loopNavigate)this._selectItem(this._values.length-1);else this._selectItem(0);}},_keyNextItem:function(){if(this.disabled)return false;var executeSelect=typeof arguments[0]!='undefined'?arguments[0]:true;if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect();if(typeof result!='boolean')result=true;if(!result)return false;}
oldIndx=this.selection[this.selection.length-1];if(typeof oldIndx!='undefined'){if(oldIndx<this._values.length-1){oldIndx=oldIndx+1;if(oldIndx>this._rData[this.view._de]['*renderIndex']&&(this.view.type=='dynamic'||this.view.type=='page')){this._viewNav('n');this._selectItem(oldIndx);}else this._selectItem(oldIndx);}else if(this.loopNavigate){if(this.view.type=='dynamic'||this.view.type=='page')this._viewNav('f');if(this.loopNavigateNullSelection&&this.allowNullSelection){if(this.onBeforeSelect.constructor==Function&&executeSelect){var result=this.onBeforeSelect(-1);if(typeof result!='boolean')result=true;if(!result)return false;}
this._deselectAll();if(this.onSelect.constructor==Function&&executeSelect)this.onSelect(-1);}else this._selectItem(0);}}else{if(this.view.type=='dynamic'||this.view.type=='page')this._viewNav('f');this._selectItem(0);}},_keyFirstItem:function(){if(this.disabled)return false;if(this.view.type=='dynamic'||this.view.type=='page')this._viewNav('f');else this._selectItem(0);},_keyLastItem:function(){if(this.disabled)return false;if(this.view.type=='dynamic'||this.view.type=='page')this._viewNav('f');else this._selectItem(this._values.length-1);},_keyEnter:function(){if(this.disabled)return false;if(this.onClick.constructor==Function)this.onClick();if(this.onDblClick.constructor==Function)this.onDblClick();},_onClick:function(e){if(A5.u.drag._sDif>=$e.abstractEvents.click.scrollMax)return false;if(this.disabled)return false;var indx=this.indexFromEvent(e);var ci={};if(this._custItem)ci=this._gCustItem(this._custItem);if(typeof indx=='number'&&indx!=-1){if(this._hasFocus==false){this._focus(e);}
$(this.contId+'.FOCUSCATCHER').focus();}
this._keyWatch.shift=false;this._keyWatch.ctrl=false;if(typeof e.shiftKey!='undefined'){this._keyWatch.shift=e.shiftKey;this._keyWatch.ctrl=e.ctrlKey;}
if(indx>-1){if(typeof ci.selectable=='undefined')ci.selectable=true;if(ci.selectable){this._selectItem(indx);if(this.onClick.constructor==Function)this.onClick(indx,this._values[indx]);}
if(typeof ci.onClick=='function')ci.onClick.call(this,indx,this._values[indx],ci._args);}else if(indx=='*prev')this._viewNav('p');else if(indx=='*next')this._viewNav('n');else if(String(indx).substr(0,5)=='*col:'){var col=Number(indx.substr(5));var cObj=this._curLObj.columns[col];if(cObj.header.onClick.constructor==Function)cObj.header.onClick.call(this);if(cObj.order){var res=true;if(cObj.onBeforeOrder.constructor==Function)res=cObj.onBeforeOrder.call(this,col,cObj);if(!(typeof res=='boolean'&&res==false)){var colName=this._clOrderCols[col];for(var i=0;i<this._clOrderCols.length;i++){if(this._clOrderCols[i]==colName){col=i;break;}}
var order={};order[colName]=1;if(this._clOrderCol==col){if(this._clOrderDir==1)order[colName]=-1;else order=false;}
this.setOrder(order);if(!order)this._clOrderCol=-1;if(cObj.onOrder.constructor==Function)res=cObj.onOrder.call(this,col,cObj);}}}else if(typeof ci.onClick=='function')ci.onClick.call(this,false,'',ci._args);else if(indx=='*header'||indx=='*footer'||indx=='*content-header'||indx=='*content-footer')return true;$e.stopEvent(e);return false;},_onDblClick:function(e){if(this.disabled)return false;var indx=this.indexFromEvent(e);var ci={};if(this._custItem)ci=this._gCustItem(this._custItem);if(indx>-1){if(typeof this.onDblClick=='function')this.onDblClick(indx,this._values[indx]);if(typeof ci.onDblClick=='function')ci.onDblClick.call(this,indx,this._values[indx],ci._args);}else if(String(indx).substr(0,5)=='*col:'){var col=Number(indx.substr(5));var cObj=this._curLObj.columns[col];if(cObj.header.onDblClick.constructor==Function)cObj.header.onDblClick.call(this);}else if(typeof ci.onDblClick=='function')ci.onDblClick.call(this,false,'',ci._args);$e.stopEvent(e);return false;},_rClick:function(e){if(this.disabled)return false;var indx=this.indexFromEvent(e);var ci={};if(this._custItem)ci=this._gCustItem(this._custItem);if(indx>-1){if(typeof this.onRightClick=='function')this.onRightClick(indx,this._values[indx]);if(typeof ci.onRightClick=='function')ci.onRightClick.call(this,indx,this._values[indx],ci._args);}else if(String(indx).substr(0,5)=='*col:'){var col=Number(indx.substr(5));var cObj=this._curLObj.columns[col];if(cObj.header.onRightClick.constructor==Function)cObj.header.onRightClick.call(this);}else if(typeof ci.onRightClick=='function')ci.onRightClick.call(this,false,'',ci._args);$e.stopEvent(e);return false;},_down:function(e){if(this.disabled)return false;var indx=this.indexFromEvent(e);if(indx=='*prev')$acn(this.contId+'.PREV',this.view.navigation.prev.pressedClassName);else if(indx=='*next')$acn(this.contId+'.NEXT',this.view.navigation.next.pressedClassName);},_scroll:function(e,classInst){if(classInst.view.type=='dynamic'){if((classInst.view.maxSize>classInst.view._e-classInst.view._s||classInst.view.maxSize==-1)&&classInst.state.view.hasNext&&!classInst._viewAddingItems){var scr=A5.u.element.getScroll(this);var addItems=false;if(classInst._curL=='template-horizontal'){if(scr.width-scr.left<this.parentNode.offsetWidth*2)addItems=true;}else{if(scr.height-scr.top<this.parentNode.offsetHeight*2)addItems=true;}
if(addItems){classInst._viewAddingItems=true;var sIndx=classInst.view._e+1;if(classInst.view.maxSize==-1)classInst.view._e=classInst.view._e+classInst.view.size;else classInst.view._e=Math.min(classInst.view._e+classInst.view.size,classInst.view._s+classInst.view.maxSize);classInst._renderData(classInst._rData,sIndx,0,'view-add');classInst._viewAddingItems=false;}}}else if(classInst.view.type!='page'){if(classInst.scroller.show){var scr=A5.u.element.getScroll(this);if(classInst._curL=='template-horizontal'){classInst._scr.setValue(Math.round(((1/scr.width)*scr.left)*classInst._scr.max),false);}else{classInst._scr.setValue(Math.round(((1/scr.height)*scr.top)*classInst._scr.max),false);}}
if(classInst.onNavigate.constructor==Function){clearTimeout(classInst._cneTO);classInst._cneTO=setTimeout(Function('$e.execute(\''+classInst.contId+'\',\'a5listnavevent\');'),100);}}
if(classInst._curL=='column'){var chEle=$(classInst.contId+'.CHEADER');chEle.scrollLeft=A5.u.element.getScroll(this).left;}},_navEvnt:function(){var r=this.indexVisible();this.onNavigate.call(this,r.start,r.end);},indexVisible:function(){var cwEle=$(this.contId+'.CONTENTWRAPPER');var scrl=A5.u.element.getScroll(cwEle);var s=0;var e=this._dataMap.length-1;if(this.view.type=='dynamic'){s=this.view._s;e=this.view._e;}
if(!((this._curL=='template-horizontal'&&scrl.width<=cwEle.offsetWidth)||(this._curL!='template-horizontal'&&scrl.height<=cwEle.offsetHeight))){var indx=Math.round((e-s)/2)+s;var ele=$(this.contId+'.'+indx);if(this._curL=='template-horizontal'){var w=cwEle.offsetWidth;var ol=ele.offsetLeft;while(ol<scrl.left||ol>scrl.left+w){if(ol<scrl.left)s=indx;else e=indx;indx=Math.round((e-s)/2)+s;ele=$(this.contId+'.'+indx);ol=ele.offsetLeft;}
s=indx;e=indx;var nEle=ele;var pEle=ele;while(nEle.offsetLeft+pEle.offsetWidth<scrl.left+w){if(!nEle)break;e++;nEle=$(this.contId+'.'+e);}
while(pEle.offsetLeft>scrl.left){if(!pEle)break;s--;pEle=$(this.contId+'.'+s);}}else{var h=cwEle.offsetHeight;var ot=ele.offsetTop;while(ot<scrl.top||ot>scrl.top+h){if(ot<scrl.top)s=indx;else e=indx;indx=Math.round((e-s)/2)+s;ele=$(this.contId+'.'+indx);ot=ele.offsetTop;}
s=indx;e=indx;var nEle=ele;var pEle=ele;while(nEle.offsetTop+pEle.offsetHeight<scrl.top+h){if(!nEle)break;e++;nEle=$(this.contId+'.'+e);}
while(pEle.offsetTop>scrl.top){if(!pEle)break;s--;pEle=$(this.contId+'.'+s);}}
s=Math.max(s,0);e=Math.min(e,this._dataMap.length-1);}
return{start:s,end:e};},indexFromEvent:function(e){var coor=$e.getCoors(e);return this.indexFromPoint(coor.clientX,coor.clientY);},indexFromPoint:function(x,y){return this.indexFromElement(document.elementFromPoint(x,y));},indexFromElement:function(sEle){if(!sEle)return-1;var cEle=$(this.contId);var ta='';this._custItem=false;while(sEle!=cEle&&sEle!=document.body){ta=$ga(sEle,'a5-item');if(ta!=null){if(''+Number(ta)==ta)return Number(ta);else if(String(ta).substr(0,5)=='*col:'||ta=='*next'||ta=='*prev'||ta=='*header'||ta=='*footer'||ta=='*content-header'||ta=='*content-footer')return ta;else this._custItem=ta;}
sEle=sEle.parentNode;}
return-1;},indexFromValue:function(val){return this._getIndex(val);},_focus:function(e){if(this._hasFocus==false){this._keyWatch.on();this._hasFocus=true;$e.executeGroup('A5ControlsFocusCatcher');$e.removeGroup('A5ControlsFocusCatcher');$e.add(document.documentElement,A5.d.evnts.up,this._blur,this,true,'A5ControlsFocusCatcher');if(this.focusClassName!='')$acn($(this.contId),this.focusClassName);if(this.onFocus.constructor==Function)this.onFocus();}
$e.stopEvent(e);return false;},_blur:function(){this._hasFocus=false;this._keyWatch.off();if(this.focusClassName!='')$rcn($(this.contId),this.focusClassName);$e.remove(document.documentElement,A5.d.evnts.up,this._blur);if(this.onBlur.constructor==Function)this.onBlur();},_swapList:function(anim){if(!A5.u.css.supportsTransition)return true;var ele=$(this.contId);var cwEle=$(this.contId+'.CONTENTWRAPPER');if($(this.contId+'.CONTENTWRAPPERTEMP'))ele.removeChild($(this.contId+'.CONTENTWRAPPERTEMP'));var tcwEle=cwEle.cloneNode(true);tcwEle.id=this.contId+'.CONTENTWRAPPERTEMP';$ss(tcwEle,{position:'absolute',width:ele.clientWidth+'px',top:cwEle.offsetTop+'px'});ele.appendChild(tcwEle);tcwEle.scrollTop=cwEle.scrollTop;tcwEle.scrollLeft=cwEle.scrollLeft;var dur=this.animation.swap.duration;if(typeof anim=='object'){dur=anim.duration;anim=anim.type;}
if(anim=='prev'){if(this.animation.swap.flow=='rtl')anim='slide-right';else anim='slide-left';}else if(anim=='next'){if(this.animation.swap.flow=='rtl')anim='slide-left';else anim='slide-right';}
var animNum=1;if(anim=='slide-left')animNum=-1;var propAnimDOM=A5.u.css.properties.transitionDOM;var propDOM=A5.u.css.properties.transformDOM;cwEle.style[propDOM]='translate('+animNum+'00%,0px)';cwEle.offsetHeight;var trans=A5.u.css.properties.transform+' '+dur+'ms ease-in-out'
cwEle.style[propAnimDOM]=trans;tcwEle.style[propAnimDOM]=trans;cwEle.style[propDOM]='translate(0px,0px)';tcwEle.style[propDOM]='translate('+(animNum*-1)+'00%,0px)';},_gCustItem:function(cin){var cio={};var cia=cin.split(':');cin=cia.shift();if(typeof this._curLObj.items[cin]=='object')cio=this._curLObj.items[cin];else if(typeof this.items[cin]=='object')cio=this.items[cin];cio._args=cia.join(':');return cio;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!=''&&arguments[i]!=false&&arguments[i]!=null)return arguments[i];return'';},_cDefaults:{header:{html:'',className:'',hoverClassName:'',style:0,onClick:0,onDblClick:0,onRightClick:0},data:{template:'',className:'',style:''},order:false,onBeforeOrder:0,onOrder:0,width:'flex(1)',resize:false},_lDefaults:{type:'template',columns:[],template:'',header:'',footer:'',scroll:{},item:{width:'',height:'',className:'',hoverClassName:'',selectedClassName:'',style:false,titleClassName:'',separatorClassName:''},items:{}},_gDefaults:{order:0,group:0,header:{html:function(g,d){return g}},footer:{show:false,html:''}}}
A5.SpinList=Class.create({initialize:function(contId,data,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',inputId:'',className:'',disabledClassName:'',item:{className:''},height:1,onChange:0,onSelect:0,onBeforePopulate:0,onPopulate:0,disabled:false,value:''});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'spinList');$u.o.assign(this,settings);A5.overrides.assign(this,'spinList',this.override);this._init=false;var ele=$(contId);$acn(ele,this.className);$ss(ele,$gs(ele)+'; position: relative; overflow: hidden; -moz-user-select: -moz-none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none;');this._pTop=0;if(!A5.flags.isWebKit&&!A5.flags.isOpera){var swcs={paddingTop:'',paddingBottom:''};if(typeof window.getComputedStyle!='undefined')swcs=window.getComputedStyle(ele);else if(ele.currentStyle)swcs=ele.currentStyle;if(swcs.paddingTop!='')this._pTop=A5.u.convertUnits(swcs.paddingTop,'px')*-1;}
A5.u.drag.add(contId,'custom',{axis:'y',tolerance:10,stopPropagation:true,sLoc:0,offsetTop:this._pTop,onStart:function(d,i){this.firstChild.style[A5.u.css.properties.transitionDOM]='';},onMove:function(d,i){this.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px',(i.sLoc+i.offsetTop+d.customMoveY)+'px');},onEnd:function(d,i){if(d.hasMomentum){var t=d.endT-d.startT;var v=d.customMoveY/t;i.sLoc=i.sLoc+d.customMoveY+(v*500);this.firstChild.style[A5.u.css.properties.transitionDOM]=A5.u.css.properties.transform+' 1000ms ease';}else{i.sLoc=i.sLoc+d.customMoveY;this.firstChild.style[A5.u.css.properties.transitionDOM]=A5.u.css.properties.transform+' 600ms ease-out';}
var loc=i.sLoc;var lEle=this.firstChild;var iEle=lEle.childNodes[0];var mid=((ele.offsetHeight/2)-(iEle.offsetHeight/2));if(loc<mid)loc=mid-loc;else loc=(loc-mid)*-1;var indx=Math.round((lEle.childNodes.length/lEle.offsetHeight)*loc);if(indx<0)indx=0;else if(indx>=lEle.childNodes.length)indx=lEle.childNodes.length-1;iEle=lEle.childNodes[indx];loc=iEle.offsetTop;if(loc<mid)loc=mid-loc;else loc=(loc-mid)*-1;lEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px',(loc+i.offsetTop)+'px');i.sLoc=loc;$sa(this,'A5SpinListIndex',''+indx);$e.execute(this,'a5spinlistselect');}});$e.add(ele,'a5spinlistselect',this._select,this);this.populate(data);if(this.disabled)this.setDisabled(true);this._init=true;},setDisabled:function(val){if(this.disabled!=val||!this._init){A5.u.drag.setDisabled(this.contId,'custom',val);if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;}},setValue:function(val){var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;var ele=$(this.contId);ele.firstChild.style[A5.u.css.properties.transitionDOM]='';var indx=$u.a.find(this._values,val);if(indx!=-1){var fireOnChange=false;if(this.onChange.constructor==Function&&this.value!=val)fireOnChange=true;this.value=val;var offsetTop=this._pTop;if(!this._init)offsetTop=0;var lEle=ele.firstChild;var iEle=lEle.childNodes[indx];var mid=((ele.offsetHeight/2)-(iEle.offsetHeight/2));var loc=iEle.offsetTop;if(loc<mid)loc=mid-loc;else loc=(loc-mid)*-1;lEle.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D('0px',(loc+offsetTop)+'px');A5.u.drag._w[ele.id].c.sLoc=loc;$sa(ele,'A5SpinListIndex',''+indx);if(this.inputId!=''){$(this.inputId).value=this.value;if(executeSelect)$e.execute(this.inputId,'change');}
if(fireOnChange)this.onChange();if(this.onSelect.constructor==Function&&executeSelect)this.onSelect();}},refresh:function(){var ele=$(this.contId);if(typeof this.height=='number')ele.style.height=(ele.firstChild.firstChild.offsetHeight*(1+(this.height*2)))+'px';else ele.style.height=this.height;if($u.a.find(this._values,this.value)==-1)this.value=this._values[0];this.setValue(this.value);},populate:function(data){if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,data);if(typeof res=='boolean'){if(!res)return false;}}
this._values=[];this._data=[].concat(data);var tHTML=['<div>'];for(var i=0;i<data.length;i++){if(typeof data[i]=='object'){if(typeof data[i].value=='undefined')data[i].value=data[i].html;if(typeof data[i].html=='undefined')data[i].html=data[i].value;if(typeof data[i].className=='undefined')data[i].className=this.item.className;tHTML.push('<div class="'+data[i].className+'">'+data[i].html+'</div>');this._values.push(data[i].value);}else{tHTML.push('<div class="'+this.item.className+'">'+data[i]+'</div>');this._values.push(data[i]);}}
tHTML.push('</div>');var ele=$(this.contId);ele.innerHTML=tHTML.join('');if(typeof this.height=='number')ele.style.height=(ele.firstChild.firstChild.offsetHeight*(1+(this.height*2)))+'px';else ele.style.height=this.height;if($u.a.find(this._values,this.value)==-1)this.value=this._values[0];this.setValue(this.value);if(this.onPopulate.constructor==Function)this.onPopulate.call(this,this._data);},_select:function(e,classInst){var indx=Number($ga(this,'A5SpinListIndex'));var fireOnChange=false;if(classInst.onChange.constructor==Function&&classInst.value!=classInst._values[indx])fireOnChange=true;classInst.value=classInst._values[indx];if(classInst.inputId!=''){$(classInst.inputId).value=classInst.value;$e.execute(classInst.inputId,'change');}
if(fireOnChange)classInst.onChange();if(classInst.onSelect.constructor==Function)classInst.onSelect();}});A5.edit={getSelection:function(ele){ele.focus();var startPos=ele.value.length;var endPos=startPos;if(ele.setSelectionRange){startPos=ele.selectionStart;endPos=ele.selectionEnd;var len=Math.max(startPos,endPos)-Math.min(startPos,endPos);startPos=Math.min(startPos,endPos)
endPos=startPos+len;}else if(document.selection&&document.selection.createRange){var dRange=document.selection.createRange();dRange.collapse();if(ele.tagName.toLowerCase()=='textarea'){var range=document.body.createTextRange();range.moveToElementText(ele);}else var range=ele.createTextRange();if(dRange.parentElement()==ele)range.setEndPoint('EndToStart',dRange);startPos=range.text.replace(/\r/g,'').length;var len=dRange.text.replace(/\r/g,'').length;endPos=startPos+len;}
return{start:startPos,end:endPos,length:len};},setSelection:function(ele,startPos,endPos){if(typeof endPos=='undefined')endPos=startPos;var rsp=Math.min(startPos,endPos);var rep=Math.max(startPos,endPos);if(ele.setSelectionRange)ele.setSelectionRange(rsp,rep);else if(document.selection){var range=ele.createTextRange();range.moveStart('character',rsp);range.collapse();if(rsp!=rep)range.moveEnd('character',rep-rsp);range.select();}}}
A5.Edit=Class.create();A5.Edit.prototype={initialize:function(settings){this.override='base';if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'edit');$u.o.assign(this,settings);A5.overrides.assign(this,'edit',this.override);this._editPrepare();},create:function(s){var HTMLBEle=document.createElement('input');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLBEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLBEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLBEle,attr,s[attr]);}
if(HTMLBEle.id=='')HTMLBEle.id=A5.u.getUniqueId();this._bind(HTMLBEle);return HTMLBEle;},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++)this._bind($(ctrl[i]));}else this._bind($(ctrl));},_bind:function(ele){if($ga(ele,'A5ControlBound')=='true')return true;$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keypress',this._keyPress,this);this._editBind(ele);$sa(ele,'A5ControlBound','true');},setValue:function(val){if(typeof arguments[1]!='undefined'){var ele=$(arguments[1]);var oldVal=$gvs(ele);if(oldVal!=val){this._editBeforeUpdate(ele);$svs(ele,val);this._editUpdate(ele);}}else{var ele=0;var oldVal='';for(var i=0;i<this._editIds.length;i++){ele=$(this._editIds[i]);var oldVal=$gvs(ele);if(oldVal!=val){this._editBeforeUpdate(ele);$svs(ele,val);this._editUpdate(ele);}}}},insertValue:function(val,commit){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var aVal=data.vals[data.selIndx];aVal.val=val;var offset=aVal.offset+val.length;if(commit&&this._multi.auto.separate&&data.selIndx==data.vals.length-1){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++)oldSeps.push(data.vals[i].sep);aVal.sep=this.multiple.auto.separator.call(this,oldSeps);}else aVal.sep=this.multiple.auto.separator;offset=offset+aVal.sep.length;if(this.format.showMask)data.vals.push({val:this.format._pMask.blankValue,sep:'',offset:0});}
ele.value=this._editValJoin(data);if(!this.decouple)A5.edit.setSelection(ele,offset);return offset;},setDisabled:function(val,eles){if(typeof eles=='undefined')eles=this._editIds;if(eles.constructor==Array){for(var i=0;i<eles.length;i++)$(eles[i]).disabled=val;}else $(eles).disabled=val;},setWatermark:function(wm){this.watermark.text=wm;if(typeof arguments[1]!='undefined'){var ele=$(arguments[1]);this._editClearWatermark(ele);this._editSetWatermark(ele);}else{var ele=0;for(var i=0;i<this._editIds.length;i++){ele=$(this._editIds[i]);this._editClearWatermark(ele);this._editSetWatermark(ele);}}},_editPrepare:function(){var oldWMStyle='';if(typeof this.watermark!='undefined'){if(typeof this.watermark.style!='undefined')oldWMStyle=this.watermark.style;}
$u.o.assign(this,{format:{type:'',mask:'',showMask:false,number:{},parseIn:'string',parseOut:0},watermark:{text:'',className:'',style:'color: gray;'},multiple:{allow:false,separators:0,auto:{separator:0,persist:false}}},true);if(this.watermark.className!='')this.watermark.style=oldWMStyle;this.format.type=this.format.type.toLowerCase();this._editTargetId='';if(this.format.type=='custom'){if(this.format.parseIn.constructor==Function)this.format._customIn=this.format.parseIn;else{if(this.format.parseIn=='number')this.format._customIn=function(val){return $u.s.toNum(val);};else if(this.format.parseIn=='boolean')this.format._customIn=function(val){return $u.s.toBool(val);};else this.format._customIn=function(val){return val.toString();};}
if(this.format.parseOut.constructor==Function)this.format._customOut=this.format.parseOut;else this.format._customOut=function(val){return val;};}else if(this.format.type=='number'&&this.format.number.constructor!=Function)this.format._number=this._editParseNumber(this.format.number);else if(this.format.type=='mask'){if(this.format.mask.constructor!=Function)this.format._pMask=this._editParseMask(this.format.mask);else this.format._pMask=this._editParseMask(this.format.mask.call(this));}
this._editIds=new Array();this._fakeOnChange=0;},_editBind:function(ele){var eId=ele.id!=''?ele.id:ele.name;this._editIds.push(eId);this._editSetWatermark(ele);},_editBeforeUpdate:function(ele){this._editClearWatermark(ele);},_editUpdate:function(ele){if(ele.value!=''&&(this.format.type=='custom'||this.format.type=='mask'||this.format.type=='number')){var tempEditTargetId=this._editTargetId;this._editTargetId=ele.id;this._multi=this._editParseMultiVal();var data=this._editValSplit(ele,false);if(this.format.type=='custom'){for(var i=0;i<data.vals.length;i++)data.vals[i].val=this.format._customOut.call(ele,this.format._customIn.call(ele,data.vals[i].val));}else if(this.format.type=='number'){if(this.format.number.constructor==Function)var numberObj=this._editParseNumber(this.format.number.call(this));else var numberObj=this.format._number;var maxLen=ele.maxLength;if(maxLen>500)maxLen=-1;for(var i=0;i<data.vals.length;i++)data.vals[i].val=this._editNumberOut(this._editNumberIn(data.vals[i].val,numberObj),numberObj,maxLen);}else if(this.format.type=='mask'){for(var j=0;j<data.vals.length;j++){val=data.vals[j].val;var pVal='';var iPoint=0;if(this.format.mask.constructor==Function)pMask=this._editParseMask(this.format.mask.call(this));else pMask=this.format._pMask;var mask=pMask.mask;if(mask.length!=0){for(var i=0;i<val.length;i++){var keyCode=val.substr(i,1);while(typeof mask[iPoint]=='string'&&mask.length>iPoint){pVal=pVal.substr(0,iPoint)+mask[iPoint]+pVal.substr(iPoint+1);if(mask[iPoint]==keyCode){i++;keyCode=val.substr(i,1);}
iPoint++;}
if(keyCode.match(mask[iPoint])){pVal=pVal.substr(0,iPoint)+keyCode+pVal.substr(iPoint+1);iPoint=iPoint+1;}
while(typeof mask[iPoint]=='string'&&mask.length>iPoint){pVal=pVal.substr(0,iPoint)+mask[iPoint]+pVal.substr(iPoint+1);if(mask[iPoint]==keyCode){i++;keyCode=val.substr(i,1);}
iPoint++;}}
data.vals[j].val=pVal;}}}
this._editTargetId=tempEditTargetId;this._multi=this._editParseMultiVal();ele.value=this._editValJoin(data);}else this._editSetWatermark(ele);},_editParseNumber:function(num){$u.o.assign(num,{blank:false,blankValue:0,negative:'-',hasMax:false,hasMin:false,max:100,min:0,decimal:'.',round:-1,roundDirection:'',comma:'',prefix:'',suffix:'',fill:''},true);num.negative=num.negative.toLowerCase();return num;},_editParseMask:function(mask){pMask=new Object();pMask.mask=new Array();for(var i=0;i<mask.length;i++){if(mask.substr(i,1)=='\\'){pMask.mask.push(mask.substr(i+1,1));i++;}else if(mask.substr(i,1)=='L')pMask.mask.push(/[A-Z]/);else if(mask.substr(i,1)=='l')pMask.mask.push(/[A-z]/);else if(mask.substr(i,1)=='#')pMask.mask.push(/[0-9\.\-]/);else if(mask.substr(i,1)=='N')pMask.mask.push(/[A-Z0-9\.\-]/);else if(mask.substr(i,1)=='n')pMask.mask.push(/[A-z0-9\.\-]/);else if(mask.substr(i,1)=='A')pMask.mask.push(/[A-Z0-9]/);else if(mask.substr(i,1)=='a')pMask.mask.push(/[A-z0-9]/);else if(mask.substr(i,1)=='0')pMask.mask.push(/[0-9]/);else if(mask.substr(i,1)=='&')pMask.mask.push(/./);else pMask.mask.push(mask.substr(i,1));}
pMask.blankValue=new Array();for(var i=0;i<pMask.mask.length;i++){if(typeof pMask.mask[i]=='string')pMask.blankValue.push(pMask.mask[i]);else pMask.blankValue.push('_');}
pMask.blankValue=pMask.blankValue.join('');return pMask;},_editParseMultiVal:function(){var pMulti={allow:this.multiple.allow,'sep':[],regEx:'',keyBuffer:'',auto:{separate:false,persist:this.multiple.auto.persist}};if(pMulti.allow){if(typeof this.multiple.separators=='string')pMulti.sep=[this.multiple.separators];else if(this.multiple.separators.constructor==Function){pMulti.sep=this.multiple.separators.call(this);if(typeof pMulti.sep=='string')pMulti.sep=[pMulti.sep];}else if(this.multiple.separators.constructor==Array){for(var i=0;i<this.multiple.separators.length;i++)pMulti.sep.push(this.multiple.separators[i]);}
if(pMulti.sep.length==0)pMulti.allow=false;else{pMulti.sep.sort(function(a,b){return b.length-a.length;});var regExArr=new Array();for(var i=0;i<pMulti.sep.length;i++)regExArr.push(pMulti.sep[i].replace(/[\\\.\^\$\*\+\?\{\}\[\]\(\)\|]/g,function(val){return'\\'+val;}));pMulti.regEx=RegExp(regExArr.join('|'),'g');}
if((typeof this.multiple.auto.separator=='string'&&this.multiple.auto.separator!='')||this.multiple.auto.separator.constructor==Function)pMulti.auto.separate=true;}
return pMulti;},_editSetWatermark:function(ele){if(((typeof this.watermark.text=='string'&&this.watermark.text!='')||this.watermark.text.constructor==Function)&&ele.value==''){if(ele.type=='password'){if(typeof document.documentElement.style.opacity!='undefined'||!(document.all&&navigator.appName!='Opera')){$sa(ele,'A5OriginalType',ele.type);ele.type='text';}}
if(this.watermark.text.constructor==Function)ele.value=this.watermark.text.call(this,ele);else ele.value=this.watermark.text;$sa(ele,'A5WatermarkText',ele.value);if(this.watermark.className!='')$acn(ele,this.watermark.className);var oldStyle=$gs(ele);oldStyle=oldStyle.split('display:').join('x-display:');oldStyle=oldStyle.split('visibility:').join('x-visibility:');$sa(ele,'A5WatermarkOldStyle',oldStyle);$ss(ele,oldStyle+';'+this.watermark.style);}},_editClearWatermark:function(ele){if(ele.value==$ga(ele,'A5WatermarkText')){ele.value='';var type=$ga(ele,'A5OriginalType');if(type=='password')ele.type=type;if(this.watermark.className!='')$rcn(ele,this.watermark.className);$ss(ele,$ga(ele,'A5WatermarkOldStyle'));}},_editMaskKeyPress:function(e,ele,pMask){var keyCode=0;if(typeof e.which=='number')keyCode=e.which;else if(typeof e.charCode=='number')keyCode=e.charCode;else keyCode=e.keyCode;if(keyCode==8||keyCode==9||keyCode==13||keyCode==27)keyCode=0;if(keyCode!=0&&!e.ctrlKey&&!e.altKey&&pMask.mask.length!=0){$e.stopEvent(e);if(this._fakeOnChange!=-1)this._fakeOnChange=1;var mask=pMask.mask;var data=this._editValSplit(ele,true);var aVal=data.vals[data.selIndx];var sel=A5.edit.getSelection(ele);var iPoint=sel.start-aVal.offset;if(iPoint>=mask.length&&!this._multi.auto.persist){this._multi.keyBuffer+=String.fromCharCode(keyCode).toLowerCase();var sLen=this._multi.keyBuffer.length;var sMat=new Array();for(var i=0;i<this._multi.sep.length;i++)if(this._multi.sep[i].substr(0,sLen).toLowerCase()==this._multi.keyBuffer)sMat.push(i);if(sMat.length==1){aVal.sep=this._multi.sep[sMat[0]];if(this.format.showMask&&data.vals.length-1==data.selIndx)data.vals.push({val:pMask.blankValue,sep:'',offset:0})
ele.value=this._editValJoin(data);A5.edit.setSelection(ele,iPoint+aVal.offset+aVal.sep.length);}else if(sMat.length==0)this._multi.keyBuffer='';}else{this._multi.keyBuffer='';var value=aVal.val;while(typeof mask[iPoint]=='string'&&mask.length>iPoint){value=value.substr(0,iPoint)+mask[iPoint]+value.substr(iPoint+1);iPoint=iPoint+1;}
keyCode=String.fromCharCode(keyCode);if(keyCode.match(mask[iPoint])){value=value.substr(0,iPoint)+keyCode+value.substr(iPoint+1);iPoint=iPoint+1;}
while(typeof mask[iPoint]=='string'&&mask.length>iPoint){value=value.substr(0,iPoint)+mask[iPoint]+value.substr(iPoint+1);iPoint=iPoint+1;}
aVal.val=value;if(data.selIndx==data.vals.length-1&&iPoint==mask.length&&this._multi.auto.separate){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++)oldSeps.push(data.vals[i].sep);aVal.sep=this.multiple.auto.separator.call(this,oldSeps);}else aVal.sep=this.multiple.auto.separator;if(this.format.showMask)data.vals.push({val:pMask.blankValue,sep:'',offset:0})
iPoint+=aVal.sep.length;}
ele.value=this._editValJoin(data);A5.edit.setSelection(ele,iPoint+aVal.offset);}
return false;}},_editMaskKeyDown:function(e,ele,pMask){var keyCode=e.charCode||e.keyCode;if(this.format.showMask&&pMask.mask.length!=0){if(keyCode==8||keyCode==46){$e.stopEvent(e);if(this._fakeOnChange!=-1)this._fakeOnChange=1;var data=this._editValSplit(ele,true);var oldLen=data.vals.length;var sel=A5.edit.getSelection(ele);var mValue=pMask.blankValue;if(sel.length==0){var aVal=data.vals[data.selIndx];var sStart=sel.start-aVal.offset;var sEnd=sel.end-aVal.offset;var value=aVal.val;if(keyCode==8&&sStart>0){value=value.substr(0,sStart-1)+mValue.substr(sStart-1,1)+value.substr(sStart);sel.start--;}else if(keyCode==46&&sStart<value.length){value=value.substr(0,sStart)+mValue.substr(sStart,1)+value.substr(sStart+1);sel.start++;}
if(value==mValue&&data.vals.length>1){delete aVal;data.vals.splice(data.selIndx,1);if(data.selIndx==data.vals.length){data.vals[data.vals.length-1].sep='';if(keyCode==46)sel.start=data.vals[data.vals.length-1].offset;}else if(keyCode==46)sel.start-=mValue.length;}else aVal.val=value;}else{for(var i=data.vals.length-1;i>=0;i--){if(data.vals[i].offset>=sel.start&&data.vals[i].offset+data.vals[i].val.length<=sel.end)data.vals.splice(i,1);else if((data.vals[i].offset<sel.start&&data.vals[i].offset+data.vals[i].val.length>sel.start)||(data.vals[i].offset<sel.end&&data.vals[i].offset+data.vals[i].val.length>sel.end)){var sStart=sel.start-data.vals[i].offset;var sEnd=sel.end-data.vals[i].offset;var sLen=sEnd-Math.max(sStart,0);data.vals[i].val=data.vals[i].val.substr(0,sStart)+mValue.substr(sStart,sLen)+data.vals[i].val.substr(sEnd);}}}
if(oldLen!=data.vals.length&&this._multi.auto.persist){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++){data.vals[i].sep=this.multiple.auto.separator.call(this,oldSeps);oldSeps.push(data.vals[i].sep);}}else for(var i=0;i<data.vals.length-1;i++)data.vals[i].sep=this.multiple.auto.separator;}
ele.value=this._editValJoin(data);A5.edit.setSelection(ele,sel.start);return false;}}else if(keyCode==8||keyCode==46)this._fakeOnChange=-1;},_editNumberIn:function(str,num){str=str.toString();var negNum=false;if(num.negative.indexOf('(')!=-1&&str.indexOf('(')!=-1)negNum=true;else if(str.indexOf('-')!=-1)negNum=true;var regEx=RegExp('[^0-9'+num.decimal+']');str=str.split(regEx).join('');str=$if(negNum,'-','')+str.split(regEx).join('');str=str.replace(num.decimal,'.');return Number(str);},_editNumberOut:function(valNum,num,maxLen){var comma=num.comma!=''?true:false;var neg=valNum<0?true:false;var prefix=num.prefix;var suffix=num.suffix;if(num.round>=0)valNum=$u.n.round(valNum,num.round,num.roundDirection);if(num.blank&&valNum==num.blankValue)return'';if(num.hasMax)valNum=Math.min(valNum,num.max);if(num.hasMin)valNum=Math.max(valNum,num.min);valNum=Math.abs(valNum);var str=String(valNum);var intStr=$u.s.word(str,1,'.');var decStr=$u.s.word(str,2,'.');if(num.round>=0){if(!decStr)decStr='0';if(decStr.length!=num.round)decStr=$u.s.pad(decStr,num.round,'0','r');}
if(comma&&intStr.length>3){var intArr=new Array();var placeInc=Math.round((intStr.length/3)+.49);intStr=$u.s.pad(intStr,placeInc*3,'0','l')
intArr.push($u.s.lTrim(intStr.substr(0,3),'0'));for(var i=1;i<placeInc;i++){intArr.push(intStr.substr(i*3,3));}
intStr=intArr.join(num.comma);}
if(neg){if(num.negative=='p-')prefix=prefix+'-';else if(num.negative=='-s')suffix=' -'+suffix;else if(num.negative=='s-')suffix=suffix+'-';else if(num.negative.indexOf('(')!=-1){if(num.negative=='(p)')prefix='('+prefix+')';else if(num.negative=='(n)'||num.negative=='(ns)')prefix=prefix+'(';else prefix='('+prefix;if(num.negative=='(s)')suffix=' ('+suffix+')';else if(num.negative=='(n)'||num.negative=='(pn)')suffix=')'+suffix;else suffix=suffix+')';}else prefix='-'+prefix;}
var val=prefix+intStr+$if(decStr!='',num.decimal+decStr,'')+suffix;if(num.fill!=''&&maxLen>val.length){val=$u.s.pad(val,maxLen,num.fill,'l');}
return val;},_editValSplit:function(eleId,getIndx){var ele=$(eleId);var val=$gvs(ele);if(val==$ga(ele,'A5WatermarkText'))val='';val=val.replace(/\r/g,'');if(typeof this._multi=='undefined')this._multi=this._editParseMultiVal();if(this._multi.allow){var data={selIndx:0,inSep:false,sel:{start:val.length,end:val.length,length:0},vals:[]};var indx=-1;var offset=0;var tVal='';var tSep='';if(getIndx){if(this.decouple)var sel={start:ele.value.length,end:ele.value.length,length:0};else var sel=A5.edit.getSelection(ele);var tMat=val.substr(0,sel.start).match(this._multi.regEx);if(tMat)data.selIndx=tMat.length;data.sel.start=sel.start;data.sel.end=sel.end;data.sel.length=sel.length;}
if(val.length==0)data.vals.push({'val':'','sep':'','offset':0});else{while(val.length>0){indx=val.search(this._multi.regEx);if(indx>-1){tVal=val.substr(0,indx);val=val.substr(indx);for(var i=0;i<this._multi.sep.length;i++){if(val.substr(0,this._multi.sep[i].length)==this._multi.sep[i]){tSep=this._multi.sep[i];val=val.substr(this._multi.sep[i].length);break;}}
data.vals.push({'val':tVal,'sep':tSep,'offset':offset});offset=offset+tVal.length+tSep.length;}else{data.vals.push({'val':val,'sep':'','offset':offset});offset=offset+tVal.length;val='';}}}
if(data.vals[data.vals.length-1].sep!='')data.vals.push({'val':'','sep':'','offset':offset});if(data.vals[data.selIndx+1]&&getIndx){if(sel.start>=data.vals[data.selIndx+1].offset-data.vals[data.selIndx].sep.length)data.inSep=true;}
return data}else return{selIndx:0,inSep:false,sel:{start:val.length,end:val.length,length:0},vals:[{'val':val,sep:'',offset:0}]};},_editValJoin:function(data){var val=new Array();for(var i=0;i<data.vals.length;i++){val.push(data.vals[i].val);val.push(data.vals[i].sep);}
return val.join('');},_editFocus:function(e,ele){this._editTargetId=ele.id;var sel=A5.edit.getSelection(ele);this._editClearWatermark(ele);this._fakeOnChange=0;this._multi=this._editParseMultiVal();if(this.format.type=='mask'){if(this.format.mask.constructor==Function)this.format._pMask=this._editParseMask(this.format.mask.call(this));if(this.format.type=='mask'&&this.format.showMask){var data=this._editValSplit(ele,true);for(var i=0;i<data.vals.length;i++){if(data.vals[i].val=='')data.vals[i].val=this.format._pMask.blankValue;}
ele.value=this._editValJoin(data);A5.edit.setSelection(ele,sel.start);}}else if(this.format.type=='number'){if(this.format.number.constructor==Function)this.format._number=this._editParseNumber(this.format.number.call(this));var data=this._editValSplit(ele,true);var tOffset=0;for(var i=0;i<data.vals.length;i++){data.vals[i].oldOffset=data.vals[i].offset;data.vals[i].offset-=tOffset;data.vals[i].oldVal=data.vals[i].val;data.vals[i].val=String(this._editNumberIn(data.vals[i].val,this.format._number)).split('.').join(this.format._number.decimal);if(data.vals[i].val==0&&data.vals.length-1==i)data.vals[i].val='';tOffset+=(data.vals[i].oldVal.length-data.vals[i].val.length);}
ele.value=this._editValJoin(data);sel.start=data.vals[data.selIndx].offset+String(this._editNumberIn(data.vals[data.selIndx].oldVal.substr(0,sel.start-data.vals[data.selIndx].oldOffset),this.format._number)).length;A5.edit.setSelection(ele,sel.start);}},_editBlur:function(e,ele){if(typeof this._multi=='undefined')this._multi=this._editParseMultiVal();if(this.format.type=='custom'){var data=this._editValSplit(ele,false);for(var i=0;i<data.vals.length;i++){data.vals[i].val=this.format._customIn.call(ele,data.vals[i].val);data.vals[i].val=this.format._customOut.call(ele,data.vals[i].val);}
ele.value=this._editValJoin(data);}else if(this.format.type=='number'){var maxLen=ele.maxLength;if(maxLen>500)maxLen=-1;var data=this._editValSplit(ele,false);for(var i=0;i<data.vals.length;i++){data.vals[i].val=this._editNumberOut(this._editNumberIn(data.vals[i].val,this.format._number),this.format._number,maxLen);}
ele.value=this._editValJoin(data);}else if(this.format.type=='mask'&&this.format.showMask){var data=this._editValSplit(ele,false);for(var i=0;i<data.vals.length;i++){if(data.vals[i].val==this.format._pMask.blankValue)data.vals[i].val='';}
ele.value=this._editValJoin(data);}
if(this.format.type=='mask'&&this._fakeOnChange==1)$e.execute(ele,'change');this._editSetWatermark(ele);},_editKeyDown:function(e,ele){if(this.format.type=='mask')this._editMaskKeyDown(e,ele,this.format._pMask);},_editKeyPress:function(e,ele){if(this.format.type=='mask')this._editMaskKeyPress(e,ele,this.format._pMask);},_focus:function(e,classInst){classInst._editFocus(e,this);},_blur:function(e,classInst){classInst._editBlur(e,this);},_keyDown:function(e,classInst){classInst._editKeyDown(e,this);},_keyPress:function(e,classInst){classInst._editKeyPress(e,this);}}
A5.EditSuggest=Class.create(A5.Edit,{initialize:function(settings){$u.o.assign(this,{theme:'',override:'base',content:{type:'',url:'',data:''},minimum:1,delay:100,selectionRequired:false,container:{className:'',hoverClassName:'',focusClassName:'',pressedClassName:'',style:0,editClassName:'',separatorClassName:'',button:{html:'',className:'',hoverClassName:'',pressedClassName:''}},listbox:{theme:''},window:{theme:'',type:'popup',location:'dropdown'},onSelect:0,onNoSelect:0});if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'editButtonGroup');var tTheme=settings.theme.split(':').shift();if(this.window.theme=='')this.window.theme=tTheme+':dropdown';if(this.listbox.theme=='')this.listbox.theme=tTheme+':dropdown';}
$u.o.assign(this,settings);A5.overrides.assign(this,'editSuggest',this.override);this.content.type=this.content.type.toLowerCase();if(this.content.type==''&&this.content.url!='')this.content.type='url';else if(this.content.type==''&&this.content.data.constructor==Function)this.content.type='url';else if(this.content.type==''&&(this.content.data.constructor==Array||this.content.data!=''))this.content.type='static';$u.o.assign(this.window,{header:{},tbar:{},bbar:{},footer:{},title:{show:false},body:{content:{type:'blank'},style:{padding:'0px',overflow:'auto'}},_nsTO:0,_hasFocus:false,onShow:function(){clearTimeout(this._nsTO);clearTimeout(this._bcTO);},onHide:function(){if(!this._hasFocus)this._bcTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5blurcomplete\');'),100);var ele=$(this._targetId);if(!this._makeSelection&&!this._hasFocus)this._nsTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5noselect\');'),100);this._makeSelection=false;},autoShow:false,autoPosition:false});$u.o.assign(this.listbox,{loopNavigate:true,onClick:function(){var ele=$(this._targetId)
ele.focus();$e.execute(ele,'a5listselection');}});var win=new A5.Window(this.window);this._listbox=new A5.ListBox(win.getWindowId('body'),[],this.listbox);this._listbox._window=win;if(this._listbox.calculateValue.constructor!=Function)this._listbox.calculateValue=function(data){return data;};this._editPrepare();this._value='';this._hasFocus=false;this._delayTO=0;this._oldIPoint=0;},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++)this._bind($(ctrl[i]));}else this._bind($(ctrl));},valueInList:function(val){return this._listbox.valueInList(val);},_bind:function(ele){if($ga(ele,'A5ControlBound')=='true')return true;var eleId=ele.id;var cEle=$(eleId+'.CONTAINER');if(cEle){var bIndx=0;var cbEle=0;while($(eleId+'.CUSTOMBUTTON.'+bIndx)){cbEle=$(eleId+'.CUSTOMBUTTON.'+bIndx);$e.add(cbEle,A5.d.evnts.down,Function('$acn(this,\''+this.container.button.pressedClassName+'\')'));if(!A5.flags.isMobile){$e.add(cbEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(cbEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\'); $rcn(this,\''+this.container.button.pressedClassName+'\')'));}
$e.add(cbEle,A5.d.evnts.up,Function('$rcn(this,\''+this.container.button.pressedClassName+'\')'));bIndx+=1;}}
$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keyup',this._keyUp,this,true);$e.add(ele,'keypress',this._keyPress,this);$e.add(ele,A5.d.evnts.click,this._onClick,this);$e.add(ele,'a5listselection',this._listSelection,this);$e.add(ele,'a5noselect',this._noSelect,this);$e.add(ele,'a5blurcomplete',this._blurComp,this);this._editBind(ele);$sa(ele,'A5ControlBound','true');},_focus:function(e,classInst){classInst._hasFocus=true;classInst._listbox._window._hasFocus=true;classInst._editFocus(e,this);clearTimeout(classInst._listbox._window._bcTO);if(classInst._targetId!=this.id){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;classInst._initValue=$gvs(this);classInst._targetId=this.id;classInst._listbox._targetId=this.id;classInst._listbox._window._targetId=this.id;}else clearTimeout(classInst._listbox._window._nsTO);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!='')$acn(cEle,classInst.container.focusClassName);},_blur:function(e,classInst){if(classInst.selectionRequired){var ele=$(classInst._targetId);var data=classInst._editValSplit(ele,false);var initVals=classInst._multi.allow?classInst._initValue.split(classInst._multi.regEx):[classInst._initValue];var remVal=true;for(var i=data.vals.length-1;i>=0;i--){remVal=true;if(data.vals[i].val!=''){for(var j=0;j<initVals.length;j++){if(initVals[j]==data.vals[i].val){remVal=false;break;}}}
if(remVal)data.vals.splice(i,1);}
if(classInst._multi.auto.separate&&classInst._multi.auto.persist){if(classInst.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++){data.vals[i].sep=classInst.multiple.auto.separator.call(classInst,oldSeps);oldSeps.push(data.vals[i].sep);}}else for(var i=0;i<data.vals.length-1;i++)data.vals[i].sep=classInst.multiple.auto.separator;}
data=classInst._editValJoin(data);if($gvs(ele)!=data)ele.value=data;}
if(classInst._listbox._window.hidden&&this.value!=classInst._initValue)classInst._listbox._window._nsTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5noselect\');'),100);classInst._listbox._window._hasFocus=false;classInst._hasFocus=false;classInst._editBlur(e,this);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!=''&&classInst._listbox._window.hidden)$rcn(cEle,classInst.container.focusClassName);classInst._listbox._window._bcTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5blurcomplete\');'),100);},_blurComp:function(e,classInst){if(classInst._listbox._window.hidden){classInst._targetId='';classInst._listbox._targetId='';classInst._listbox._window._targetId='';}},_keyDown:function(e,classInst){classInst._editKeyDown(e,this);var keyCode=e.charCode||e.keyCode;if((keyCode==13||keyCode==9)&&!classInst._listbox._window.hidden){$e.stopEvent(e);classInst._listSelection(e,classInst);return false;}else if((keyCode==36||keyCode==35)&&!classInst._listbox._window.hidden&&classInst._listbox.value.length>0){$e.stopEvent(e);if(keyCode==36)classInst._listbox.navigate('home');else classInst._listbox.navigate('end');if(classInst._listbox.value.length!=0)classInst._setValue(classInst._listbox.value[0],false);else classInst._setValue(classInst._value,false);return false;}else if((keyCode==38||keyCode==40)){$e.stopPropagation(e);}},_keyUp:function(e){var keyCode=e.charCode||e.keyCode;var ignoreChr=[9,13,16,17,18,19,20,27,33,34,35,36,37,38,39,40,45,112,113,114,115,116,117,118,119,120,121,122,123];if(keyCode==38&&!this._listbox._window.hidden){this._listbox.navigate('prev');if(this._listbox.value.length!=0)this._setValue(this._listbox.value[0],false);else this._setValue(this._value,false);}else if(keyCode==40&&!this._listbox._window.hidden){this._listbox.navigate('next');if(this._listbox.value.length!=0)this._setValue(this._listbox.value[0],false);else this._setValue(this._value,false);}else if(keyCode==36||keyCode==35||keyCode==37||keyCode==39){var sel=A5.edit.getSelection($(this._targetId));this._oldIPoint=sel.start;}else if(keyCode==27){this._listbox._window.hide();}else if($u.a.find(ignoreChr,keyCode)==-1){var sel=A5.edit.getSelection($(this._targetId));this._oldIPoint=sel.start;if(this.delay>0){clearTimeout(this._delayTO);classInst=this;this._delayTO=setTimeout(function(){classInst._getListComplete();delete classInst;},this.delay);}else this._getListComplete();}},_onClick:function(e,classInst){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;},_listSelection:function(e,classInst){if(classInst._listbox.value.length!=0){var ele=$(classInst._targetId);A5.edit.setSelection(ele,classInst._oldIPoint);classInst._setValue(classInst._listbox.value[0],true);classInst._initValue=ele.value;if(classInst.onSelect.constructor==Function)classInst.onSelect.call(ele,classInst._listbox._data[classInst._listbox.selection[0]],classInst);classInst._listbox.setValue('');}
classInst._listbox._window._makeSelection=true;classInst._listbox._window.hide();},_noSelect:function(e,classInst){clearTimeout(classInst._listbox._window._nsTO);classInst._targetId='';classInst._listbox._targetId='';classInst._listbox._window._targetId='';if(classInst.onNoSelect.constructor==Function){classInst.onNoSelect.call(this,classInst);}},_setValue:function(val,commit){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var aVal=data.vals[data.selIndx];aVal.val=val;var offset=aVal.offset+val.length;if(commit&&this._multi.auto.separate&&data.selIndx==data.vals.length-1){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++)oldSeps.push(data.vals[i].sep);aVal.sep=this.multiple.auto.separator.call(this,oldSeps);}else aVal.sep=this.multiple.auto.separator;offset=offset+aVal.sep.length;if(this.format.showMask)data.vals.push({val:this.format._pMask.blankValue,sep:'',offset:0});}
ele.value=this._editValJoin(data);this._oldIPoint=offset;A5.edit.setSelection(ele,offset);},_getListComplete:function(){var ele=$(this._targetId);var data=this._editValSplit(ele,true);this._value=data.vals[data.selIndx].val;if(this._value.length<this.minimum){this._listbox._window.hide();return'';}
if(this.content.type=='dynamic'&&this.content.data.constructor==Function){var dArr=this.content.data.call(this,this._value);if(typeof dArr!='undefined'){if(dArr.constructor==Array){this.populateList(dArr);}}}else if(this.content.type=='static'){var data=new Array();if(this.content.data.constructor==Array)data=this.content.data;else data=this.content.data.split('\n');var curVal=this._value.toLowerCase();var curValLen=curVal.length;var dArr=new Array();for(var i=0;i<data.length;i++){if(curVal==this._listbox.calculateValue(data[i]).substr(0,curValLen).toLowerCase()){dArr[dArr.length]=data[i];}}
this.populateList(dArr);}else if(this.content.type=='url'){var tData='';if(this.content.data.constructor==Function)tData=this.content.data.call(this,ele);else tData=this.content.data;if(tData!='')tData=tData+'&';tData=tData+A5.ajax.buildURLParam($if(ele.name=='',ele.id,ele.name),this._value)+'&'+A5.ajax.buildURLParam('A5EditSuggestId',$if(ele.id=='',ele.name,ele.id));A5.ajax.callback(this.content.url,tData);}},populateList:function(dArr){var context=typeof arguments[1]!='undefined'?arguments[1]:this._targetId;if((context!=this._targetId&&context!='')||!this._hasFocus)return false;if(dArr.length>0){this._listbox.populate(dArr);this._listbox.setValue('');if(!this._listbox._window.hidden)this._listbox._window.hide();var cEle=$(this._targetId+'.CONTAINER');A5.u.element.setScroll(this._listbox._window.getWindowId('body'),0,0);var data=this._editValSplit($(this._targetId),true);this._listbox.setValue(data.vals[data.selIndx].val);if(this.window.location.constructor==Array){if(!this._listbox._window.hidden)this._listbox._window.setPosition.apply(this._listbox._window,this.window.location);else this._listbox._window.show.apply(this._listbox._window,this.window.location);}else{if(!this._listbox._window.hidden)this._listbox._window.setPosition(this.window.location,$if(cEle,cEle,this._targetId));else this._listbox._window.show(this.window.location,$if(cEle,cEle,this._targetId));}
if(this._listbox._window.height.substr(0,3)=='max')this._listbox._resize();}else{this._listbox._window.hide();}}});A5.EditButtonGroup=Class.create(A5.Edit,{initialize:function(settings){$u.o.assign(this,{theme:'',override:'base',container:{className:'',hoverClassName:'',focusClassName:'',pressedClassName:'',style:0,editClassName:'',separatorClassName:'',button:{html:'',className:'',hoverClassName:'',pressedClassName:''}}});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'editButtonGroup');$u.o.assign(this,settings);A5.overrides.assign(this,'editButtonGroup',this.override);this._editPrepare();this._buttonNum=0;this._buttonState=false;this._hasFocus=false;},create:function(s){var useContainer=typeof arguments[1]!='undefined'?arguments[1]:true;var HTMLIEle=document.createElement('input');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLIEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLIEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLIEle,attr,s[attr]);}
if(HTMLIEle.id=='')HTMLIEle.id=A5.u.getUniqueId();if(useContainer){var HTMLCEle=document.createElement('table');HTMLCEle.id=HTMLIEle.id+'.CONTAINER';HTMLCEle.cellPadding='0';HTMLCEle.cellSpacing='0';HTMLCEle.className=this.container.className;if(typeof this.container.style!='number')$ss(HTMLCEle,this.container.style);$ss(HTMLCEle,'display: inline-table; *display: inline;');HTMLCEle.insertRow(0);var cellIndx=0;HTMLCEle.rows[0].insertCell(cellIndx);HTMLIEle.className=this.container.editClassName;$ss(HTMLIEle,'width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLCEle.rows[0].cells[cellIndx].appendChild(HTMLIEle);cellIndx++;if(this.container.separatorClassName!=''){HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].innerHTML='&nbsp;';HTMLCEle.rows[0].cells[cellIndx].className=this.container.separatorClassName;cellIndx++;}
HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].id=HTMLIEle.id+'.CUSTOMBUTTON.0';HTMLCEle.rows[0].cells[cellIndx].className=this.container.button.className;HTMLCEle.rows[0].cells[cellIndx].innerHTML=this.container.button.html;HTMLCEle.rows[0].cells[cellIndx].style.width='0%';document.documentElement.appendChild(HTMLCEle);this._bind(HTMLIEle);return HTMLCEle;}else{this._bind(HTMLIEle);return HTMLIEle;}},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++){if(ctrl[i].constructor==Array)this._bind(ctrl[i][0],ctrl[i][1]);else this._bind(ctrl[i]);}}else{this._bind(ctrl,arguments[1]);}},_bind:function(ele){var ele=$(ele);if($ga(ele,'A5ControlBound')=='true')return true;var eleId=ele.id!=''?ele.id:ele.name;var cEle=$(eleId+'.CONTAINER');if(!A5.flags.isMobile&&cEle&&this.container.hoverClassName!=''){$e.add(cEle,'mouseover',Function('$acn(this,\''+this.container.hoverClassName+'\')'));$e.add(cEle,'mouseout',Function('$rcn(this,\''+this.container.hoverClassName+'\')'));}
if(cEle&&this.container.button.hoverClassName){var bIndx=0;var cbEle=0;while($(eleId+'.CUSTOMBUTTON.'+bIndx)){cbEle=$(eleId+'.CUSTOMBUTTON.'+bIndx);$e.add(cbEle,A5.d.evnts.down,this._bmDown,this);if(!A5.flags.isMobile){$e.add(cbEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(cbEle,'mouseout',this._bmOut,this);}
$e.add(cbEle,A5.d.evnts.up,this._bmUp,this);$sa(cbEle,'A5TargetInput',eleId);bIndx+=1;}}
$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keypress',this._keyPress,this);this._editBind(ele);$sa(ele,'A5ControlBound','true');},setState:function(state){this._buttonState=state;var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(state){if(!this._hasFocus&&this.container.focusClassName!='')$acn(cEle,this.container.focusClassName);if(this.container.pressedClassName!='')$acn(cEle,this.container.pressedClassName);if(this.container.button.pressedClassName!='')$acn($(this._targetId+'.CUSTOMBUTTON.'+this._buttonNum),this.container.button.pressedClassName);}else{if(this.container.pressedClassName!='')$rcn(cEle,this.container.pressedClassName);if(!this._hasFocus&&this.container.focusClassName!='')$rcn(cEle,this.container.focusClassName);if(this.container.button.pressedClassName!='')$rcn($(this._targetId+'.CUSTOMBUTTON.'+this._buttonNum),this.container.button.pressedClassName);}}},_bmDown:function(e,classInst){var tEleId=$ga(this,'A5TargetInput');var ele=$(tEleId);if(ele.disabled)return false;ele.focus();classInst._targetId=tEleId;classInst._buttonNum=Number(this.id.split('.').pop());$acn(this,classInst.container.button.pressedClassName);},_bmOut:function(e,classInst){var tEleId=$ga(this,'A5TargetInput');$rcn(tEleId+'.CONTAINER',classInst.container.hoverClassName);$rcn(this,classInst.container.button.hoverClassName);if(!classInst._buttonState)$rcn(this,classInst.container.button.pressedClassName)},_bmUp:function(e,classInst){if(!classInst._buttonState)$rcn(this,classInst.container.button.pressedClassName)},_focus:function(e,classInst){if(classInst._targetId!=this.id){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;}
classInst._targetId=this.id;classInst._initValue=$gvs(this);classInst._editFocus(e,this);classInst._hasFocus=true;var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!='')$acn(cEle,classInst.container.focusClassName);},_blur:function(e,classInst){classInst._editBlur(e,this);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!=''&&!classInst._buttonState)$rcn(cEle,classInst.container.focusClassName);classInst._hasFocus=false;}});A5.EditCombo=Class.create(A5.Edit,{initialize:function(data,settings){$u.o.assign(this,{theme:'',override:'base',decouple:false,listbox:{theme:''},window:{theme:'',type:'popup',location:'dropdown'},container:{className:'',hoverClassName:'',focusClassName:'',pressedClassName:'',style:0,editClassName:'',separatorClassName:'',button:{html:'',className:'',hoverClassName:'',pressedClassName:''}},filter:0,_dynamicData:false,progressiveFilterMode:'start',selectionRequired:false,selectionRequiredFilterMode:'default',onSelect:0,onNoSelect:0});if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'editButtonGroup');var tTheme=settings.theme.split(':').shift();if(this.window.theme=='')this.window.theme=tTheme+':dropdown';if(this.listbox.theme=='')this.listbox.theme=tTheme+':dropdown';}
$u.o.assign(this,settings);$u.o.assign(this.window,{title:{show:false},body:{content:{type:'blank'},style:{padding:'0px',overflow:'auto'}},autoShow:false,autoPosition:false,_container:{focusClassName:this.container.focusClassName,pressedClassName:this.container.pressedClassName,button:{pressedClassName:this.container.button.pressedClassName}},_selectionRequired:this.selectionRequired,_nsTO:0,_bcTO:0,_hasFocus:false,onShow:function(){clearTimeout(this._nsTO);clearTimeout(this._bcTO);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.pressedClassName!='')$acn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$acn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}},onHide:function(){if(!this._hasFocus)this._bcTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5blurcomplete\');'),100);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.focusClassName!=''&&!this._makeSelection)$rcn(cEle,this._container.focusClassName);if(this._container.pressedClassName!='')$rcn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$rcn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}
var ele=$(this._targetId);if(!this._makeSelection&&!this._hasFocus)this._nsTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5noselect\');'),100);if(!this._makeSelection&&this._selectionRequired)$e.execute(ele,'a5selectionclear');this._makeSelection=false;}});$u.o.assign(this.listbox,{loopNavigate:true,onClick:function(){setTimeout(Function('$e.execute($(\''+this._targetId+'\'),\'a5listselection\');'),1);}});A5.overrides.assign(this,'editCombo',this.override);var win=new A5.Window(this.window);this._listbox=new A5.ListBox(win.getWindowId('body'),[],this.listbox);this._listbox._window=win;this._listbox.decouple=this.decouple;if(this._listbox.calculateValue.constructor!=Function)this._listbox.calculateValue=function(data){return data;};if(data.constructor==Function){this._dynamicData=data;data=[];}
this.setData(data);this._editPrepare();this._value='';this._oldIPoint=0;},setData:function(data){this._data=data;if(!this._listbox._window.hidden){var contextId=typeof arguments[1]!='undefined'?arguments[1]:'';if(contextId==''||contextId==this._targetId){var filterData=typeof arguments[2]!='undefined'?arguments[2]:false;if(filterData){var ele=$(this._targetId);var data=this._editValSplit(ele,true);this._value=data.vals[data.selIndx].val;var curVal=this._value.toLowerCase();var curValLen=curVal.length;if(this.filter.constructor==Function)this._data=this.filter.call(this,this._data);var dArr=new Array();if(this.progressiveFilterMode=='start'){for(var i=0;i<this._data.length;i++){if(curVal==String(this._listbox.calculateValue(this._data[i])).substr(0,curValLen).toLowerCase()||typeof this._data[i]['*static']!='undefined'){dArr[dArr.length]=this._data[i];}}}else{curVal=curVal.replace(/[\\\.\^\$\*\+\?\{\}\[\]\(\)\|]/g,function(val){return'\\'+val;});var re=new RegExp(curVal,'i');for(var i=0;i<this._data.length;i++){if(String(this._listbox.calculateValue(this._data[i])).search(re)!=-1||typeof this._data[i]['*static']!='undefined'){dArr[dArr.length]=this._data[i];}}}
this._populateList(dArr,false);}else this._populateList(data,true);}}},create:function(s){var useContainer=typeof arguments[1]!='undefined'?arguments[1]:true;var HTMLIEle=document.createElement('input');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLIEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLIEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLIEle,attr,s[attr]);}
if(HTMLIEle.id=='')HTMLIEle.id=A5.u.getUniqueId();if(useContainer){var HTMLCEle=document.createElement('table');HTMLCEle.id=HTMLIEle.id+'.CONTAINER';HTMLCEle.cellPadding='0';HTMLCEle.cellSpacing='0';HTMLCEle.className=this.container.className;if(typeof this.container.style!='number')$ss(HTMLCEle,this.container.style);$ss(HTMLCEle,'display: inline-table; *display: inline;');HTMLCEle.insertRow(0);var cellIndx=0;HTMLCEle.rows[0].insertCell(cellIndx);HTMLIEle.className=this.container.editClassName;$ss(HTMLIEle,'width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLCEle.rows[0].cells[cellIndx].appendChild(HTMLIEle);cellIndx++;if(this.container.separatorClassName!=''){HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].innerHTML='&nbsp;';HTMLCEle.rows[0].cells[cellIndx].className=this.container.separatorClassName;cellIndx++;}
HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].id=HTMLIEle.id+'.BUTTON';HTMLCEle.rows[0].cells[cellIndx].className=this.container.button.className;HTMLCEle.rows[0].cells[cellIndx].innerHTML=this.container.button.html;HTMLCEle.rows[0].cells[cellIndx].style.width='0%';document.documentElement.appendChild(HTMLCEle);this._bind(HTMLIEle);return HTMLCEle;}else{this._bind(HTMLIEle);return HTMLIEle;}},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++){if(ctrl[i].constructor==Array)this._bind(ctrl[i][0],ctrl[i][1]);else this._bind(ctrl[i]);}}else{this._bind(ctrl,arguments[1]);}},valueInList:function(val){return this._listbox.valueInList(val);},_bind:function(ele){var ele=$(ele);if($ga(ele,'A5ControlBound')=='true')return true;var eleId=ele.id!=''?ele.id:ele.name;var cEle=$(eleId+'.CONTAINER');if(!A5.flags.isMobile&&cEle&&this.container.hoverClassName!=''){$e.add(cEle,'mouseover',Function('$acn(this,\''+this.container.hoverClassName+'\')'));$e.add(cEle,'mouseout',Function('$rcn(this,\''+this.container.hoverClassName+'\')'));}
var bEleId=typeof arguments[1]!='undefined'?arguments[1]:'';var bEle=false;if(bEleId==''){if($(eleId+'.BUTTON'))bEle=$(eleId+'.BUTTON');}else bEle=$(bEleId);if(bEle){$sa(bEle,'A5TargetInput',eleId);$e.add(bEle,A5.d.evnts.click,this._bOnClick,this);if(!A5.flags.isMobile&&cEle&&this.container.button.hoverClassName){$e.add(bEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(bEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\')'));}}else $sa(ele,'A5HasButton','false');if(cEle&&this.container.button.hoverClassName){var bIndx=0;var cbEle=0;while($(eleId+'.CUSTOMBUTTON.'+bIndx)){cbEle=$(eleId+'.CUSTOMBUTTON.'+bIndx);$e.add(cbEle,A5.d.evnts.down,Function('$acn(this,\''+this.container.button.pressedClassName+'\')'));if(!A5.flags.isMobile){$e.add(cbEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(cbEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\'); $rcn(this,\''+this.container.button.pressedClassName+'\')'));}
$e.add(cbEle,A5.d.evnts.up,Function('$rcn(this,\''+this.container.button.pressedClassName+'\')'));bIndx+=1;}}
$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keyup',this._keyUp,this,true);$e.add(ele,'keypress',this._keyPress,this);$e.add(ele,A5.d.evnts.up,this._mUp,this);$e.add(ele,'a5listselection',this._listSelection,this);$e.add(ele,'a5noselect',this._noSelect,this);$e.add(ele,'a5blurcomplete',this._blurComp,this);$e.add(ele,'a5selectionclear',this._srClear,this);if(this.selectionRequired&&this.selectionRequiredFilterMode!='progressive')ele.readOnly=true;this._editBind(ele);$sa(ele,'A5ControlBound','true');},_focus:function(e,classInst){classInst._listbox._window._hasFocus=true;classInst._editFocus(e,this);clearTimeout(classInst._listbox._window._bcTO);if(classInst._targetId!=this.id){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;classInst._targetId=this.id;classInst._listbox._targetId=classInst._targetId;classInst._listbox._window._targetId=classInst._targetId;classInst._initValue=$gvs(this);}else clearTimeout(classInst._listbox._window._nsTO);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!='')$acn(cEle,classInst.container.focusClassName);},_blur:function(e,classInst){if(classInst.selectionRequired&&classInst._listbox._window.hidden)classInst._srClear({},classInst);if(classInst._listbox._window.hidden&&this.value!=classInst._initValue)classInst._listbox._window._nsTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5noselect\');'),100);classInst._listbox._window._hasFocus=false;classInst._editBlur(e,this);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!=''&&classInst._listbox._window.hidden)$rcn(cEle,classInst.container.focusClassName);if(classInst._listbox._window.hidden)classInst._listbox._window._bcTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5blurcomplete\');'),100);},_blurComp:function(e,classInst){if(classInst._listbox._window.hidden){classInst._targetId='';classInst._listbox._targetId='';classInst._listbox._window._targetId='';}},_mUp:function(e,classInst){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;if($ga(this,'A5HasButton')=='false'||classInst.selectionRequired){if(this.disabled)return false;if(classInst._targetId!=this.id){classInst._targetId=this.id;classInst._listbox._targetId=this.id;classInst._listbox._window._targetId=this.id;classInst._initValue=$gvs(this.id);}
setTimeout(function(){classInst._getFullList();},0);}},_bOnClick:function(e,classInst){$e.stopEvent(e);var tEleId=$ga(this,'A5TargetInput');var ele=$(tEleId);if(ele.disabled)return false;if(classInst.decouple)classInst._oldIPoint=0;else{ele.focus();var sel=A5.edit.getSelection(ele);classInst._oldIPoint=sel.start;}
classInst._targetId=tEleId;classInst._listbox._targetId=tEleId;classInst._listbox._window._targetId=tEleId;classInst._initValue=$gvs(tEleId);setTimeout(function(){classInst._getFullList();},0);return false;},_keyDown:function(e,classInst){if(classInst.decouple)return;if(!classInst.selectionRequired&&classInst.selectionRequiredFilterMode!='progressive')classInst._editKeyDown(e,this);var keyCode=e.charCode||e.keyCode;if((keyCode==13||keyCode==9)&&!classInst._listbox._window.hidden){$e.stopEvent(e);classInst._listSelection(e,classInst);return false;}else if((keyCode==36||keyCode==35)&&!classInst._listbox._window.hidden&&classInst._listbox.value.length>0){$e.stopEvent(e);if(keyCode==36)classInst._listbox.navigate('home');else classInst._listbox.navigate('end');if(classInst._listbox.value.length!=0)classInst._oldIPoint=classInst.insertValue(classInst._listbox.value[0],false);else classInst._oldIPoint=classInst.insertValue(classInst._value,false);return false;}else if((keyCode==38||keyCode==40)){if(e.altKey){if(classInst._listbox._window.hidden)classInst._getFullList();else classInst._listbox._window.hide();}
$e.stopPropagation(e);$e.stopEvent(e);}},_keyUp:function(e){if(this.decouple)return;var keyCode=e.charCode||e.keyCode;var ignoreChr=[9,13,16,17,18,19,20,27,33,34,35,36,37,38,39,40,45,112,113,114,115,116,117,118,119,120,121,122,123];if(keyCode==38&&!this._listbox._window.hidden){this._listbox.navigate('prev');if(this._listbox.value.length!=0)this._oldIPoint=this.insertValue(this._listbox.value[0],false);else this._oldIPoint=this.insertValue(this._value,false);}else if(keyCode==40&&!this._listbox._window.hidden){this._listbox.navigate('next');if(this._listbox.value.length!=0)this._oldIPoint=this.insertValue(this._listbox.value[0],false);else this._oldIPoint=this.insertValue(this._value,false);}else if(keyCode==36||keyCode==35||keyCode==37||keyCode==39){var sel=A5.edit.getSelection($(this._targetId));this._oldIPoint=sel.start;}else if((keyCode==8||keyCode==46)&&this.selectionRequired&&this.selectionRequiredFilterMode!='progressive'){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var offset=data.vals[data.selIndx].offset;var oldLen=data.vals.length;if(data.sel.length==0){if(keyCode==8&&data.sel.start!=0){if(data.vals.length-1==data.selIndx&&data.vals[data.selIndx].val==''){data.vals.splice(data.selIndx,1);if(data.selIndx>0)data.vals[data.selIndx-1].sep='';}else{if(data.vals[data.selIndx].offset==data.sel.start&&data.selIndx>0)data.selIndx--;else if(data.selIndx>0&&data.vals[data.selIndx].sep!=''&&!data.inSep){data.vals[data.selIndx-1].sep=data.vals[data.selIndx].sep;offset=data.vals[data.selIndx-1].offset+data.vals[data.selIndx-1].val.length;}else offset=data.vals[data.selIndx].offset;data.vals.splice(data.selIndx,1);}}else if(keyCode==46&&data.sel.start!=ele.value.length){if(data.inSep&&data.vals[data.selIndx].sep!=''){offset=offset+data.vals[data.selIndx].val.length;if(data.vals.length-1==data.selIndx)data.vals[data.selIndx].sep='';else{data.vals[data.selIndx].sep=data.vals[data.selIndx+1].sep;data.vals.splice(data.selIndx+1,1);}}else data.vals.splice(data.selIndx,1);}}else{for(var i=data.vals.length-1;i>=0;i--){if(data.vals[i].offset+data.vals[i].val.length>=data.sel.start&&data.vals[i].offset<=data.sel.end){offset=data.vals[i].offset;data.vals.splice(i,1);}}}
if(oldLen!=data.vals.length&&this._multi.auto.persist){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++){data.vals[i].sep=this.multiple.auto.separator.call(this,oldSeps);oldSeps.push(data.vals[i].sep);}}else{for(var i=0;i<data.vals.length-1;i++)data.vals[i].sep=this.multiple.auto.separator;}}
ele.value=this._editValJoin(data);this._initValue=ele.value;this._oldIPoint=offset;A5.edit.setSelection(ele,offset);if(this._dynamicData.constructor==Function)this._data=this._dynamicData.call(this,this._targetId,true);var data=this._data;if(this.filter.constructor==Function)data=this.filter.call(this,data);var dArr=[].concat(data);this._populateList(dArr);}else if($u.a.find(ignoreChr,keyCode)==-1&&(!this.selectionRequired||this.selectionRequiredFilterMode=='progressive')){var ele=$(this._targetId);var data=this._editValSplit(ele,true);this._value=data.vals[data.selIndx].val;var curVal=this._value.toLowerCase();var curValLen=curVal.length;if(this._dynamicData.constructor==Function)this._data=this._dynamicData.call(this,this._targetId,true);var data=this._data;if(this.filter.constructor==Function)data=this.filter.call(this,data);var dArr=new Array();if(this.progressiveFilterMode=='start'){for(var i=0;i<data.length;i++){if(curVal==String(this._listbox.calculateValue(data[i])).substr(0,curValLen).toLowerCase()||typeof data[i]['*static']!='undefined'){dArr[dArr.length]=data[i];}}}else{curVal=curVal.replace(/[\\\.\^\$\*\+\?\{\}\[\]\(\)\|]/g,function(val){return'\\'+val;});var re=new RegExp(curVal,'i');for(var i=0;i<data.length;i++){if(String(this._listbox.calculateValue(data[i])).search(re)!=-1||typeof data[i]['*static']!='undefined'){dArr[dArr.length]=data[i];}}}
this._populateList(dArr);}},_keyPress:function(e,classInst){if(classInst.decouple)return;if(classInst.selectionRequired&&classInst.selectionRequiredFilterMode!='progressive'){var keyCode=e.charCode||e.keyCode;if(keyCode!=9&&keyCode!=37&&keyCode!=39)$e.stopEvent(e);if(keyCode==8||keyCode==9||keyCode==13||keyCode==27)keyCode=0;if(keyCode!=0&&!e.ctrlKey&&!e.altKey){keyCode=String.fromCharCode(keyCode).toLowerCase();if(classInst._listbox._window.hidden)classInst._getFullList();var selIndx=-1;var startSearch=classInst._listbox.selection[0];if(typeof startSearch=='undefined')startSearch=-1;for(var i=startSearch+1;i<classInst._listbox._values.length;i++){if(keyCode==String(classInst._listbox._values[i]).substr(0,1).toLowerCase()){selIndx=i;break;}}
if(selIndx==-1){for(var i=0;i<=startSearch;i++){if(keyCode==String(classInst._listbox._values[i]).substr(0,1).toLowerCase()){selIndx=i;break;}}}
if(selIndx!=-1)classInst._oldIPoint=classInst.insertValue(classInst._listbox.calculateValue(classInst._data[selIndx]),false);else if(!classInst._multi.auto.persist){var data=classInst._editValSplit(this,true);var aVal=data.vals[data.selIndx];classInst._multi.keyBuffer+=keyCode;var sLen=classInst._multi.keyBuffer.length;var sMat=new Array();for(var i=0;i<classInst._multi.sep.length;i++)if(classInst._multi.sep[i].substr(0,sLen).toLowerCase()==classInst._multi.keyBuffer)sMat.push(i);if(sMat.length==1){var ele=$(classInst._targetId);aVal.sep=classInst._multi.sep[sMat[0]];if(classInst.format.showMask&&data.vals.length-1==data.selIndx)data.vals.push({val:classInst.format._pMask.blankValue,sep:'',offset:0});ele.value=classInst._editValJoin(data);classInst._initValue=ele.value;A5.edit.setSelection(ele,aVal.offset+aVal.val.length+aVal.sep.length);classInst._multi.keyBuffer='';}else if(sMat.length==0){classInst._multi.keyBuffer='';classInst._oldIPoint=classInst.insertValue('',false);}}else classInst._oldIPoint=classInst.insertValue('',false);classInst._listbox._selectItem(selIndx);}}else classInst._editKeyPress(e,this);},_listSelection:function(e,classInst){if(classInst._listbox.value.length!=0){var ele=$(classInst._targetId);if(classInst.decouple)classInst._editClearWatermark(ele);else{ele.focus();A5.edit.setSelection(ele,classInst._oldIPoint);}
classInst._oldIPoint=classInst.insertValue(classInst._listbox.value[0],true);classInst._initValue=ele.value;if(classInst.onSelect.constructor==Function)classInst.onSelect.call(ele,classInst._listbox._data[classInst._listbox.selection[0]],classInst);}
classInst._listbox._window._makeSelection=true;classInst._listbox._window.hide();},_noSelect:function(e,classInst){clearTimeout(classInst._listbox._window._nsTO);classInst._targetId='';classInst._listbox._targetId='';classInst._listbox._window._targetId='';if(classInst.onNoSelect.constructor==Function){classInst.onNoSelect.call(this,classInst);}},_srClear:function(e,classInst){var val=$gvs(classInst._targetId);if(val!=classInst._initValue&&val!='')$svs(classInst._targetId,classInst._initValue);},_getFullList:function(){var ele=$(this._targetId);var data=this._editValSplit(ele,true);this._value=data.vals[data.selIndx].val;if(this._dynamicData.constructor==Function)this._data=this._dynamicData.call(this,this._targetId,false);var dArr=this._data;if(this.filter.constructor==Function)dArr=this.filter.call(this,dArr);this._populateList(dArr,true);},_populateList:function(dArr){var getFullList=typeof arguments[1]!='undefined'?arguments[1]:false;var cEle=$(this._targetId+'.CONTAINER');var showWin=false;if(dArr.length>0){showWin=true;this._listbox.populate(dArr);var data=this._editValSplit($(this._targetId),true);this._listbox.setValue(data.vals[data.selIndx].val);}else if(getFullList){showWin=true;this._listbox.populate([]);}
if(showWin){var winPos=false;if(this._listbox._window.hidden){if(this.window.location.constructor==Array)this._listbox._window.show.apply(this._listbox._window,this.window.location);else this._listbox._window.show(this.window.location,$if(cEle,cEle,this._targetId));winPos=true;}
if(this._listbox._window.height.substr(0,3)=='max'){this._listbox._resize();winPos=true}
if(winPos){if(this.window.location.constructor==Array)this._listbox._window.setPosition.apply(this._listbox._window,this.window.location);else this._listbox._window.setPosition(this.window.location,$if(cEle,cEle,this._targetId));}
if(getFullList&&this._listbox.value.length>0)this._listbox.scrollToItem(this._listbox.value[0]);}else this._listbox._window.hide();}});A5.EditTree=Class.create(A5.Edit,{initialize:function(data,settings){$u.o.assign(this,{override:'base',decouple:false,tree:{theme:''},window:{theme:'',type:'popup',location:'dropdown'},container:{className:'',hoverClassName:'',focusClassName:'',pressedClassName:'',style:0,editClassName:'',separatorClassName:'',button:{html:'',className:'',hoverClassName:'',pressedClassName:''}},selectionRequired:false,onSelect:0,onNoSelect:0});if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'editButtonGroup');var tTheme=settings.theme.split(':').shift();if(this.window.theme=='')this.window.theme=tTheme+':dropdown';if(this.tree.theme=='')this.tree.theme=tTheme+':dropdown';}
$u.o.assign(this,settings);A5.overrides.assign(this,'editTree',this.override);this.setData(data);$u.o.assign(this.window,{title:{show:false},body:{content:{type:'blank'},style:{padding:'0px',overflow:'auto'}},autoShow:false,autoPosition:false,_container:{focusClassName:this.container.focusClassName,pressedClassName:this.container.pressedClassName,button:{pressedClassName:this.container.button.pressedClassName}},_nsTO:0,_hasFocus:false,onShow:function(){clearTimeout(this._nsTO);clearTimeout(this._bcTO);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.pressedClassName!='')$acn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$acn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}},onHide:function(){if(!this._hasFocus)this._bcTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5blurcomplete\');'),100);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.focusClassName!=''&&!this._makeSelection)$rcn(cEle,this._container.focusClassName);if(this._container.pressedClassName!='')$rcn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$rcn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}
if(!this._makeSelection&&!this._hasFocus)this._nsTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5noselect\');'),100);this._makeSelection=false;}});$u.o.assign(this.tree,{loopNavigate:true,_onSelect:this.onSelect,decouple:this.decouple,onNodeClick:function(data){if(!data.children){var ele=$(this._targetId)
if(!this.decouple)ele.focus();setTimeout(Function('$e.execute($(\''+this._targetId+'\'),\'a5treeselection\');'),1);}}});var win=new A5.Window(this.window);this._tree=new A5.Tree(win.getWindowId('body'),data,this.tree);this._tree._window=win;this._editPrepare();this._value='';this._oldIPoint=0;},setData:function(data){this._data=data;},create:function(s){var useContainer=typeof arguments[1]!='undefined'?arguments[1]:true;var HTMLIEle=document.createElement('input');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLIEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLIEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLIEle,attr,s[attr]);}
if(HTMLIEle.id=='')HTMLIEle.id=A5.u.getUniqueId();if(useContainer){var HTMLCEle=document.createElement('table');HTMLCEle.id=HTMLIEle.id+'.CONTAINER';HTMLCEle.cellPadding='0';HTMLCEle.cellSpacing='0';HTMLCEle.className=this.container.className;if(typeof this.container.style!='number')$ss(HTMLCEle,this.container.style);$ss(HTMLCEle,'display: inline-table; *display: inline;');HTMLCEle.insertRow(0);var cellIndx=0;HTMLCEle.rows[0].insertCell(cellIndx);HTMLIEle.className=this.container.editClassName;$ss(HTMLIEle,'width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLCEle.rows[0].cells[cellIndx].appendChild(HTMLIEle);cellIndx++;if(this.container.separatorClassName!=''){HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].innerHTML='&nbsp;';HTMLCEle.rows[0].cells[cellIndx].className=this.container.separatorClassName;cellIndx++;}
HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].id=HTMLIEle.id+'.BUTTON';HTMLCEle.rows[0].cells[cellIndx].className=this.container.button.className;HTMLCEle.rows[0].cells[cellIndx].innerHTML=this.container.button.html;HTMLCEle.rows[0].cells[cellIndx].style.width='0%';document.documentElement.appendChild(HTMLCEle);this._bind(HTMLIEle);return HTMLCEle;}else{this._bind(HTMLIEle);return HTMLIEle;}},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++){if(ctrl[i].constructor==Array)this._bind(ctrl[i][0],ctrl[i][1]);else this._bind(ctrl[i]);}}else{this._bind(ctrl,arguments[1]);}},_bind:function(ele){var ele=$(ele);if($ga(ele,'A5ControlBound')=='true')return true;var eleId=ele.id!=''?ele.id:ele.name;var cEle=$(eleId+'.CONTAINER');if(!A5.flags.isMobile&&cEle&&this.container.hoverClassName!=''){$e.add(cEle,'mouseover',Function('$acn(this,\''+this.container.hoverClassName+'\')'));$e.add(cEle,'mouseout',Function('$rcn(this,\''+this.container.hoverClassName+'\')'));}
var bEleId=typeof arguments[1]!='undefined'?arguments[1]:'';var bEle=false;if(bEleId==''){if($(eleId+'.BUTTON'))bEle=$(eleId+'.BUTTON');}else bEle=$(bEleId);if(bEle){$sa(bEle,'A5TargetInput',eleId);$e.add(bEle,A5.d.evnts.click,this._bOnClick,this);if(!A5.flags.isMobile&&cEle&&this.container.button.hoverClassName){$e.add(bEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(bEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\')'));}}else $sa(ele,'A5HasButton','false');if(cEle&&this.container.button.hoverClassName){var bIndx=0;var cbEle=0;while($(eleId+'.CUSTOMBUTTON.'+bIndx)){cbEle=$(eleId+'.CUSTOMBUTTON.'+bIndx);$e.add(cbEle,A5.d.evnts.down,Function('$acn(this,\''+this.container.button.pressedClassName+'\')'));if(!A5.flags.isMobile){$e.add(cbEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(cbEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\'); $rcn(this,\''+this.container.button.pressedClassName+'\')'));}
$e.add(cbEle,A5.d.evnts.up,Function('$rcn(this,\''+this.container.button.pressedClassName+'\')'));bIndx+=1;}}
$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keyup',this._keyUp,this,true);$e.add(ele,'keypress',this._keyPress,this);$e.add(ele,A5.d.evnts.up,this._mUp,this);$e.add(ele,'a5treeselection',this._treeSelection,this);$e.add(ele,'a5noselect',this._noSelect,this);$e.add(ele,'a5blurcomplete',this._blurComp,this);if(this.selectionRequired)ele.readOnly=true;this._editBind(ele);$sa(ele,'A5ControlBound','true');},_focus:function(e,classInst){classInst._tree._window._hasFocus=true;classInst._editFocus(e,this);clearTimeout(classInst._tree._window._bcTO);if(classInst._targetId!=this.id){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;classInst._targetId=this.id;classInst._tree._targetId=classInst._targetId;classInst._tree._window._targetId=classInst._targetId;classInst._initValue=$gvs(this);}else clearTimeout(classInst._tree._window._nsTO);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!='')$acn(cEle,classInst.container.focusClassName);},_blur:function(e,classInst){if(classInst.selectionRequired){var val=$gvs(this);if(val!=classInst._initValue&&val!='')$svs(this,classInst._initValue);}
if(classInst._tree._window.hidden&&this.value!=classInst._initValue)classInst._tree._window._nsTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5noselect\');'),100);classInst._tree._window._hasFocus=false;classInst._editBlur(e,this);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!=''&&classInst._tree._window.hidden)$rcn(cEle,classInst.container.focusClassName);if(classInst._tree._window.hidden)classInst._tree._window._bcTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5blurcomplete\');'),100);},_blurComp:function(e,classInst){if(classInst._tree._window.hidden){classInst._targetId='';classInst._tree._targetId='';classInst._tree._window._targetId='';}},_mUp:function(e,classInst){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;if($ga(this,'A5HasButton')=='false'||classInst.selectionRequired){if(this.disabled)return false;if(classInst._targetId!=this.id){classInst._targetId=this.id;classInst._tree._targetId=this.id;classInst._tree._window._targetId=this.id;classInst._initValue=$gvs(this.id);}
setTimeout(function(){classInst._treeShow();},0);}},_bOnClick:function(e,classInst){$e.stopEvent(e);var tEleId=$ga(this,'A5TargetInput');var ele=$(tEleId);if(ele.disabled)return false;if(classInst.decouple)classInst._oldIPoint=0;else{ele.focus();var sel=A5.edit.getSelection(ele);classInst._oldIPoint=sel.start;}
classInst._targetId=tEleId;classInst._tree._targetId=tEleId;classInst._tree._window._targetId=tEleId;classInst._initValue=$gvs(ele);setTimeout(function(){classInst._treeShow();},0);return false;},_keyDown:function(e,classInst){if(classInst.decouple)return;classInst._editKeyDown(e,this);var keyCode=e.charCode||e.keyCode;if((keyCode==13||keyCode==9)&&!classInst._tree._window.hidden){$e.stopEvent(e);classInst._tree.navigate('enter');return false;}else if((keyCode==36||keyCode==35||keyCode==37||keyCode==39)&&!classInst._tree._window.hidden&&classInst._tree.value.length>0){$e.stopEvent(e);if(keyCode==36)classInst._tree.navigate('home');else if(keyCode==35)classInst._tree.navigate('end');else if(keyCode==37)classInst._tree.navigate('out');else if(keyCode==39)classInst._tree.navigate('in');if(classInst._tree.value.length!=0)$svs(classInst._targetId,classInst._tree.value[0]);else $svs(classInst._targetId,classInst._value);return false;}else if((keyCode==38||keyCode==40)){if(e.altKey){if(classInst._tree._window.hidden)classInst._treeShow();else classInst._tree._window.hide();}else if(!classInst._tree._window.hidden){if(keyCode==38)classInst._tree.navigate('prev');else classInst._tree.navigate('next');if(classInst._tree.value.length!=0)classInst._oldIPoint=classInst.insertValue(classInst._tree.value[0],false);else classInst._oldIPoint=classInst.insertValue(classInst._value,false);}
$e.stopPropagation(e);$e.stopEvent(e);}},_keyUp:function(e){if(this.decouple)return;var keyCode=e.charCode||e.keyCode;if(keyCode==36||keyCode==35||keyCode==37||keyCode==39){var sel=A5.edit.getSelection($(this._targetId));this._oldIPoint=sel.start;}else if((keyCode==8||keyCode==46)&&this.selectionRequired){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var offset=data.vals[data.selIndx].offset;var oldLen=data.vals.length;if(data.sel.length==0){if(keyCode==8&&data.sel.start!=0){if(data.vals.length-1==data.selIndx&&data.vals[data.selIndx].val==''){data.vals.splice(data.selIndx,1);if(data.selIndx>0)data.vals[data.selIndx-1].sep='';}else{if(data.vals[data.selIndx].offset==data.sel.start&&data.selIndx>0)data.selIndx--;else if(data.selIndx>0&&data.vals[data.selIndx].sep!=''&&!data.inSep){data.vals[data.selIndx-1].sep=data.vals[data.selIndx].sep;offset=data.vals[data.selIndx-1].offset+data.vals[data.selIndx-1].val.length;}else offset=data.vals[data.selIndx].offset;data.vals.splice(data.selIndx,1);}}else if(keyCode==46&&data.sel.start!=ele.value.length){if(data.inSep&&data.vals[data.selIndx].sep!=''){offset=offset+data.vals[data.selIndx].val.length;if(data.vals.length-1==data.selIndx)data.vals[data.selIndx].sep='';else{data.vals[data.selIndx].sep=data.vals[data.selIndx+1].sep;data.vals.splice(data.selIndx+1,1);}}else data.vals.splice(data.selIndx,1);}}else{for(var i=data.vals.length-1;i>=0;i--){if(data.vals[i].offset+data.vals[i].val.length>=data.sel.start&&data.vals[i].offset<=data.sel.end){offset=data.vals[i].offset;data.vals.splice(i,1);}}}
if(oldLen!=data.vals.length&&this._multi.auto.persist){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++){data.vals[i].sep=this.multiple.auto.separator.call(this,oldSeps);oldSeps.push(data.vals[i].sep);}}else{for(var i=0;i<data.vals.length-1;i++)data.vals[i].sep=this.multiple.auto.separator;}}
ele.value=this._editValJoin(data);this._initValue=ele.value;this._oldIPoint=offset;A5.edit.setSelection(ele,offset);}},_keyPress:function(e,classInst){if(classInst.decouple)return;if(classInst.selectionRequired){var keyCode=0;if(typeof e.which=='number')keyCode=e.which;else if(typeof e.charCode=='number')keyCode=e.charCode;else keyCode=e.keyCode;if(keyCode!=9&&e.keyCode!=37&&e.keyCode!=39)$e.stopEvent(e);if(keyCode==8||keyCode==9||keyCode==13||keyCode==27)keyCode=0;if(keyCode!=0&&!e.ctrlKey&&!e.altKey){keyCode=String.fromCharCode(keyCode).toLowerCase();var data=classInst._editValSplit(this,true);var aVal=data.vals[data.selIndx];if(aVal.val!=''){if(!classInst._multi.auto.persist){classInst._multi.keyBuffer+=keyCode;var sLen=classInst._multi.keyBuffer.length;var sMat=new Array();for(var i=0;i<classInst._multi.sep.length;i++)if(classInst._multi.sep[i].substr(0,sLen).toLowerCase()==classInst._multi.keyBuffer)sMat.push(i);if(sMat.length==1){aVal.sep=classInst._multi.sep[sMat[0]];if(classInst.format.showMask&&data.vals.length-1==data.selIndx)data.vals.push({val:classInst.format._pMask.blankValue,sep:'',offset:0});this.value=classInst._editValJoin(data);classInst._initValue=this.value;A5.edit.setSelection(this,aVal.offset+aVal.val.length+aVal.sep.length);classInst._multi.keyBuffer='';}else if(sMat.length==0)classInst._multi.keyBuffer='';}else if(data.selIndx==data.vals.length-1&&aVal.sep==''){classInst._oldIPoint=classInst.insertValue(aVal.val,true);classInst._initValue=this.value;}}}}else classInst._editKeyPress(e,this);},_treeShow:function(){if(!this._tree._window.hidden)this._tree._window.hide();var data=this._editValSplit($(this._targetId),true);var cEle=$(this._targetId+'.CONTAINER');if(this.window.location.constructor==Array){if(!this._tree._window.hidden)this._tree._window.setPosition.apply(this._tree._window,this.window.location);else this._tree._window.show.apply(this._tree._window,this.window.location);}else{if(!this._tree._window.hidden)this._tree._window.setPosition(this.window.location,$if(cEle,cEle,this._targetId));else this._tree._window.show(this.window.location,$if(cEle,cEle,this._targetId));}
this._tree.setValue(data.vals[data.selIndx].val);},_treeSelection:function(e,classInst){classInst._targetId=classInst._tree._targetId;if(classInst._tree.value.length!=0){var ele=$(classInst._targetId);if(classInst.decouple)classInst._editClearWatermark(ele);else{ele.focus();A5.edit.setSelection(ele,classInst._oldIPoint);}
classInst._oldIPoint=classInst.insertValue(classInst._tree.value[0],true);classInst._initValue=ele.value;}
classInst._tree._window._makeSelection=true;classInst._tree._window.hide();},_noSelect:function(e,classInst){clearTimeout(classInst._tree._window._nsTO);classInst._targetId='';classInst._tree._targetId='';classInst._tree._window._targetId='';if(classInst.onNoSelect.constructor==Function){classInst.onNoSelect.call(this,classInst);}}});A5.RadioGroup=Class.create({initialize:function(contId,items,settings){this._t='radio';this.value='';this._initLow(contId,items,settings);},_initLow:function(contId,items,settings){this.contId=contId;$u.o.assign(this,{name:contId,layout:'horizontal',allowMissing:true,cols:3,rows:3,className:'',style:'',label:{className:'',style:''},input:{className:'',style:''},onChange:0});$u.o.assign(this,settings);this.populate(items);$e.add(contId,'a5change',function(){if(this.onChange.constructor==Function)this.onChange();},this,true)},setValue:function(value){var executeChange=typeof arguments[1]!='undefined'?arguments[1]:true;if(this._cVal(value))return false;if(value.constructor!=Array){if(value=='')value=[];else value=[value];}
if(value.length!=0&&this.allowMissing){var oAddValLen=this._addVal.length;this._setAddVal(value);if(oAddValLen!=0||this._addVal.length!=0)this.refresh();}
$svs(this.name,value,$(this.contId));if(executeChange){if(this.onChange.constructor==Function)this.onChange();}},populate:function(items){this.items=[];this._values=[];for(var i=0;i<items.length;i++){if(typeof items[i]!='object'){this.items.push({value:items[i],html:items[i]});this._values.push(items[i]);}else{this.items.push(items[i]);this._values.push(items[i].value);}}
this._setAddVal(this.value);this.refresh();},refresh:function(){var cEle=$(this.contId);var html=[];var cAttr='';for(var i=0;i<this.items.length;i++){cAttr='';if(this._cVal(this.items[i].value))cAttr='checked="checked"';html.push('<span class="'+this.className+'" style="'+this.style+'"><input type="'+this._t+'" value="'+this.items[i].value+'" name="'+this.name+'" id="'+this.contId+'.'+i+'" '+cAttr+' onchange="$e.execute(\''+this.contId+'\',\'a5change\');" class="'+this.input.className+'" style="'+this.input.style+'"><label for="'+this.contId+'.'+i+'" class="'+this.label.className+'" style="'+this.label.style+'">'+this.items[i].html+'</label></span>');}
for(var k=0;k<this._addVal.length;k++){cAttr='';if(this._cVal(this._addVal))cAttr='checked="checked"';html.push('<span class="'+this.className+'" style="'+this.style+'"><input type="'+this._t+'" value="'+this._addVal[k]+'" name="'+this.name+'" id="'+this.contId+'.'+(i+k)+'" '+cAttr+' onchange="$e.execute(\''+this.contId+'\',\'a5change\');" class="'+this.input.className+'" style="'+this.input.style+'"><label for="'+this.contId+'.'+(i+k)+'" class="'+this.label.className+'" style="'+this.label.style+'">'+this._addVal[k]+'</label></span>');}
var l=this.layout.toLowerCase();if(l[0]=='v')cEle.innerHTML=html.join('<br/>\n');else if(l=='lrtb'){var html2=['<table><tr>'];for(var i=0;i<html.length;i++){if(i!=0)html2.push('</tr><tr>');for(var k=0;k<this.cols;k++){if(k!=0)i++;if(typeof html[i]!='undefined')html2.push('<td>'+html[i]+'<td>');else html2.push('<td><td>');}}
html2.push('</tr></table>');cEle.innerHTML=html2.join('\n');}else if(l=='tblr'){var rHTMl=[];for(var k=0;k<this.rows;k++)rHTMl[k]=[];for(var i=0;i<html.length;i++){for(var k=0;k<this.rows;k++){if(k!=0)i++;if(typeof html[i]!='undefined')rHTMl[k].push('<td>'+html[i]+'<td>');else rHTMl[k].push('<td><td>');}}
for(var k=0;k<this.rows;k++)rHTMl[k]='<tr>'+rHTMl[k].join('')+'</tr>';cEle.innerHTML='<table>'+rHTMl.join('\n')+'</table>';}else cEle.innerHTML=html.join('\n');},_setAddVal:function(val){this._addVal=[];if(this.allowMissing){if(val.constructor!=Array)val=[val];for(var i=0;i<val.length;i++){if(val[i]!=''&&this._values.indexOf(val[i])==-1)this._addVal.push(val[i]);}}},_cVal:function(val){if(val==this.value)return true;return false;}});A5.CheckboxGroup=Class.create(A5.RadioGroup,{initialize:function(contId,items,settings){this._t='checkbox';this.value=[];this._initLow(contId,items,settings);},_cVal:function(val){if(val.constructor==Array){val.sort();this.value.sort();if(val.join('|||')==this.value.join('|||'))return true;return false;}else{if(this.value.indexOf(val)!=-1)return true;return false;}}});A5.Select=Class.create({initialize:function(id,items,settings){this.id=id;$u.o.assign(this,{allowMissing:true,value:''});$u.o.assign(this,settings);this.populate(items);},setValue:function(value){var executeChange=typeof arguments[1]!='undefined'?arguments[1]:true;if(this._cVal(value))return false;if(value.constructor!=Array){if(value=='')value=[];else value=[value];}
if(value.length!=0&&this.allowMissing){var oAddValLen=this._addVal.length;this._setAddVal(value);if(oAddValLen!=0||this._addVal.length!=0)this.refresh();}
$svs(this.id,value);if(executeChange)$e.execute(this.id,'change');},populate:function(items){this.items=[];this._values=[];for(var i=0;i<items.length;i++){if(typeof items[i]!='object'){this.items.push({value:items[i],text:items[i]});this._values.push(items[i]);}else{this.items.push(items[i]);this._values.push(items[i].value);}}
this._setAddVal(this.value);this.refresh();},refresh:function(){var ele=$(this.id);if(ele.options.length>0){for(var i=ele.options.length-1;i>=0;i--)ele.remove(i);}
for(var i=0;i<this.items.length;i++){ele.options.add(new Option(this.items[i].value,this.items[i].text));}
for(var i=0;i<this._addVal.length;i++){ele.options.add(new Option(this._addVal[i],this._addVal[i]),0);}},_setAddVal:function(val){this._addVal=[];if(this.allowMissing){if(val.constructor!=Array)val=[val];for(var i=0;i<val.length;i++){if(val[i]!=''&&this._values.indexOf(val[i])==-1)this._addVal.push(val[i]);}}},_cVal:function(val){if(val==this.value)return true;return false;}});A5.buttons={element:function(id,s){var args=typeof arguments[2]!='undefined'?arguments[2]:{};var s2={};$u.o.assign(s2,this._sDef);if(typeof s.theme!='undefined')A5.themes.assign(s2,s.theme,'button');$u.o.assign(s,s2,true);var ele=document.createElement('button');ele.innerHTML=this.contents(id,s);ele.className=s.className;ele.title=s.tip;$ss(ele,s.style);for(var prop in args)$sa(ele,prop,args[prop]);return ele;},html:function(id,s){var args=typeof arguments[2]!='undefined'?arguments[2]:'';var s2={};$u.o.assign(s2,this._sDef);if(typeof s.theme!='undefined')A5.themes.assign(s2,s.theme,'button');$u.o.assign(s,s2,true);html='<button id="'+id+'" class="'+s.className+'"  style="'+s.style+'" '+args+'>'+this.contents(id,s)+'</button>';return html;},contents:function(){var id='';if(arguments.length==1)var s=arguments[0];else{var id='id="'+arguments[0]+'.ICON" ';var s=arguments[1];}
var s2={};$u.o.assign(s2,this._sDef);if(typeof s.theme!='undefined')A5.themes.assign(s2,s.theme,'button');$u.o.assign(s,s2,true);if(s.icon!=''&&typeof s.icon!='undefined'&&s.layout.search('icon')!=-1)s.hasIcon=true;var iHTML=s.hasIcon?A5.u.icon.html(s.icon,id+'class="'+s.iconClassName+'" style="'+s.iconStyle+'; vertical-align: middle; border: none;"'):'';var fHTML='';if(s.layout=='icon')fHTML=iHTML;else if(s.layout=='text')fHTML=s.html;else if(s.layout=='icon text')fHTML=iHTML+' '+s.html;else if(s.layout=='text icon')fHTML=s.html+' '+iHTML;else if(s.layout=='icon/text')fHTML=iHTML+'<br />'+s.html;else if(s.layout=='text/icon')fHTML=s.html+'<br />'+iHTML;else if(s.layout=='icon-text')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+iHTML+'</td><td style="text-align: right;">'+s.html+'</td></tr></table>';else if(s.layout=='text-icon')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+s.html+'</td><td style="text-align: right;">'+iHTML+'</td></tr></table>';return fHTML;},_sDef:{theme:'',style:'',className:'',iconStyle:'',iconClassName:'',html:'',icon:'',layout:'icon text',tip:''},_p:{}}
$e.add(document.documentElement,A5.d.evnts.up,function(){for(var b in A5.buttons._p)$rcn(b,A5.buttons._p[b]);A5.buttons._p={};});A5.Button=Class.create();A5.Button.prototype={initialize:function(settings){$u.o.assign(this,{override:'base',style:0,className:'',hoverClassName:'',pressedClassName:'',disabledClassName:'',iconStyle:0,iconClassName:'',html:'',icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:'',layout:'icon text',tip:'',animation:{show:{type:'',duration:500},hide:{type:'',duration:500}},onClick:0,watches:[],_hasIcon:false});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'button');$u.o.assign(this,settings);A5.overrides.assign(this,'button',this.override);if(this.icon!=''&&this.layout.search('icon')!=-1)this._hasIcon=true;this._buttonIds=new Array();},create:function(s){var HTMLBEle=document.createElement('button');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLBEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLBEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLBEle,attr,s[attr]);}
if(HTMLBEle.id=='')HTMLBEle.id=A5.u.getUniqueId();this._bind(HTMLBEle);return HTMLBEle;},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++)this._bind($(ctrl[i]));}else this._bind($(ctrl));},_bind:function(ele){if($ga(ele,'A5ControlBound')=='true')return true;if(ele.length){for(var i=0;i<ele.length;i++){if(ele[i].id=='')ele[i].id=ele[i].name+'.'+i;this._bind(ele[i]);}
return false;}
if(this.className!='')$acn(ele,this.className);if(typeof this.style=='object'||typeof this.style=='string')$ss(ele,this.style);if(A5.flags.supportsMouse){$e.remove(ele,'mouseover',this._mOver);$e.remove(ele,'mouseout',this._mOut);}
$e.remove(ele,A5.d.evnts.down,this._mDown);$e.remove(ele,A5.d.evnts.up,this._mUp);$e.remove(ele,A5.d.evnts.click,this._mClick);if(A5.flags.supportsMouse){$e.add(ele,'mouseover',this._mOver,this);$e.add(ele,'mouseout',this._mOut,this);}
$e.add(ele,A5.d.evnts.down,this._mDown,this);$e.add(ele,A5.d.evnts.up,this._mUp,this);$e.add(ele,A5.d.evnts.click,this._mClick,this);this._setContent(ele);this._buttonIds.push(ele.id);if(this.watches.length>0){var wName=ele.id!=''?ele.id:ele.name;for(var i=0;i<this.watches.length;i++){if(typeof this.watches[i].onChange!='undefined'){var wData=new Object();var wTarg=new Array();if(typeof this.watches[i].data!='undefined'){if(this.watches[i].data.constructor==Function)wData=this.watches[i].data.call(ele);else if(typeof this.watches[i].data=='object')$u.o.assign(wData,this.watches[i].data);}
if(typeof this.watches[i].watch!='undefined'){if(this.watches[i].watch.constructor==Function)wTarg=this.watches[i].watch.call(ele,wData);else if(typeof this.watches[i].watch=='object')$u.o.assign(wData,this.watches[i].watch);}
A5.Watch.add(wName,wTarg,{data:wData,onChange:this.watches[i].onChange});}}}
$sa(ele,'A5ControlBound','true');},setDisabled:function(val){var eles=this._getButtons(arguments[1]);if(eles){if(val){for(var i=0;i<eles.length;i++){eles[i].disabled=true;if(this._hasIcon&&this.disabledIcon!='')A5.u.icon.update($(eles[i].id+'.ICON'),this.disabledIcon);}
if(this.disabledClassName!='')$acn(eles,this.disabledClassName);}else{for(var i=0;i<eles.length;i++){eles[i].disabled=false;if(this._hasIcon)A5.u.icon.update($(eles[i].id+'.ICON'),this.icon);}
if(this.disabledClassName!='')$rcn(eles,this.disabledClassName);}}},setDisplay:function(val){var eles=this._getButtons(arguments[1]);if(eles){if(val){for(var i=0;i<eles.length;i++)A5.u.element.show(eles[i],this.animation.show);}else{for(var i=0;i<eles.length;i++)A5.u.element.hide(eles[i],this.animation.hide);}}},refresh:function(){var eles=this._getButtons(arguments[0]);if(eles){for(var i=0;i<eles.length;i++)this._setContent(eles[i]);}},_setContent:function(ele){var bc=typeof arguments[1]!='undefined'?arguments[1]:{hasIcon:this._hasIcon,html:this.html,tip:this.tip,icon:this.icon,hoverIcon:this.hoverIcon,pressedIcon:this.pressedIcon,disabledIcon:this.disabledIcon};if(bc.icon!=''&&typeof bc.icon!='undefined'&&this.layout.search('icon')!=-1)bc.hasIcon=true;var iHTML=bc.hasIcon?A5.u.icon.html(bc.icon,'id="'+ele.id+'.ICON" class="'+this.iconClassName+'" style="vertical-align: middle; border: none;"'):'';var fHTML='';if(this.layout=='icon')fHTML=iHTML;else if(this.layout=='text')fHTML=bc.html;else if(this.layout=='icon text')fHTML=iHTML+' '+bc.html;else if(this.layout=='text icon')fHTML=bc.html+' '+iHTML;else if(this.layout=='icon/text')fHTML=iHTML+'<br />'+bc.html;else if(this.layout=='text/icon')fHTML=bc.html+'<br />'+iHTML;else if(this.layout=='icon-text')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+iHTML+'</td><td style="text-align: right;">'+bc.html+'</td></tr></table>';else if(this.layout=='text-icon')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+bc.html+'</td><td style="text-align: right;">'+iHTML+'</td></tr></table>';ele.innerHTML=fHTML;ele.title=bc.tip;if(typeof this.iconStyle=='object'||typeof this.iconStyle=='string'){var iEles=ele.getElementsByTagName('img');for(var i=0;i<iEles.length;i++){if(iEles[i].id==ele.id+'.ICON'){$ss(iEles[i],this.iconStyle);}}}},_getButtons:function(eles){var elesR=new Array();var ele=0;if(typeof eles=='undefined'){for(var i=0;i<this._buttonIds.length;i++){ele=$(this._buttonIds[i])
if(ele)elesR.push(ele);}}else{if(eles.constructor==Array){for(var i=0;i<eles.length;i++){ele=$(eles[i])
if(ele)elesR.push(ele);}}else{if($(eles))elesR.push($(eles));}}
if(elesR.length==0)return false;else return elesR;},_getIcon:function(ele){var iId=ele.id+'.ICON';iEle=false;tEles=ele.getElementsByTagName('img');for(var k=0;k<tEles.length;k++){if(tEles[k].id==iId){iEle=tEles[k];break;}}
if(!iEle){tEles=ele.getElementsByTagName('i');for(var k=0;k<tEles.length;k++){if(tEles[k].id==iId){iEle=tEles[k];break;}}}
return iEle;},_mOver:function(e,classInst){if(!this.disabled){if(classInst.hoverClassName!='')$acn(this,classInst.hoverClassName);if(classInst._hasIcon&&classInst.hoverIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.hoverIcon);}},_mOut:function(e,classInst){if(classInst.hoverClassName!='')$rcn(this,classInst.hoverClassName);if(classInst.pressedClassName!='')$rcn(this,classInst.pressedClassName);if(classInst._hasIcon){if(!this.disabled||classInst.disabledIcon=='')A5.u.icon.update($(this.id+'.ICON'),classInst.icon);else A5.u.icon.update($(this.id+'.ICON'),classInst.disabledIcon);}},_mDown:function(e,classInst){if(!this.disabled){if(classInst.pressedClassName!=''){$acn(this,classInst.pressedClassName);A5.buttons._p[this.id]=classInst.pressedClassName;}
if(classInst._hasIcon&&classInst.pressedIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.pressedIcon);}
$e.preventDefault(e);this.focus();},_mUp:function(e,classInst){if(this.disabled&&classInst.disabledIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.disabledIcon);else if(classInst._hasIcon&&classInst.hoverIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.hoverIcon);else if(classInst._hasIcon)A5.u.icon.update($(this.id+'.ICON'),classInst.icon);},_mClick:function(e,classInst){if(!this.disabled){if(classInst.onClick.constructor==Function)classInst.onClick.call(this,classInst);}}}
A5.ButtonToggle=Class.create(A5.Button,{initialize:function(settings){this._states=0;if(typeof arguments[1]!='undefined')this._states=arguments[1];$u.o.assign(this,{override:'base',type:'two-state',keepPressed:true,style:0,className:'',hoverClassName:'',pressedClassName:'',disabledClassName:'',iconStyle:0,iconClassName:'',html:'',icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:'',layout:'icon text',tip:'',animation:{show:{type:'',duration:500},hide:{type:'',duration:500}},onClick:0,watches:[],_hasIcon:false});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'button');$u.o.assign(this,settings);A5.overrides.assign(this,'buttonToggle',this.override);if(this.icon!=''&&this.layout.search('icon')!=-1)this._hasIcon=true;this._buttonIds=new Array();},setValue:function(val){var eles=this._getButtons(arguments[1]);if(eles){if(this.type=='multi-state'&&(typeof val=='number'||typeof val=='string')){for(var i=0;i<eles.length;i++)this._setContent(eles[i],this._states[val]);$sa(eles,'A5ButtonState',''+val);}else{if(val){if(this.pressedClassName!=''&&this.keepPressed)$acn(eles,this.pressedClassName);if(this._hasIcon&&this.pressedIcon!=''&&this.keepPressed){for(var i=0;i<eles.length;i++)A5.u.icon.update(this._getIcon(eles[i]),this.pressedIcon);}
$sa(eles,'A5ButtonState','true');}else{if(this.pressedClassName!='')$rcn(eles,this.pressedClassName);if(this._hasIcon&&this.icon!=''){for(var i=0;i<eles.length;i++)A5.u.icon.update(this._getIcon(eles[i]),this.icon);}
$sa(eles,'A5ButtonState','false');}}}},getValue:function(){var eles=this._getButtons(arguments[0]);if(eles){if(this.type=='multi-state'){if(eles.length==1)return Number($ga(eles[0],'A5ButtonState'));else{var val=[];for(var i=0;i<eles.length;i++)val.push(Number($ga(eles[i],'A5ButtonState')));}
return val;}else{if(eles.length==1)return $u.s.toBool($ga(eles[0],'A5ButtonState'));else{var val=[];for(var i=0;i<eles.length;i++)val.push($u.s.toBool($ga(eles[i],'A5ButtonState')));}
return val;}}
if(this.type=='multi-state')return-1;else return false;},_mOver:function(e,classInst){if(!this.disabled){if(classInst.type=='multi-state'){var state=$ga(this,'A5ButtonState');if(classInst._states.constructor==Array){if(typeof state=='string')state=Number(state);else state=0;}
var bc={icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:''};$u.o.assign(bc,classInst._states[state]);}else var bc=classInst;if(classInst.hoverClassName!='')$acn(this,classInst.hoverClassName);if(classInst._hasIcon&&bc.hoverIcon!=''&&$ga(this,'A5ButtonState')!='true')A5.u.icon.update($(this.id+'.ICON'),bc.hoverIcon);}},_mOut:function(e,classInst){if(classInst.hoverClassName!='')$rcn(this,classInst.hoverClassName);if($ga(this,'A5ButtonState')!='true'){if(classInst.pressedClassName!=''){$rcn(this,classInst.pressedClassName);A5.buttons._p[this.id]=classInst.pressedClassName;}
if(classInst._hasIcon){if(classInst.type=='multi-state'){var state=$ga(this,'A5ButtonState');if(classInst._states.constructor==Array){if(typeof state=='string')state=Number(state);else state=0;}
var bc={icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:''};$u.o.assign(bc,classInst._states[state]);}else var bc=classInst;if(!this.disabled||bc.disabledIcon=='')A5.u.icon.update($(this.id+'.ICON'),bc.icon);else A5.u.icon.update($(this.id+'.ICON'),bc.disabledIcon);}}},_mUp:function(e,classInst){if(classInst.pressedClassName!='')$rcn(this,classInst.pressedClassName);if($ga(this,'A5ButtonState')=='true'||classInst.type=='multi-state'){if(classInst.type=='multi-state'){var state=$ga(this,'A5ButtonState');if(classInst._states.constructor==Array){if(typeof state=='string')state=Number(state);else state=0;}
var bc={icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:''};$u.o.assign(bc,classInst._states[state]);}else var bc=classInst;if(this.disabled&&bc.disabledIcon!='')A5.u.icon.update($(this.id+'.ICON'),bc.disabledIcon);else if(classInst._hasIcon&&bc.hoverIcon!='')A5.u.icon.update($(this.id+'.ICON'),bc.hoverIcon);else if(classInst._hasIcon)A5.u.icon.update($(this.id+'.ICON'),bc.icon);}},_mClick:function(e,classInst){if(!this.disabled){if(classInst.type=='multi-state'){var state=$ga(this,'A5ButtonState');if(classInst._states.constructor==Array){if(typeof state=='string')state=Number(state);else state=0;if(state+1<classInst._states.length)state++;else state=0;}
classInst._setContent(this,classInst._states[state]);$sa(this,'A5ButtonState',''+state);}else{var state=true;if($ga(this,'A5ButtonState')!='true'){if(classInst.pressedClassName!=''&&classInst.keepPressed)$acn(this,classInst.pressedClassName);$sa(this,'A5ButtonState','true');}else{if(classInst.pressedClassName!='')$rcn(this,classInst.pressedClassName);$sa(this,'A5ButtonState','false');state=false;}}
if(classInst.onClick.constructor==Function)classInst.onClick.call(this,classInst,state);}}});A5.ButtonDropdown=Class.create(A5.Button,{initialize:function(settings){this._control=0;if(typeof arguments[1]!='undefined')this._control=arguments[1];$u.o.assign(this,{override:'base',type:'',style:0,className:'',hoverClassName:'',pressedClassName:'',disabledClassName:'',contentClassName:'',iconStyle:0,iconClassName:'',html:'',icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:'',layout:'icon text',dropdown:{location:'right',className:'',hoverClassName:'',html:'',icon:''},tip:'',animation:{show:{type:'',duration:500},hide:{type:'',duration:500}},defaultValue:'',onClick:0,watches:[],_hasIcon:false});if(typeof settings.type=='string'){if(settings.type!='split')settings.type='dropdown';}else settings.type='dropdown'
if(typeof settings.theme!='undefined'){if(settings.type=='split')A5.themes.assign(this,settings.theme,'buttonSplit');else A5.themes.assign(this,settings.theme,'buttonDropdown');}
$u.o.assign(this,settings);A5.overrides.assign(this,'buttonDropdown',this.override);if(this.icon!=''&&this.layout.search('icon')!=-1)this._hasIcon=true;if(typeof this._control=='object'||typeof this._control=='function'){if(typeof this._control.onHide=='function'){this._control._onHide=this._control.onHide;this._control.onHide=Function('$sa(this._targetId,\'A5ButtonState\',\'false\'); $e.execute(this._targetId,\'mouseup\'); this._onHide();');}else this._control.onHide=Function('$sa(this._targetId,\'A5ButtonState\',\'false\'); $e.execute(this._targetId,\'mouseup\');');}
this._buttonIds=[];this._buttonContent={};},refresh:function(){var eles=this._getButtons(arguments[0]);if(eles){for(var i=0;i<eles.length;i++){if(typeof this._buttonContent[eles[i].id]!='undefined')this._setContent(eles[i],this._buttonContent[eles[i].id]);else this._setContent(eles[i]);}}},setState:function(ele,val){ele=$(ele);if(val){$sa(ele,'A5ButtonState','true');if(this.pressedClassName!='')$acn(ele,this.pressedClassName);if(this._hasIcon&&this.pressedIcon!='')A5.u.icon.update($(ele.id+'.ICON'),this.pressedIcon);}else{$sa(ele,'A5ButtonState','false');if(this.pressedClassName!='')$rcn(ele,this.pressedClassName);if(this.disabled&&this.disabledIcon!='')A5.u.icon.update($(ele.id+'.ICON'),this.disabledIcon);else if(this._hasIcon&&this.hoverIcon!=''&&$ga(ele,'A5ButtonMOver')=='true')A5.u.icon.update($(ele.id+'.ICON'),this.hoverIcon);else if(this._hasIcon)A5.u.icon.update($(ele.id+'.ICON'),this.icon);}},setContent:function(content){var eles=this._getButtons(arguments[1]);if(eles){var tempData={hasIcon:this._hasIcon,html:this.html,tip:this.tip,icon:this.icon,hoverIcon:this.hoverIcon,pressedIcon:this.pressedIcon,disabledIcon:this.disabledIcon};if(typeof content=='object')$u.o.assign(content,tempData,true);for(var i=0;i<eles.length;i++){if(typeof content=='object'){this._setContent(eles[i],content);this._buttonContent[eles[i].id]=content;}else{this._setContent(eles[i]);delete this._buttonContent[eles[i].id];}}}},clearContent:function(){this._buttonContent={}
this.refresh();},_bind:function(ele){if($ga(ele,'A5ControlBound')=='true')return true;if(ele.length){for(var i=0;i<ele.length;i++){if(ele[i].id=='')ele[i].id=ele[i].name+'.'+i;this._bind(ele[i]);}
return false;}
if(this.className!='')$acn(ele,this.className);if(typeof this.style=='object'||typeof this.style=='string')$ss(ele,this.style);if(A5.flags.supportsMouse){$e.remove(ele,'mouseover',this._mOver);$e.remove(ele,'mouseout',this._mOut);}
$e.remove(ele,A5.d.evnts.move,this._mMove);$e.remove(ele,A5.d.evnts.down,this._mDown);$e.remove(ele,A5.d.evnts.up,this._mUp);$e.remove(ele,A5.d.evnts.click,this._mClick);if(A5.flags.supportsMouse){$e.add(ele,'mouseover',this._mOver,this);$e.add(ele,'mouseout',this._mOut,this);}
$e.add(ele,A5.d.evnts.move,this._mMove,this);$e.add(ele,A5.d.evnts.down,this._mDown,this);$e.add(ele,A5.d.evnts.up,this._mUp,this);$e.add(ele,A5.d.evnts.click,this._mClick,this);this._setContentInit(ele);this._buttonIds.push(ele.id);if(this.watches.length>0){var wName=ele.id!=''?ele.id:ele.name;for(var i=0;i<this.watches.length;i++){if(typeof this.watches[i].onChange!='undefined'){var wData=new Object();var wTarg=new Array();if(typeof this.watches[i].data!='undefined'){if(this.watches[i].data.constructor==Function)wData=this.watches[i].data.call(ele);else if(typeof this.watches[i].data=='object')$u.o.assign(wData,this.watches[i].data);}
if(typeof this.watches[i].watch!='undefined'){if(this.watches[i].watch.constructor==Function)wTarg=this.watches[i].watch.call(ele,wData);else if(typeof this.watches[i].watch=='object')$u.o.assign(wData,this.watches[i].watch);}
A5.Watch.add(wName,wTarg,{data:wData,onChange:this.watches[i].onChange});}}}
$sa(ele,'A5ControlBound','true');},_setContentInit:function(ele){if(this.dropdown.location=='bottom')ele.innerHTML='<table cellpadding="0" cellspacing="0" style="width: 100%; height: 100%;"><tr><td id="'+ele.id+'.CONTENT" class="'+this.contentClassName+'" style="white-space: nowrap;"></td></tr><tr><td id="'+ele.id+'.SPLIT" class="'+this.dropdown.className+'"><span style="white-space: nowrap;"></span></td></tr></table>';else ele.innerHTML='<table cellpadding="0" cellspacing="0" style="width: 100%; height: 100%;"><tr><td id="'+ele.id+'.CONTENT" class="'+this.contentClassName+'" style="white-space: nowrap;"></td><td id="'+ele.id+'.SPLIT" class="'+this.dropdown.className+'"><span style="white-space: nowrap;"></span></td></tr></table>';$ss(ele,$gs(ele)+'; overflow: visible; -webkit-appearance: none; -webkit-box-sizing: content-box; -webkit-box-align: start; -webkit-border-fit: lines; -webkit-margin-collapse: discard;');this._setContent(ele);},_setContent:function(ele){var bc=typeof arguments[1]!='undefined'?arguments[1]:{hasIcon:this._hasIcon,html:this.html,tip:this.tip,icon:this.icon,hoverIcon:this.hoverIcon,pressedIcon:this.pressedIcon,disabledIcon:this.disabledIcon};if(bc.icon!=''&&typeof bc.icon!='undefined'&&this.layout.search('icon')!=-1)bc.hasIcon=true;var iHTML=bc.hasIcon?A5.u.icon.html(bc.icon,'id="'+ele.id+'.ICON" class="'+this.iconClassName+'" style="vertical-align: middle; border: none;"'):'';var fHTML='';var eles=ele.getElementsByTagName('td');var cEle=0;var sEle=0;for(var i=0;i<eles.length;i++){if(eles[i].id==ele.id+'.CONTENT')cEle=eles[i];else if(eles[i].id==ele.id+'.SPLIT')sEle=eles[i];}
if(this.layout=='icon')fHTML=iHTML;else if(this.layout=='text')fHTML=bc.html;else if(this.layout=='icon text')fHTML=iHTML+' '+bc.html;else if(this.layout=='text icon')fHTML=bc.html+' '+iHTML;else if(this.layout=='icon/text')fHTML=iHTML+'<br />'+bc.html;else if(this.layout=='text/icon')fHTML=bc.html+'<br />'+iHTML;else if(this.layout=='text-icon')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+bc.html+'</td><td style="text-align: right;">'+iHTML+'</td></tr></table>';else if(this.layout=='icon-text')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+iHTML+'</td><td style="text-align: right;">'+bc.html+'</td></tr></table>';cEle.innerHTML=fHTML;ele.title=bc.tip;fHTML='';if(this.dropdown.html!='')fHTML=this.dropdown.html;if(fHTML!=''&&this.dropdown.location=='bottom')fHTML=fHTML+'<br />';if(this.dropdown.icon!='')fHTML=fHTML+A5.u.icon.html(this.dropdown.icon);sEle.firstChild.innerHTML=fHTML;if(ele.style.height!='')ele.firstChild.style.height=(ele.offsetHeight-2)+'px';if(ele.style.height!=''&&this.dropdown.location=='bottom')sEle.style.height=sEle.firstChild.offsetHeight+'px';else if(ele.style.width!=''&&this.dropdown.location!='bottom')sEle.style.width=sEle.firstChild.offsetWidth+'px';if(typeof this.iconStyle=='object'||typeof this.iconStyle=='string'){var iEles=ele.getElementsByTagName('img');for(var i=0;i<iEles.length;i++){if(iEles[i].id==ele.id+'.ICON'){$ss(iEles[i],this.iconStyle);}}}},_parseValues:function(){this._data=[];var tempData={hasIcon:this.hasIcon,html:this.html,tip:this.tip,icon:this.icon,hoverIcon:this.hoverIcon,pressedIcon:this.pressedIcon,disabledIcon:this.disabledIcon};this._data.push(tempData);this._data[0].value='';if(this.data.constructor==Array){for(var i=0;i<this.data.length;i++){if(typeof this.data[i]=='object'){this._data.push(this.data[i]);if(typeof this._data[i+1].value=='undefined'&&typeof this._data[i+1].html!='undefined')this._data[i+1].value=this._data[i+1].html;}else this._data.push({html:''+this.data[i],value:''+this.data[i]});$u.o.assign(this._data[i+1],tempData,true);if(this._data[i+1].icon!=''&&this.layout.search('icon')!=-1)this._data[i+1]._hasIcon=true;}}},_mOver:function(e,classInst){$sa(this,'A5ButtonMOver','true');if(!this.disabled){if(classInst.hoverClassName!='')$acn(this,classInst.hoverClassName);if(classInst._hasIcon&&classInst.hoverIcon!=''&&$ga(this,'A5ButtonState')!='true')A5.u.icon.update($(this.id+'.ICON'),classInst.hoverIcon);if(classInst.type=='split'&&classInst.dropdown.hoverClassName!=''){var sEle=$(this.id+'.SPLIT');classInst._sl=$gpl(sEle);classInst._st=$gpt(sEle);}}},_mOut:function(e,classInst){$sa(this,'A5ButtonMOver','false');if(classInst.hoverClassName!='')$rcn(this,classInst.hoverClassName);if(classInst.dropdown.hoverClassName!='')$rcn($(this.id+'.SPLIT'),classInst.dropdown.hoverClassName);if($ga(this,'A5ButtonState')!='true'){if(classInst.pressedClassName!='')$rcn(this,classInst.pressedClassName);if(classInst._hasIcon){if(!this.disabled||classInst.disabledIcon=='')A5.u.icon.update($(this.id+'.ICON'),classInst.icon);else A5.u.icon.update($(this.id+'.ICON'),classInst.disabledIcon);}}},_mMove:function(e,classInst){if(!this.disabled&&classInst.type=='split'&&classInst.dropdown.hoverClassName!=''){if(e.pageX===undefined){var pageX=e.clientX+document.documentElement.scrollLeft;var pageY=e.clientY+document.documentElement.scrollTop;}else{var pageX=e.pageX;var pageY=e.pageY;}
var sEle=$(this.id+'.SPLIT');if((pageX>=classInst._sl&&pageX<=classInst._sl+sEle.offsetWidth)&&(pageY>=classInst._st&&pageY<=classInst._st+sEle.offsetHeight))$acn(sEle,classInst.dropdown.hoverClassName);else $rcn(sEle,classInst.dropdown.hoverClassName);}},_mDown:function(e,classInst){if(!this.disabled){if(classInst.pressedClassName!=''){$acn(this,classInst.pressedClassName);A5.buttons._p[this.id]=classInst.pressedClassName;}
if(classInst._hasIcon&&classInst.pressedIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.pressedIcon);}
$e.preventDefault(e);this.focus();},_mUp:function(e,classInst){if($ga(this,'A5ButtonState')!='true'){if(classInst.pressedClassName!='')$rcn(this,classInst.pressedClassName);if(this.disabled&&classInst.disabledIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.disabledIcon);else if(classInst._hasIcon&&classInst.hoverIcon!=''&&$ga(this,'A5ButtonMOver')=='true')A5.u.icon.update($(this.id+'.ICON'),classInst.hoverIcon);else if(classInst._hasIcon)A5.u.icon.update($(this.id+'.ICON'),classInst.icon);}},_mClick:function(e,classInst){if(!this.disabled){var clickType='normal';var showDD=false;if(classInst.type=='split'){if(e.pageX===undefined){var pageX=e.clientX+document.documentElement.scrollLeft;var pageY=e.clientY+document.documentElement.scrollTop;}else{var pageX=e.pageX;var pageY=e.pageY;}
var sEle=$(this.id+'.SPLIT');var cl=$gpl(sEle);var ct=$gpt(sEle);if((pageX>=cl&&pageX<=cl+sEle.offsetWidth)&&(pageY>=ct&&pageY<=ct+sEle.offsetHeight))clickType='split';if(clickType=='split'&&(typeof classInst._control=='object'||typeof classInst._control=='function'))showDD=true;}else if(typeof classInst._control=='object'||typeof classInst._control=='function')showDD=true;if(showDD){classInst._control._targetId=this.id;if(classInst._control.show)classInst._control.show('dropdown',this);if(classInst.pressedClassName!='')$acn(this,classInst.pressedClassName);if(classInst._hasIcon&&classInst.pressedIcon!='')A5.u.icon.update($(this.id+'.ICON'),classInst.pressedIcon);$sa(this,'A5ButtonState','true');}
if(classInst.onClick.constructor==Function){classInst.onClick.call(this,classInst,clickType);}}}});A5.ButtonList=Class.create();A5.ButtonList.prototype={initialize:function(contId,btns,settings){this.contId=contId;$u.o.assign(this,{override:'base',inputId:'',multiple:false,allowNullSelection:'auto',separator:'\n',className:'',nullSelectionClassName:'',button:{keepPressed:true,style:0,className:'',firstClassName:'',lastClassName:'',middleClassName:'',hoverClassName:'',pressedClassName:'',selectedClassName:'',disabledClassName:'',iconStyle:0,iconClassName:'',layout:'icon text'},onSelect:0,onClick:0,onBeforePopulate:0,onPopulate:0,_hasIcon:false});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'buttonList');$u.o.assign(this,settings);A5.overrides.assign(this,'buttonList',this.override);if(this.className!='')$acn(contId,this.className);if(this.button.layout.search('icon')!=-1)this._hasIcon=true;this.selection=[];this.value=[];this.populate(btns);},setValue:function(val){var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;var indx=-1;this.selection=[];if(val.constructor==Array){for(var i=0;i<val.length;i++){indx=this._valToIndx(val[i]);if(indx!=-1)this.selection.push(indx);}}else{indx=this._valToIndx(val);if(indx!=-1)this.selection=[indx];}
this._setState($(this.contId));if(this.inputId!=''){$(this.inputId).value=this.value.join(this.separator);if(executeSelect)$e.execute(this.inputId,'change');}
if(this.onSelect.constructor==Function&&executeSelect)this.onSelect();},setDisabled:function(val,dis){if(typeof dis!='boolean'){var cEle=$(this.contId);var eles=cEle.getElementsByTagName('button');for(var i=0;i<eles.length;i++)eles[i].disabled=val;this._setState(cEle);}else{var indx=this._valToIndx(val);if(indx>=0&&indx<this._btns.length){var cEle=$(this.contId);var eles=cEle.getElementsByTagName('button');eles[indx].disabled=dis;this._setState(cEle);}}},setDisplay:function(val,dis){var indx=this._valToIndx(val);if(indx>=0&&indx<this._btns.length){var cEle=$(this.contId);var eles=cEle.getElementsByTagName('button');if(dis)eles[indx].style.display='';else eles[indx].style.display='none';this._setState(cEle);}},populate:function(btns){if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,btns);if(typeof res=='boolean'){if(!res)return false;}}
var cEle=$(this.contId);cEle.innerHTML='';this._btns=[];this.appendButtons(btns);if(this.allowNullSelection===false&&this.value.length==0){this.selection=[0];this._setState(cEle);}
if(this.onPopulate.constructor==Function)this.onPopulate.call(this,this._btns);},appendButtons:function(btns){var cEle=$(this.contId);for(var i=0;i<btns.length;i++){var btn=document.createElement('button');btn.id=A5.u.getUniqueId();if(typeof this.button.style=='object'||typeof this.button.style=='string')$ss(btn,this.button.style);cEle.appendChild(btn);this._setContent(btn,btns[i]);this._btns.push(btns[i]);}
this._setState(cEle);},insertButtons:function(val,btns){var indx=this._valToIndx(val);if(indx>=0&&indx<this._btns.length){var cEle=$(this.contId);var eles=cEle.getElementsByTagName('button');var nEle=eles[indx];for(var i=0;i<btns.length;i++){var btn=document.createElement('button');btn.id=A5.u.getUniqueId();if(typeof this.button.style=='object'||typeof this.button.style=='string')$ss(btn,this.button.style);cEle.insertBefore(btn,nEle);this._setContent(btn,btns[i]);nEle=btn.nextSibling;this._btns.splice(indx+i,0,btns[i]);}
for(var i=0;i<this.selection.length;i++){if(this.selection[i]>=indx)this.selection[i]+=btns.length;}
this._setState(cEle);}},removeButton:function(val){var cEle=$(this.contId);var indx=this._valToIndx(val);var eles=cEle.getElementsByTagName('button');if(indx!=-1){cEle.removeChild(eles[indx]);this._btns.splice(indx,1);for(var i=0;i<this.selection.length;i++){if(this.selection[i]>=indx)this.selection[i]--;}
this._setState(cEle);}},updateButton:function(val,btn){var cEle=$(this.contId);var indx=this._valToIndx(val);var eles=cEle.getElementsByTagName('button');if(indx!=-1){this._setContent(eles[indx],btn,true);this._setState(cEle);}},_valToIndx:function(val){if(typeof val=='number')return val;for(var i=0;i<this._btns.length;i++){if(this._btns[i].value==val)return i;}
return-1;},_setState:function(cEle){var eles=cEle.getElementsByTagName('button');this.value=[];A5.u.element.cssGroup(eles,this.button);for(var i=0;i<eles.length;i++){if(eles[i].disabled)$acn(eles[i],this.button.disabledClassName);else $rcn(eles[i],this.button.disabledClassName);var pcn=$if(this._btns[i].pressedClassName,this._btns[i].pressedClassName,this.button.pressedClassName);if($u.a.find(this.selection,i)!=-1){$sa(eles[i],'A5ButtonState','true');if(this.button.keepPressed)$acn(eles[i],pcn);else $rcn(eles[i],pcn);this.value.push(this._btns[i].value);if(this.button.selectedClassName!='')$acn(eles[i],this.button.selectedClassName);}else{$sa(eles[i],'A5ButtonState','');$rcn(eles[i],pcn);if(this.button.selectedClassName!='')$rcn(eles[i],this.button.selectedClassName);}
var iEle=$(eles[i].id+'.ICON');if(iEle){if(eles[i].disabled&&this._btns[i].disabledIcon!=''){A5.u.icon.update(iEle,this._btns[i].disabledIcon);}else if($ga(eles[i],'A5ButtonState')=='true'&&this._btns[i].pressedIcon!=''){A5.u.icon.update(iEle,this._btns[i].pressedIcon);}else{A5.u.icon.update(iEle,this._btns[i].icon);}}
$sa(eles[i],'A5ButtonIndex',''+i);}
if(this.nullSelectionClassName!=''){if(this.value.length==0)$acn(cEle,this.nullSelectionClassName);else $rcn(cEle,this.nullSelectionClassName);}},_setContent:function(ele,bc){var update=arguments[2];$u.o.assign(bc,this._bDef,true);if(bc.value=='')bc.value=bc.html;if(bc.icon!=''&&typeof bc.icon!='undefined'&&this.button.layout.search('icon')!=-1)bc.hasIcon=true;var iHTML=bc.hasIcon?A5.u.icon.html(bc.icon,'id="'+ele.id+'.ICON" class="'+this.button.iconClassName+'" style="vertical-align: middle; border: none;"'):'';var fHTML='';if(this.button.layout=='icon')fHTML=iHTML;else if(this.button.layout=='text')fHTML=bc.html;else if(this.button.layout=='icon text')fHTML=iHTML+' '+bc.html;else if(this.button.layout=='text icon')fHTML=bc.html+' '+iHTML;else if(this.button.layout=='icon/text')fHTML=iHTML+'<br />'+bc.html;else if(this.button.layout=='text/icon')fHTML=bc.html+'<br />'+iHTML;else if(this.button.layout=='text-icon')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+bc.html+'</td><td style="text-align: right;">'+iHTML+'</td></tr></table>';else if(this.button.layout=='icon-text')fHTML='<table style="width: 100%;"><tr><td style="text-align: left;">'+iHTML+'</td><td style="text-align: right;">'+bc.html+'</td></tr></table>';ele.innerHTML=fHTML;ele.title=bc.tip;$sa(ele,'A5ButtonIcon',bc.icon);$sa(ele,'A5ButtonIconHover',bc.hoverIcon);$sa(ele,'A5ButtonIconPressed',bc.pressedIcon);$sa(ele,'A5ButtonIconDisabled',bc.disabledIcon);if(typeof this.iconStyle=='object'||typeof this.iconStyle=='string'){var iEles=ele.getElementsByTagName('img');for(var i=0;i<iEles.length;i++){if(iEles[i].id==ele.id+'.ICON'){$ss(iEles[i],this.iconStyle);}}}
if(!update){ele.className=this.button.className+$if(bc.className,' '+bc.className,'');var pcn=$if(bc.pressedClassName,bc.pressedClassName,this.button.pressedClassName);if(A5.flags.supportsMouse){var hcn=$if(bc.hoverClassName,bc.hoverClassName,this.button.hoverClassName);$e.add(ele,'mouseover',Function('$acn(this,\''+hcn+'\');var iEle = $(this.id+\'.ICON\'); if(iEle){ if(this.disabled && $ga(this,\'A5ButtonIconDisabled\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconDisabled\')); } else if($ga(this,\'A5ButtonState\') == \'true\' && $ga(this,\'A5ButtonIconPressed\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconPressed\')); } else if($ga(this,\'A5ButtonIconHover\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconHover\')); }}'));$e.add(ele,'mouseout',Function('$rcn(this,\''+hcn+'\'); if($ga(this,\'A5ButtonState\') != \'true\') $rcn(this,\''+pcn+'\');var iEle = $(this.id+\'.ICON\'); if(iEle){ if(this.disabled && $ga(this,\'A5ButtonIconDisabled\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconDisabled\'));} else if($ga(this,\'A5ButtonState\') == \'true\' && $ga(this,\'A5ButtonIconPressed\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconPressed\'));} else{ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIcon\'));}}'));}
$e.add(ele,A5.d.evnts.down,Function('$acn(this,\''+pcn+'\'); A5.buttons._p[this.id] = \''+pcn+'\'; var iEle = $(this.id+\'.ICON\'); if(iEle){ if(this.disabled && $ga(this,\'A5ButtonIconDisabled\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconDisabled\'));} else if($ga(this,\'A5ButtonState\') == \'true\' && $ga(this,\'A5ButtonIconPressed\') != \'\'){ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIconPressed\'));} else{ A5.u.icon.update(iEle,$ga(this,\'A5ButtonIcon\'));}}'));$e.add(ele,A5.d.evnts.click,this._onClick,this);}},_onClick:function(e,classInst){var indx=Number($ga(this,'A5ButtonIndex'));if(classInst.multiple){var curSelIndx=$u.a.find(classInst.selection,indx);if(curSelIndx==-1)classInst.selection.push(indx);else classInst.selection.splice(curSelIndx,1);if(classInst.allowNullSelection===false&&classInst.selection.length==0){classInst.selection=[indx];}
classInst._setState(this.parentNode);}else{if(classInst.allowNullSelection===true){if(classInst.selection[0]==indx)classInst.selection=[];else classInst.selection=[indx];}else{classInst.selection=[indx];}
classInst._setState(this.parentNode);}
if(classInst.inputId!=''){$(classInst.inputId).value=classInst.value.join(classInst.separator);$e.execute(classInst.inputId,'change');}
if(classInst.onClick.constructor==Function)classInst.onClick();if(classInst.onSelect.constructor==Function)classInst.onSelect();},_bDef:{value:'',html:'',icon:'',hoverIcon:'',pressedIcon:'',disabledIcon:'',tip:''}}
A5.Menubar=Class.create({initialize:function(contId,data,settings){if(!$(contId))return false;this.contId=contId;$u.o.assign(this,{theme:'',override:'base',layout:'horizontal',item:{style:0,className:'',hoverClassName:'',pressedClassName:'',disabledClassName:'',cascadeClassName:'',separatorClassName:'',dropdown:{mode:'click'}}},true);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'menubar');$u.o.assign(this,settings);A5.overrides.assign(this,'menubar',this.override);this.data=data;this._render();},getItem:function(name){var indx=this._gIndex(name);if(indx!=-1)return this.data[indx];return false;},setDisplay:function(name,val){var indx=this._gIndex(name);if(indx!=-1){if(val){A5.u.element.show($(this.data[indx]._id));this.data[indx].show=true;}else{A5.u.element.hide($(this.data[indx]._id));this.data[indx].show=false;}}},setDisabled:function(name,val){var indx=this._gIndex(name);if(indx!=-1){if(val){$acn(this.data[indx]._id,this.item.disabledClassName);this.data[indx].disabled=true;}else{$rcn(this.data[indx]._id,this.item.disabledClassName);this.data[indx].disabled=false;}}},setState:function(name,val){var indx=this._gIndex(name);if(indx!=-1){if(val){$acn(this.data[indx]._id,this.item.pressedClassName);if(this.data[indx]._hasDropdown)this.data[indx].dropdown._state=true;this.data[indx]._state=true;}else{$rcn(this.data[indx]._id,this.item.pressedClassName);if(this.data[indx]._hasDropdown)this.data[indx].dropdown._state=false;this.data[indx]._state=false;}}},_render:function(){var ele=0;var cEle=$(this.contId);for(var i=0;i<this.data.length;i++){if(this.data[i]=='-')this.data[i]={type:'separator'};$u.o.assign(this.data[i],this._defaultItem,true);this.data[i]._id=this.contId+'.ITEM'+i;this.data[i]._state=false;if(this.data[i].type=='custom'){ele=document.createElement('span');ele.className=this._gDef(this.data[i].className,this.item.className);ele.innerHTML=this.data[i].html;}else if(this.data[i].type=='separator'){ele=document.createElement('span');ele.className=this._gDef(this.data[i].className,this.item.separatorClassName);ele.innerHTML=this.data[i].html;}else{if(this.data[i].html=='')this.data[i].html=this.data[i].name;if(this.data[i].name=='')this.data[i].name=this.data[i].html;if(this.data[i].dropdown.show)this.data[i]._hasDropdown=true;ele=document.createElement('div');ele.className=this._gDef(this.data[i].className,this.item.className);var html=this.data[i].html;if(this.data[i].icon!='')html=A5.u.icon.html(this.data[i].icon)+html;if(this.data[i]._hasDropdown){this.data[i].dropdown._pressedClassName=this._gDef(this.data[i].pressedClassName,this.item.pressedClassName);this.data[i].dropdown._id=this.data[i]._id;this.data[i].dropdown._state=false;this.data[i].dropdown._onShow=this.data[i].dropdown.onShow;this.data[i].dropdown.onShow=function(){if(this._onShow.constructor==Function)this._onShow();if(!this._state)$acn(this._id,this._pressedClassName);}
this.data[i].dropdown._onHide=this.data[i].dropdown.onHide;this.data[i].dropdown.onHide=function(){if(this._onHide.constructor==Function)this._onHide();if(!this._state)$rcn(this._id,this._pressedClassName);}
if(this._gDef(this.data[i].cascadeClassName,this.item.cascadeClassName)!=''){html='<span class="'+this._gDef(this.data[i].cascadeClassName,this.item.cascadeClassName)+'" style="display: block;">'+html+'</span>';}}
ele.innerHTML=html;$e.add(ele,'mouseover',this._iMOver,this);$e.add(ele,'mouseout',this._iMOut,this);$e.add(ele,A5.d.evnts.down,this._iMDown,this);$e.add(ele,A5.d.evnts.up,this._iMUp,this);$e.add(ele,A5.d.evnts.click,this._iClick,this);}
ele.id=this.data[i]._id;$sa(ele,'A5MenuBarItemIndex',''+i);if(typeof this.data[i].style=='object'||typeof this.data[i].style=='string')$ss(ele,this.data[i].style);else if((typeof this.item.style=='object'||typeof this.item.style=='string')&&this.data[i].type!='separator')$ss(ele,this.item.style);if(this.layout=='vertical')ele.style.display='block';else ele.style.display='inline-block';cEle.appendChild(ele);if(this.data[i].show==false)A5.u.element.hide(ele);if(this.data[i].disabled==true)$acn(ele,this.item.disabledClassName);if(this.data[i].onInitialize.constructor==Function)this.data[i].onInitialize.call(this,this.data[i]);}},_iMOver:function(e,classInst){var indx=Number($ga(this,'A5MenuBarItemIndex'));if(!classInst.data[indx].disabled)$acn(this,classInst._gDef(classInst.data[indx].hoverClassName,classInst.item.hoverClassName));if(classInst.item.dropdown.mode=='mouseover'){for(var i=0;i<classInst.data.length;i++){if(classInst.data[i].dropdown.hide)classInst.data[i].dropdown.hide();}
if(classInst.data[indx]._hasDropdown&&!classInst.data[indx].disabled){if(classInst.layout=='vertical')classInst.data[indx].dropdown.show('flyout',this);else classInst.data[indx].dropdown.show('dropdown',this);}}},_iMOut:function(e,classInst){var indx=Number($ga(this,'A5MenuBarItemIndex'));$rcn(this,classInst._gDef(classInst.data[indx].hoverClassName,classInst.item.hoverClassName));if(!classInst.data[indx]._state&&!classInst.data[indx]._hasDropdown)$rcn(classInst.data[indx]._id,classInst._gDef(classInst.data[indx].pressedClassName,classInst.item.pressedClassName));},_iMDown:function(e,classInst){$e.stopEvent(e);var indx=Number($ga(this,'A5MenuBarItemIndex'));if(!classInst.data[indx]._state&&!classInst.data[indx]._hasDropdown)$acn(classInst.data[indx]._id,classInst._gDef(classInst.data[indx].pressedClassName,classInst.item.pressedClassName));for(var i=0;i<classInst.data.length;i++){if(classInst.data[i].dropdown.hide)classInst.data[i].dropdown.hide();}
if(classInst.item.dropdown.mode!='mouseover'){if(classInst.data[indx]._hasDropdown&&!classInst.data[indx].disabled){if(classInst.layout=='vertical')classInst.data[indx].dropdown.show('flyout',this);else classInst.data[indx].dropdown.show('dropdown',this);}}},_iMUp:function(e,classInst){var indx=Number($ga(this,'A5MenuBarItemIndex'));if(!classInst.data[indx]._state&&!classInst.data[indx]._hasDropdown)$rcn(classInst.data[indx]._id,classInst._gDef(classInst.data[indx].pressedClassName,classInst.item.pressedClassName));},_iClick:function(e,classInst){$e.stopEvent(e);var indx=Number($ga(this,'A5MenuBarItemIndex'));if(classInst.data[indx].onClick.constructor==Function)classInst.data[indx].onClick.call(this,classInst);},_gIndex:function(name){if(typeof name=='number'&&(name>-1&&name<this.data.length))return name;else{for(var i=0;i<this.data.length;i++){if(this.data[i].name==name)return i;}}
return-1;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_defaultItem:{type:'item',html:'',icon:'',name:'',show:true,disabled:false,style:0,className:'',hoverClassName:'',pressedClassName:'',disabledClassName:'',cascadeClassName:'',onClick:0,onInitialize:0,dropdown:0,_hasDropdown:false}});A5.Menu=Class.create();A5.Menu.prototype={initialize:function(data,settings){this._menuId='A5menu'+this._menuIndx[0];$u.o.assign(this,{override:'base',className:'',innerClassName:'',iconColumn:{show:true,className:'',preventIndentClassName:'',width:''},closeOnLeave:false,closeWait:200,cascadeOffsetX:0,cascadeOffsetY:0,dynamicDataURL:'',loadingMessage:'Loading...',item:{className:'',labelClassName:'',hoverClassName:'',selectedClassName:'',disabledClassName:'',disabledHoverClassName:'',cascadeClassName:'',separatorClassName:'',titleClassName:'',radioImage:'',checkImage:''},pointer:{show:false,location:'auto',size:10,upClassName:'',leftClassName:'',downClassName:'',rightClassName:''},animation:{show:{type:'',duration:500},hide:{type:'',duration:500}},onClick:0,onFocus:0,onShow:0,onHide:0,onBeforePopulate:0,onPopulate:0,_showIt:0,_data:[]});if(typeof A5._menuDefaults!='undefined')$u.o.assign(this,A5._menuDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'menu');$u.o.assign(this,settings);A5.overrides.assign(this,'menu',this.override);this._v=new Object();this._dmg=new Object();this.populate(data);this._menuIndx[0]=this._menuIndx[0]+1;this._lastDir='';this._curLevel=0;this._menuShown=[];this._timeout=0;this._focus=[];this._keyWatch=new AUI.KeyWatcher([{key:'up',handle:this._keyPrev},{key:'down',handle:this._keyNext},{key:'home',handle:this._keyHome},{key:'end',handle:this._keyLastEnd},{key:'left',handle:this._keyOut},{key:'right',handle:this._keyIn},{key:'enter',handle:this._keyEnter}],this);},populate:function(data){if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,data,'full');if(typeof res=='boolean'){if(!res)return false;}}
if(data.constructor==Function||data.constructor==Object){this._dmg['*top']=data;this._genMenu([],0,'');this._data=[];}else if(data.constructor==String){if(data.substr(0,1)=='?')this._dmg['*top']={data:data.substr(1)};else this._dmg['*top']={url:data};this._genMenu([],0,'');this._data=[];}else{this._genMenu(data,0,'');this._data=data;}
if(this.onPopulate.constructor==Function)this.onPopulate.call(this,this._data);},populateItem:function(loc,data){var level=$if(loc.constructor==Array,loc.length,1);var item=this._gItem(this._data,loc);if(this.onBeforePopulate.constructor==Function){var res=this.onBeforePopulate.call(this,data,'item',item);if(typeof res=='boolean'){if(!res)return false;}}
if(item){if(item.type=='item'){var ele=$(item._id)
ele.firstChild.className=this._gDef(item.cascadeClassName,this.item.cascadeClassName);item.children=data;$sa(ele,'A5MenuHasChild','true');$sa(ele,'A5MenuChildId',this._menuId+'.'+item._loc+'.MENU');this._genMenu(item.children,level,item._loc+'.');}}
if(this.onPopulate.constructor==Function)this.onPopulate.call(this,this._data);},show:function(val1,val2){var mEle=$(this._menuId+'.MENU');A5.u.element.show(mEle,this.animation.show);var setPointerHandled=false
if(val1.toLowerCase()=='dropdown'||val1.toLowerCase()=='dropdown-right'||val1.toLowerCase()=='flyout'||val1.toLowerCase()=='flyout-bottom'||val1.toLowerCase()=='popup'||val1.toLowerCase()=='popup-bottom'){var pEle=$(val2);if(pEle){$po(mEle,pEle,val1.toLowerCase(),$if(this.pointer.show,this.pointer.size,0));if(this.pointer.show)this._setPointer(val1,mEle,pEle);setPointerHandled=true;}}else if(typeof val1!='undefined'&&typeof val2!='undefined'){if(typeof val1=='Number')mEle.style.top=val1+'px';else mEle.style.top=val1;if(typeof val2=='Number')mEle.style.left=val2+'px';else mEle.style.left=val2;}
if(!setPointerHandled&&this.pointer.show)this._setPointer(val1,mEle,false);this._curLevel=0;this._showIt++;this._menuShown=new Array(this._menuId+'.MENU');this._focus=[];$(this._menuId+'.FOCUSCATCHER').focus();if(typeof this._dmg['*top']!='undefined'){if(this._dmg['*top'].constructor==Function){var dataArr=this._dmg['*top'].call(this,{});this._genMenu(dataArr,0,'');this._data=dataArr;}else{var dataURL=this._dmg['*top'].url;if(dataURL=='')dataURL=this.dynamicDataURL;if(dataURL!=''){new $a.simple(dataURL,{data:$if(this._dmg['*top'].data,this._dmg['*top'].data+'&','')+'A5MenuLocation=[]&A5MenuValue=&__Ajax=true',handle:this._responseHandle,handleContext:this});this.populate([{type:'custom',html:this.loadingMessage}]);}}}
if(this.onShow.constructor==Function)this.onShow.call(this);var classInst=this;setTimeout(function(){$e.add(document.documentElement,'mousedown',classInst.hide,classInst,true);$e.add(document.documentElement,'touchstart',classInst.hide,classInst,true);delete classInst;},10);},hide:function(){var itemId='';for(var i=0;i<this._menuShown.length;i++){A5.u.element.hide($(this._menuShown[i]),this.animation.hide);itemId=this._menuShown[i].split('.');itemId.pop();itemId=itemId.join('.');ele=$(itemId);$rcn(ele,this._gDef($ga(ele,'A5MenuHoverClassName'),this.item.hoverClassName));$rcn(ele,this._gDef($ga(ele,'A5MenuDisabledHoverClassName'),this.item.disabledHoverClassName));}
this._menuShown=new Array();ele=$(this._menuId+'.'+this._focus.join('.'));$rcn(ele,this._gDef($ga(ele,'A5MenuHoverClassName'),this.item.hoverClassName));$rcn(ele,this._gDef($ga(ele,'A5MenuDisabledHoverClassName'),this.item.disabledHoverClassName));$e.remove(document.documentElement,'mousedown',this.hide);$e.remove(document.documentElement,'touchstart',this.hide);if(this.onHide.constructor==Function)this.onHide.call(this);},setDisplay:function(loc,val){var item=this._gItem(this._data,loc);if(item){if(val)$(item._id).style.display='block';else $(item._id).style.display='none';}},setDisabled:function(loc,val){var item=this._gItem(this._data,loc);if(item){var ele=$(item._id);if(val){ele.className=this._gDef(item.className,this.item.className)+' '+this._gDef(item.disabledClassName,this.item.disabledClassName);$sa(ele,'A5MenuDisabled','true');}else{ele.className=this._gDef(item.className,this.item.className);$sa(ele,'A5MenuDisabled','false');}}},setValue:function(varName,val){this._v[varName]=val;var data=typeof arguments[2]!='undefined'?arguments[2]:this._data;for(var i=0;i<data.length;i++){if(data[i].type=='item'&&data[i].variable==varName){if(val==data[i].name)$acn(data[i]._id,this._gDef(data[i].selectedClassName,this.item.selectedClassName));else $rcn(data[i]._id,this._gDef(data[i].selectedClassName,this.item.selectedClassName));}else if(data[i].type=='radio'&&data[i].variable==varName){if(val==data[i].name)$(data[i]._id+'.ICON').style.visibility='';else $(data[i]._id+'.ICON').style.visibility='hidden';}else if(data[i].type=='check'&&data[i].variable==varName){if(val)$(data[i]._id+'.ICON').style.visibility='';else $(data[i]._id+'.ICON').style.visibility='hidden';}else if(data[i].type=='radio-group'&&data[i].variable==varName){for(var j=0;j<data[i].data.length;j++){if(data[i].data[j].value==val)$acn(data[i]._id+':'+j,this._gDef(data[i].selectedClassName,this.item.selectedClassName));else $rcn(data[i]._id+':'+j,this._gDef(data[i].selectedClassName,this.item.selectedClassName));}}
if(data[i].children.constructor==Array)this.setValue(varName,val,data[i].children);}},getValue:function(varName){return this._v[varName];},navigate:function(dir){dir=dir.toLowerCase();this._lastDir=dir;if(this._focus.length==0){if(this._itemFocus(this._gItemRel(this._data,-1,1)))return true;}else{var item=this._gItem(this._data,this._focus);if(item.type=='radio-group'){if(dir.substr(0,4)=='prev'&&item._focus>item._cols-1){this._menuRGItemMOver.call($(item._id+':'+(item._focus-item._cols)),{},this);return true;}else if(dir=='next'&&item._focus<item.data.length-item._cols){this._menuRGItemMOver.call($(item._id+':'+(item._focus+item._cols)),{},this);return true;}else if(dir=='in'&&item._focus+1<item.data.length){this._menuRGItemMOver.call($(item._id+':'+(item._focus+1)),{},this);return true;}else if(dir=='out'&&item._focus-1>-1){this._menuRGItemMOver.call($(item._id+':'+(item._focus-1)),{},this);return true;}}
return this._navigate(dir);}},_navigate:function(dir){this._menuItemMOut.call($(this._menuId+'.'+this._focus.join('.')),{},this);if(dir.substr(0,4)=='prev'||dir=='next'||dir=='home'||dir=='end'){var level=this._focus.length;var curItem=this._focus.pop();if(this._focus.length==0)var data=this._data;else var data=this._gItem(this._data,this._focus).children;if(dir.substr(0,4)=='prev'){if(this._itemFocus(this._gItemRel(data,curItem,-1)))return true;}else if(dir=='next'){if(this._itemFocus(this._gItemRel(data,curItem,1)))return true;}else if(dir=='home'){if(this._itemFocus(this._gItemRel(data,-1,1)))return true;}else if(dir=='end'){if(this._itemFocus(this._gItemRel(data,data.length,-1)))return true;}}else if(dir=='in'){var data=this._gItem(this._data,this._focus).children;if(this._itemFocus(this._gItemRel(data,-1,1)))return true;}else if(dir=='out'&&this._focus.length>1){this._focus.pop();if(this._itemFocus(this._gItem(this._data,this._focus)))return true;}else if(dir=='enter'){var item=this._gItem(this._data,this._focus);if((item.type=='item'||item.type=='radio'||item.type=='check'||item.type=='radio-group')&&item.children==0){if(item.variable!=''){if(item.type=='radio')this.setValue(item.variable,item.name);else if(item.type=='check')this.setValue(item.variable,!this._v[item.variable]);else if(item.type=='radio-group'&&item._focus>-1)this.setValue(item.variable,item.data[item._focus].value);}
if(item.onClick.constructor==Function)item.onClick.call(this,item);else if(this.onClick.constructor==Function)this.onClick.call(this,item);if(!item.preventHide)this.hide();return true;}else if(item.children!=0){var data=this._gItem(this._data,this._focus).children;if(this._itemFocus(this._gItemRel(data,-1,1)))return true;}else this.hide();}
this._menuItemMOver.call($(this._menuId+'.'+this._focus.join('.')),{},this);},_genMenu:function(menuDef,level,loc){if($(this._menuId+'.'+loc+'MENU')){var mEle=$(this._menuId+'.'+loc+'MENU');$e.removeGroup(this._menuId+'.'+loc+'MENU');}else{var mEle=document.createElement('div');document.body.insertBefore(mEle,document.body.firstChild);mEle.id=this._menuId+'.'+loc+'MENU';mEle.style.display='none';mEle.style.position='absolute';mEle.style.zIndex=''+(1000+level);$e.add(mEle,'mousedown',function(e){$e.stopPropagation(e);return false;});$e.add(mEle,'touchstart',function(e){$e.stopPropagation(e);return false;});}
mEle.className=this.className;var micShow=false;for(var i=0;i<menuDef.length;i++){menuDef[i]=this._parseMenuItem(menuDef[i],loc+i);menuDef[i]._index=i;if(menuDef[i].icon!=''||menuDef[i].type=='radio'||menuDef[i].type=='check')micShow=true;}
if(typeof this.iconColumn.show=='boolean')micShow=this.iconColumn.show;else if(this.iconColumn.show!='auto')micShow=true;var pointerHTML='';if(level==0)pointerHTML='<div id="'+this._menuId+'.POINTER" style="display: none; position: absolute;"></div>';if(micShow){mEle.innerHTML='<div class="'+this.iconColumn.className+'"><div class="'+this.innerClassName+'"></div></div>'+pointerHTML;var mcEle=mEle.firstChild.firstChild;}else{mEle.innerHTML='<div class="'+this.innerClassName+'"></div>'+pointerHTML;var mcEle=mEle.firstChild;}
if(level==0){var HTMLFocusCatcher=document.createElement('a');HTMLFocusCatcher.href='#';HTMLFocusCatcher.id=this._menuId+'.FOCUSCATCHER';$ss(HTMLFocusCatcher,'font-size: 0px; display: block; height: 0px; width: 0px; overflow: hidden; outline-style: none; position: absolute;')
HTMLFocusCatcher.tabIndex='-1';$e.add(HTMLFocusCatcher,'focus',this._mFocus,this,true);$e.add(HTMLFocusCatcher,'blur',this._mBlur,this,true);$e.add(HTMLFocusCatcher,A5.d.evnts.click,function(e){$e.stopEvent(e);return false;});mEle.insertBefore(HTMLFocusCatcher,mEle.firstChild);}
for(var i=0;i<menuDef.length;i++){mcEle.appendChild(this._genMenuItem(menuDef[i],level,loc+i,micShow,this._menuId+'.'+loc+'MENU'));if(menuDef[i].children.constructor==Array)this._genMenu(menuDef[i].children,level+1,loc+i+'.');if(menuDef[i].onInitialize.constructor==Function)menuDef[i].onInitialize.call(this,menuDef[i]);}
$e.add(mEle,'mouseover',this._menuMOver,this,false,this._menuId+'.'+loc+'MENU');$e.add(mEle,'mouseout',this._menuMOut,this,false,this._menuId+'.'+loc+'MENU');},_genMenuItem:function(item,level,loc,micShow,egName){var hasChildren=item.children.constructor==Array;if(item.type=='item'||item.type=='radio'||item.type=='check'){var ele=document.createElement('div');ele.className=this._gDef(item.className,this.item.className);if(item.type=='radio'){ele.innerHTML='<span style="display: block;"><div style="width: '+this.iconColumn.width+'; float: left;">'+A5.u.icon.html(this.item.radioImage,'id="'+item._id+'.ICON" style="visibility: hidden; border: none;" align="top"')+'</div><span class="'+this._gDef(item.labelClassName,this.item.labelClassName)+'">'+item.html+'</span><br style="clear: both;" /></span></span>';}else if(item.type=='check'){ele.innerHTML='<span style="display: block;"><div style="width: '+this.iconColumn.width+'; float: left;">'+A5.u.icon.html(this.item.checkImage,'id="'+item._id+'.ICON" style="visibility: hidden; border: none;" align="top"')+'</div><span class="'+this._gDef(item.labelClassName,this.item.labelClassName)+'">'+item.html+'</span><br style="clear: both;" /></span></span>';}else{if(micShow)ele.innerHTML='<span'+$if(hasChildren,' class="'+this._gDef(item.cascadeClassName,this.item.cascadeClassName)+'"','')+' style="display: block;"><div style="width: '+this.iconColumn.width+'; float: left;">'+$if(item.icon!='',A5.u.icon.html(item.icon,'id="'+item._id+'.ICON" style="border: none;" align="top"'),A5.u.icon.html(this.item.radioImage,'id="'+item._id+'.ICON" style="visibility: hidden; width: 1px; height: 1px;" align="top"'))+'</div><span class="'+this._gDef(item.labelClassName,this.item.labelClassName)+'">'+item.html+'</span><br style="clear: both;" /></span></span>';else ele.innerHTML='<span'+$if(hasChildren,' class="'+this._gDef(item.cascadeClassName,this.item.cascadeClassName)+'"','')+' style="display: block;"><span class="'+this._gDef(item.labelClassName,this.item.labelClassName)+'">'+item.html+'</span><br style="clear: both;" /></span></span>';}
if(item.style)$ss(ele,item.style);}else if(item.type=='custom'){var ele=document.createElement('div');ele.className=this._gDef(item.className,this.item.className);if(item.style)$ss(ele,item.style);ele.innerHTML='<div'+$if(micShow&&!item.preventIndent,' style="padding-left: '+this.iconColumn.width+'"','')+'>'+item.html+'</div>';}else if(item.type=='radio-group'){var ele=document.createElement('div');var sEle=document.createElement('div');if(micShow&&!item.preventIndent)sEle.style.paddingLeft=this.iconColumn.width;ele.appendChild(sEle);var tblEle=document.createElement('table');tblEle.cellSpacing='0';tblEle.cellPadding='0';sEle.appendChild(tblEle);var aEle=0;var cols=1;var rows=0;var dataIndx=0;var className=this._gDef(item.className,this.item.className);if(typeof item.columns=='number')cols=item.columns;else cols=Math.round(Math.sqrt(item.data.length));cols=Math.max(cols,1);rows=Math.round((item.data.length/cols)+0.49);for(var i=0;i<rows;i++){tblEle.insertRow(i);for(var j=0;j<cols;j++){tblEle.rows[i].insertCell(j);if(dataIndx<item.data.length){if(typeof item.data[dataIndx]!='object')item.data[dataIndx]={value:item.data[dataIndx],html:item.data[dataIndx]}
$u.o.assign(item.data[dataIndx],{value:'',html:''},true);if(item.data[dataIndx].value=='')item.data[dataIndx].value=item.html;if(item.data[dataIndx].html=='')item.data[dataIndx].html=item.value;var aEle=document.createElement('div');aEle.className=className;aEle.id=item._id+':'+dataIndx;aEle.innerHTML='<span style="display: block;">'+item.data[dataIndx].html+'</span>';$sa(aEle,'A5MenuLocation',loc);$sa(aEle,'A5MenuHoverClassName',item.hoverClassName);$sa(aEle,'A5MenuDisabledHoverClassName',item.disabledHoverClassName);$sa(aEle,'A5MenuItemGroupIndex',String(dataIndx));$e.add(aEle,'mouseover',this._menuRGItemMOver,this,false,egName);$e.add(aEle,'mouseout',this._menuRGItemMOut,this,false,egName);$e.add(aEle,A5.d.evnts.click,this._menuItemClick,this,false,egName);if(item.style)$ss(aEle,item.style);aEle.style.display='block';tblEle.rows[i].cells[j].appendChild(aEle);}else if(rows==1)break;else tblEle.rows[i].cells[j].innerHTML='&nbsp;';dataIndx++;}}
item._cols=cols;item._rows=rows;}else if(item.type=='separator'){var ele=document.createElement('div');ele.id=item._id;if(!item.preventIndent)ele.className=this._gDef(item.className,this.item.className);else ele.className=this.iconColumn.preventIndentClassName;if(item.style)$ss(ele,item.style);ele.innerHTML='<div class="'+this._gDef(item.className,this.item.separatorClassName)+'"'+$if(micShow&&!item.preventIndent,' style="margin-left: '+this.iconColumn.width+'"','')+'></div>'
return ele}else if(item.type=='title'){var ele=document.createElement('div');ele.id=item._id;ele.className=this._gDef(item.className,this.item.titleClassName);if(item.style)$ss(ele,item.style);ele.innerHTML=item.html;return ele}
ele.id=item._id;ele.style.display='block';if(hasChildren){$sa(ele,'A5MenuHasChild','true');$sa(ele,'A5MenuChildId',this._menuId+'.'+loc+'.MENU');}else{$sa(ele,'A5MenuHasChild','flase');$sa(ele,'A5MenuChildId','');}
$sa(ele,'A5MenuLevel',String(level));$sa(ele,'A5MenuLocation',loc);$sa(ele,'A5MenuHoverClassName',item.hoverClassName);$sa(ele,'A5MenuDisabledHoverClassName',item.disabledHoverClassName);$sa(ele,'A5MenuItemType',item.type);$e.add(ele,'mouseover',this._menuItemMOver,this,false,egName);$e.add(ele,'mouseout',this._menuItemMOut,this,false,egName);if(item.type!='radio-group')$e.add(ele,A5.d.evnts.click,this._menuItemClick,this,false,egName);if(!item.preventIndent)return ele;else{var cEle=document.createElement('div');cEle.className=this.iconColumn.preventIndentClassName;cEle.appendChild(ele);return cEle;}},_parseMenuItem:function(item,loc){if(typeof item!='object'){if(item=='-'){item={type:'separator'}}else item={name:String(item)};}
$u.o.assign(item,{name:'',html:'',icon:'',type:'',variable:'',style:false,className:'',labelClassName:'',hoverClassName:'',selectedClassName:'',disabledClassName:'',disabledHoverClassName:'',cascadeClassName:'',preventHide:false,preventIndent:false,onClick:0,onFocus:0,onInitialize:0,children:0},true);item._id=this._menuId+'.'+loc;item._loc=loc;item._dynamic=false;if(item.name=='')item.name=item.html;if(item.html=='')item.html=item.name;item.type=item.type.toLowerCase();if(item.type!='separator'&&item.type!='title'&&item.type!='radio'&&item.type!='check'&&item.type!='radio-group'&&item.type!='custom')item.type='item';if(item.type=='radio-group')item._focus=-1;if((item.type=='radio-group'||item.type=='radio'||item.type=='check')&&item.variable!=''){if(typeof this._v[item.variable]=='undefined')this._v[item.variable]=null;}
if(item.children.constructor==Function||item.children.constructor==Object){this._dmg[item._loc]=item.children;item.children=[];item._dynamic=true;}else if(item.children.constructor==String){if(item.children.substr(0,1)=='?')this._dmg[item._loc]={data:item.children.substr(1)};else this._dmg[item._loc]={url:item.children};item.children=[];item._dynamic=true;}
return item;},_setPointer:function(val,mEle,pEle){var pntEle=$(this._menuId+'.POINTER');pntEle.style.top='';pntEle.style.left='';var loc='up';var pEleOffset=0;var mEleOffset=0;if(this.pointer.location=='up'||this.pointer.location=='down'||this.pointer.location=='left'||this.pointer.location=='right'){loc=this.pointer.location;}else if(val.toLowerCase()=='dropdown'||val.toLowerCase()=='dropdown-right'){if($gpt(mEle)>$gpt(pEle))loc='up';else loc='down';}else if(val.toLowerCase()=='flyout'||val.toLowerCase()=='flyout-bottom'){if($gpl(mEle)>$gpl(pEle))loc='left';else loc='right';}
if(loc=='up'||loc=='down'){if(loc=='up'){pntEle.className=this.pointer.upClassName;pntEle.style.display='';}else{pntEle.className=this.pointer.downClassName;pntEle.style.display='';}
pntEle.style.left='50%';if(pEle){var mEleOffset=$gpl(mEle);var pEleOffset=$gpl(pEle);var mEleOffsetMax=mEleOffset+mEle.offsetWidth-this.pointer.size;var pEleOffsetMax=pEleOffset+pEle.offsetWidth-this.pointer.size;mEleOffset+=this.pointer.size;pEleOffset+=this.pointer.size;var tOffsetStart=Math.min(Math.max(mEleOffset,pEleOffset),mEleOffsetMax);var tOffsetEnd=Math.max(Math.min(mEleOffsetMax,pEleOffsetMax),mEleOffset);var tOffset=(tOffsetStart-mEleOffset)+this.pointer.size+Math.round((tOffsetEnd-tOffsetStart)/2);pntEle.style.left=tOffset+'px';}}else if(loc=='left'||loc=='right'){if(loc=='left'){pntEle.className=this.pointer.leftClassName;pntEle.style.display='';}else{pntEle.className=this.pointer.rightClassName;pntEle.style.display='';}
pntEle.style.top='50%';if(pEle){var mEleOffset=$gpt(mEle);var pEleOffset=$gpt(pEle);var mEleOffsetMax=mEleOffset+mEle.offsetHeight-this.pointer.size;var pEleOffsetMax=pEleOffset+pEle.offsetHeight-this.pointer.size;mEleOffset+=this.pointer.size;pEleOffset+=this.pointer.size;var tOffsetStart=Math.min(Math.max(mEleOffset,pEleOffset),mEleOffsetMax);var tOffsetEnd=Math.max(Math.min(mEleOffsetMax,pEleOffsetMax),mEleOffset);var tOffset=(tOffsetStart-mEleOffset)+this.pointer.size+Math.round((tOffsetEnd-tOffsetStart)/2);pntEle.style.top=tOffset+'px';}}else pntEle.style.display='none';},_menuItemMOver:function(e,classInst){var loc=$ga(this,'A5MenuLocation');loc=loc.split('.');for(var i=0;i<loc.length;i++)loc[i]=Number(loc[i]);var item=classInst._gItem(classInst._data,loc);ele=$(classInst._menuId+'.'+classInst._focus.join('.'));if(ele.id!=this.id&&$ga(ele,'A5MenuHasChild')!='true'){$rcn(ele,classInst._gDef($ga(ele,'A5MenuHoverClassName'),classInst.item.hoverClassName));$rcn(ele,classInst._gDef($ga(ele,'A5MenuDisabledHoverClassName'),classInst.item.disabledHoverClassName));}
if(this.id+'.MENU'!=classInst._menuShown[classInst._menuShown.length-1]){var curLevel=Number($ga(this,'A5MenuLevel'));var menuToShow=$ga(this,'A5MenuChildId');var ele=0;var menusToHide=classInst._menuShown.slice(curLevel+1);classInst._menuShown.splice(curLevel+1,classInst._menuShown.length-curLevel);for(var i=0;i<menusToHide.length;i++){if(menuToShow!=menusToHide[i]){A5.u.element.hide($(menusToHide[i]),classInst.animation.hide);itemId=menusToHide[i].split('.');itemId.pop();itemId=itemId.join('.');ele=$(itemId);$rcn(ele,classInst._gDef($ga(ele,'A5MenuHoverClassName'),classInst.item.hoverClassName));$rcn(ele,classInst._gDef($ga(ele,'A5MenuDisabledHoverClassName'),classInst.item.disabledHoverClassName));}}
if((item.type=='item'||item.type=='radio'||item.type=='check')&&$ga(this,'A5MenuDisabled')!='true'){$acn(this,classInst._gDef($ga(this,'A5MenuHoverClassName'),classInst.item.hoverClassName));if($ga(this,'A5MenuHasChild')=='true'){ele=$(menuToShow);classInst._menuShown.push(menuToShow);if(item._dynamic&&classInst._showIt>$u.s.toNum(''+$ga(this,'A5MenuChildLastRefresh'))){if(classInst._dmg[item._loc].constructor==Function)classInst.populateItem(loc,classInst._dmg[item._loc].call(classInst,item));else{var dataURL=classInst._dmg[item._loc].url;if(dataURL=='')dataURL=classInst.dynamicDataURL;if(dataURL!=''){new $a.simple(dataURL,{data:$if(classInst._dmg[item._loc].data,classInst._dmg[item._loc].data+'&','')+'A5MenuLocation=['+item._loc.split('.').join(',')+']&A5MenuValue='+item.name+'&__Ajax=true',handle:classInst._responseHandle,handleContext:classInst});classInst.populateItem(loc,[{type:'custom',html:classInst.loadingMessage}]);}}
$sa(this,'A5MenuChildLastRefresh',''+classInst._showIt);}
if(ele.style.display!='block'){A5.u.element.show(ele,classInst.animation.show);$po(ele,this,'flyout',classInst.cascadeOffsetX,classInst.cascadeOffsetY);classInst._curLevel=curLevel;}}}else if(item.type=='item'||item.type=='radio'||item.type=='check'){$acn(this,classInst._gDef($ga(this,'A5MenuDisabledHoverClassName'),classInst.item.disabledHoverClassName));}else if(item.type=='radio-group'&&arguments[2]){if(classInst._lastDir.substr(0,4)!='prev')classInst._menuRGItemMOver.call($(item._id+':0'),e,classInst);else classInst._menuRGItemMOver.call($(item._id+':'+(item._cols*(item._rows-1))),e,classInst);}}
classInst._focus=loc;$(classInst._menuId+'.FOCUSCATCHER').focus();},_menuItemMOut:function(e,classInst){var type=$ga(this,'A5MenuItemType');if(type=='item'||type=='radio'||type=='check'){if($ga(this,'A5MenuHasChild')!='true'){$rcn(this,classInst._gDef($ga(this,'A5MenuHoverClassName'),classInst.item.hoverClassName));$rcn(this,classInst._gDef($ga(this,'A5MenuDisabledHoverClassName'),classInst.item.disabledHoverClassName));}}if(type=='radio-group'){var fIndx=Number($ga(this,'A5MenuRGItemFocus'));if(fIndx>-1){$rcn(this.id+':'+fIndx,classInst._gDef($ga(this,'A5MenuHoverClassName'),classInst.item.hoverClassName));$rcn(this.id+':'+fIndx,classInst._gDef($ga(this,'A5MenuDisabledHoverClassName'),classInst.item.disabledHoverClassName));}}},_menuRGItemMOver:function(e,classInst){var loc=$ga(this,'A5MenuLocation');loc=loc.split('.');for(var i=0;i<loc.length;i++)loc[i]=Number(loc[i]);var item=classInst._gItem(classInst._data,loc);if(item._focus>-1)$rcn(item._id+':'+item._focus,classInst._gDef($ga(this,'A5MenuHoverClassName'),classInst.item.hoverClassName));item._focus=Number($ga(this,'A5MenuItemGroupIndex'));$sa(item._id,'A5MenuRGItemFocus',String(item._focus));$acn(this,classInst._gDef(item.hoverClassName,classInst.item.hoverClassName));},_menuRGItemMOut:function(e,classInst){$rcn(this,classInst._gDef($ga(this,'A5MenuHoverClassName'),classInst.item.hoverClassName));},_menuItemClick:function(e,classInst){var loc=$ga(this,'A5MenuLocation');loc=loc.split('.');var item=classInst._data[Number(loc[0])];for(var i=1;i<loc.length;i++){item=item.children[Number(loc[i])];}
if((item.type=='item'||item.type=='radio'||item.type=='check'||item.type=='radio-group')&&item.children==0){$e.stopEvent(e);if(item.variable!=''){if(item.type=='item'||item.type=='radio')classInst.setValue(item.variable,item.name);else if(item.type=='check')classInst.setValue(item.variable,!classInst._v[item.variable]);else if(item.type=='radio-group'&&item._focus>-1)classInst.setValue(item.variable,item.data[item._focus].value);}
if(item.onClick.constructor==Function)item.onClick.call(classInst,item);else if(classInst.onClick.constructor==Function)classInst.onClick.call(classInst,item);if(!item.preventHide)classInst.hide();return false;}else if(item.children!=0){if(item.onClick.constructor==Function)item.onClick.call(classInst,item);}},_menuMOver:function(e,classInst){clearTimeout(classInst._timeout);},_menuMOut:function(e,classInst){if(classInst.closeOnLeave){classInst._timeout=setTimeout(function(){classInst.hide();delete classInst;},classInst.closeWait);}},_itemFocus:function(item){if(item){var loc=item._loc;loc=loc.split('.');for(var i=0;i<loc.length;i++)loc[i]=Number(loc[i]);this._focus=loc;this._menuItemMOver.call($(item._id),{},this,true);if(item.onFocus.constructor==Function)item.onFocus.call(this,item);else if(this.onFocus.constructor==Function)this.onFocus.call(this,item);return true;}},_mFocus:function(){this._keyWatch.on();},_mBlur:function(){this._keyWatch.off();},_keyPrev:function(){this.navigate('prev');return true;},_keyNext:function(){this.navigate('next');return true;},_keyHome:function(){this.navigate('home');return true;},_keyLastEnd:function(){this.navigate('end');return true;},_keyOut:function(){this.navigate('out');return true;},_keyIn:function(){this.navigate('in');return true;},_keyEnter:function(){this.navigate('enter');return true;},_gItem:function(items,loc){var level=typeof arguments[2]!='undefined'?arguments[2]:0;if(loc.constructor==Array){var target=loc[level];var item=false;if(typeof target=='number')item=items[target];else{for(var i=0;i<items.length;i++){if(items[i].name==target)item=items[i];}}
if(loc.length-1>level&&item){return this._gItem(item.children,loc,level+1);}else return item;}else{if(typeof loc=='number')return items[loc];else{for(var i=0;i<items.length;i++){if(items[i].name==loc)return items[i];}}}
return false;},_gItemRel:function(items,start,step){var target=-1;var ele=0;start=start+step;for(var i=0;i<items.length;i++){itemIndx=start+(i*step);if(itemIndx<0)itemIndx=items.length+itemIndx;else if(itemIndx>items.length-1)itemIndx=itemIndx-items.length;if(items[itemIndx].type!='separator'&&items[itemIndx].type!='title'){ele=$(items[itemIndx]._id);return items[itemIndx];}}},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!='')return arguments[i];return'';},_responseHandle:function(obj){var resJSON=eval('('+obj.responseText+')');if(resJSON.location.length>0)this.populateItem(resJSON.location,resJSON.data);else this.populate(resJSON.data);},_menuIndx:[0]}
A5.ErrorHandler=Class.create();A5.ErrorHandler.prototype={initialize:function(settings){$u.o.assign(settings,{type:'block',className:'',edit:{className:'',container:{className:''}},icon:'',global:{contId:'',hoverClassName:'',hoverInputClassName:''}},true);$u.o.assign(this,settings);if(typeof this.inputClassName!='undefined')this.edit.className=this.inputClassName;this._e=new Array();this._tipId='';this._tipTO=0;},set:function(errorId,errorMsg){if(errorId.constructor==Array){for(var i=0;i<errorId.length;i++){if(typeof errorMsg[i]!='undefined')this._createError(errorId[i],errorMsg[i]);var iEle=$(errorId);}}else this._createError(errorId,errorMsg);},clear:function(){if(arguments.length>0){var eToRem=new Array();if(typeof arguments[0]=='string')eToRem.push(arguments[0]);else eToRem=arguments[0];var indx=-1;for(var i=0;i<eToRem.length;i++){for(var j=0;j<this._e.length;j++){if(this._e[j].id==eToRem[i]){indx=j;break;}}
if(indx>-1)this._removeError(indx);}
if(this.type=='global'&&this._e.length==0){var globalEle=$(this.global.contId);globalEle.innerHTML='';globalEle.style.display='none';}}else{if(this.type=='inline'){for(var i=0;i<this._e.length;i++){$(this._e[i].id+'.ERRORSPAN').style.display='none';this._editPrep(this._e[i].id,false);}}else if(this.type=='tip'){for(var i=0;i<this._e.length;i++){$e.remove($(this._e[i].id),'mouseover',this._mover);$e.remove($(this._e[i].id),'mouseout',this._mout);this._editPrep(this._e[i].id,false);$(this._e[i].id+'.ERRORTIPDIV').style.display='none';}}else if(this.type=='icon'){for(var i=0;i<this._e.length;i++){$(this._e[i].id+'.ERRORTIPICON').style.display='none';this._editPrep(this._e[i].id,false);}}else if(this.type=='global'){$e.removeGroup(this.global.contId);var globalEle=$(this.global.contId);globalEle.innerHTML='';globalEle.style.display='none';for(var i=0;i<this._e.length;i++){$e.remove($(this._e[i].id),'mouseover',this._mover);$e.remove($(this._e[i].id),'mouseout',this._mout);this._editPrep(this._e[i].id,false);}}else{for(var i=0;i<this._e.length;i++){$(this._e[i].id+'.ERRORDIV').style.display='none';this._editPrep(this._e[i].id,false);}}
this._e=new Array();}},_createError:function(errorId,errorMsg){var replacingError=false;for(var i=0;i<this._e.length;i++){if(this._e[i].id==errorId){replacingError=true;this._e[i].msg=errorMsg;break;}}
if(!replacingError)this._e.push({id:errorId,msg:errorMsg});if(this.type=='inline'){if($(errorId+'.ERRORSPAN')){var ele=$(errorId+'.ERRORSPAN');ele.innerHTML=errorMsg;ele.className=this.className;ele.style.display='';var iEle=$(errorId);this._editPrep(iEle,true);}else{var ele=document.createElement('span');ele.id=errorId+'.ERRORSPAN';ele.innerHTML=errorMsg;ele.className=this.className;var iEle=$(errorId);if(iEle.tagName){this._editPrep(iEle,true,ele);}else iEle[iEle.length-1].parentNode.insertBefore(ele,iEle[iEle.length-1].nextSibling);}}else if(this.type=='tip'){if($(errorId+'.ERRORTIPDIV')){var ele=$(errorId+'.ERRORTIPDIV');ele.innerHTML=errorMsg;ele.className=this.className;var iEle=$(errorId);this._editPrep(iEle,true);}else{var ele=document.createElement('div');ele.id=errorId+'.ERRORTIPDIV';ele.innerHTML=errorMsg;ele.className=this.className;ele.style.display='none';ele.style.position='absolute';ele.style.zIndex='5000';var iEle=$(errorId);this._editPrep(iEle,true);document.body.appendChild(ele);$e.add(ele,'mouseover',this._stopTO,this);$e.add(ele,'mouseout',this._mout,this);}
if(!replacingError){$e.add(iEle,'mouseover',this._mover,this);$e.add(iEle,'mouseout',this._mout,this);}}else if(this.type=='icon'){if($(errorId+'.ERRORTIPICON')){var iconEle=$(errorId+'.ERRORTIPICON');A5.u.icon.update(iconEle,this.icon);iconEle.style.display='';var ele=$(errorId+'.ERRORTIPICONDIV');ele.innerHTML=errorMsg;ele.className=this.className;var iEle=$(errorId);this._editPrep(iEle,true);}else{var iconEle=A5.u.icon.element(this.icon);iconEle.id=errorId+'.ERRORTIPICON'
$ss(iconEle,'vertical-align: middle; margin-left: 2px;');var ele=$(errorId+'.ERRORTIPICONDIV');if(!ele){ele=document.createElement('div');ele.id=errorId+'.ERRORTIPICONDIV';}
ele.innerHTML=errorMsg;ele.className=this.className;ele.style.display='none';ele.style.position='absolute';ele.style.zIndex='5000';var iEle=$(errorId);if(iEle.tagName){this._editPrep(iEle,true,iconEle);}else iEle[iEle.length-1].parentNode.insertBefore(iconEle,iEle[iEle.length-1].nextSibling);document.body.appendChild(ele);$e.add(ele,'mouseover',this._stopTO,this);$e.add(ele,'mouseout',this._mout,this);$e.add(iconEle,'mouseover',this._mover,this);$e.add(iconEle,'mouseout',this._mout,this);}}else if(this.type=='global'){if(replacingError){var ele=$(errorId+'.ERRORGLOBALDIV');ele.innerHTML=errorMsg;}else{var ele=document.createElement('div');ele.id=errorId+'.ERRORGLOBALDIV';ele.innerHTML=errorMsg;ele.className=this.className;$sa(ele,'A5ErrorId',errorId);var contEle=$(this.global.contId);contEle.appendChild(ele);contEle.style.display='';$e.add(ele,'mouseover',this._mover,this,false,this.global.contId);$e.add(ele,'mouseout',this._mout,this,false,this.global.contId);$e.add(ele,'click',this._globalSelect,this,false,this.global.contId);var iEle=$(errorId);this._editPrep(iEle,true);$e.add(iEle,'mouseover',this._mover,this);$e.add(iEle,'mouseout',this._mout,this);}}else{if($(errorId+'.ERRORDIV')){var ele=$(errorId+'.ERRORDIV');ele.innerHTML=errorMsg;ele.className=this.className;ele.style.display='';var iEle=$(errorId);this._editPrep(iEle,true);}else{var ele=document.createElement('div');ele.id=errorId+'.ERRORDIV';ele.innerHTML=errorMsg;ele.className=this.className;var iEle=$(errorId);if(iEle.tagName){this._editPrep(iEle,true,ele);}else iEle[iEle.length-1].parentNode.insertBefore(ele,iEle[iEle.length-1].nextSibling);}}},_removeError:function(indx){if(this.type=='inline'){$(this._e[indx].id+'.ERRORSPAN').style.display='none';this._editPrep(this._e[indx].id,false);}else if(this.type=='tip'){$e.remove($(this._e[indx].id),'mouseover',this._mover);$e.remove($(this._e[indx].id),'mouseout',this._mout);this._editPrep(this._e[indx].id,false);$(this._e[indx].id+'.ERRORTIPDIV').style.display='none';}else if(this.type=='icon'){$(this._e[indx].id+'.ERRORTIPICON').style.display='none';$(this._e[indx].id+'.ERRORTIPICONDIV').style.display='none';this._editPrep(this._e[indx].id,false);}else if(this.type=='global'){var ele=$(this._e[indx].id+'.ERRORGLOBALDIV');$e.remove(ele,'mouseover',this._mover);$e.remove(ele,'mouseout',this._mout);$e.remove(ele,'click',this._globalSelect);ele=ele.parentNode;ele.removeChild($(this._e[indx].id+'.ERRORGLOBALDIV'));$e.remove($(this._e[indx].id),'mouseover',this._mover);$e.remove($(this._e[indx].id),'mouseout',this._mout);this._editPrep(this._e[indx].id,false);}else{$(this._e[indx].id+'.ERRORDIV').style.display='none';this._editPrep(this._e[indx].id,false);}
this._e.splice(indx,1);},_mover:function(e,classInst){if(classInst.type=='tip'){if(this._tipId!='')classInst._moutComplete();classInst._tipId=classInst._gcn(this)+'.ERRORTIPDIV';var ele=$(classInst._tipId);ele.style.display='block';$po(ele,this,'dropdown',3);}else if(classInst.type=='icon'){if(this._tipId!='')classInst._moutComplete();classInst._tipId=classInst._gcn(this)+'DIV';var ele=$(classInst._tipId);ele.style.display='block';$po(ele,this,'dropdown-right',3);}else if(classInst.type=='global'){if($ga(this,'A5ErrorId')!=''&&typeof $ga(this,'A5ErrorId')=='string'){var ele=$($ga(this,'A5ErrorId'));if(classInst.global.hoverInputClassName!='')$acn(ele,classInst.global.hoverInputClassName);if(classInst.global.hoverClassName!='')$acn(this,classInst.global.hoverClassName);}else{var ele=$(classInst._gcn(this)+'.ERRORGLOBALDIV');if(classInst.global.hoverInputClassName!='')$acn(this,classInst.global.hoverInputClassName);if(classInst.global.hoverClassName!='')$acn(ele,classInst.global.hoverClassName);}}},_mout:function(e,classInst){if(classInst.type=='tip'){classInst._tipTO=setTimeout(function(){classInst._moutComplete();},300);}else if(classInst.type=='icon'){classInst._tipTO=setTimeout(function(){classInst._moutComplete();},300);}else if(classInst.type=='global'){if($ga(this,'A5ErrorId')!=''&&typeof $ga(this,'A5ErrorId')=='string'){var ele=$($ga(this,'A5ErrorId'));if(classInst.global.hoverInputClassName!='')$rcn(ele,classInst.global.hoverInputClassName);if(classInst.global.hoverClassName!='')$rcn(this,classInst.global.hoverClassName);}else{var ele=$(classInst._gcn(this)+'.ERRORGLOBALDIV');if(classInst.global.hoverInputClassName!='')$rcn(this,classInst.global.hoverInputClassName);if(classInst.global.hoverClassName!='')$rcn(ele,classInst.global.hoverClassName);}}},_moutComplete:function(){ele=$(this._tipId);if(ele)ele.style.display='none';this._tipId='';clearTimeout(this._tipTO);this._tipTO=0;},_stopTO:function(e,classInst){clearTimeout(classInst._tipTO);classInst._tipTO=0;},_globalSelect:function(e,classInst){var ele=$($ga(this,'A5ErrorId'));var pEle=ele;while(pEle.tagName.toLowerCase()!='body'){if(pEle.style.display=='none'||pEle.style.visibility=='hidden')return false;pEle=pEle.parentNode;}
if(ele.tagName){ele.focus();ele.select();}else ele[0].focus();},_editPrep:function(ele,val){ele=$(ele);var eleToAdd=typeof arguments[2]!='undefined'?arguments[2]:false;var tagName=ele.tagName;if(typeof tagName!='string')return false;tagName=tagName.toLowerCase();var tagType=ele.type;if(typeof tagType=='string')tagType=tagType.toLowerCase();if($(ele.id+'.CONTAINER')&&tagName=='input'&&tagType!='checkbox'&&tagType!='radio'){if(val)$acn(ele.id+'.CONTAINER',this.edit.container.className);else $rcn(ele.id+'.CONTAINER',this.edit.container.className);if(eleToAdd)$(ele.id+'.CONTAINER').parentNode.insertBefore(eleToAdd,$(ele.id+'.CONTAINER').nextSibling);}else{if(val){if(tagType!='checkbox'&&tagType!='radio')$acn(ele,this.edit.className);}else $rcn(ele,this.edit.className);if(eleToAdd)ele.parentNode.insertBefore(eleToAdd,ele.nextSibling);}},_gcn:function(ele){if(ele.id!='')return ele.id;else return ele.name;}}
A5.d._dateFrm={};Date.prototype.fromFormat=function(value,format){var switchYear=typeof arguments[2]=='number'?arguments[2]:50;if(switchYear>99||switchYear<0)switchYear=50;var rFrmt=this._parseFormat(format);var dSet={y:null,m:null,d:this.getDate()};var partValue='';this.setDate(1);this.setHours(0,0,0,0);for(var i=0;i<rFrmt.months.length;i++)value=value.replace(RegExp(rFrmt.months[i],'gi'),''+(i+1));for(var i=0;i<rFrmt.monthsShort.length;i++)value=value.replace(RegExp(rFrmt.monthsShort[i],'gi'),''+(i+1));var tValue=value.replace(/[^0-9]/g,'\n').split('\n');var pValue=new Array();for(var i=0;i<tValue.length;i++)if(tValue[i]!='')pValue.push(tValue[i]);var pValIndx=0;for(var i=0;i<rFrmt.formatContent.length;i++){if(rFrmt.formatContent[i]!=''){if(pValue[pValIndx])partValue=pValue[pValIndx];else break;if(rFrmt.formatContent[i]=='yyyy'){dSet.y=$u.s.toNum(partValue);pValIndx++;}else if(rFrmt.formatContent[i]=='yy'||rFrmt.formatContent[i]=='y'){var num=$u.s.toNum(partValue);if(num<100)num=num+1900;if(num<1900+switchYear)num=num+100;dSet.y=num;pValIndx++;}else if(rFrmt.formatContent[i]=='MM'||rFrmt.formatContent[i]=='M'||rFrmt.formatContent[i].toLowerCase().substr(0,3)=='mon'){dSet.m=$u.s.toNum(partValue)-1;pValIndx++;}else if(rFrmt.formatContent[i]=='dd'||rFrmt.formatContent[i]=='d'||rFrmt.formatContent[i]=='x'){dSet.d=$u.s.toNum(partValue);pValIndx++;}else if(rFrmt.formatContent[i]=='0h'||rFrmt.formatContent[i]=='h'){var amIndx=Math.max(Math.max($u.a.find(rFrmt.formatContent,'am'),$u.a.find(rFrmt.formatContent,'AM')),$u.a.find(rFrmt.formatContent,'A'));if(amIndx==-1)this.setHours($u.s.toNum(partValue));else{var amValue=value;for(var j=0;j<rFrmt.fromatMask.length;j++)amValue=amValue.replace(RegExp(rFrmt.fromatMask[j].replace(/[\\\.\^\$\*\+\?\{\}\[\]\(\)\|]/g,function(val){return'\\'+val;}),'gi'),'');amValue=amValue.replace(/[0-9]/g,'');var num=$u.s.toNum(partValue);if(amValue.search(RegExp('p','i'))!=-1){if(num<12)num=num+12;this.setHours(num);}else if(amValue.search(RegExp('a','i'))!=-1){if(num==12)num=0;this.setHours(num);}else this.setHours(num);}
pValIndx++;}else if(rFrmt.formatContent[i]=='0m'||rFrmt.formatContent[i]=='m'){this.setMinutes($u.s.toNum(partValue));pValIndx++;}else if(rFrmt.formatContent[i]=='0s'||rFrmt.formatContent[i]=='s'){this.setSeconds($u.s.toNum(partValue));pValIndx++;}}}
if(dSet.y!=null&&typeof dSet.y!='undefined')this.setFullYear(dSet.y);if(dSet.m!=null&&typeof dSet.m!='undefined')this.setMonth(dSet.m);if(dSet.d!=null&&typeof dSet.d!='undefined')this.setDate(dSet.d);}
Date.prototype.toFormat=function(format){var rFrmt=this._parseFormat(format);var rVal=[];for(var i=0;i<rFrmt.fromatMask.length;i++){rVal.push(rFrmt.fromatMask[i]);if(rFrmt.formatContent[i]=='yyyy')rVal.push($u.s.pad(''+(this.getFullYear()),4,'0'));else if(rFrmt.formatContent[i]=='yy'||rFrmt.formatContent[i]=='y'){var num=Number(String(this.getFullYear()).substr(2));if(num>=100)num=num-100;rVal.push($u.s.pad(''+num,2,'0'));}else if(rFrmt.formatContent[i]=='MM')rVal.push($u.s.pad(''+(this.getMonth()+1),2,'0'));else if(rFrmt.formatContent[i]=='M')rVal.push(this.getMonth()+1);else if(rFrmt.formatContent[i].toLowerCase().substr(0,3)=='mon'){var caseChange='';if(rFrmt.formatContent[i].substr(1,1)=='O')caseChange='u';else if(rFrmt.formatContent[i].substr(0,1)=='m')caseChange='l';else if(rFrmt.formatContent[i].substr(0,1)=='M'&&rFrmt.formatContent[i].substr(1,1)=='o')caseChange='fu';if(rFrmt.formatContent[i].length==3)var curMonth=rFrmt.monthsShort[this.getMonth()];else var curMonth=rFrmt.months[this.getMonth()];curMonth=$u.s.changeCase(curMonth,caseChange);rVal.push(curMonth);}else if(rFrmt.formatContent[i]=='dd')rVal.push($u.s.pad(''+this.getDate(),2,'0'));else if(rFrmt.formatContent[i]=='d')rVal.push(this.getDate());else if(rFrmt.formatContent[i]=='x')rVal.push($u.n.toPlaceStr(this.getDate()));else if(rFrmt.formatContent[i].toLowerCase().substr(0,1)=='w'){if(rFrmt.formatContent[i]=='W')var curWDay=rFrmt.daysShort[this.getDay()].toUpperCase();else if(rFrmt.formatContent[i]=='w')var curWDay=rFrmt.daysShort[this.getDay()].toLowerCase();else{var caseChange='';if(rFrmt.formatContent[i].substr(1,1)=='E')caseChange='u';else if(rFrmt.formatContent[i].substr(0,1)=='w')caseChange='l';else if(rFrmt.formatContent[i].substr(0,1)=='W'&&rFrmt.formatContent[i].substr(1,1)=='e')caseChange='fu';var curWDay=$u.s.changeCase(rFrmt.days[this.getDay()],caseChange);}
rVal.push(curWDay);}else if(rFrmt.formatContent[i]=='0h'){if($u.a.find(rFrmt.formatContent,'am')==-1&&$u.a.find(rFrmt.formatContent,'AM')==-1&&$u.a.find(rFrmt.formatContent,'A')==-1)rVal.push($u.s.pad(''+this.getHours(),2,'0'));else{if(this.getHours()>12)rVal.push($u.s.pad(''+(this.getHours()-12),2,'0'));else if(this.getHours()==0)rVal.push('12');else rVal.push($u.s.pad(''+this.getHours(),2,'0'));}}else if(rFrmt.formatContent[i]=='h'){if($u.a.find(rFrmt.formatContent,'am')==-1&&$u.a.find(rFrmt.formatContent,'AM')==-1&&$u.a.find(rFrmt.formatContent,'A')==-1)rVal.push(this.getHours());else{if(this.getHours()>12)rVal.push(this.getHours()-12);else if(this.getHours()==0)rVal.push('12');else rVal.push(this.getHours());}}else if(rFrmt.formatContent[i]=='0m')rVal.push($u.s.pad(''+this.getMinutes(),2,'0'));else if(rFrmt.formatContent[i]=='m')rVal.push(this.getMinutes());else if(rFrmt.formatContent[i]=='0s')rVal.push($u.s.pad(''+this.getSeconds(),2,'0'));else if(rFrmt.formatContent[i]=='s')rVal.push(this.getSeconds());else if(rFrmt.formatContent[i]=='am'){if(this.getHours()>=12&&this.getHours()<24)rVal.push('pm');else rVal.push('am');}else if(rFrmt.formatContent[i]=='AM'){if(this.getHours()>=12&&this.getHours()<24)rVal.push('PM');else rVal.push('AM');}else if(rFrmt.formatContent[i]=='A'){if(this.getHours()>=12&&this.getHours()<24)rVal.push('P');else rVal.push('A');}}
return rVal.join('');}
Date.prototype._parseFormat=function(formatSettings){if(typeof formatSettings=='string'){if(typeof A5.d._dateFrm[formatSettings]!='undefined')return A5.d._dateFrm[formatSettings];}
var rFrmt={format:'MM/dd/yyyy',fromatMask:[],fromatContent:[],days:['sunday','monday','tuesday','wednesday','thursday','friday','saturday'],daysShort:['sun','mon','tue','wed','thu','fri','sat'],months:['january','february','march','april','may','june','july','august','september','october','november','december'],monthsShort:['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec']}
if(typeof formatSettings=='string')rFrmt.format=formatSettings;else if(typeof formatSettings=='object'){if(formatSettings.parsed&&formatSettings.fromatMask&&formatSettings.formatContent)return formatSettings;if(formatSettings.months&&!formatSettings.monthsShort){formatSettings.monthsShort=new Array();for(var i=0;i<formatSettings.months.length;i++)formatSettings.monthsShort[i]=formatSettings.months[i].substr(0,3);}
if(formatSettings.days&&!formatSettings.daysShort){formatSettings.daysShort=new Array();for(var i=0;i<formatSettings.days.length;i++)formatSettings.daysShort[i]=formatSettings.days[i].substr(0,3);}
if(formatSettings.format){if(formatSettings.format=='')formatSettings.format='MM/dd/yyyy';}
$u.o.assign(rFrmt,formatSettings);}
var qFrmtsIndx=$u.a.find(['1-','2-','1/','2/','3','4','8','5-','6-','7-','5/','6/','7/','9-','10','11-','12-','11/','12/','11','12','3C','4C','8C','9C-','10C'],rFrmt.format);if(qFrmtsIndx!=-1){var qFrmtsMap=['MM-dd-yyyy','dd-MM-yyyy','MM/dd/yyyy','dd/MM/yyyy','d Month yyyy','Month d, yyyy','Month x, yyyy','MM-yy','MM-dd-yy','dd-MM-yy','MM/yy','MM/dd/yy','dd/MM/yy','dd-Mon-yy','dd Mon yyyy','yy-MM-dd','yyyy-MM-dd','yy/MM/dd','yyyy/MM/dd','yy.MM.dd','yyyy.MM.dd','d MONTH yyyy','MONTH d, yyyy','MONTH x, yyyy','d-MON-yy','d-MON-yyyy'];rFrmt.format=qFrmtsMap[qFrmtsIndx];}
var format=rFrmt.format;var search=[/([^\\])Weekday/g,/([^\\])WEEKDAY/g,/([^\\])weekday/g,,/([^\\])W/g,/([^\\])w/g,/([^\\])yyyy/g,/([^\\])yy/g,/([^\\])y/g,/([^\\])Month/g,/([^\\])MONTH/g,/([^\\])month/g,/([^\\])Mon/g,/([^\\])MON/g,/([^\\])mon/g,/([^\\])MM/g,/([^\\])M/g,/([^\\])dd/g,/([^\\])d/g,/([^\\])x/g,/([^\\])am/g,/([^\\])AM/g,/([^\\])A/g,/([^\\])0h/g,/([^\\])h/g,/([^\\])0m/g,/([^\\])m/g,/([^\\])0s/g,/([^\\])s/g];var formatMaskStr=' '+format;for(var i=0;i<search.length;i++)formatMaskStr=formatMaskStr.replace(search[i],'$1~~~~');formatMaskStr=formatMaskStr.substr(1);var fromatMask=formatMaskStr.split('~~~~');var formatContent=[];search=[/\\Weekday/g,/\\WEEKDAY/g,/\\weekday/g,/\\W/g,/\\w/g,/\\yyyy/g,/\\yy/g,/\\y/g,/\\Month/g,/\\MONTH/g,/\\month/g,/\\Mon/g,/\\MON/g,/\\mon/g,/\\MM/g,/\\M/g,/\\dd/g,/\\d/g,/\\x/g,/\\am/g,/\\AM/g,/\\A/g,/\\0h/g,/\\h/g,/\\0m/g,/\\m/g,/\\0s/g,/\\s/g];var replace=['Weekday','WEEKDAY','weekday','W','w','yyyy','yy','y','Month','MONTH','month','Mon','MON','mon','MM','M','dd','d','x','am','AM','A','0h','h','0m','m','0s','s'];for(var i=0;i<fromatMask.length;i++){format=format.substr(fromatMask[i].length);formatContent.push($u.s.word(format,1,fromatMask[i+1]));format=format.substr(formatContent[i].length);for(var j=0;j<search.length;j++)fromatMask[i]=fromatMask[i].replace(search[j],replace[j]);}
rFrmt.fromatMask=fromatMask;rFrmt.formatContent=formatContent;rFrmt.hasTime=$if($u.a.find(formatContent,'h')!=-1||$u.a.find(formatContent,'0h')!=-1,true,false);rFrmt.hasDate=$if($u.a.find(formatContent,'y')!=-1||$u.a.find(formatContent,'yy')!=-1||$u.a.find(formatContent,'yyyy')!=-1,true,false);rFrmt.secondsMode=$if($u.a.find(formatContent,'s')!=-1||$u.a.find(formatContent,'0s')!=-1,'normal','none');rFrmt.hasMeridian=$if($u.a.find(formatContent,'am')!=-1||$u.a.find(formatContent,'AM')!=-1||$u.a.find(formatContent,'A')!=-1,true,false);rFrmt.parsed=true;A5.d._dateFrm[formatSettings]=rFrmt
return rFrmt;}
A5.DatePicker=Class.create();A5.DatePicker.prototype={initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{override:'base',inputId:'',days:['Sun','Mon','Tue','Wed','Thur','Fri','Sat'],months:['January','February','March','April','May','June','July','August','September','October','November','December'],startDay:0,disabledDates:{high:false,low:false,days:false,dates:false},format:'MM/dd/yyyy',switchYear:50,date:0,width:'',height:'',className:'',disabledClassName:'',style:0,calendar:{lockColumnWidth:true,daysOfWeek:{show:true,className:'',style:0},weeksOfYear:{show:false,className:'',style:0,headerClassName:''},date:{className:'',weekendClassName:'',todayClassName:'',style:0,item:{className:'',hoverClassName:'',selectedClassName:'',disabledClassName:'',outOfRangeClassName:'',style:0}}},navigator:{header:{className:'',style:0,prevIcon:'',nextIcon:'',prevIconHover:'',nextIconHover:'',todayButton:{show:false,location:'right',html:'Today',tip:'Select today\'s date'},item:{className:'',hoverClassName:'',selectedClassName:''}},panel:{className:'',style:0,edit:{className:'',style:0,icon:''},item:{className:'',hoverClassName:'',selectedClassName:'',disabledClassName:'',style:0}}},disabled:false,onItemDraw:0,onClick:0,onRightClick:0,onSelect:0,onNavigate:0,onMonthNavigate:0,onYearNavigate:0});if(typeof A5._datePickerDefaults!='undefined')$u.o.assign(this,A5._datePickerDefaults);if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'datePicker');$u.o.assign(this,settings);A5.overrides.assign(this,'datePicker',this.override);var validDate=false;var tempDate=new Date();this._parsedFormat=tempDate._parseFormat(this.format);if(this.date.constructor!=Date){if(typeof this.date=='string'){tempDate.fromFormat(this.date,this._parsedFormat,this.switchYear);this.date=tempDate;validDate=true;}else this.date=new Date();}else validDate=true;this._month=this.date.getMonth();this._year=this.date.getFullYear();this._oldMonth=this._month;this._oldYear=this._year;this._selDay=$if(validDate,this.date.getDate(),-1);this._selMonth=this._month;this._selYear=this._year;this._daysInMonth=0;this._daysInPrevMonth=0;this._monthStartDay=0;this._curPane='date';this._dd={high:false,low:false,days:[]}
this._dFocusId='';this._mFocusId='';this._yFocusId='';this._initRender();if(this.disabled)this.setDisabled(true);},refresh:function(){this._dd.low=false;this._dd.high=false;this._dd.days=false;this._dd.dates=false;if(this.disabledDates.low){var tempDate='';var tempDateParsed=new Date();if(this.disabledDates.low.constructor==Function)tempDate=this.disabledDates.low.call(this);else tempDate=this.disabledDates.low;if(typeof tempDate=='string'||tempDate.constructor==Date){if(typeof tempDate=='string')tempDateParsed.fromFormat(tempDate,this._parsedFormat,this.switchYear);else if(tempDate.constructor==Date)tempDateParsed=tempDate;this._dd.low=tempDateParsed;}}
if(this.disabledDates.high){var tempDate='';delete tempDateParsed;var tempDateParsed=new Date();if(this.disabledDates.high.constructor==Function)tempDate=this.disabledDates.high.call(this);else tempDate=this.disabledDates.high;if(typeof tempDate=='string'||tempDate.constructor==Date){if(typeof tempDate=='string')tempDateParsed.fromFormat(tempDate,this._parsedFormat,this.switchYear);else if(tempDate.constructor==Date)tempDateParsed=tempDate;this._dd.high=tempDateParsed;}}
if(this.disabledDates.days){if(this.disabledDates.days.constructor==Function){this._dd.days=new Array();$u.o.assign(this._dd.days,this.disabledDates.days.call(this));}else if(this.disabledDates.days.constructor==Array){this._dd.days=new Array();$u.o.assign(this._dd.days,this.disabledDates.days);}}
if(this.disabledDates.dates){if(this.disabledDates.dates.constructor==Function){this._dd.dates=this.disabledDates.dates;}else if(this.disabledDates.dates.constructor==Array){this._dd.dates=new Array();$u.o.assign(this._dd.dates,this.disabledDates.dates);var tempDate=false;for(var i=0;i<this._dd.dates.length;i++){if(typeof this._dd.dates[i]=='string'){tempDate=new Date(2000,0,1,0,0,0,0);tempDate.fromFormat(this._dd.dates[i],this._parsedFormat,this.switchYear);this._dd.dates[i]=tempDate.getTime();}else this._dd.dates[i]=this._dd.dates[i].getTime();}}}
this._render();},nextMonth:function(){var yearNav=false;if(this._month==11){this._month=0;this._year++;if(this.onYearNavigate.constructor==Function)yearNav=true;}else this._month++;this._render();if(yearNav)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));},prevMonth:function(){var yearNav=false;if(this._month==0){this._month=11;this._year--;if(this.onYearNavigate.constructor==Function)yearNav=true;}else this._month--;this._render();if(yearNav)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));},nextYear:function(){this._year++;this._render();if(this.onYearNavigate.constructor==Function)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));},prevYear:function(){this._year--;this._render();if(this.onYearNavigate.constructor==Function)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));},setYear:function(year){this._year=year;this._render();if(this.onYearNavigate.constructor==Function)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));},prevDecade:function(){if(this._dd.low){if(this._dd.low.getFullYear()<=this._decade)this._renderDecade(this._decade-10);}else this._renderDecade(this._decade-10);var ele=$(this.contId+'.DATEPICKER.YEAR.INPUT');ele.focus();ele.select();},nextDecade:function(){if(this._dd.high){if(this._dd.high.getFullYear()>=this._decade+10)this._renderDecade(this._decade+10);}else this._renderDecade(this._decade+10);var ele=$(this.contId+'.DATEPICKER.YEAR.INPUT');ele.focus();ele.select();},setDisabled:function(val){if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;},setValue:function(date){var validDate=false;if(date.constructor!=Date){if(typeof date=='string'){var tempDate=new Date();tempDate.fromFormat(date,this._parsedFormat,this.switchYear);this.date=tempDate;validDate=true;}}else{this.date=date;validDate=true;}
if(validDate){this._month=this.date.getMonth();this._year=this.date.getFullYear();this._oldMonth=this._month;this._oldYear=this._year;this._selDay=this.date.getDate();this._selMonth=this._month;this._selYear=this._year;this.date.setFullYear(this._selYear);this.date.setDate(1);this.date.setMonth(this._selMonth);this.date.setDate(this._selDay);this._togglePane('date');}else this._togglePane('date');this.refresh();},_monthPane:function(e){this._togglePane('month');$e.stopEvent(e);return false;},_yearPane:function(e){this._togglePane('year');$e.stopEvent(e);return false;},_monthClick:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;if($ga(this,'A5DatePickerItemDisabled')=='true')return false;var month=this.id.split('.');month=Number(month.pop());classInst._month=month;classInst._render();classInst._togglePane('date');if(classInst.onMonthNavigate.constructor==Function)classInst.onMonthNavigate.call(classInst,classInst.date.toFormat(classInst._parsedFormat));return false;},_yearClick:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;if($ga(this,'A5DatePickerItemDisabled')=='true')return false;var year=Number(this.innerHTML);classInst._year=year;classInst._render();classInst._togglePane('date');if(classInst.onYearNavigate.constructor==Function)classInst.onYearNavigate.call(classInst,classInst.date.toFormat(classInst._parsedFormat));if(classInst.onMonthNavigate.constructor==Function)classInst.onMonthNavigate.call(classInst,classInst.date.toFormat(classInst._parsedFormat));return false;},_prevDecade:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;classInst.prevDecade();return false;},_nextDecade:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;classInst.nextDecade();return false;},_inputYear:function(e,classInst){if(classInst.disabled)return false;var keyCode=e.charCode||e.keyCode;if(keyCode==13||!keyCode){classInst.setYear($u.s.toNum(this.value));classInst._togglePane('date');}},_prevButton:function(e){$e.stopEvent(e);if(this.disabled)return false;if(this._curPane=='year')this.prevDecade();else if(this._curPane=='month')this.prevYear();else this.prevMonth();return false;},_nextButton:function(e){$e.stopEvent(e);if(this.disabled)return false;if(this._curPane=='year')this.nextDecade();else if(this._curPane=='month')this.nextYear();else this.nextMonth();return false;},_todayButton:function(e){$e.stopEvent(e);if(this.disabled)return false;var cDate=new Date();this._month=cDate.getMonth();this._year=cDate.getFullYear();this._oldMonth=this._month;this._oldYear=this._year;this._selDay=cDate.getDate();this._selMonth=this._month;this._selYear=this._year;this.date.setFullYear(this._selYear);this.date.setDate(1);this.date.setMonth(this._selMonth);this.date.setDate(this._selDay);this._togglePane('date');this.refresh();if($(this.inputId)){$svs(this.inputId,this.date.toFormat(this._parsedFormat));$e.execute(this.inputId,'change');}
if(this.onYearNavigate.constructor==Function)this.onYearNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onMonthNavigate.constructor==Function)this.onMonthNavigate.call(this,this.date.toFormat(this._parsedFormat));if(this.onSelect.constructor==Function)this.onSelect.call(this,this.date.toFormat(this._parsedFormat));if(this.onClick.constructor==Function)this.onClick.call(this,this.date.toFormat(this._parsedFormat));return false;},_dClick:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;this.blur();if($ga(this,'A5DatePickerItemDisabled')=='true')return false;var day=Number($ga(this,'A5DatePickerDay'));var month=classInst._month+Number($ga(this,'A5DatePickerDayMonth'));var year=classInst._year;if(month==-1){year--;month=11;}else if(month==12){year++;month=0;}
var yearNav=false;var monthNav=false;if(classInst._year!=year&&classInst.onYearNavigate.constructor==Function)yearNav=true;if(classInst._month!=month&&classInst.onMonthNavigate.constructor==Function)monthNav=true;classInst._year=year;classInst._month=month;classInst._selDay=day;classInst._selMonth=classInst._month;classInst._selYear=classInst._year;classInst._render();classInst.date.setFullYear(classInst._selYear);classInst.date.setDate(1);classInst.date.setMonth(classInst._selMonth);classInst.date.setDate(classInst._selDay);if($(classInst.inputId)){$svs(classInst.inputId,classInst.date.toFormat(classInst._parsedFormat));$e.execute(classInst.inputId,'change');}
if(yearNav)classInst.onYearNavigate.call(classInst,classInst.date.toFormat(classInst._parsedFormat));if(monthNav)classInst.onMonthNavigate.call(classInst,classInst.date.toFormat(classInst._parsedFormat));if(classInst.onSelect.constructor==Function)classInst.onSelect.call(classInst,classInst.date.toFormat(classInst._parsedFormat));if(classInst.onClick.constructor==Function)classInst.onClick.call(classInst,classInst.date.toFormat(classInst._parsedFormat));return false;},_togglePane:function(type){if(this.disabled)return false;var cEle=$(this.contId+'.DATEPICKER');var tEle=$(this.contId+'.DATEPICKER.TITLE');var dEle=$(this.contId+'.DATEPICKER.DATEPANE');var mEle=$(this.contId+'.DATEPICKER.MONTHPANE');var yEle=$(this.contId+'.DATEPICKER.YEARPANE');var paneHeight=dEle.offsetHeight+'px';if(type=='month'&&this._curPane!='month'){if(this._curPane=='date'){cEle.style.height=cEle.offsetHeight+'px';cEle.style.width=cEle.offsetWidth+'px';$(this.contId+'.DATEPICKER.MONTHTABLE').style.height=paneHeight;$(this.contId+'.DATEPICKER.YEARTABLE').style.height=paneHeight;}
dEle.style.display='none';mEle.style.display='';yEle.style.display='none';$acn(this.contId+'.DATEPICKER.MONTH',this.navigator.header.item.selectedClassName);$rcn(this.contId+'.DATEPICKER.YEAR',this.navigator.header.item.selectedClassName);this._curPane='month';}else if(type=='year'&&this._curPane!='year'){if(this._curPane=='date'){cEle.style.height=cEle.offsetHeight+'px';cEle.style.width=cEle.offsetWidth+'px';$(this.contId+'.DATEPICKER.MONTHTABLE').style.height=paneHeight;$(this.contId+'.DATEPICKER.YEARTABLE').style.height=paneHeight;}
dEle.style.display='none';mEle.style.display='none';yEle.style.display='';$rcn(this.contId+'.DATEPICKER.MONTH',this.navigator.header.item.selectedClassName);$acn(this.contId+'.DATEPICKER.YEAR',this.navigator.header.item.selectedClassName);var ele=$(this.contId+'.DATEPICKER.YEAR.INPUT');ele.focus();ele.select();this._curPane='year';}else{tEle.style.height='';tEle.style.display='';cEle.style.height='';cEle.style.width='';dEle.style.display='';mEle.style.display='none';yEle.style.display='none';$rcn(this.contId+'.DATEPICKER.MONTH',this.navigator.header.item.selectedClassName);$rcn(this.contId+'.DATEPICKER.YEAR',this.navigator.header.item.selectedClassName);this._curPane='date';}},_mOver:function(e,classInst){var fId='';if(classInst._curPane=='month')fId=classInst._mFocusId;else if(classInst._curPane=='year')fId=classInst._yFocusId;else fId=classInst._dFocusId;if(fId!=''){if(classInst._curPane=='month'||classInst._curPane=='year')$rcn(fId,classInst.navigator.panel.item.hoverClassName);else $rcn(fId,classInst.calendar.date.item.hoverClassName);}
fId='';if($ga(this,'A5DatePickerItemDisabled')!='true'){fId=this.id;if(classInst._curPane=='month'||classInst._curPane=='year')$acn(this,classInst.navigator.panel.item.hoverClassName);else $acn(this,classInst.calendar.date.item.hoverClassName);}
if(classInst._curPane=='month')classInst._mFocusId=fId;else if(classInst._curPane=='year')classInst._yFocusId=fId;else classInst._dFocusId=fId;},_mOut:function(e,classInst){if(classInst._curPane=='month')classInst._mFocusId='';else if(classInst._curPane=='year')classInst._yFocusId='';else classInst._dFocusId='';if(classInst._curPane=='month'||classInst._curPane=='year')$rcn(this,classInst.navigator.panel.item.hoverClassName);else $rcn(this,classInst.calendar.date.item.hoverClassName);},_nmOver:function(e,classInst){if(classInst.navigator.header.item.hoverClassName!='')$acn(this,classInst.navigator.header.item.hoverClassName);},_nmOut:function(e,classInst){if(classInst.navigator.header.item.hoverClassName!='')$rcn(this,classInst.navigator.header.item.hoverClassName);},_rClick:function(e,classInst){if(classInst.onRightClick.constructor==Function){$e.stopEvent(e);if(classInst.disabled)return false;if(this.id==classInst.contId+'.DATEPICKER')classInst.onRightClick(new Date(classInst._year,classInst._month,1),'datepicker');else if(classInst._curPane=='month')classInst.onRightClick(new Date(classInst._year,Number(this.id.split('.').pop()),1),'month');else if(classInst._curPane=='year')classInst.onRightClick(new Date(Number(this.innerHTML),classInst._month,1),'year');else{var day=Number($ga(this,'A5DatePickerDay'));var month=classInst._month+Number($ga(this,'A5DatePickerDayMonth'));var year=classInst._year;if(month==-1){year--;month=11;}else if(month==12){year++;month=0;}
classInst.onRightClick(new Date(year,month,day),'date');}
return false;}},_render:function(){if(this._dd.low){if(this._dd.low.getFullYear()>=this._year){this._year=this._dd.low.getFullYear();if(this._dd.low.getMonth()>=this._month)this._month=this._dd.low.getMonth();}}
if(this._dd.high){if(this._dd.high.getFullYear()<=this._year){this._year=this._dd.high.getFullYear();if(this._dd.high.getMonth()<=this._month)this._month=this._dd.high.getMonth();}}
var cDate=new Date(this._year,this._month,1);var nDate=new Date();var tDay=nDate.getDate();var tMonth=nDate.getMonth();var tYear=nDate.getFullYear();this._monthStartDay=cDate.getDay();this._monthStartDay=this._monthStartDay-this.startDay;if(this._monthStartDay<0)this._monthStartDay=this._monthStartDay+7;if(this._month==11){nDate.setDate(1);nDate.setMonth(0);nDate.setFullYear(this._year+1);}else{nDate.setDate(1);nDate.setMonth(this._month+1);nDate.setFullYear(this._year);}
cDate.setDate(0);nDate.setDate(0);this._daysInMonth=nDate.getDate();this._daysInPrevMonth=cDate.getDate();var hasOIDEvnt=this.onItemDraw.constructor==Function;var tEle=$(this.contId+'.DATEPICKER');var cDay=1;var cMonth=$if(this._month==0,11,this._month-1);var cYear=$if(this._month==0,this._year-1,this._year);var cdClassName='';var cdDisable=false;var cDayOOR=true;if(this._monthStartDay>0)cDay=this._daysInPrevMonth+1-this._monthStartDay;else cDay=this._daysInPrevMonth-6;var cdEle=0;var ysDate=0;var wofVal=0;var disDates=-1;if(this._dd.dates.constructor==Function)disDates=1;else if(this._dd.dates.constructor==Array)disDates=2;for(var i=2;i<8;i++){if(this.calendar.weeksOfYear.show){ysDate=new Date(cYear,0,1);wofVal=Math.ceil((((new Date(cYear,cMonth,cDay)-ysDate)/86400000)+ysDate.getDay()+1)/7);if(wofVal==0)wofVal=52;else if(wofVal==53)wofVal=1;tEle.rows[i].cells[0].innerHTML=wofVal;}
for(var j=1;j<8;j++){tEle.rows[i].cells[j].className=this._dcn[j-1];if(tYear==cYear&&tMonth==cMonth&&tDay==cDay)tEle.rows[i].cells[j].className=this._dcn[j-1]+' '+this.calendar.date.todayClassName;else tEle.rows[i].cells[j].className=this._dcn[j-1];cdEle=tEle.rows[i].cells[j].firstChild;cdDisable=false;if(this._dd.low){if(this._dd.low.getFullYear()>cYear)cdDisable=true;else if(this._dd.low.getFullYear()==cYear){if(this._dd.low.getMonth()>cMonth)cdDisable=true;else if(this._dd.low.getMonth()==cMonth&&this._dd.low.getDate()>cDay)cdDisable=true;}}
if(this._dd.high){if(this._dd.high.getFullYear()<cYear)cdDisable=true;else if(this._dd.high.getFullYear()==cYear){if(this._dd.high.getMonth()<cMonth)cdDisable=true;else if(this._dd.high.getMonth()==cMonth&&this._dd.high.getDate()<cDay)cdDisable=true;}}
if(this._dd.days){if($u.a.find(this._dd.days,this._di[j-1])!=-1)cdDisable=true;}
cDate=new Date(cYear,cMonth,cDay,0,0,0,0);if(!cdDisable){if(disDates==1){cdDisable=this._dd.dates.call(this,cDate);}else if(disDates==2){if(this._dd.dates.indexOf(cDate.getTime())!=-1)cdDisable=true;}}
cdClassName=$if(cYear==this._selYear&&cMonth==this._selMonth&&cDay==this._selDay,this.calendar.date.item.className+' '+this.calendar.date.item.selectedClassName,this.calendar.date.item.className);if(cdDisable){$sa(cdEle,'A5DatePickerItemDisabled','true');cdClassName=cdClassName+' '+this.calendar.date.item.disabledClassName;}else $sa(cdEle,'A5DatePickerItemDisabled','false');$sa(cdEle,'A5DatePickerDay',''+cDay);cdEle.innerHTML=''+cDay;if(hasOIDEvnt)this.onItemDraw.call(this,cdEle,cDate,'date');if(i<4){if(cDayOOR){cdEle.className=cdClassName+' '+this.calendar.date.item.outOfRangeClassName;$sa(cdEle,'A5DatePickerDayMonth','-1');}else{cdEle.className=cdClassName;$sa(cdEle,'A5DatePickerDayMonth','0');}
if(cDay==this._daysInPrevMonth){cDay=1;cDayOOR=false;cYear=$if(cMonth==11,cYear+1,cYear);cMonth=$if(cMonth==11,0,cMonth+1);}else cDay++;}else{if(cDayOOR){cdEle.className=cdClassName+' '+this.calendar.date.item.outOfRangeClassName;$sa(cdEle,'A5DatePickerDayMonth','1');}else{cdEle.className=cdClassName;$sa(cdEle,'A5DatePickerDayMonth','0');}
if(cDay==this._daysInMonth){cDay=1;cDayOOR=true;cYear=$if(cMonth==11,cYear+1,cYear);cMonth=$if(cMonth==11,0,cMonth+1);}else cDay++;}}}
$(this.contId+'.DATEPICKER.MONTH').innerHTML=this.months[this._month];$(this.contId+'.DATEPICKER.YEAR').innerHTML=this._year;$(this.contId+'.DATEPICKER.YEAR.INPUT').value=this._year;var mEle=0;var mClassName='';var mDisable=false;for(var i=0;i<12;i++){mEle=$(this.contId+'.DATEPICKER.MONTH.'+i);mDisable=false;if(this._dd.low){if(this._dd.low.getFullYear()>this._year)mDisable=true;else if(this._dd.low.getFullYear()==this._year&&this._dd.low.getMonth()>i)mDisable=true;}
if(this._dd.high){if(this._dd.high.getFullYear()<this._year)mDisable=true;else if(this._dd.high.getFullYear()==this._year&&this._dd.high.getMonth()<i)mDisable=true;}
if(i==this._month)mClassName=this.navigator.panel.item.className+' '+this.navigator.panel.item.selectedClassName;else mClassName=this.navigator.panel.item.className;if(mDisable){$sa(mEle,'A5DatePickerItemDisabled','true');mClassName=mClassName+' '+this.navigator.panel.item.disabledClassName;}else $sa(mEle,'A5DatePickerItemDisabled','false');mEle.className=mClassName;if(hasOIDEvnt)this.onItemDraw.call(this,mEle,new Date(this._year,i,1),'month');}
$rcn(this.contId+'.DATEPICKER.MONTH.'+this._oldMonth,this.navigator.panel.item.selectedClassName);$acn(this.contId+'.DATEPICKER.MONTH.'+this._month,this.navigator.panel.item.selectedClassName);this._renderDecade((Math.round((this._year-4.9999999)/10)*10));this._oldMonth=this._month;this._oldYear=this._year;},_renderDecade:function(decade){var ele=0;var yClassName='';var yDisable=false;var hasOIDEvnt=this.onItemDraw.constructor==Function;for(var i=0;i<10;i++){ele=$(this.contId+'.DATEPICKER.YEAR.'+i)
ele.innerHTML=String(decade+i);yDisable=false;if(this._dd.low)if(this._dd.low.getFullYear()>decade+i)yDisable=true;if(this._dd.high)if(this._dd.high.getFullYear()<decade+i)yDisable=true;if(decade+i==this._year)yClassName=this.navigator.panel.item.className+' '+this.navigator.panel.item.selectedClassName;else yClassName=this.navigator.panel.item.className;if(yDisable){$sa(ele,'A5DatePickerItemDisabled','true');yClassName=yClassName+' '+this.navigator.panel.item.disabledClassName;}else $sa(ele,'A5DatePickerItemDisabled','false');ele.className=yClassName;if(hasOIDEvnt)this.onItemDraw.call(this,ele,new Date(decade+i,1,1),'year');}
this._decade=decade;},_initRender:function(){var di=new Array();var dcn=new Array();for(var i=0;i<7;i++){di[i]=i+this.startDay;if(di[i]>6)di[i]=di[i]-7;if(this.calendar.date.className.constructor==Array){if(this.calendar.date.className[di[i]])dcn[i]=this.calendar.date.className[di[i]];else dcn[i]=this.calendar.date.weekendClassName;}else{if(di[i]==0||di[i]==6)dcn[i]=this.calendar.date.weekendClassName;else dcn[i]=this.calendar.date.className;}}
this._di=di;this._dcn=dcn;var weekOfYearDisplay='none';var dayOfWeekDisplay='none';var intersectionDisplay='none';var cellWidth='14.2%';if(this.calendar.daysOfWeek.show)dayOfWeekDisplay='';if(this.calendar.weeksOfYear.show){weekOfYearDisplay='';cellWidth='12.5%';}
if(this.calendar.daysOfWeek.show&&this.calendar.weeksOfYear.show)intersectionDisplay='';if(!this.calendar.lockColumnWidth)cellWidth='';var html=['<table id="{BASEID}.DATEPICKER" cellspacing="0" class="'+this.className+'" style="width: '+this.width+'; height: '+this.height+'; ">',' <tr>','  <th id="{BASEID}.DATEPICKER.TITLE" colspan="8" class="'+this.navigator.header.className+'">','   <div id="{BASEID}.DATEPICKER.PREVBUTTON" style="float: left;">'+A5.u.icon.html(this.navigator.header.prevIcon,'align="top"')+'</div>','   <div id="{BASEID}.DATEPICKER.NEXTBUTTON" style="float: right;">'+A5.u.icon.html(this.navigator.header.nextIcon,'align="top"')+'</div>','   <div id="{BASEID}.DATEPICKER.MONTHYEARBUTTONS"><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH" class="'+this.navigator.header.item.className+'"></a> <a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR" class="'+this.navigator.header.item.className+'"></a></div>','  </th>',' </tr>',' <tbody id="{BASEID}.DATEPICKER.DATEPANE">','  <tr>','   <td class="'+this.calendar.daysOfWeek.className+' '+this.calendar.weeksOfYear.headerClassName+'" style="width: '+cellWidth+'; display: '+intersectionDisplay+'"></td>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[0]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[1]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[2]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[3]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[4]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[5]]+'</th>','   <th class="'+this.calendar.daysOfWeek.className+'" style="width: '+cellWidth+'; display: '+dayOfWeekDisplay+';">'+this.days[di[6]]+'</th>','  </tr>'];for(var i=0;i<6;i++){html=html.concat(['  <tr>','   <td id="{BASEID}.DV'+i+'.0" class="'+this.calendar.weeksOfYear.className+'" align="center" vAlign="center" style="display: '+weekOfYearDisplay+'; width: '+cellWidth+';"></td>','   <td id="{BASEID}.DV'+i+'.1" class="'+dcn[0]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.2" class="'+dcn[1]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.3" class="'+dcn[2]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.4" class="'+dcn[3]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.5" class="'+dcn[4]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.6" class="'+dcn[5]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','   <td id="{BASEID}.DV'+i+'.7" class="'+dcn[6]+'" style="width: '+cellWidth+';"><a href="#" tabindex="-1" class="'+this.calendar.date.item.className+'">&nbsp;</a></td>','  </tr>']);}
html=html.concat([' </tbody>',' <tbody id="{BASEID}.DATEPICKER.MONTHPANE" style="display: none;">','  <tr>','   <td class="'+this.navigator.panel.className+'" colspan="8" style="padding: 0px;">','    <table id="{BASEID}.DATEPICKER.MONTHTABLE" cellspacing="0" cellpadding="2" style="width: 100%; height: 100%;">','     <tr>','      <td style="width:33%"><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.0" class="'+this.navigator.panel.item.className+'">'+this.months[0]+'</a></td>','      <td style="width:34%"><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.1" class="'+this.navigator.panel.item.className+'">'+this.months[1]+'</a></td>','      <td style="width:33%"><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.2" class="'+this.navigator.panel.item.className+'">'+this.months[2]+'</a></td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.3" class="'+this.navigator.panel.item.className+'">'+this.months[3]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.4" class="'+this.navigator.panel.item.className+'">'+this.months[4]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.5" class="'+this.navigator.panel.item.className+'">'+this.months[5]+'</a></td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.6" class="'+this.navigator.panel.item.className+'">'+this.months[6]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.7" class="'+this.navigator.panel.item.className+'">'+this.months[7]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.8" class="'+this.navigator.panel.item.className+'">'+this.months[8]+'</a></td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.9" class="'+this.navigator.panel.item.className+'">'+this.months[9]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.10" class="'+this.navigator.panel.item.className+'">'+this.months[10]+'</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.MONTH.11" class="'+this.navigator.panel.item.className+'">'+this.months[11]+'</a></td>','     </tr>','    </table>','   </td>','  </tr>',' </tbody>',' <tbody id="{BASEID}.DATEPICKER.YEARPANE" style="display: none;">','  <tr>','   <td class="'+this.navigator.panel.className+'" colspan="8" style="padding: 0px;">','    <table id="{BASEID}.DATEPICKER.YEARTABLE" cellspacing="0" cellpadding="2" style="width: 100%; height: 100%;">','     <tr>','      <td colspan="4" align="center">','       <input id="{BASEID}.DATEPICKER.YEAR.INPUT" size="4" class="'+this.navigator.panel.edit.className+'" style="text-align: center;" />','      </td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.PREVDEC" class="'+this.navigator.panel.item.className+'">&laquo;</a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.0" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.1" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.2" class="'+this.navigator.panel.item.className+'"></a></td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.3" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.4" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.5" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.6" class="'+this.navigator.panel.item.className+'"></a></td>','     </tr>','     <tr>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.7" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.8" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.9" class="'+this.navigator.panel.item.className+'"></a></td>','      <td><a href="#" tabindex="-1" id="{BASEID}.DATEPICKER.YEAR.NEXTDEC" class="'+this.navigator.panel.item.className+'">&raquo;</a></td>','     </tr>','    </table>','   </td>','  </tr>',' </tbody>','</table>']);html=html.join('\n');html=$u.s.tran(html,'{BASEID}',this.contId);$(this.contId).innerHTML=html;if(this.navigator.header.todayButton.show){var ele=document.createElement('a');ele.href='#';ele.tabIndex='-1';ele.id=this.contId+'.DATEPICKER.TODAYBUTTON';ele.className=this.navigator.header.item.className;ele.title=this.navigator.header.todayButton.tip;ele.innerHTML=this.navigator.header.todayButton.html;var tempEle=$(this.contId+'.DATEPICKER.TITLE');if(this.navigator.header.todayButton.location=='center'){tempEle=$(this.contId+'.DATEPICKER.MONTHYEARBUTTONS');tempEle.appendChild(document.createTextNode(' - '));tempEle.appendChild(ele);}else if(this.navigator.header.todayButton.location=='left'){$ss(ele,'float: left;');tempEle.insertBefore(ele,$(this.contId+'.DATEPICKER.NEXTBUTTON'));}else{$ss(ele,'float: right;');tempEle.insertBefore(ele,$(this.contId+'.DATEPICKER.MONTHYEARBUTTONS'));}
$e.add(ele,A5.d.evnts.click,this._todayButton,this,true);$e.add(ele,'click',function(e){$e.preventDefault(e);return false;});if(!A5.flags.isMobile){$e.add(ele,'mouseover',this._nmOver,this);$e.add(ele,'mouseout',this._nmOut,this);}}
var tEle=$(this.contId+'.DATEPICKER');if(typeof this.style=='object'||typeof this.style=='string')$ss(tEle,this.style);$e.add(tEle,'contextmenu',this._rClick,this);var eles=$(this.contId+'.DATEPICKER.DATEPANE').getElementsByTagName('a');$e.add(eles,A5.d.evnts.click,this._dClick,this);$e.add(eles,'click',function(e){$e.preventDefault(e);return false;});if(!A5.flags.isMobile){$e.add(eles,'mouseover',this._mOver,this);$e.add(eles,'mouseout',this._mOut,this);}
$e.add(eles,'contextmenu',this._rClick,this);if(typeof this.calendar.date.item.style=='object'||typeof this.calendar.date.item.style=='string')$ss(eles,this.calendar.date.item.style);if(typeof this.calendar.date.style=='object'||typeof this.calendar.date.style=='string'){for(var i=2;i<8;i++){for(var j=1;j<8;j++){$ss(tEle.rows[i].cells[j],this.calendar.date.style);if(cellWidth!='')tEle.rows[i].cells[j].style.width=cellWidth;}}}
if(typeof this.calendar.daysOfWeek.style=='object'||typeof this.calendar.daysOfWeek.style=='string'){for(var j=1;j<8;j++){$ss(tEle.rows[1].cells[j],this.calendar.daysOfWeek.style);if(this.calendar.daysOfWeek.show)tEle.rows[2].cells[j].style.display='';else tEle.rows[1].cells[j].style.display='none';}}
if(typeof this.calendar.weeksOfYear.style=='object'||typeof this.calendar.weeksOfYear.style=='string'){for(var i=1;i<8;i++){$ss(tEle.rows[i].cells[0],this.calendar.weeksOfYear.style);if(i==1){if(this.calendar.daysOfWeek.show&&this.calendar.weeksOfYear.show)tEle.rows[i].cells[0].style.display='';else tEle.rows[i].cells[0].style.display='none';}else{if(this.calendar.weeksOfYear.show)tEle.rows[i].cells[0].style.display='';else tEle.rows[i].cells[0].style.display='none';}}}
eles=$(this.contId+'.DATEPICKER.MONTHPANE').getElementsByTagName('a');if(!A5.flags.isMobile){$e.add(eles,'mouseover',this._mOver,this);$e.add(eles,'mouseout',this._mOut,this);}
$e.add(eles,'contextmenu',this._rClick,this);if(typeof this.navigator.panel.item.style=='object'||typeof this.navigator.panel.item.style=='string')$ss(eles,this.navigator.panel.item.style);eles=$(this.contId+'.DATEPICKER.YEARPANE').getElementsByTagName('a');if(!A5.flags.isMobile){$e.add(eles,'mouseover',this._mOver,this);$e.add(eles,'mouseout',this._mOut,this);}
$e.add(eles,'contextmenu',this._rClick,this);if(typeof this.navigator.panel.item.style=='object'||typeof this.navigator.panel.item.style=='string')$ss(eles,this.navigator.panel.item.style);if(typeof this.navigator.panel.edit.style=='object'||typeof this.navigator.panel.edit.style=='string')$ss(this.contId+'.DATEPICKER.YEAR.INPUT',this.navigator.panel.edit.style);$e.add(this.contId+'.DATEPICKER.MONTH',A5.d.evnts.click,this._monthPane,this,true);$e.add(this.contId+'.DATEPICKER.MONTH','click',function(e){$e.preventDefault(e);return false;});$e.add(this.contId+'.DATEPICKER.YEAR',A5.d.evnts.click,this._yearPane,this,true);$e.add(this.contId+'.DATEPICKER.YEAR','click',function(e){$e.preventDefault(e);return false;});if(!A5.flags.isMobile){$e.add([this.contId+'.DATEPICKER.MONTH',this.contId+'.DATEPICKER.YEAR'],'mouseover',this._nmOver,this);$e.add([this.contId+'.DATEPICKER.MONTH',this.contId+'.DATEPICKER.YEAR'],'mouseout',this._nmOut,this);}
$e.add(this.contId+'.DATEPICKER.PREVBUTTON',A5.d.evnts.click,this._prevButton,this,true);$e.add(this.contId+'.DATEPICKER.PREVBUTTON','click',function(e){$e.preventDefault(e);return false;});$e.add(this.contId+'.DATEPICKER.NEXTBUTTON',A5.d.evnts.click,this._nextButton,this,true);$e.add(this.contId+'.DATEPICKER.NEXTBUTTON','click',function(e){$e.preventDefault(e);return false;});if(typeof this.navigator.header.style=='object'||typeof this.navigator.header.style=='string')$ss(this.contId+'.DATEPICKER.TITLE',this.navigator.header.style);if(typeof this.navigator.panel.style=='object'||typeof this.navigator.panel.style=='string'){$ss($(this.contId+'.DATEPICKER.MONTHPANE').rows[0].cells[0],this.navigator.panel.style);$ss($(this.contId+'.DATEPICKER.YEARPANE').rows[0].cells[0],this.navigator.panel.style);}
$e.add(this.contId+'.DATEPICKER.YEAR.INPUT','keypress',this._inputYear,this);$e.add(this.contId+'.DATEPICKER.YEAR.INPUTCOMMIT',A5.d.evnts.click,this._inputYear,this);$e.add(this.contId+'.DATEPICKER.YEAR.INPUTCOMMIT','click',function(e){$e.preventDefault(e);return false;});$e.add([this.contId+'.DATEPICKER.MONTH.0',this.contId+'.DATEPICKER.MONTH.1',this.contId+'.DATEPICKER.MONTH.2',this.contId+'.DATEPICKER.MONTH.3',this.contId+'.DATEPICKER.MONTH.4',this.contId+'.DATEPICKER.MONTH.5',this.contId+'.DATEPICKER.MONTH.6',this.contId+'.DATEPICKER.MONTH.7',this.contId+'.DATEPICKER.MONTH.8',this.contId+'.DATEPICKER.MONTH.9',this.contId+'.DATEPICKER.MONTH.10',this.contId+'.DATEPICKER.MONTH.11'],A5.d.evnts.click,this._monthClick,this);$e.add([this.contId+'.DATEPICKER.MONTH.0',this.contId+'.DATEPICKER.MONTH.1',this.contId+'.DATEPICKER.MONTH.2',this.contId+'.DATEPICKER.MONTH.3',this.contId+'.DATEPICKER.MONTH.4',this.contId+'.DATEPICKER.MONTH.5',this.contId+'.DATEPICKER.MONTH.6',this.contId+'.DATEPICKER.MONTH.7',this.contId+'.DATEPICKER.MONTH.8',this.contId+'.DATEPICKER.MONTH.9',this.contId+'.DATEPICKER.MONTH.10',this.contId+'.DATEPICKER.MONTH.11'],'click',function(e){$e.preventDefault(e);return false;});$e.add([this.contId+'.DATEPICKER.YEAR.0',this.contId+'.DATEPICKER.YEAR.1',this.contId+'.DATEPICKER.YEAR.2',this.contId+'.DATEPICKER.YEAR.3',this.contId+'.DATEPICKER.YEAR.4',this.contId+'.DATEPICKER.YEAR.5',this.contId+'.DATEPICKER.YEAR.6',this.contId+'.DATEPICKER.YEAR.7',this.contId+'.DATEPICKER.YEAR.8',this.contId+'.DATEPICKER.YEAR.9'],A5.d.evnts.click,this._yearClick,this);$e.add([this.contId+'.DATEPICKER.YEAR.0',this.contId+'.DATEPICKER.YEAR.1',this.contId+'.DATEPICKER.YEAR.2',this.contId+'.DATEPICKER.YEAR.3',this.contId+'.DATEPICKER.YEAR.4',this.contId+'.DATEPICKER.YEAR.5',this.contId+'.DATEPICKER.YEAR.6',this.contId+'.DATEPICKER.YEAR.7',this.contId+'.DATEPICKER.YEAR.8',this.contId+'.DATEPICKER.YEAR.9'],'click',function(e){$e.preventDefault(e);return false;});$e.add(this.contId+'.DATEPICKER.YEAR.PREVDEC',A5.d.evnts.click,this._prevDecade,this);$e.add(this.contId+'.DATEPICKER.YEAR.PREVDEC','click',function(e){$e.preventDefault(e);return false;});$e.add(this.contId+'.DATEPICKER.YEAR.NEXTDEC',A5.d.evnts.click,this._nextDecade,this);$e.add(this.contId+'.DATEPICKER.YEAR.NEXTDEC','click',function(e){$e.preventDefault(e);return false;});this.refresh();}}
A5.TimePicker=Class.create();A5.TimePicker.prototype={initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{override:'base',inputId:'',format:'h:0m am',switchYear:50,time:0,hours:0,minutes:0,seconds:0,className:'',disabledClassName:'',style:0,edit:{className:'',buttonClassName:'',buttonImage:'',menu:{hourColumns:12,minuteColumns:10,secondColumns:10}},meridianClassName:'',mouseWheelEdit:true,selectionRequired:false,disabled:false,onRightClick:0,onChange:0,onHourChange:0,onMinuteChange:0,onSecondChange:0});if(typeof A5._timePickerDefaults!='undefined')$u.o.assign(this,A5._timePickerDefaults);if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'timePicker');this.edit.menu.theme=settings.theme.split(':').shift();}
$u.o.assign(this,settings);A5.overrides.assign(this,'timePicker',this.override);$u.o.assign(this.edit.menu,{iconColumn:{show:false},_onSelect:this.onSelect,onClick:function(){$(this._targetId).focus();var val='';var idArr=this._targetId.split('.');var idType=idArr.pop();if(idType=='H')val=this.getValue('hours');else if(idType=='M')val=this.getValue('minutes');else if(idType=='S')val=this.getValue('seconds');if(idType=='H'){if((val.toUpperCase().search('PM')!=-1&&$u.s.toNum(val)!=12)||(val.toUpperCase().search('AM')!=-1&&$u.s.toNum(val)==12))val=$u.s.toNum(val)+12;else val=$u.s.toNum(val);if(val==24)val=0;if(this._hasMeridian){if(val>=12){$svs(idArr.join('.')+'.A','PM');val=val-12;}else $svs(idArr.join('.')+'.A','AM');}}
$svs(this._targetId,val);$e.execute(this._targetId,'change');}});var tempDate=new Date();this._parsedFormat=tempDate._parseFormat(this.format);if(this.time.constructor!=Date){if(typeof this.time=='string'){tempDate.fromFormat(this.time,this._parsedFormat,this.switchYear);this.time=tempDate;}else this.time=new Date();}
this._initRender();if(this.disabled)this.setDisabled(true);this._menu=new A5.Menu([{type:'radio-group',columns:this.edit.menu.hourColumns,name:'hours',variable:'hours',data:this._getHours()},{type:'radio-group',columns:this.edit.menu.minuteColumns,name:'minutes',variable:'minutes',data:this._getMinutes()},{type:'radio-group',columns:this.edit.menu.secondColumns,name:'seconds',variable:'seconds',data:this._getSeconds()}],this.edit.menu);},refresh:function(){var hour=this.time.getHours();var min=this.time.getMinutes();var sec=this.time.getSeconds();var mer='AM';if(this._parsedFormat.hasMeridian&&hour>=12){hour=hour-12;if(hour==0)hour=12;mer='PM';}else if(this._parsedFormat.hasMeridian&&hour==0){hour=12;}
if(min<10)min='0'+min;else min=''+min;if(sec<10)sec='0'+sec;else sec=''+sec;hour=''+hour;$svs(this.contId+'.H',hour);$svs(this.contId+'.M',min);$svs(this.contId+'.S',sec);$svs(this.contId+'.A',mer);},setDisabled:function(val){if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);if($(this.contId+'.H'))$(this.contId+'.H').disabled=val;if($(this.contId+'.M'))$(this.contId+'.M').disabled=val;if($(this.contId+'.S'))$(this.contId+'.S').disabled=val;this.disabled=val;},setValue:function(time){if(time.constructor!=Date){if(typeof time=='string'){var tempDate=new Date();tempDate.fromFormat(time,this._parsedFormat,this.switchYear);this.time=tempDate;}}else this.time=time;this.refresh();},_getHours:function(){if(this.disabled)return false;var data=new Array();if(this.hours.constructor==Array)data=this.hours;else if(this.hours.constructor==Function)data=this.hours(this.time);else{var set=1;if(typeof this.hours=='number')step=Math.max(this.hours,1);if(this._parsedFormat.hasMeridian){for(var i=0;i<24;i=i+step){if(i==0)data.push('12am');else if(i<12)data.push(i+'am');else if(i==12)data.push('12pm');else data.push((i-12)+'pm');}}else{for(var i=0;i<24;i=i+step)data.push(''+i);}}
return data;},_getMinutes:function(){if(this.disabled)return false;var data=new Array();if(this.minutes.constructor==Array)data=this.minutes;else if(this.minutes.constructor==Function)data=this.minutes(this.time);else{var step=1;if(typeof this.minutes=='number')step=Math.max(this.minutes,1);for(var i=0;i<60;i=i+step){if(i<10)data.push('0'+i);else data.push(''+i);}}
return data;},_getSeconds:function(){if(this.disabled)return false;var data=new Array();if(this.seconds.constructor==Array)data=this.seconds;else if(this.seconds.constructor==Function)data=this.seconds(this.time);else{var step=1;if(typeof this.seconds=='number')step=Math.max(this.seconds,1);for(var i=0;i<60;i=i+step){if(i<10)data.push('0'+i);else data.push(''+i);}}
return data;},_eScroll:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;var delta=false;if(e.wheelDelta)delta=e.wheelDelta/120;else if(e.detail)delta=-e.detail/3;if(delta){var type=this.id.split('.').pop();if(type=='H')var data=classInst._getHours();else if(type=='M')var data=classInst._getMinutes();else if(type=='S')var data=classInst._getSeconds();var tData=new Array();var tVal=this.value;for(var i=0;i<data.length;i++)tData.push(String(data[i]).toUpperCase());var indx=$u.a.find(tData,tVal);if(indx==-1&&type=='H'&&classInst._parsedFormat.hasMeridian){tVal=tVal+$gvs(classInst.contId+'.A');indx=$u.a.find(tData,tVal);}else if(indx==-1){for(var i=0;i<tData.length;i++)tData[i]=$u.s.toNum(''+tData[i]);indx=$u.a.find(tData,$u.s.toNum(tVal));}
if(indx!=-1){indx=$u.a.find(tData,tVal);indx=indx+delta;if(indx>data.length-1)indx=0;else if(indx<0)indx=data.length-1;}else indx=0;var val=data[indx]
if(type=='H'){if(val.toUpperCase().search('PM')!=-1)val=$u.s.toNum(val)+12;else val=$u.s.toNum(val);if(classInst._parsedFormat.hasMeridian){if(val>=12){val=val-12;if(val==0)val=12;$svs(classInst.contId+'.A','PM');}else if(val==0){val=12;$svs(classInst.contId+'.A','AM');}else $svs(classInst.contId+'.A','AM');}}else{val=$u.s.toNum(val);if(val<10)val='0'+val;}
this.value=val;$e.execute(this,'change');}
return false;},_eChange:function(e,classInst){var type=this.id.split('.').pop();if(type=='H'){if(classInst._parsedFormat.hasMeridian){var hour=Number(this.value);if($gvs(classInst.contId+'.A')=='PM'&&hour!=12)hour=hour+12;classInst.time.setHours(hour);var mer='AM';if(hour==24)hor=0
if(hour>=12){hour=hour-12;if(hour==0)hour=12;mer='PM';}else if(hour==0)hour=12;$svs(classInst.contId+'.H',''+hour);$svs(classInst.contId+'.A',''+mer);}else classInst.time.setHours(this.value);}else if(type=='M')classInst.time.setMinutes(this.value);else if(type=='S')classInst.time.setSeconds(this.value);if($(classInst.inputId)){$svs(classInst.inputId,classInst.time.toFormat(classInst._parsedFormat));$e.execute(classInst.inputId,'change');}
if(type=='H'){if(classInst.onHourChange.constructor==Function)classInst.onHourChange(classInst.time);if(classInst.onChange.constructor==Function)classInst.onChange(classInst.time);}else if(type=='M'){if(classInst.onMinuteChange.constructor==Function)classInst.onMinuteChange(classInst.time);if(classInst.onChange.constructor==Function)classInst.onChange(classInst.time);}else if(type=='S'){if(classInst.onSecondChange.constructor==Function)classInst.onSecondChange(classInst.time);if(classInst.onChange.constructor==Function)classInst.onChange(classInst.time);}},_ddShow:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;var type=this.id.split('.');type=type[type.length-2];classInst._menu.setDisplay('hours',false);classInst._menu.setDisplay('minutes',false);classInst._menu.setDisplay('seconds',false);if(type=='H'){classInst._menu.setDisplay('hours',true);var hour=classInst.time.getHours();if(classInst._parsedFormat.hasMeridian){if(hour==0||hour==24)classInst._menu.setValue('hours','12am');else if(hour==12)classInst._menu.setValue('hours','12pm');else if(hour<12)classInst._menu.setValue('hours',hour+'am');else classInst._menu.setValue('hours',(hour-12)+'pm');}else classInst._menu.setValue('hours',''+hour);}else if(type=='M'){classInst._menu.setDisplay('minutes',true);classInst._menu.setValue('minutes',$gvs(classInst.contId+'.M'));}else if(type=='S'){classInst._menu.setDisplay('seconds',true);classInst._menu.setValue('seconds',$gvs(classInst.contId+'.S'));}
classInst._menu._targetId=classInst.contId+'.'+type;classInst._menu._hasMeridian=classInst._parsedFormat.hasMeridian;classInst._menu.show('dropdown',this);return false;},_mClick:function(e,classInst){$e.stopEvent(e);if(classInst.disabled)return false;if(this.innerHTML=='AM')classInst.time.setHours(classInst.time.getHours()+12);else classInst.time.setHours(classInst.time.getHours()-12);classInst.refresh();if($(classInst.inputId)){$svs(classInst.inputId,classInst.time.toFormat(classInst._parsedFormat));$e.execute(classInst.inputId,'change');}
if(classInst.onHourChange.constructor==Function)classInst.onHourChange(classInst.time);if(classInst.onChange.constructor==Function)classInst.onChange(classInst.time);return false;},_rClick:function(e,classInstance){if(classInstance.disabled)return false;if(classInstance.onRightClick.constructor==Function){classInstance.onRightClick();$e.stopEvent(e);return false;}},_initRender:function(){var html=new Array();var roAttr='';if(this.selectionRequired)roAttr=' readonly="readonly"';html=html.concat(['<table id="'+this.contId+'.TABLE" class="'+this.className+'" style="direction: ltr;" border="0" cellspacing="0" cellpadding="0">',' <tr>','  <td><input id="'+this.contId+'.H" class="'+this.edit.className+'" size="2" maxlength="2"'+roAttr+' /></td>','  <td>:</td>','  <td><input id="'+this.contId+'.M" class="'+this.edit.className+'" size="2" maxlength="2"'+roAttr+' /></td>']);if(this._parsedFormat.secondsMode!='none'){html=html.concat(['  <td>:</td>','  <td><input id="'+this.contId+'.S" class="'+this.edit.className+'" size="2" maxlength="2" /></td>']);}
if(this._parsedFormat.hasMeridian)html.push('<td><div id="'+this.contId+'.A" class="'+this.meridianClassName+'">AM</div></td>');html=html.concat([' </tr>',' <tr>','  <td><div tabindex="-1" id="'+this.contId+'.H.DD" class="'+this.edit.buttonClassName+'" style="font: 0pt arial;">'+A5.u.icon.html(this.edit.buttonImage,'style="border: none;"')+'</div></td>','  <td style="font-size: 0px;"></td>','  <td><div tabindex="-1" id="'+this.contId+'.M.DD" class="'+this.edit.buttonClassName+'" style="font: 0pt arial;">'+A5.u.icon.html(this.edit.buttonImage,'style="border: none;"')+'</div></td>']);if(this._parsedFormat.secondsMode!='none'){html=html.concat(['  <td></td>','  <td><div tabindex="-1" id="'+this.contId+'.S.DD" class="'+this.edit.buttonClassName+'" style="font: 0pt arial;">'+A5.u.icon.html(this.edit.buttonImage,'style="border: none;"')+'</div></td>']);}
if(this._parsedFormat.hasMeridian)html.push('<td></td>');if(typeof this.style=='object'||typeof this.style=='string')$ss(this.contId+'.TABLE',this.style);html=html.concat([' </tr>','</table>']);var cEle=$(this.contId);cEle.innerHTML=html.join('\n');$e.add(cEle,'contextmenu',this._rClick,this);if(this.mouseWheelEdit){$e.add([this.contId+'.H',this.contId+'.M',this.contId+'.S'],'mousewheel',this._eScroll,this);$e.add([this.contId+'.H',this.contId+'.M',this.contId+'.S'],'DOMMouseScroll',this._eScroll,this);}
$e.add([this.contId+'.H',this.contId+'.M',this.contId+'.S'],'change',this._eChange,this);$e.add([this.contId+'.H.DD',this.contId+'.M.DD',this.contId+'.S.DD'],A5.d.evnts.click,this._ddShow,this);if(this._parsedFormat.hasMeridian)$e.add(this.contId+'.A',A5.d.evnts.click,this._mClick,this);this.refresh();}}
A5.DateTimePicker=Class.create();A5.DateTimePicker.prototype={initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{override:'base',inputId:'',format:'MM/dd/yyyy h:0m am',switchYear:50,date:0,combinedContainer:{layout:'time/date',className:''},disabled:false,datePicker:{disabledDates:{}},timePicker:{},onChange:0});if(typeof A5._dateTimePickerDefaults!='undefined')$u.o.assign(this,A5._dateTimePickerDefaults);if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'dateTimePicker');var tTheme=settings.theme.split(':').shift();this.datePicker.theme=tTheme;this.timePicker.theme=tTheme;}
$u.o.assign(this,settings);A5.overrides.assign(this,'dateTimePicker',this.override);var tempDate=new Date();this._parsedFormat=tempDate._parseFormat(this.format);var hasDate=this._parsedFormat.hasDate;var hasTime=this._parsedFormat.hasTime;if(this.date.constructor!=Date){if(typeof this.date=='string'){tempDate.fromFormat(this.date,this._parsedFormat,this.switchYear);this.date=tempDate;}else this.date=new Date();}
this.datePicker.date=this.date;this.datePicker.format=this.format;this.datePicker.switchYear=this.switchYear;this.datePicker.inputId=this.contId+'.DT';this.timePicker.time=this.date;this.timePicker.format=this.format;this.timePicker.switchYear=this.switchYear;this.timePicker.inputId=this.contId+'.DT';this.isCombined=false;if(hasDate&&hasTime){var tcHTML='<td id="'+this.contId+'.T" align="center" valign="center"></td>';var dcHTML='<td id="'+this.contId+'.D" align="center" valign="center"></td>';var cHTML=tcHTML+'</tr><tr>'+dcHTML;var cLayout=this.combinedContainer.layout.toLowerCase();if(cLayout=='time date')cHTML=tcHTML+dcHTML;else if(cLayout=='date time')cHTML=dcHTML+tcHTML;else if(cLayout=='date/time')cHTML=dcHTML+'</tr><tr>'+tcHTML;$(this.contId).innerHTML='<input type="hidden" id="'+this.contId+'.DT" /><table class="'+this.combinedContainer.className+'" cellspacing="0" cellpadding="2"><tr>'+cHTML+'</tr></table>';this._dp=new A5.DatePicker(this.contId+'.D',this.datePicker);this._tp=new A5.TimePicker(this.contId+'.T',this.timePicker);this.isCombined=true;}else if(hasDate){$(this.contId).innerHTML='<input type="hidden" id="'+this.contId+'.DT" /><div id="'+this.contId+'.D"></div>';this._dp=new A5.DatePicker(this.contId+'.D',this.datePicker);}else if(hasTime){$(this.contId).innerHTML='<input type="hidden" id="'+this.contId+'.DT" /><div id="'+this.contId+'.T"></div>';this._tp=new A5.TimePicker(this.contId+'.T',this.timePicker);}
$e.add(this.contId+'.DT','change',this._change,this,true);if(this.disabled)this.setDisabled(true);},setDisabled:function(val){if(this._dp)this._dp.setDisabled(val);if(this._tp)this._tp.setDisabled(val);this.disabled=val;},setValue:function(date){if(date.constructor!=Date){if(typeof date=='string'){var tempDate=new Date();if(date!='')tempDate.fromFormat(date,this._parsedFormat,this.switchYear);date=tempDate;}else return false;}
this.date=date;if(this._parsedFormat.hasDate)this._dp.setValue(date);if(this._parsedFormat.hasTime)this._tp.setValue(date);},refresh:function(){$u.o.assign(this._dp.disabledDates,this.datePicker.disabledDates);this._dp.refresh();},_change:function(){if($(this.inputId)){$svs(this.inputId,this.date.toFormat(this._parsedFormat));$e.execute(this.inputId,'change');}
if(this.onChange.constructor==Function)this.onChange.call(this,this.date.toFormat(this._parsedFormat));}}
A5.EditDateTime=Class.create(A5.Edit,{initialize:function(settings){$u.o.assign(this,{theme:'',override:'base',decouple:false,dateTime:{theme:''},window:{theme:'',type:'popup',location:'dropdown',autoGenerateButtons:true,title:{tools:{items:[]}},buttons:{items:[]}},container:{className:'',hoverClassName:'',focusClassName:'',pressedClassName:'',style:0,editClassName:'',separatorClassName:'',button:{html:'',className:'',hoverClassName:'',pressedClassName:''}},selectionRequired:false,onSelect:0,onNoSelect:0});if(typeof settings.theme!='undefined'){A5.themes.assign(this,settings.theme,'editButtonGroup');var tTheme=settings.theme.split(':').shift();if(this.window.theme=='')this.window.theme=tTheme+':dropdown';if(this.dateTime.theme=='')this.dateTime.theme=tTheme+':dropdown';}
$u.o.assign(this,settings);A5.overrides.assign(this,'editDateTime',this.override);var hasTCommit=false;var hasBCommit=false;for(var i=0;i<this.window.title.tools.items.length;i++){if(typeof this.window.title.tools.items[i].action!='undefined'){if(this.window.title.tools.items[i].action=='commit'){hasTCommit=true;break;}}}
if(this.window.autoGenerateButtons){this.window.buttons.items.push({html:'Close',action:'close'});this.window.buttons.items.push({html:'Done',action:'commit'});hasBCommit=true;}else{for(var i=0;i<this.window.buttons.items.length;i++){if(typeof this.window.buttons.items[i].action!='undefined'){if(this.window.buttons.items[i].action=='commit'){hasBCommit=true;break;}}}}
this._hasTCommit=hasTCommit;this._hasBCommit=hasBCommit;$u.o.assign(this.window,{decouple:this.decouple,title:{show:false},body:{content:{type:'blank'}},autoShow:false,autoPosition:false,_container:{focusClassName:this.container.focusClassName,pressedClassName:this.container.pressedClassName,button:{pressedClassName:this.container.button.pressedClassName}},_nsTO:0,_bcTO:0,_hasFocus:false,onShow:function(){clearTimeout(this._nsTO);clearTimeout(this._bcTO);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.pressedClassName!='')$acn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$acn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}},onHide:function(){if(!this._hasFocus)this._bcTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5blurcomplete\'); var t = 1'),100);var cEle=$(this._targetId+'.CONTAINER');if(cEle){if(this._container.focusClassName!=''&&!this._makeSelection)$rcn(cEle,this._container.focusClassName);if(this._container.pressedClassName!='')$rcn(cEle,this._container.pressedClassName);if(this._container.button.pressedClassName!='')$rcn($(this._targetId+'.BUTTON'),this._container.button.pressedClassName);}
if(!this._makeSelection&&!this._hasFocus)this._nsTO=setTimeout(Function('$e.execute(\''+this._targetId+'\',\'a5noselect\');'),100);this._makeSelection=false;}});$u.o.assign(this.dateTime,{decouple:this.decouple,onChange:function(){var ele=$(this._targetId)
if(!this.decouple)ele.focus();setTimeout(Function('$e.execute($(\''+this._targetId+'\'),\'a5datetimeselection\');'),1);}});this._editPrepare();this._value='';this._oldIPoint=0;},_createDropdown:function(){var win=new A5.Window(this.window);this._dateTime=new A5.DateTimePicker(win.getWindowId('body'),this.dateTime);this._dateTime._window=win;if(this._dateTime._parsedFormat.hasTime){if(this._hasTCommit)this._dateTime._window.setDisplay('title',true);if(this._hasBCommit)this._dateTime._window.setDisplay('buttons',true);this._dateTime.onChange=0;}else{if(this._hasTCommit)this._dateTime._window.setDisplay('title',false);if(this._hasBCommit)this._dateTime._window.setDisplay('buttons',false);}
this._dateTime._window.addAction('commit',function(){var ele=$(this._targetId);if(!this.decouple)ele.focus();$e.execute(ele,'a5datetimeselection');});},create:function(s){var useContainer=typeof arguments[1]!='undefined'?arguments[1]:true;var HTMLIEle=document.createElement('input');if(typeof s=='object'){if(typeof s.className!='undefined'){HTMLIEle.className=s.className;delete s.className;}
if(typeof s.style!='undefined'){$ss(HTMLIEle,s.style);delete s.style;}
for(var attr in s)$sa(HTMLIEle,attr,s[attr]);}
if(HTMLIEle.id=='')HTMLIEle.id=A5.u.getUniqueId();if(useContainer){var HTMLCEle=document.createElement('table');HTMLCEle.id=HTMLIEle.id+'.CONTAINER';HTMLCEle.cellPadding='0';HTMLCEle.cellSpacing='0';HTMLCEle.className=this.container.className;if(typeof this.container.style!='number')$ss(HTMLCEle,this.container.style);$ss(HTMLCEle,'display: inline-table; *display: inline;');HTMLCEle.insertRow(0);var cellIndx=0;HTMLCEle.rows[0].insertCell(cellIndx);HTMLIEle.className=this.container.editClassName;$ss(HTMLIEle,'width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');HTMLCEle.rows[0].cells[cellIndx].appendChild(HTMLIEle);cellIndx++;if(this.container.separatorClassName!=''){HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].innerHTML='&nbsp;';HTMLCEle.rows[0].cells[cellIndx].className=this.container.separatorClassName;cellIndx++;}
HTMLCEle.rows[0].insertCell(cellIndx);HTMLCEle.rows[0].cells[cellIndx].id=HTMLIEle.id+'.BUTTON';HTMLCEle.rows[0].cells[cellIndx].className=this.container.button.className;HTMLCEle.rows[0].cells[cellIndx].innerHTML=this.container.button.html;HTMLCEle.rows[0].cells[cellIndx].style.width='0%';document.documentElement.appendChild(HTMLCEle);this._bind(HTMLIEle);return HTMLCEle;}else{this._bind(HTMLIEle);return HTMLIEle;}},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++){if(ctrl[i].constructor==Array)this._bind(ctrl[i][0],ctrl[i][1]);else this._bind(ctrl[i]);}}else{this._bind(ctrl,arguments[1]);}},_bind:function(ele){var ele=$(ele);if($ga(ele,'A5ControlBound')=='true')return true;var eleId=ele.id!=''?ele.id:ele.name;var cEle=$(eleId+'.CONTAINER');if(!A5.flags.isMobile&&cEle&&this.container.hoverClassName!=''){$e.add(cEle,'mouseover',Function('$acn(this,\''+this.container.hoverClassName+'\')'));$e.add(cEle,'mouseout',Function('$rcn(this,\''+this.container.hoverClassName+'\')'));}
var bEleId=typeof arguments[1]!='undefined'?arguments[1]:'';var bEle=false;if(bEleId==''){if($(eleId+'.BUTTON'))bEle=$(eleId+'.BUTTON');}else bEle=$(bEleId);if(bEle){$sa(bEle,'A5TargetInput',eleId);$e.add(bEle,A5.d.evnts.click,this._bOnClick,this);if(!A5.flags.isMobile&&cEle&&this.container.button.hoverClassName){$e.add(bEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(bEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\')'));}}else $sa(ele,'A5HasButton','false');if(cEle&&this.container.button.hoverClassName){var bIndx=0;var cbEle=0;while($(eleId+'.CUSTOMBUTTON.'+bIndx)){cbEle=$(eleId+'.CUSTOMBUTTON.'+bIndx);$e.add(cbEle,A5.d.evnts.down,Function('$acn(this,\''+this.container.button.pressedClassName+'\')'));if(!A5.flags.isMobile){$e.add(cbEle,'mouseover',Function('$acn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $acn(this,\''+this.container.button.hoverClassName+'\')'));$e.add(cbEle,'mouseout',Function('$rcn(\''+eleId+'.CONTAINER\',\''+this.container.hoverClassName+'\'); $rcn(this,\''+this.container.button.hoverClassName+'\'); $rcn(this,\''+this.container.button.pressedClassName+'\')'));}
$e.add(cbEle,A5.d.evnts.up,Function('$rcn(this,\''+this.container.button.pressedClassName+'\')'));bIndx+=1;}}
$e.add(ele,'focus',this._focus,this);$e.add(ele,'blur',this._blur,this);$e.add(ele,'keydown',this._keyDown,this);$e.add(ele,'keyup',this._keyUp,this,true);$e.add(ele,'keypress',this._keyPress,this);$e.add(ele,A5.d.evnts.up,this._mUp,this);$e.add(ele,'a5datetimeselection',this._dtSelection,this);$e.add(ele,'a5noselect',this._noSelect,this);$e.add(ele,'a5blurcomplete',this._blurComp,this);if(this.selectionRequired)ele.readOnly=true;this._editBind(ele);$sa(ele,'A5ControlBound','true');},_focus:function(e,classInst){if(!classInst._dateTime)classInst._createDropdown();classInst._dateTime._window._hasFocus=true;classInst._editFocus(e,this);clearTimeout(classInst._dateTime._window._bcTO);if(classInst._targetId!=this.id){var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;classInst._targetId=this.id;classInst._dateTime._targetId=classInst._targetId;classInst._dateTime._window._targetId=classInst._targetId;classInst._initValue=$gvs(this);}else clearTimeout(classInst._dateTime._window._nsTO);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!='')$acn(cEle,classInst.container.focusClassName);},_blur:function(e,classInst){if(classInst.selectionRequired){var val=$gvs(this);if(val!=classInst._initValue&&val!='')$svs(this,classInst._initValue);}
if(classInst._dateTime._window.hidden&&this.value!=classInst._initValue)classInst._dateTime._window._nsTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5noselect\');'),100);classInst._dateTime._window._hasFocus=false;classInst._editBlur(e,this);var cEle=$(classInst._targetId+'.CONTAINER');if(cEle&&classInst.container.focusClassName!=''&&classInst._dateTime._window.hidden)$rcn(cEle,classInst.container.focusClassName);if(classInst._dateTime._window.hidden)classInst._dateTime._window._bcTO=setTimeout(Function('$e.execute(\''+this.id+'\',\'a5blurcomplete\');'),100);},_blurComp:function(e,classInst){if(classInst._dateTime._window.hidden){classInst._targetId='';classInst._dateTime._targetId='';classInst._dateTime._window._targetId='';}},_mUp:function(e,classInst){if(!classInst._dateTime)classInst._createDropdown();var sel=A5.edit.getSelection(this);classInst._oldIPoint=sel.start;if($ga(this,'A5HasButton')=='false'||classInst.selectionRequired){if(this.disabled)return false;if(classInst._targetId!=this.id){classInst._targetId=this.id;classInst._dateTime._targetId=classInst._targetId;classInst._dateTime._window._targetId=classInst._targetId;classInst._initValue=$gvs(this.id);}
var ele=this;setTimeout(function(){classInst._showDTP(ele);},0);}},_bOnClick:function(e,classInst){if(!classInst._dateTime)classInst._createDropdown();$e.stopEvent(e);var tEleId=$ga(this,'A5TargetInput');var ele=$(tEleId);if(ele.disabled)return false;if(classInst.decouple)classInst._oldIPoint=0;else{ele.focus();var sel=A5.edit.getSelection(ele);classInst._oldIPoint=sel.start;}
classInst._targetId=tEleId;classInst._dateTime._targetId=classInst._targetId;classInst._dateTime._window._targetId=classInst._targetId;classInst._initValue=$gvs(ele);setTimeout(function(){classInst._showDTP(ele);},0);return false;},_keyUp:function(e){if(this.decouple)return;var keyCode=e.charCode||e.keyCode;if(keyCode==36||keyCode==35||keyCode==37||keyCode==39){var sel=A5.edit.getSelection($(this._targetId));this._oldIPoint=sel.start;}else if((keyCode==8||keyCode==46)&&this.selectionRequired){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var offset=data.vals[data.selIndx].offset;var oldLen=data.vals.length;if(data.sel.length==0){if(keyCode==8&&data.sel.start!=0){if(data.vals.length-1==data.selIndx&&data.vals[data.selIndx].val==''){data.vals.splice(data.selIndx,1);if(data.selIndx>0)data.vals[data.selIndx-1].sep='';}else{if(data.vals[data.selIndx].offset==data.sel.start&&data.selIndx>0)data.selIndx--;else if(data.selIndx>0&&data.vals[data.selIndx].sep!=''&&!data.inSep){data.vals[data.selIndx-1].sep=data.vals[data.selIndx].sep;offset=data.vals[data.selIndx-1].offset+data.vals[data.selIndx-1].val.length;}else offset=data.vals[data.selIndx].offset;data.vals.splice(data.selIndx,1);}}else if(keyCode==46&&data.sel.start!=ele.value.length){if(data.inSep&&data.vals[data.selIndx].sep!=''){offset=offset+data.vals[data.selIndx].val.length;if(data.vals.length-1==data.selIndx)data.vals[data.selIndx].sep='';else{data.vals[data.selIndx].sep=data.vals[data.selIndx+1].sep;data.vals.splice(data.selIndx+1,1);}}else data.vals.splice(data.selIndx,1);}}else{for(var i=data.vals.length-1;i>=0;i--){if(data.vals[i].offset+data.vals[i].val.length>=data.sel.start&&data.vals[i].offset<=data.sel.end){offset=data.vals[i].offset;data.vals.splice(i,1);}}}
if(oldLen!=data.vals.length&&this._multi.auto.persist){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++){data.vals[i].sep=this.multiple.auto.separator.call(this,oldSeps);oldSeps.push(data.vals[i].sep);}}else{for(var i=0;i<data.vals.length-1;i++)data.vals[i].sep=this.multiple.auto.separator;}}
ele.value=this._editValJoin(data);this._initValue=ele.value;this._oldIPoint=offset;A5.edit.setSelection(ele,offset);}},_keyPress:function(e,classInst){if(classInst.decouple)return;if(classInst.selectionRequired){var keyCode=0;if(typeof e.which=='number')keyCode=e.which;else if(typeof e.charCode=='number')keyCode=e.charCode;else keyCode=e.keyCode;if(keyCode!=9&&e.keyCode!=37&&e.keyCode!=39)$e.stopEvent(e);if(keyCode==8||keyCode==9||keyCode==13||keyCode==27)keyCode=0;if(keyCode!=0&&!e.ctrlKey&&!e.altKey){keyCode=String.fromCharCode(keyCode).toLowerCase();var data=classInst._editValSplit(this,true);var aVal=data.vals[data.selIndx];if(aVal.val!=''){if(!classInst._multi.auto.persist){classInst._multi.keyBuffer+=keyCode;var sLen=classInst._multi.keyBuffer.length;var sMat=new Array();for(var i=0;i<classInst._multi.sep.length;i++)if(classInst._multi.sep[i].substr(0,sLen).toLowerCase()==classInst._multi.keyBuffer)sMat.push(i);if(sMat.length==1){aVal.sep=classInst._multi.sep[sMat[0]];if(classInst.format.showMask&&data.vals.length-1==data.selIndx)data.vals.push({val:classInst.format._pMask.blankValue,sep:'',offset:0});this.value=classInst._editValJoin(data);classInst._initValue=this.value;A5.edit.setSelection(this,aVal.offset+aVal.val.length+aVal.sep.length);classInst._multi.keyBuffer='';}else if(sMat.length==0)classInst._multi.keyBuffer='';}else if(data.selIndx==data.vals.length-1&&aVal.sep==''){classInst._oldIPoint=classInst.insertValue(aVal.val,true);classInst._initValue=this.value;}}}}else classInst._editKeyPress(e,this);},_showDTP:function(ele){if(!this._dateTime)this._createDropdown();this._targetId=ele.id;this._dateTime._targetId=ele.id;this._initValue=$gvs(ele);var data=this._editValSplit(ele,true);this._dateTime.setValue(data.vals[data.selIndx].val);this._dateTime._window.hide();var cEle=$(this._targetId+'.CONTAINER');if(this.window.location.constructor==Array){if(!this._dateTime._window.hidden)this._dateTime._window.setPosition.apply(this._dateTime._window,this.window.location);else this._dateTime._window.show.apply(this._dateTime._window,this.window.location);}else{if(!this._dateTime._window.hidden)this._dateTime._window.setPosition(this.window.location,$if(cEle,cEle,this._targetId));else this._dateTime._window.show(this.window.location,$if(cEle,cEle,this._targetId));}},_dtSelection:function(e,classInst){if(classInst._dateTime.date.getDate!=0){var ele=$(classInst._targetId);if(classInst.decouple)classInst._editClearWatermark(ele);else A5.edit.setSelection(ele,classInst._oldIPoint);classInst._setValue(classInst._dateTime.date.toFormat(classInst._dateTime._parsedFormat),true);classInst._initValue=ele.value;if(classInst.onSelect.constructor==Function)classInst.onSelect.call(ele,classInst._dateTime.date.toFormat(classInst._dateTime._parsedFormat),classInst);}
classInst._dateTime._window._makeSelection=true;classInst._dateTime._window.hide();},_noSelect:function(e,classInst){clearTimeout(classInst._dateTime._window._nsTO);classInst._targetId='';classInst._dateTime._targetId='';classInst._dateTime._window._targetId='';if(classInst.onNoSelect.constructor==Function){classInst.onNoSelect.call(this,classInst);}},_setValue:function(val,commit){var ele=$(this._targetId);var data=this._editValSplit(ele,true);var aVal=data.vals[data.selIndx];aVal.val=val;var offset=aVal.offset+val.length;if(commit&&this._multi.auto.separate&&data.selIndx==data.vals.length-1){if(this.multiple.auto.separator.constructor==Function){var oldSeps=new Array();for(var i=0;i<data.vals.length-1;i++)oldSeps.push(data.vals[i].sep);aVal.sep=this.multiple.auto.separator.call(this,oldSeps);}else aVal.sep=this.multiple.auto.separator;offset=offset+aVal.sep.length;if(this.format.showMask)data.vals.push({val:this.format._pMask.blankValue,sep:'',offset:0});}
ele.value=this._editValJoin(data);this._oldIPoint=offset;if(this.decouple)A5.edit.setSelection(ele,offset);}});A5.commandHandler={_o:{},create:function(id,obj,settings){$u.o.assign(settings,{onAction:0,onSetProperty:0},true)
this._o[id]={o:obj,s:settings};},get:function(id){if(typeof this._o[id]!='undefined')return this._o[id].o;},action:function(id,action){if(typeof this._o[id]!='undefined'){if(this._o[id].s.onAction.constructor==Function)this._o[id].s.onAction.call(this._o[id].o,action);}},setProperty:function(id,prop,value){if(typeof this._o[id]!='undefined'){this._o[id][prop]=value;if(this._o[id].s.onSetProperty.constructor==Function)this._o[id].s.onSetProperty.call(this._o[id].o,prop);}},getProperty:function(id,prop){if(typeof this._o[id]!='undefined'){return this._o[id][prop];}
return null;}}
A5.Toolbar=Class.create();A5.Toolbar.prototype={initialize:function(contId,data,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',style:0,className:'',globalProperties:{}});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'toolbar');$u.o.assign(this,settings);A5.overrides.assign(this,'toolbar',this.override);this.data=data;this.render();},getControl:function(name){for(var i=0;i<this.data.length;i++){if(typeof this.data[i]=='object'){if(this.data[i].name==name)return this.data[i];}}
return false;},render:function(){var cEle=$(this.contId);cEle.className=this.className;if(typeof this.style=='string')$ss(cEle,$gs(cEle)+this.style);for(var i=0;i<this.data.length;i++){if(typeof this.data[i].create!='undefined'){$u.o.assign(this.data[i],this.globalProperties,true);if(typeof this.data[i].createDefaults!='undefined')var ele=this.data[i].create(this.data[i].createDefaults);else var ele=this.data[i].create();cEle.appendChild(ele);}else if(this.data[i]=='-'){cEle.appendChild(document.createTextNode(' | '));}else if(typeof this.data[i]=='string'){var ele=document.createElement('span');ele.innerHTML=this.data[i];cEle.appendChild(ele);}}}}
A5.HTMLEditor=Class.create();A5.HTMLEditor.prototype={initialize:function(ctrlId,settings){if(!$(ctrlId)||$ga(ctrlId,'A5ISHTMLEDITOR')=='true')return false;this.ctrlId=ctrlId;this._htmlEdId='A5HTMLEDITOR'+this._htmlEdIndx[0];this._htmlEdIndx[0]++;$u.o.assign(settings,{theme:'',override:'base',toolbar:{items:[],settings:{}},data:{className:[],font:[],format:[{value:'Normal',html:'<p style="margin: 0px;">Normal</p>',tag:'p'},{value:'Heading 1',html:'<h1 style="margin: 0px;">Heading 1</h1>',tag:'h1'},{value:'Heading 2',html:'<h2 style="margin: 0px;">Heading 2</h2>',tag:'h2'},{value:'Heading 3',html:'<h3 style="margin: 0px;">Heading 3</h3>',tag:'h3'},{value:'Heading 4',html:'<h4 style="margin: 0px;">Heading 4</h4>',tag:'h4'},{value:'Heading 5',html:'<h5 style="margin: 0px;">Heading 5</h5>',tag:'h5'},{value:'Heading 6',html:'<h6 style="margin: 0px;">Heading 6</h6>',tag:'h6'},{value:'Formatted',html:'<pre style="margin: 0px;">Formatted</pre>',tag:'pre'},{value:'Address',html:'<address style="margin: 0px;">Address</address>',tag:'address'}]},classNames:[],styleSheets:{css:'',linked:''},insert:{image:{allow:false,relativePath:'',styleName:'',titleText:'Insert Image',bodyText:'File:',editWatermarkText:'',editImage:'',data:''},file:{allow:false,relativePath:'',styleName:'',titleText:'Insert File',bodyText:'File:',editWatermarkText:'',editImage:'',data:''},window:{}},icons:{bold:'images/$$format.font.bold.png.a5image',italic:'images/$$format.font.italic.png.a5image',underline:'images/$$format.font.line.under.png.a5image',strike:'images/$$format.font.line.through.png.a5image',superScript:'images/$$format.text.superScript.png.a5image',subScript:'images/$$format.text.subScript.png.a5image',color:'images/$$format.font.color.png.a5image',highlightColor:'images/$$format.text.hilite.color.png.a5image',backgroundColor:'images/$$format.background.color.png.a5image',justifyLeft:'images/$$format.justify.left.png.a5image',justifyCenter:'images/$$format.justify.center.png.a5image',justifyRight:'images/$$format.justify.right.png.a5image',justify:'images/$$format.justify.justified.png.a5image',outdent:'images/$$format.indent.out.png.a5image',indent:'images/$$format.indent.png.a5image',bulletedList:'images/$$format.list.bulleted.png.a5image',numberedList:'images/$$format.list.numbered.png.a5image',insertTable:'images/$$layout.table.png.a5image',insertLink:'images/$$control.html.link.png.a5image',insertImage:'images/$$control.image.png.a5image',insertFile:'images/$$file.open.png.a5image',insertSymbol:'images/$$generic.pilcrow.png.a5image',clearFormat:'images/$$edit.clear.png.a5image',toggleCodeView:'images/$$code.xml.tag.png.a5image',tableInsertRowBefore:'images/$$layout.table.row.insert.before.png.a5image',tableInsertRowAfter:'images/$$layout.table.row.insert.after.png.a5image',tableInsertColumnBefore:'images/$$layout.table.col.insert.before.png.a5image',tableInsertColumnAfter:'images/$$layout.table.col.insert.after.png.a5image',tableDeleteRow:'images/$$layout.table.row.remove.png.a5image',tableDeleteColumn:'images/$$layout.table.col.remove.png.a5image'},onFocus:0,onBlur:0,onStateChange:0,onChange:0},true);$u.o.assign(settings.insert.window,{theme:settings.theme,baseCtrlId:this.ctrlId,title:{html:'Insert',tools:{items:[]}},header:{show:false},body:{content:{type:'url',url:'about:blank'}},footer:{show:false},type:'modal',resize:'both',autoShow:false,autoPosition:true});$u.o.assign(this,settings);A5.overrides.assign(this,'htmlEditor',this.override);this._iWindow=new A5.Window(this.insert.window);$e.add(this._iWindow.getWindowId(),'a5insert',function(e,classInst){classInst._iWindow.hide();var insertType=$ga(this,'a5inserttype');if(insertType=='image'){var imageToInsert=$ga(this,'a5imagetoinsert');classInst.command('insertimage',imageToInsert);}else if(insertType=='file'){var fileToInsert=$ga(this,'a5filetoinsert');var fileToInsertShort=fileToInsert.split('/').pop();classInst._edInsertHTML('a',fileToInsertShort,{href:fileToInsert,target:'_blank'});}},this);this._iWindow.addTool(this._iWindow._defaultTools['close']);if(this.styleSheets.css.constructor==Array)this.styleSheets.css.join('\n');else if(this.styleSheets.css.constructor!=String)this.styleSheets.css='';this.styleSheets.css='table, td {border: 1px dashed #aaa;}'+this.styleSheets.css;A5.commandHandler.create(this._htmlEdId,this,{onAction:function(action){action=action.split(':');var aName=action[0];if(aName=='format'){var fArr=[];var fResArr=[];for(var i=0;i<this.data.format.length;i++){fArr.push(this.data.format[i].value);fResArr.push(this.data.format[i].tag);}
var fVal=$u.a.find(fArr,action[1]);if(fVal>-1){fVal=fResArr[fVal];this.command('formatblock','<'+fVal+'>');}}else if(aName=='fontName')this.command('fontName',action[1]);else if(aName=='fontSize')this.command('fontSize',action[1]);else if(aName=='getColor')this._colorMenu(action[1]);else if(aName=='getSymbol')this._symbolMenu();else if(aName=='setColor'){var aColor=action[2];if(aColor=='no-color')aColor='';if(action[1]=='fontColor')this.command('foreColor',aColor);else if(action[1]=='highlightColor')this.command('hilitecolor',aColor);else if(action[1]=='backgroundColor')this.command('backColor',aColor);}else if(aName=='tableMenu')this._tblMenu();else if(aName=='toggleDesignMode')this.toggleDesignMode();else if(aName=='hideMenus'){if(this._tMenu)this._tMenu.hide();if(this._cMenu)this._cMenu.hide();if(this._sMenu)this._sMenu.hide();var ctrlObj=this._tbObj.getControl('fontName');if(ctrlObj)ctrlObj._listbox._window.hide();ctrlObj=this._tbObj.getControl('fontSize');if(ctrlObj)ctrlObj._listbox._window.hide();ctrlObj=this._tbObj.getControl('format');if(ctrlObj)ctrlObj._listbox._window.hide();ctrlObj=this._tbObj.getControl('className');if(ctrlObj)ctrlObj._listbox._window.hide();}else if(aName=='insertHTML')this._edInsertHTML('',action[1]);else if(aName=='clearButtonState'){var ctrlObj=this._tbObj.getControl(action[1]);if(ctrlObj)ctrlObj.setState($(ctrlObj._buttonIds[0]),false);}else if(aName=='insert'){if(action[1]=='link'){var url=prompt('Link URL','');if(url!=null)this._edInsertHTML('a',url,{href:url});}else{if(action[1]=='image'){this._iWindow.setTitle(this.insert.image.titleText);this._iWindow.body.content.url='__a5FileUploadMasterPage.a5w?fileUploadUrl=__a5HTMLEditorFileInsertPage.a5w&fileUploadAutoUpload=true&fileUploadText='+this.insert.image.bodyText+'&fileSelectImg='+this.insert.image.editImage+'&fileBoxWaterMark='+this.insert.image.editWatermarkText+'&stylesheetName='+this.insert.image.styleName+'&insertType=image&relativePath='+this.insert.image.relativePath+'&windowID='+this._iWindow.getWindowId();if(this.insert.image.data!='')this._iWindow.body.content.url=this._iWindow.body.content.url+'&'+this.insert.image.data;}else{this._iWindow.setTitle(this.insert.file.titleText);this._iWindow.body.content.url='__a5FileUploadMasterPage.a5w?fileUploadUrl=__a5HTMLEditorFileInsertPage.a5w&fileUploadAutoUpload=true&fileUploadText='+this.insert.file.bodyText+'&fileSelectImg='+this.insert.file.editImage+'&fileBoxWaterMark='+this.insert.file.editWatermarkText+'&stylesheetName='+this.insert.file.styleName+'&insertType=file&relativePath='+this.insert.file.relativePath+'&windowID='+this._iWindow.getWindowId();if(this.insert.file.data!='')this._iWindow.body.content.url=this._iWindow.body.content.url+'&'+this.insert.file.data;}
this._iWindow.refresh();this._iWindow.show();}}else if(aName=='command'&&action.length==3)this.command(action[1],action[2]);else if(aName=='command')this.command(action[1]);}});var tEle=$(ctrlId);$sa(tEle,'A5ISHTMLEDITOR','true');var iEle=document.createElement('iframe');iEle.id=ctrlId+'.HTMLEDITOR';if(tEle.style.width!='')iEle.style.width=tEle.style.width;else iEle.style.width=tEle.offsetWidth+'px';if(tEle.style.height!='')iEle.style.height=tEle.style.height;else iEle.style.height=tEle.offsetHeight+'px';iEle.style.overflow='auto';iEle.frameBorder='0';iEle.border='0';iEle.className=tEle.className;tEle.parentNode.insertBefore(iEle,tEle);tEle.style.display='none';this._iEle=iEle;this._tEle=tEle;if(document.all&&navigator.appName!='Opera'){this._iEle.contentWindow.document.designMode='on';this._eDoc=this._iEle.contentWindow.document;$e.add(this._iEle.contentWindow,'focus',this._edFocus,this,true);$e.add(this._iEle.contentWindow,'blur',this._edBlur,this,true);$e.add(this._iEle.contentWindow,'contextmenu',function(e){$e.stopEvent(e);return false;});this.focus();this._isIE=true;}else{this._iEle.contentDocument.designMode='on';this._iEle.style.lineHeight='0';this._eDoc=this._iEle.contentDocument;$e.add(this._eDoc,'focus',this._edFocus,this,true);$e.add(this._eDoc,'blur',this._edBlur,this,true);$e.add(this._eDoc,'contextmenu',function(e){$e.stopEvent(e);return false;});this._isIE=false;}
this._eDoc.open();var initHTML=tEle.value;if(initHTML=='')initHTML='';this._eDoc.write('<head>'+$if(this.styleSheets.linked!='','<link rel="stylesheet" type="text/css" href="'+this.styleSheets.linked+'" />','')+$if(this.styleSheets.css!='','<style type="text/css">'+this.styleSheets.css+'</style>','')+'</head><body>'+initHTML+'</body>');this._eDoc.close();$e.add(this._eDoc,'keyup',this._edGetState,this,true);$e.add(this._eDoc,'keydown',this._edKeyDown,this,true);$e.add(this._eDoc,'mouseup',this._edGetState,this,true);this.state={bold:false,underline:false,italic:false,strikeThrough:false,justifyLeft:true,justifyCenter:false,justifyRight:false,justifyFull:false,fontName:'',fontSize:'',unorderedList:false,orderedList:false,className:'',format:'',canUndo:false,canRedo:false}
if(this.onStateChange.constructor==Function)this.onStateChange();this._edBlurTO=0;this._kw=new AUI.KeyWatcher([{key:'ctrl+b',handle:Function('A5.commandHandler.action(\''+this._htmlEdId+'\',\'command:bold\'); return true;')},{key:'ctrl+i',handle:Function('A5.commandHandler.action(\''+this._htmlEdId+'\',\'command:italic\'); return true;')},{key:'ctrl+u',handle:Function('A5.commandHandler.action(\''+this._htmlEdId+'\',\'command:underline\'); return true;')}],this,this._iEle.contentWindow);this._edSelBookmark='';this._edSelRange='';var classInst=this;setTimeout(function(){classInst._calcToolbar();classInst._edGetClassNames();delete classInst;},1);},command:function(type){if(this._iEle.style.display=='none')return false;this._iEle.contentWindow.focus();var data=typeof(arguments[1]!='undefined')?arguments[1]:null;var lType=type.toLowerCase();if(this._isIE&&this._edSelBookmark!=''){var range=this._eDoc.body.createTextRange();range.moveToBookmark(this._edSelBookmark);range.select();}
if(this._edSelRange!=''){var selection=this._iEle.contentWindow.getSelection();selection.addRange(this._edSelRange);}
if(lType=='backcolor'){var ele=this._edGetSelElement();if(!ele.tagName)return false;var tagName=ele.tagName.toLowerCase();var validTags=['p','pre','div','td','th','li','h1','h2','h3','h4','h5','h6','blockquote','dd','dt','legend','fieldset','caption','body'];if($u.a.find(validTags,tagName)==-1){while($u.a.find(validTags,tagName)==-1){ele=ele.parentNode;if(ele.tagName)tagName=ele.tagName.toLowerCase();}}
if($u.a.find(validTags,tagName)==-1)return false;if(ele.tagName.toLowerCase()!='body')ele.style.backgroundColor=data;}else if(lType=='hilitecolor'){if(!navigator.userAgent.toLowerCase().match('firefox')&&!navigator.userAgent.toLowerCase().match('opera'))type='backcolor';if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}else if(lType=='insertdate'){var dt=new Date()
dt=$u.d.toStr(dt,'[mm]/[dd]/[yyyy]');this._edInsertHTML('',''+dt);}else if(lType=='inserttime'){var tt=new Date()
tt=$u.d.toStr(tt,'[t:h]:[t:m][t:am]');this._edInsertHTML('',''+tt);}else if(lType=='inserttable'){data=data.split(',');data[0]=$u.s.toNum(data[0]);data[1]=$u.s.toNum(data[1]);var tableHTML=new Array();for(var i=0;i<data[1];i++){tableHTML.push('<tr>');for(var j=0;j<data[0];j++){tableHTML.push('<td>&nbsp;</td>');}
tableHTML.push('</tr>');}
this._edInsertHTML('table',tableHTML.join(''));}else if(lType=='inserttablecolumn'){var ele=this._edGetSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var cellIndx=ele.cellIndex;if(data!=null){if(data.toLowerCase()=='after')cellIndx=cellIndx+1;}
while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;for(var i=0;i<ele.rows.length;i++){ele.rows[i].insertCell(cellIndx);ele.rows[i].cells[cellIndx].innerHTML='&nbsp;';}}else if(lType=='inserttablerow'){var ele=this._edGetSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var rowIndx=ele.parentNode.rowIndex;if(data!=null){if(data.toLowerCase()=='after')rowIndx=rowIndx+1;}
while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;var totalCells=0;for(var i=0;i<ele.rows.length;i++)totalCells=Math.max(totalCells,ele.rows[i].cells.length);ele.insertRow(rowIndx);for(var i=0;i<totalCells;i++){ele.rows[rowIndx].insertCell(i);ele.rows[rowIndx].cells[i].innerHTML='&nbsp;';}}else if(lType=='deletetablecolumn'){var ele=this._edGetSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var cellIndx=ele.cellIndex;while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;for(var i=0;i<ele.rows.length;i++){ele.rows[i].deleteCell(cellIndx);}}else if(lType=='deletetablerow'){var ele=this._edGetSelElement();if(!ele.tagName)return false;if(ele.tagName.toLowerCase()!='td'){while(ele.tagName.toLowerCase()!='td')ele=ele.parentNode;}
if(ele.tagName.toLowerCase()!='td')return false;var rowIndx=ele.parentNode.rowIndex;while(ele.tagName.toLowerCase()!='table')ele=ele.parentNode;ele.deleteRow(rowIndx);}else if(lType=='setclassname'){var ele=this._edGetSelElement();if(ele.tagName.toLowerCase()!='body')ele.className=data;}else if(lType=='setstyle'){var ele=this._edGetSelElement();if(ele.tagName.toLowerCase()!='body')$ss(ele,data);}else if(lType=='cut'||lType=='copy'||lType=='paste'){if(navigator.userAgent.toLowerCase().match('firefox')){alert('Firefox does not support '+lType+'. Use keyboard shortcut to '+lType+'.');}else this._eDoc.execCommand(type,false,data);}else{if(this._isIE){var range=this._eDoc.selection.createRange();range.expand('character');var range2=this._eDoc.selection.createRange();range2.expand('textedit');var node=range2.parentElement();while(node.tagName.toLowerCase()!='body')node=node.parentNode;if(node.innerHTML==this._eDoc.body.innerHTML){if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}}else{if(this._eDoc.queryCommandEnabled(type))this._eDoc.execCommand(type,false,data);}}
this._edGetState();this.focus();},toggleDesignMode:function(){var show=true;if(typeof arguments[0]!='undefined'){if(arguments[0].toLowerCase()=='code'||arguments[0].toLowerCase()=='textarea')show=false;if((this._iEle.style.display!='none'&&show)||(this._iEle.style.display=='none'&&!show))return false;}else{if(this._iEle.style.display!='none')show=false;}
if(show){if(this._tEle.value!=String(this._eDoc.body.innerHTML)){this.setHTML(this._tEle.value);}
this._iEle.style.display='';this._tEle.style.display='none';this.focus();for(var i=0;i<this._tbObj.data.length;i++){if(typeof this._tbObj.data[i]=='object'){if(typeof this._tbObj.data[i].setDisabled!='undefined')this._tbObj.data[i].setDisabled(false,this._tbObj.data[i]._editIds);}}}else{this._tEle.value=this.getHTML();this._iEle.style.display='none';this._tEle.style.display='';this._tEle.focus();for(var i=0;i<this._tbObj.data.length;i++){if(typeof this._tbObj.data[i]=='object'){if(typeof this._tbObj.data[i].setDisabled!='undefined')this._tbObj.data[i].setDisabled(true,this._tbObj.data[i]._editIds);}}
this._tbObj.getControl('toggleCode').setDisabled(false);}},getHTML:function(){var html=String(this._eDoc.body.innerHTML);if(this._iEle.style.display=='none')html=this._tEle.value;html=html.replace(RegExp('\r','g'),'');return html;},setHTML:function(html){this._eDoc.body.innerHTML=html;this._tEle.value=html
if(this._isIE&&this._iEle.style.display!='none'){this._iEle.style.display='none';this._iEle.style.display='';}
this._edSelRange='';},focus:function(){if(this._isIE){this._iEle.style.visibility='hidden';this._iEle.style.overflow='hidden';this._iEle.style.visibility='';this._iEle.style.overflow='';}
this._iEle.contentWindow.focus();},_calcToolbar:function(){var ctrlId=this.ctrlId;if(!$(ctrlId+'.TOOLBAR')){var tbEle=document.createElement('div');tbEle.id=ctrlId+'.TOOLBAR';this._iEle.parentNode.insertBefore(tbEle,this._iEle);}
var dtb=false;if(!this.toolbar.items)dtb=true;else{if(this.toolbar.items.length==0)dtb=true;}
if(dtb){this.toolbar.items=['format',' ','fontName',' ','fontSize',' ','bold','italic','underline','strikethrough','superscript','subscript',' ','fontColor','highlightColor','backgroundColor',' ','justifyLeft','justifyCenter','justifyRight','justifyFull',' ','outdent','indent',' ','unorderedList','orderedList',' ','symbol','tableMenu','link'];if(this.insert.image.allow)this.toolbar.items.push('image');if(this.insert.file.allow)this.toolbar.items.push('file');this.toolbar.items=this.toolbar.items.concat([' ','clearFormat',' ','toggleCode']);}
var tbArr=[];for(var i=0;i<this.toolbar.items.length;i++){if(typeof this.toolbar.items[i]=='string')tbArr.push(this._calcToolbarControl(this.toolbar.items[i]));else if(typeof this.toolbar.items[i]=='object'){if(typeof this.toolbar.items[i].control=='string')tbArr.push(this._calcToolbarControl(this.toolbar.items[i].control,this.toolbar.items[i].settings));else tbArr.push(this.toolbar.items[i]);}else tbArr.push(this.toolbar.items[i]);}
this._tbObj=new A5.Toolbar(ctrlId+'.TOOLBAR',tbArr,{theme:this.theme,globalProperties:{htmlEdId:this._htmlEdId,createDefaults:{unselectable:'on'}}});},_calcToolbarControl:function(item){if(item=='*space')return' ';else if(item=='*break')return'<br />';else if(item=='format'){return new A5.EditCombo(this.data.format,{name:'format',createDefaults:{size:10},theme:this.theme,selectionRequired:true,listbox:{item:{template:'{html}',calculateValue:function(data){return data.value;}}},onSelect:function(data,classInst){A5.commandHandler.action(classInst.htmlEdId,'format:'+data.value);}});}else if(item=='fontName'){return new A5.EditCombo([{value:'Times New Roman',html:'<span style="font-family: Times New Roman;">Times New Roman</span>'},{value:'Tahoma',html:'<span style="font-family: Tahoma;">Tahoma</span>'},{value:'Arial',html:'<span style="font-family: Arial;">Arial</span>'},{value:'Courier',html:'<span style="font-family: Courier;">Courier</span>'}],{name:'fontName',createDefaults:{size:20},theme:this.theme,selectionRequired:true,listbox:{item:{template:'{html}',calculateValue:function(data){return data.value;}}},onSelect:function(data,classInst){A5.commandHandler.action(classInst.htmlEdId,'fontName:'+data.value);}});}else if(item=='fontSize'){return new A5.EditCombo([{value:'1 (8pt)',html:'<span style="font-size: 8pt;">1 (8pt)</span>'},{value:'2 (10pt)',html:'<span style="font-size: 10pt;">2 (10pt)</span>'},{value:'3 (12pt)',html:'<span style="font-size: 12pt;">3 (12pt)</span>'},{value:'4 (14pt)',html:'<span style="font-size: 14pt;">4 (14pt)</span>'},{value:'5 (18pt)',html:'<span style="font-size: 18pt;">5 (18pt)</span>'},{value:'6 (24pt)',html:'<span style="font-size: 24pt;">6 (24pt)</span>'},{value:'7 (36pt)',html:'<span style="font-size: 36pt;">7 (36pt)</span>'}],{name:'fontSize',createDefaults:{size:7},theme:this.theme,selectionRequired:true,listbox:{item:{template:'{html}',calculateValue:function(data){return data.value;}}},onSelect:function(data,classInst){A5.commandHandler.action(classInst.htmlEdId,'fontSize:'+data.value.substr(0,1));}});}else if(item=='bold'){return new A5.ButtonToggle({name:'bold',tip:'Bold',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.bold,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:bold');}});}else if(item=='italic'){return new A5.ButtonToggle({name:'italic',tip:'Italic',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.italic,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:italic');}});}else if(item=='underline'){return new A5.ButtonToggle({name:'underline',tip:'Underline',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.underline,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:underline');}});}else if(item=='strikethrough'){return new A5.ButtonToggle({name:'strikethrough',tip:'Strikethrough',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.strike,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:strikethrough');}});}else if(item=='superscript'){return new A5.ButtonToggle({name:'superscript',tip:'Superscript',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.superScript,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:superscript');}});}else if(item=='subscript'){return new A5.ButtonToggle({name:'subscript',tip:'Subscript',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.subScript,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:subscript');}});}else if(item=='fontColor'){return new A5.ButtonDropdown({theme:this.theme+':toolbar',tip:'Font Color',layout:'icon',icon:this.icons.color,name:'fontColor',onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'getColor:fontColor');}});}else if(item=='highlightColor'){return new A5.ButtonDropdown({theme:this.theme+':toolbar',tip:'Highlight Color',layout:'icon',icon:this.icons.highlightColor,name:'highlightColor',onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'getColor:highlightColor');}});}else if(item=='backgroundColor'){return new A5.ButtonDropdown({theme:this.theme+':toolbar',tip:'Background Color',layout:'icon',icon:this.icons.backgroundColor,name:'backgroundColor',onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'getColor:backgroundColor');}});}else if(item=='justifyLeft'){return new A5.ButtonToggle({name:'justifyLeft',tip:'Left',theme:this.theme+':toolbar',value:'left',layout:'icon',icon:this.icons.justifyLeft,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:justifyLeft');}});}else if(item=='justifyCenter'){return new A5.ButtonToggle({name:'justifyCenter',tip:'Center',theme:this.theme+':toolbar',value:'center',layout:'icon',icon:this.icons.justifyCenter,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:justifyCenter');}});}else if(item=='justifyRight'){return new A5.ButtonToggle({name:'justifyRight',tip:'Right',theme:this.theme+':toolbar',value:'right',layout:'icon',icon:this.icons.justifyRight,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:justifyRight');}});}else if(item=='justifyFull'){return new A5.ButtonToggle({name:'justifyFull',tip:'Justified',theme:this.theme+':toolbar',value:'justified',layout:'icon',icon:this.icons.justify,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:justifyFull');}});}else if(item=='outdent'){return new A5.Button({theme:this.theme+':toolbar',tip:'Outdent',layout:'icon',icon:this.icons.outdent,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:outdent');}});}else if(item=='indent'){return new A5.Button({theme:this.theme+':toolbar',tip:'Indent',layout:'icon',icon:this.icons.indent,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:indent');}});}else if(item=='unorderedList'){return new A5.ButtonToggle({name:'unorderedList',tip:'Unordered List',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.bulletedList,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:InsertUnorderedList');}});}else if(item=='orderedList'){return new A5.ButtonToggle({name:'orderedList',tip:'Ordered List',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.numberedList,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:InsertOrderedList');}});}else if(item=='symbol'){return new A5.ButtonDropdown({theme:this.theme+':toolbar',tip:'Insert Symbol',layout:'icon',icon:this.icons.insertSymbol,name:'symbol',onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'getSymbol');}});}else if(item=='tableMenu'){return new A5.ButtonDropdown({name:'tableMenu',tip:'Table',theme:this.theme+':toolbar',layout:'icon',icon:this.icons.insertTable,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'tableMenu');}});}else if(item=='link'){return new A5.Button({theme:this.theme+':toolbar',tip:'Insert Link',layout:'icon',icon:this.icons.insertLink,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'insert:link');}});}else if(item=='image'){if(this.insert.image.allow)return new A5.Button({theme:this.theme+':toolbar',tip:'Insert Image',layout:'icon',icon:this.icons.insertImage,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'insert:image');}});}else if(item=='file'){if(this.insert.file.allow)return new A5.Button({theme:this.theme+':toolbar',tip:'Insert File',layout:'icon',icon:this.icons.insertFile,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'insert:file');}});}else if(item=='clearFormat'){return new A5.Button({theme:this.theme+':toolbar',tip:'Clear Format',layout:'icon',icon:this.icons.clearFormat,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'command:removeFormat');}});}else if(item=='toggleCode'){return new A5.ButtonToggle({name:'toggleCode',theme:this.theme+':toolbar',tip:'Toggle Code',layout:'icon',icon:this.icons.toggleCodeView,onClick:function(classInst){A5.commandHandler.action(classInst.htmlEdId,'toggleDesignMode');}});}
return'';},_colorMenu:function(cTarget){if(!this._cMenu){this._cMenu=new A5.Menu([{variable:'color',name:'no-color',html:'No Color'},{type:'title',html:'Preset Colors'},{type:'radio-group',preventIndent:true,columns:10,name:'color',variable:'color',data:[{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ffffff;" title="#ffffff">&nbsp;</div>',value:'#ffffff'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #000000;" title="#000000">&nbsp;</div>',value:'#000000'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #eeece1;" title="#eeece1">&nbsp;</div>',value:'#eeece1'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #1f497d;" title="#1f497d">&nbsp;</div>',value:'#1f497d'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #4f81bd;" title="#4f81bd">&nbsp;</div>',value:'#4f81bd'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #c0504d;" title="#c0504d">&nbsp;</div>',value:'#c0504d'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #9bbb59;" title="#9bbb59">&nbsp;</div>',value:'#9bbb59'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #8064a2;" title="#8064a2">&nbsp;</div>',value:'#8064a2'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #4bacc6;" title="#4bacc6">&nbsp;</div>',value:'#4bacc6'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #f79646;" title="#f79646">&nbsp;</div>',value:'#f79646'}]},{type:'separator',preventIndent:true},{type:'radio-group',preventIndent:true,columns:10,name:'color',variable:'color',data:[{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #f2f2f2;" title="#f2f2f2">&nbsp;</div>',value:'#f2f2f2'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #7f7f7f;" title="#7f7f7f">&nbsp;</div>',value:'#7f7f7f'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ddd9c3;" title="#ddd9c3">&nbsp;</div>',value:'#ddd9c3'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #c6d9f0;" title="#c6d9f0">&nbsp;</div>',value:'#c6d9f0'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #dbe5f1;" title="#dbe5f1">&nbsp;</div>',value:'#dbe5f1'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #f2dcdb;" title="#f2dcdb">&nbsp;</div>',value:'#f2dcdb'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ebf1dd;" title="#ebf1dd">&nbsp;</div>',value:'#ebf1dd'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #e5e0ec;" title="#e5e0ec">&nbsp;</div>',value:'#e5e0ec'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #dbeef3;" title="#dbeef3">&nbsp;</div>',value:'#dbeef3'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #fdeada;" title="#fdeada">&nbsp;</div>',value:'#fdeada'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #d8d8d8;" title="#d8d8d8">&nbsp;</div>',value:'#d8d8d8'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #595959;" title="#595959">&nbsp;</div>',value:'#595959'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #c4bd97;" title="#c4bd97">&nbsp;</div>',value:'#c4bd97'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #8db3e2;" title="#8db3e2">&nbsp;</div>',value:'#8db3e2'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #b8cce4;" title="#b8cce4">&nbsp;</div>',value:'#b8cce4'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #e5b9b7;" title="#e5b9b7">&nbsp;</div>',value:'#e5b9b7'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #d7e3bc;" title="#d7e3bc">&nbsp;</div>',value:'#d7e3bc'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ccc1d9;" title="#ccc1d9">&nbsp;</div>',value:'#ccc1d9'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #b7dde8;" title="#b7dde8">&nbsp;</div>',value:'#b7dde8'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #fbd5b5;" title="#fbd5b5">&nbsp;</div>',value:'#fbd5b5'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #bfbfbf;" title="#bfbfbf">&nbsp;</div>',value:'#bfbfbf'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #3f3f3f;" title="#3f3f3f">&nbsp;</div>',value:'#3f3f3f'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #938953;" title="#938953">&nbsp;</div>',value:'#938953'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #548dd4;" title="#548dd4">&nbsp;</div>',value:'#548dd4'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #95b3d7;" title="#95b3d7">&nbsp;</div>',value:'#95b3d7'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #d99694;" title="#d99694">&nbsp;</div>',value:'#d99694'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #c3d69b;" title="#c3d69b">&nbsp;</div>',value:'#c3d69b'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #b2a2c7;" title="#b2a2c7">&nbsp;</div>',value:'#b2a2c7'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #92cddc;" title="#92cddc">&nbsp;</div>',value:'#92cddc'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #fac08f;" title="#fac08f">&nbsp;</div>',value:'#fac08f'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #a5a5a5;" title="#a5a5a5">&nbsp;</div>',value:'#a5a5a5'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #262626;" title="#262626">&nbsp;</div>',value:'#262626'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #494429;" title="#494429">&nbsp;</div>',value:'#494429'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #17365d;" title="#17365d">&nbsp;</div>',value:'#17365d'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #366092;" title="#366092">&nbsp;</div>',value:'#366092'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #953734;" title="#953734">&nbsp;</div>',value:'#953734'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #76923c;" title="#76923c">&nbsp;</div>',value:'#76923c'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #5f497a;" title="#5f497a">&nbsp;</div>',value:'#5f497a'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #31859b;" title="#31859b">&nbsp;</div>',value:'#31859b'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #e36c09;" title="#e36c09">&nbsp;</div>',value:'#e36c09'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #a5a5a5;" title="#a5a5a5">&nbsp;</div>',value:'#a5a5a5'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #0c0c0c;" title="#0c0c0c">&nbsp;</div>',value:'#0c0c0c'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #1d1b10;" title="#1d1b10">&nbsp;</div>',value:'#1d1b10'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #0f243e;" title="#0f243e">&nbsp;</div>',value:'#0f243e'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #244061;" title="#244061">&nbsp;</div>',value:'#244061'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #632423;" title="#632423">&nbsp;</div>',value:'#632423'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #4f6128;" title="#4f6128">&nbsp;</div>',value:'#4f6128'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #3f3151;" title="#3f3151">&nbsp;</div>',value:'#3f3151'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #205867;" title="#205867">&nbsp;</div>',value:'#205867'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #974806;" title="#974806">&nbsp;</div>',value:'#974806'}]},{type:'title',html:'Standard Colors'},{type:'radio-group',preventIndent:true,columns:10,name:'color',variable:'color',data:[{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #c00000;" title="#c00000">&nbsp;</div>',value:'#c00000'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ff0000;" title="#ff0000">&nbsp;</div>',value:'#ff0000'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ffc000;" title="#ffc000">&nbsp;</div>',value:'#ffc000'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #ffff00;" title="#ffff00">&nbsp;</div>',value:'#ffff00'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #92d050;" title="#92d050">&nbsp;</div>',value:'#92d050'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #00b050;" title="#00b050">&nbsp;</div>',value:'#00b050'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #00b0f0;" title="#00b0f0">&nbsp;</div>',value:'#00b0f0'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #0070c0;" title="#0070c0">&nbsp;</div>',value:'#0070c0'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #002060;" title="#002060">&nbsp;</div>',value:'#002060'},{html:'<div style="border: solid 1px #aaa; width: 11px; height: 11px; font-size: 0px; background: #7030a0;" title="#7030a0">&nbsp;</div>',value:'#7030a0'}]}],{theme:this.theme,htmlEdId:this._htmlEdId,iconColumn:{show:true},onClick:function(){A5.commandHandler.action(this.htmlEdId,'setColor:'+this.cTarget+':'+this.getValue('color'));},onHide:function(){A5.commandHandler.action(this.htmlEdId,'clearButtonState:'+this.cTarget);}});}
var ctrlObj=this._tbObj.getControl(cTarget);var ele=$(ctrlObj._buttonIds[0]);var showNoColor=false;if(cTarget=='backgroundColor')showNoColor=true;this._cMenu.hide();this._cMenu.cTarget=cTarget;this._cMenu.setValue('color','');this._cMenu.setDisplay([0],showNoColor);this._cMenu.show('dropdown',ele);ctrlObj.setState(ele,true);},_tblMenu:function(){if(!this._tMenu){this._tMenu=new A5.Menu([{type:'custom',preventIndent:true,html:'<table id="'+this._htmlEdId+'.INSERTTABLE"></table>',onInitialize:function(item){var tEle=$(this._tblId);tEle.cellSpacing='0';tEle.cellPadding='1';$e.add(tEle,'mouseout',this._tblMOut,this);for(var i=0;i<8;i++){tEle.insertRow(i);for(var j=0;j<10;j++){tEle.rows[i].insertCell(j);tEle.rows[i].cells[j].innerHTML='<div style="width: 12px; height: 12px; background: #ffffff; border: solid 1px #aaa; font: 0pt arial;">&nbsp;</div>';$sa(tEle.rows[i].cells[j],'A5TableRows',''+(i+1));$sa(tEle.rows[i].cells[j],'A5TableCols',''+(j+1));$e.add(tEle.rows[i].cells[j],'mouseover',this._tblCellMOver,this);$e.add(tEle.rows[i].cells[j],'click',this._tblCellOnClick,this);}}
tEle.insertRow(8);tEle.rows[8].insertCell(0);tEle.rows[8].cells[0].colSpan='10';tEle.rows[8].cells[0].style.textAlign='center';tEle.rows[8].cells[0].innerHTML='0x0';}},{type:'separator',preventIndent:true},{html:'Insert Row Before',icon:this.icons.tableInsertRowBefore,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:inserttablerow:before');}},{html:'Insert Row After',icon:this.icons.tableInsertRowAfter,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:inserttablerow:after');}},{html:'Insert Column Before',icon:this.icons.tableInsertColumnBefore,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:inserttablecolumn:before');}},{html:'Insert Column After',icon:this.icons.tableInsertColumnAfter,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:inserttablecolumn:after');}},{html:'Remove Row',icon:this.icons.tableDeleteRow,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:deletetablerow');}},{html:'Remove Column',icon:this.icons.tableDeleteColumn,onClick:function(){A5.commandHandler.action(this.htmlEdId,'command:deletetablecolumn');}}],{theme:this.theme,htmlEdId:this._htmlEdId,onHide:function(){A5.commandHandler.action(this.htmlEdId,'clearButtonState:tableMenu');},_tblId:this._htmlEdId+'.INSERTTABLE',_tblCellMOver:function(e,classInst){var tEle=$(classInst._tblId);var sRows=Number($ga(this,'A5TableRows'));var sCols=Number($ga(this,'A5TableCols'));for(var i=0;i<8;i++){for(var j=0;j<10;j++){if(i<sRows&&j<sCols)tEle.rows[i].cells[j].firstChild.style.background='#ccc';else tEle.rows[i].cells[j].firstChild.style.background='#fff';}}
tEle.rows[8].cells[0].innerHTML=sCols+'x'+sRows;},_tblMOut:function(e,classInst){var tEle=$(classInst._tblId);for(var i=0;i<8;i++){for(var j=0;j<10;j++)tEle.rows[i].cells[j].firstChild.style.background='#fff';}
tEle.rows[8].cells[0].innerHTML='0x0';},_tblCellOnClick:function(e,classInst){var sRows=Number($ga(this,'A5TableRows'));var sCols=Number($ga(this,'A5TableCols'));A5.commandHandler.action(classInst.htmlEdId,'command:insertTable:'+sCols+','+sRows);classInst.hide();}});}
var ctrlObj=this._tbObj.getControl('tableMenu');var ele=$(ctrlObj._buttonIds[0]);var notInTable=true;var htmlEle=this._edGetSelElement();if(htmlEle){while(htmlEle.tagName.toLowerCase()!='body'){if(htmlEle.tagName.toLowerCase()=='td'){notInTable=false;break;}
htmlEle=htmlEle.parentNode;}}else notInTable=false;this._tMenu.setDisabled([2],notInTable);this._tMenu.setDisabled([3],notInTable);this._tMenu.setDisabled([4],notInTable);this._tMenu.setDisabled([5],notInTable);this._tMenu.setDisabled([6],notInTable);this._tMenu.setDisabled([7],notInTable);this._tMenu.show('dropdown',ele);ctrlObj.setState(ele,true);},_symbolMenu:function(){if(!this._sMenu){this._sMenu=new A5.Menu([{type:'radio-group',preventIndent:true,columns:8,name:'symbol',variable:'symbol',data:['&euro;','&cent;','&pound;','&yen;','&curren;','&copy;','&reg;','&trade;','&plusmn;','&ne;','&asymp;','&le;','&ge;','&divide;','&times;','&infin;','&frac12;','&frac14;','&frac34;','&sup2;','&sup3;','&permil;','&para;','&sect;','&alpha;','&beta;','&Delta;','&micro;','&Omega;','&Sigma;','&Oslash;','&ang;','&ordm;','&laquo;','&raquo;','&middot;','&bull;','&dagger;','&Dagger;','&fnof;']}],{theme:this.theme,htmlEdId:this._htmlEdId,iconColumn:{show:true},onClick:function(item){A5.commandHandler.action(this.htmlEdId,'insertHTML:'+this.getValue('symbol'));},onHide:function(){A5.commandHandler.action(this.htmlEdId,'clearButtonState:symbol');}});}
var ctrlObj=this._tbObj.getControl('symbol');var ele=$(ctrlObj._buttonIds[0]);this._sMenu.setValue('symbol','');this._sMenu.show('dropdown',ele);ctrlObj.setState(ele,true);},_edInsertHTML:function(tagName,tagContent){this._iEle.contentWindow.focus();var attrContent=typeof arguments[2]!='undefined'?arguments[2]:{};var range;if(this._eDoc.selection&&this._eDoc.selection.createRange&&navigator.appName!='Opera'){range=this._eDoc.selection.createRange();var range2=this._eDoc.selection.createRange();range2.expand('textedit');var pEle=range2.parentElement();while(pEle.tagName.toLowerCase()!='body')pEle=pEle.parentNode;if(pEle.innerHTML==this._eDoc.body.innerHTML){var attrArray=new Array();for(var prop in attrContent){attrArray.push(' ');if(prop=='style'){var sArr=new Array();for(var sProp in attrContent[prop]){sArr.push(sProp+': '+attrContent[prop][sProp]+';');}
sArr=sArr.join(' ');attrArray.push('style="'+sArr+'"');}else attrArray.push(prop+'="'+$u.s.tran(attrContent[prop],'"','\\"')+'"');}
attrArray=attrArray.join('');if(tagName!='')range.pasteHTML('<'+tagName+attrArray+'>'+tagContent+'</'+tagName+'>');else range.pasteHTML(tagContent);}}else if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();range=selection.getRangeAt(0);range.deleteContents();if(tagName!=''){var pEle=this._eDoc.createElement(tagName);pEle.innerHTML=tagContent;for(var prop in attrContent){if(prop=='style')$ss(pEle,attrContent[prop]);else pEle[prop]=attrContent[prop];}
if(this._eDoc.body.innerHTML==''){this._eDoc.body.appendChild(pEle)}else{range.insertNode(pEle);}}else{if(this._eDoc.queryCommandEnabled('inserthtml'))this._eDoc.execCommand('inserthtml',false,tagContent);}}},_edGetSelElement:function(){var range;if(this._eDoc.selection&&this._eDoc.selection.createRange&&navigator.appName!='Opera'){range=this._eDoc.selection.createRange();if(range.parentElement){range.expand('character');return range.parentElement();}}else if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();if(!selection.anchorNode.tagName)return selection.anchorNode.parentNode;else return selection.anchorNode;}
return false;},_edGetClassNames:function(){var classList=new Array();var fClassList=new Array();var ssRules=0;for(var i=0;i<this._eDoc.styleSheets.length;i++){ssRules=false;if(this._eDoc.styleSheets[i].cssRules)ssRules=this._eDoc.styleSheets[i].cssRules;else if(this._eDoc.styleSheets[i].rules)ssRules=this._eDoc.styleSheets[i].rules;if(ssRules){for(var j=0;j<ssRules.length;j++){classList=classList.concat(String(ssRules[j].selectorText).split(','));}}}
var tSel1=0;for(var i=0;i<classList.length;i++){if(classList[i].indexOf('.')!=-1){tSel1=classList[i].split('.');tSel1.shift();for(var j=0;j<tSel1.length;j++){tSel1[j]=$u.s.tran(tSel1[j],[' ','\n',':'],[' ',' ',' ']);tSel1[j]=$u.s.word(tSel1[j],1,' ');}
fClassList=fClassList.concat(tSel1);}}
fClassList=$u.a.dedup(fClassList);},_edKeyDown:function(e){var keyCode=e.charCode||e.keyCode;if(keyCode==9){var isList=false;var ele=this._edGetSelElement();while(ele.tagName.toLowerCase()!='body'){if(ele.tagName.toLowerCase()=='li'){isList=true;break;}
ele=ele.parentNode;}
$e.preventDefault(e);if(isList){if(e.shiftKey)this.command('outdent');else this.command('indent');}else if(!e.shiftKey)this._edInsertHTML('','&nbsp;&nbsp;&nbsp;&nbsp;');}},_edGetState:function(e){if(this._isIE&&!window.getSelection){this._iEle.style.display='none';this._iEle.style.display='';}
if(window.getSelection){var selection=this._iEle.contentWindow.getSelection();var range=selection.getRangeAt(0);this._edSelRange=range;var node=range.commonAncestorContainer;if(typeof node.tagName!='undefined')if(node.tagName.toLowerCase()=='html')return false;}
if(this._eDoc.selection&&this._eDoc.selection.createRange&&navigator.appName!='Opera'){var range=this._eDoc.selection.createRange();if(typeof range.text!='undefined'){this._edSelBookmark=range.getBookmark();}}
var oldState=$u.o.toJSON(this.state);this.state.bold=this._eDoc.queryCommandState('bold');this.state.underline=this._eDoc.queryCommandState('underline');this.state.italic=this._eDoc.queryCommandState('italic');this.state.strikeThrough=this._eDoc.queryCommandState('strikethrough');this.state.superScript=this._eDoc.queryCommandState('superscript');this.state.subScript=this._eDoc.queryCommandState('subscript');this.state.justifyLeft=this._eDoc.queryCommandState('justifyLeft');this.state.justifyCenter=this._eDoc.queryCommandState('justifyCenter');this.state.justifyRight=this._eDoc.queryCommandState('justifyRight');this.state.justifyFull=this._eDoc.queryCommandState('justifyFull');if(!this.state.justifyLeft&&!this.state.justifyCenter&&!this.state.justifyRight&&!this.state.justifyFull)this.state.justifyLeft=true;this.state.fontName=String(this._eDoc.queryCommandValue('fontName'));this.state.fontSize=String(this._eDoc.queryCommandValue('fontSize'));this.state.unorderedList=this._eDoc.queryCommandState('InsertUnorderedList');this.state.orderedList=this._eDoc.queryCommandState('InsertOrderedList');var ele=this._edGetSelElement();if(ele)this.state.className=ele.className;else this.state.className='';this.state.format=this.data.format[0].value;var fType=this._eDoc.queryCommandValue('formatblock').toLowerCase();for(var i=0;i<this.data.format.length;i++){if(fType==this.data.format[i].tag.toLowerCase()||fType==this.data.format[i].value.toLowerCase()){this.state.format=this.data.format[i].value;break;}}
var newState=$u.o.toJSON(this.state);if(oldState!=newState){if(this.onStateChange.constructor==Function)this.onStateChange();var ctrlObj=this._tbObj.getControl('bold');if(ctrlObj)ctrlObj.setValue(this.state.bold);ctrlObj=this._tbObj.getControl('italic');if(ctrlObj)ctrlObj.setValue(this.state.italic);ctrlObj=this._tbObj.getControl('underline');if(ctrlObj)ctrlObj.setValue(this.state.underline);ctrlObj=this._tbObj.getControl('strikethrough');if(ctrlObj)ctrlObj.setValue(this.state.strikeThrough);ctrlObj=this._tbObj.getControl('subscript');if(ctrlObj)ctrlObj.setValue(this.state.subScript);ctrlObj=this._tbObj.getControl('superscript');if(ctrlObj)ctrlObj.setValue(this.state.superScript);ctrlObj=this._tbObj.getControl('justifyLeft');if(ctrlObj)ctrlObj.setValue(this.state.justifyLeft);ctrlObj=this._tbObj.getControl('justifyCenter');if(ctrlObj)ctrlObj.setValue(this.state.justifyCenter);ctrlObj=this._tbObj.getControl('justifyRight');if(ctrlObj)ctrlObj.setValue(this.state.justifyRight);ctrlObj=this._tbObj.getControl('justifyFull');if(ctrlObj)ctrlObj.setValue(this.state.justifyFull);ctrlObj=this._tbObj.getControl('unorderedList');if(ctrlObj)ctrlObj.setValue(this.state.unorderedList);ctrlObj=this._tbObj.getControl('orderedList');if(ctrlObj)ctrlObj.setValue(this.state.orderedList);ctrlObj=this._tbObj.getControl('format');if(ctrlObj){if(typeof this.state.format=='string')ctrlObj.setValue(this.state.format);else ctrlObj.setValue('Font name');}
ctrlObj=this._tbObj.getControl('fontName');if(ctrlObj){if(this.state.fontName=='')ctrlObj.setValue('Font name');else{if(typeof this.state.fontName=='string')ctrlObj.setValue(this.state.fontName);else ctrlObj.setValue('Font name');}}
ctrlObj=this._tbObj.getControl('fontSize');if(ctrlObj){if(this.state.fontSize=='')ctrlObj.setValue('Font size');else{var val=$u.s.toNum(''+this.state.fontSize);var entry=['Font size','1 (8pt)','2 (10pt)','3 (12pt)','4 (14pt)','5 (18pt)','6 (24pt)','7 (36pt)'];if(val>entry.length)val=0;ctrlObj.setValue(entry[val]);}}
ctrlObj=this._tbObj.getControl('className');if(ctrlObj){if(this.state.className==''||String(this.state.className).toLowerCase()=='apple-style-span')ctrlObj.setValue('Apply class name');else{if(typeof this.state.className=='string')ctrlObj.setValue(this.state.className);else ctrlObj.setValue('Apply class name');}}}
this._tEle.value=this.getHTML();if(e){if(e.type.toLowerCase()=='keyup'){var keyCode=e.charCode||e.keyCode;if(!(keyCode>=16&&keyCode<=18)&&!(keyCode>=37&&keyCode<=40)&&keyCode!=27&&!(keyCode>=33&&keyCode<=36)&&keyCode!=45&&!(keyCode>=112&&keyCode<=123)){if(this.onChange.constructor==Function)this.onChange();}}}else if(this.onChange.constructor==Function)this.onChange();},_edFocus:function(){clearTimeout(this._edBlurTO);this._kw.on();if(this.onFocus.constructor==Function)this.onFocus.call(this);A5.commandHandler.action(this._htmlEdId,'hideMenus');},_edBlur:function(){var classInst=this;this._edBlurTO=setTimeout(function(){classInst._edCompleteBlur();delete classInst;},100);},_edCompleteBlur:function(){this._kw.off();if(this.onBlur.constructor==Function)this.onBlur.call(this);},_htmlEdIndx:[0]}
A5.PopupHTMLEditor=Class.create();A5.PopupHTMLEditor.prototype={initialize:function(settings){$u.o.assign(settings,{theme:'',override:'base',className:'',window:{theme:'',type:'modeless',resize:'both',autoSize:true,buttons:{items:[{html:'Save',action:'commit'},{html:'Cancel'}]}},editor:{theme:''},onCommit:0},true);if(settings.window.theme=='')settings.window.theme=settings.theme+':dropdown';if(settings.editor.theme=='')settings.editor.theme=settings.theme;$u.o.assign(this,settings);$u.o.assign(this.window,{tbar:{show:true},body:{content:{type:'blank'}},onShow:function(){this.onResize();},onResize:function(){var tEle=$(this.getWindowId()+'.EDITOR');var iEle=$(this.getWindowId()+'.EDITOR.HTMLEDITOR');var bEle=tEle.parentNode;tEle.style.height='10px';iEle.style.height='10px';var tempHeight=bEle.parentNode.offsetHeight-(($gpt(bEle)-$gpt(bEle.parentNode))*2);tempHeight=Math.max(tempHeight,10);tEle.style.height=tempHeight+'px';iEle.style.height=tempHeight+'px';tEle.style.width=iEle.parentNode.offsetWidth+'px';iEle.style.width=iEle.parentNode.offsetWidth+'px';},_onCommit:this.onCommit});A5.overrides.assign(this,'popupHTMLEditor',this.override);this._win=new A5.Window(this.window);this._win.addAction('commit',function(){var html=this._hEd.getHTML();$svs(this._targetId,html);$svs(this._targetId+'.DISPLAY',html);$svs(this._targetId+'.PREVIEW',html);$e.execute(this._targetId,'change');this.hide();if(this._onCommit.constructor==Function)this._onCommit(html);});},setValue:function(val){if(typeof arguments[1]!='undefined'){var ele=$(arguments[1]);if($gvs(ele)!=val){$svs(ele,val);$svs(ele.id+'.DISPLAY',val);$svs(ele.id+'.PREVIEW',val);}}},edit:function(ele){if(!this._win._hEd){$(this._win.getWindowId('body')).innerHTML='<div style="position: relative;"><textarea id="'+this._win.getWindowId()+'.EDITOR" class="'+this.className+'" style="position: absolute; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;"></textarea></div>';$(this._win.getWindowId('tbar')).innerHTML='<div id="'+this._win.getWindowId()+'.EDITOR.TOOLBAR"></div>';this._win._hEd=new A5.HTMLEditor(this._win.getWindowId()+'.EDITOR',this.editor);this._win._hEd._iWindow._targetId=this._win.getWindowId()+'.EDITOR';$ss(this._win._hEd._iEle,$gs(this._win._hEd._iEle)+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;')
$e.add(this._win.getWindowId('tbar'),'mousedown',Function('A5.commandHandler.action(\''+this._win._hEd._htmlEdId+'\',\'hideMenus\');'))
var classInst=this;setTimeout(function(){classInst.edit(ele);delete classInst;delete ele;},10);return true;}
ele=$(ele);this._win._hEd.setHTML($gvs(ele));this._win._targetId=ele.id;if($(ele.id+'.DISPLAY'))ele=$(ele.id+'.DISPLAY');else if($(ele.id+'.PREVIEW'))ele=$(ele.id+'.PREVIEW');this._win.show('dropdown',ele);if(this.window.autoSize){var bcEle=$(this._win._windowId+'.BODYCONTAINER');var bEle=$(this._win._windowId+'.BODY');var eEle=this._win._hEd._iEle;if(eEle.style.display=='none')eEle=this._win._hEd._tEle;var w=ele.offsetWidth+($(this._win._windowId+'.BODYCONTAINER').offsetWidth-eEle.offsetWidth);var h=ele.offsetHeight+($(this._win._windowId+'.BODY').offsetHeight-eEle.offsetHeight);this._win.setSize(w+'px',h+'px');}
this._win._hEd.focus();var wEle=$(this._win._windowId);wEle.style.top=Math.max(($gpt(ele)-this._win._hEd._tEle.parentNode.offsetTop)-1,0)+'px';wEle.style.left=Math.max(($gpl(ele)-this._win._hEd._tEle.parentNode.offsetLeft)-1,0)+'px';},bind:function(ctrl){if(ctrl.constructor==Array){for(var i=0;i<ctrl.length;i++)this._bind($(ctrl[i]));}else this._bind($(ctrl));},_bind:function(ele){if($ga(ele,'A5ControlBound')=='true')return true;var dEle=$(ele.id+'.DISPLAY');if(!dEle)dEle=$(ele.id+'.PREVIEW');var bEle=$(ele.id+'.BUTTON');if(!dEle){dEle=document.createElement('div');dEle.id=ele.id+'.PREVIEW';dEle.className=ele.className;$ss(dEle,$gs(ele));ele.style.display='none';dEle.style.display='inline-block';ele.parentNode.insertBefore(dEle,ele);}
$sa(dEle,'A5TargetID',ele.id);dEle.innerHTML=ele.value;if(bEle){$sa(bEle,'A5TargetID',ele.id);$e.add(bEle,'click',function(e,classInst){$e.stopPropagation(e);classInst.edit($ga(this,'A5TargetID'));},this);$e.add(dEle,'dblclick',function(e,classInst){classInst.edit($ga(this,'A5TargetID'));},this);}else $e.add(dEle,'click',function(e,classInst){$e.stopPropagation(e);classInst.edit($ga(this,'A5TargetID'));},this);$sa(ele,'A5ControlBound','true');}}
A5.Slider=Class.create();A5.Slider.prototype={initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',inputId:'',type:'',separator:'..',dataType:'number',format:'',direction:'',min:0,max:100,step:1,className:'',disabledClassName:'',innerClassName:'',handle:{show:true,className:'',hoverClassName:'',selectedClassName:'',minClassName:'',maxClassName:''},range:{show:true,className:'',hoverClassName:'',selectedClassName:''},value:0,disabled:false,onChange:0,onSlide:0});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'slider');$u.o.assign(this,settings);A5.overrides.assign(this,'slider',this.override);this._coor={};this._sliderSize=0;this._sliderUnitPrePx=0;this._min=0,this._max=0,this._val1=0;this._val2=0;this._tVal1=0;this._tVal2=0;this._rEle=0;this._hEle1=0;this._hEle2=0;this._cHandle='';this._cfHandle='';this._dPlace=0;this._initRender();if(this.disabled)this.setDisabled(true);},setDisabled:function(val){if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;},setValue:function(val){var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;this._setMinMax();if(this.dataType=='string'){if(this.type=='range'){if(typeof val=='string')val=val.split(this.separator);if(val.constructor==Array){this._val1=$u.a.find(this.data,val[0]);this._val2=$u.a.find(this.data,val[1]);}else this._val1=$u.a.find(this.data,val);}else{this._val1=$u.a.find(this.data,val);}}else if(this.dataType=='date'){if(this.type=='range'){if(typeof val=='string')val=val.split(this.separator);if(val.constructor==Array){if(typeof val[0]=='string'){var tVal=new Date();tVal.fromFormat(val[0],this.format);val[0]=tVal;}
if(typeof val[1]=='string'){var tVal=new Date();tVal.fromFormat(val[1],this.format);val[1]=tVal;}
val[0]=((val[0]-this.min)/86400000)+1;val[1]=((val[1]-this.min)/86400000)+1;this._val1=Math.round(val[0]);this._val2=Math.round(val[1]);}else{if(typeof val=='string'){var tVal=new Date();tVal.fromFormat(val,this.format);val=tVal;}
val=((val-this.min)/86400000)+1;this._val1=Math.round(val);}}else{if(typeof val=='string'){var tVal=new Date();tVal.fromFormat(val,this.format);val=tVal;}
val=((val-this.min)/86400000)+1;this._val1=Math.round(val);}}else{if(this.type=='range'){if(typeof val=='string')val=val.split(this.separator);if(val.constructor==Array){this._val1=$u.s.toNum(''+val[0]);this._val2=$u.s.toNum(''+val[1]);}else this._val1=$u.s.toNum(''+val);}else this._val1=$u.s.toNum(''+val);}
this._val1=Math.max(Math.min(this._val1,this._max),this._min);this._val2=Math.max(Math.min(this._val2,this._max),this._min);this._cfHandle='';this._refresh(executeSelect);},refresh:function(){this.setValue(this.value,false);},_setMinMax:function(){if(this.dataType=='string'){this._min=0;this._max=this.data.length-1;this.step=1;}else if(this.dataType=='date'){if(typeof this.min=='string'){var tMin=new Date();tMin.fromFormat(this.min,this.format);this.min=tMin;}
if(typeof this.max=='string'){var tMax=new Date();tMax.fromFormat(this.max,this.format);this.max=tMax;}
this._min=1;this._max=Math.round(((this.max-this.min)/86400000)+1);}else{this._min=this.min;this._max=this.max;}},_sClick:function(e){if(this._dragFlag||this.disabled)return true;var vps=AUI.u.getVPScroll();var coor=$e.getCoors(e);var sEle=$(this.contId+'.SLIDER');var clickLoc=(coor.clientX+vps.x)-$gpl(sEle);var sliderSize=sEle.offsetWidth;var sliderUnitPrePx=(this._max-this._min)/sliderSize;var val=(Math.round((sliderUnitPrePx*clickLoc)/this.step)*this.step)+this._min;var dPlace=0;if(Math.round(this.step)!=this.step)dPlace=Math.pow(10,String(this.step).split('.')[1].length);if(dPlace>0)val=Math.round(val*dPlace)/dPlace;var cfHandle='min-value';if(this.type=='range'){if(val>this._val2){this._val2=val;cfHandle='max-value';}else if(val<this._val1)this._val1=val;else if(Math.abs(val-this._val1)>Math.abs(val-this._val2)){this._val2=val;cfHandle='max-value';}else this._val1=val;}else{this._val1=val;cfHandle='value';}
this._cfHandle=cfHandle;this._refresh();},_refresh:function(){var executeSelect=typeof arguments[0]!='undefined'?arguments[0]:true;var oldVal=String(this.value);this._hEle1.style.left=((100/(this._max-this._min))*(this._val1-this._min))+'%';this._hEle2.style.left=((100/(this._max-this._min))*(this._val2-this._min))+'%';if(this.type=='range'){this._rEle.style.left=this._hEle1.style.left;this._rEle.style.width=((100/(this._max-this._min))*(this._val2-this._val1))+'%';if(this.dataType=='string')this.value=[this.data[this._val1],this.data[this._val2]];else if(this.dataType=='date'){var fVal1=new Date(this.min);var fVal2=new Date(this.min);fVal1.setDate(fVal1.getDate()+this._val1-1);fVal2.setDate(fVal2.getDate()+this._val2-1);this.value=[fVal1,fVal2];}else this.value=[this._val1,this._val2];if(this.inputId.constructor==Array){if(this.dataType=='date'){$svs(this.inputId[0],this.value[0].toFormat(this.format));$svs(this.inputId[1],this.value[1].toFormat(this.format));}else{$svs(this.inputId[0],this.value[0]);$svs(this.inputId[1],this.value[1]);}
if(executeSelect){$e.execute(this.inputId[0],'change');$e.execute(this.inputId[1],'change');}}else{if(this.dataType=='date')$svs(this.inputId,this.value[0].toFormat(this.format)+this.separator+this.value[1].toFormat(this.format));else $svs(this.inputId,this.value.join(this.separator));if(executeSelect)$e.execute(this.inputId,'change');}}else{this._rEle.style.width=((100/(this._max-this._min))*(this._val1-this._min))+'%';if(this.dataType=='string')this.value=this.data[this._val1];else if(this.dataType=='date'){var fVal1=new Date(this.min);fVal1.setDate(fVal1.getDate()+this._val1-1);this.value=fVal1;}else this.value=this._val1;if(this.dataType=='date')$svs(this.inputId,this.value.toFormat(this.format));else $svs(this.inputId,this.value);if(executeSelect)$e.execute(this.inputId,'change');}
if(this.onChange.constructor==Function&&oldVal!=String(this.value)&&executeSelect)this.onChange.call(this,{value:this.value,handle:this._cfHandle});},_initRender:function(){var ele=$(this.contId);if(this.className!='')$acn(ele,this.className);var sEle=document.createElement('div');sEle.id=this.contId+'.SLIDER';sEle.className=this.innerClassName;sEle.style.position='relative';$e.add(sEle,'selectstart',function(e){$e.stopEvent($e.getEvent(e));return false;});$e.add(sEle,'dragstart',function(e){$e.stopEvent($e.getEvent(e));return false;});ele.appendChild(sEle);$e.add(sEle,'abstracttap',this._sClick,this,true);var rEle=document.createElement('div');rEle.id=this.contId+'.SLIDERRANGE';rEle.className=this.range.className;rEle.style.position='absolute';if(!this.range.show)rEle.style.display='none';if(!A5.flags.isMobile&&this.range.hoverClassName!=''){$e.add(rEle,'mouseover',Function('if(!arguments[1]._dragFlag) $acn(this,\''+this.range.hoverClassName+'\');'),this);$e.add(rEle,'mouseout',Function('$rcn(this,\''+this.range.hoverClassName+'\');'));}
sEle.appendChild(rEle);var hEle1=document.createElement('div');hEle1.id=this.contId+'.SLIDERHANDLE1';hEle1.className=this.handle.className+$if(this.type=='range',' '+this.handle.minClassName,'');hEle1.style.position='absolute';if(!this.handle.show)hEle1.style.display='none';if(!A5.flags.isMobile&&this.handle.hoverClassName!=''){$e.add(hEle1,'mouseover',Function('if(!arguments[1]._dragFlag) $acn(this,\''+this.handle.hoverClassName+'\');'),this);$e.add(hEle1,'mouseout',Function('$rcn(this,\''+this.handle.hoverClassName+'\');'));}
sEle.appendChild(hEle1);var hEle2=document.createElement('div');hEle2.id=this.contId+'.SLIDERHANDLE2';hEle2.className=this.handle.className+' '+this.handle.maxClassName;hEle2.style.position='absolute';if(!this.handle.show||this.type!='range')hEle2.style.display='none';if(!A5.flags.isMobile&&this.handle.hoverClassName!=''){$e.add(hEle2,'mouseover',Function('if(!arguments[1]._dragFlag) $acn(this,\''+this.handle.hoverClassName+'\');'),this);$e.add(hEle2,'mouseout',Function('$rcn(this,\''+this.handle.hoverClassName+'\');'));}
sEle.appendChild(hEle2);this._rEle=rEle;this._hEle1=hEle1;this._hEle2=hEle2;A5.u.drag.add(ele,'custom',{tolerance:0,so:this,onStart:function(i,d){if(d.so.disabled)return false;d.so._sliderSize=this.firstChild.offsetWidth;d.so._sliderUnitPrePx=(d.so._max-d.so._min)/d.so._sliderSize;d.so._dPlace=0;if(Math.round(d.so.step)!=d.so.step)d.so._dPlace=Math.pow(10,String(d.so.step).split('.')[1].length);i._val=(Math.round(((i.x-$gpl(this.firstChild))*d.so._sliderUnitPrePx)/d.so.step)*d.so.step)+d.so._min;if(d.so._dPlace>0)i._val=Math.round(i._val*d.so._dPlace)/d.so._dPlace;i._val=Math.max(Math.min(i._val,d.so._max),d.so._min);var val1=d.so._val1;var val2=d.so._val2;if(d.so.type=='range'){var hs=$(d.so.contId+'.SLIDERHANDLE1').offsetWidth*d.so._sliderUnitPrePx;if(d.so._val1+hs<i._val&&i._val<d.so._val2-hs){d.so._cfHandle='range';if(d.so.range.selectedClassName!='')$acn(d.so.contId+'.SLIDERRANGE',d.so.range.selectedClassName);if(d.so.handle.selectedClassName!=''){$acn(d.so.contId+'.SLIDERHANDLE1',d.so.handle.selectedClassName);$acn(d.so.contId+'.SLIDERHANDLE2',d.so.handle.selectedClassName);}}else if(Math.abs(d.so._val1-i._val)<Math.abs(d.so._val2-i._val)){val1=i._val;d.so._cfHandle='min-value';if(d.so.handle.selectedClassName!='')$acn(d.so.contId+'.SLIDERHANDLE1',d.so.handle.selectedClassName);}else{val2=i._val;d.so._cfHandle='max-value';if(d.so.handle.selectedClassName!='')$acn(d.so.contId+'.SLIDERHANDLE2',d.so.handle.selectedClassName);}}else{val1=i._val;d.so._cfHandle='value';if(d.so.handle.selectedClassName!='')$acn(d.so.contId+'.SLIDERHANDLE1',d.so.handle.selectedClassName);}
d.so._hEle1.style.left=((100/(d.so._max-d.so._min))*(val1-d.so._min))+'%';d.so._hEle2.style.left=((100/(d.so._max-d.so._min))*(val2-d.so._min))+'%';if(d.so.type=='range'){d.so._rEle.style.left=d.so._hEle1.style.left;d.so._rEle.style.width=((100/(d.so._max-d.so._min))*(val2-val1))+'%';if(d.so.onSlide.constructor==Function){var fVal1=val1;var fVal2=val2;if(d.so.dataType=='string'){fVal1=d.so.data[fVal1];fVal2=d.so.data[fVal2];}else if(d.so.dataType=='date'){fVal1=new Date(d.so.min);fVal1.setDate(fVal1.getDate()+val1-1);fVal2=new Date(d.so.min);fVal2.setDate(fVal2.getDate()+val2-1);}
d.so.onSlide.call(d.so,{value:[fVal1,fVal2],handle:d.so._cfHandle});}}else{d.so._rEle.style.width=((100/(d.so._max-d.so._min))*(val1-d.so._min))+'%';if(d.so.onSlide.constructor==Function){var fVal1=val1;if(d.so.dataType=='string')fVal1=d.so.data[fVal1];else if(d.so.dataType=='date'){fVal1=new Date(d.so.min);fVal1.setDate(fVal1.getDate()+val1-1);}
d.so.onSlide.call(d.so,{value:fVal1,handle:d.so._cfHandle});}}
d.so._tVal1=val1;d.so._tVal2=val2;d.so._val1=val1;d.so._val2=val2;},onMove:function(i,d){if(d.so.disabled)return false;var val1=d.so._val1;var val2=d.so._val2;if(d.so._cfHandle=='max-value'){var val2=val2+(Math.round((i.moveX*d.so._sliderUnitPrePx)/d.so.step)*d.so.step);val2=Math.max(val2,val1);val2=Math.min(val2,d.so._max);}else if(d.so._cfHandle=='range'){var valDif=(Math.round((i.moveX*d.so._sliderUnitPrePx)/d.so.step)*d.so.step);var handled=false;if(valDif<0){if((val1+valDif)-d.so._min<0){val2=d.so._min+(val2-val1);val1=d.so._min;handled=true;}}else{if(d.so._max-(val2+valDif)<0){val1=d.so._max-(val2-val1);val2=d.so._max;handled=true;}}
if(!handled){val1=val1+valDif;val2=val2+valDif;}}else{val1=val1+(Math.round((i.moveX*d.so._sliderUnitPrePx)/d.so.step)*d.so.step);if(d.so.type=='range')val1=Math.min(val1,val2);}
val1=Math.max(val1,d.so._min);val1=Math.min(val1,d.so._max);if(d.so._dPlace>0){val1=Math.round(val1*d.so._dPlace)/d.so._dPlace;val2=Math.round(val2*d.so._dPlace)/d.so._dPlace;}
d.so._hEle1.style.left=((100/(d.so._max-d.so._min))*(val1-d.so._min))+'%';d.so._hEle2.style.left=((100/(d.so._max-d.so._min))*(val2-d.so._min))+'%';if(d.so.type=='range'){d.so._rEle.style.left=d.so._hEle1.style.left;d.so._rEle.style.width=((100/(d.so._max-d.so._min))*(val2-val1))+'%';if(d.so.onSlide.constructor==Function){var fVal1=val1;var fVal2=val2;if(d.so.dataType=='string'){fVal1=d.so.data[fVal1];fVal2=d.so.data[fVal2];}else if(d.so.dataType=='date'){fVal1=new Date(d.so.min);fVal1.setDate(fVal1.getDate()+val1-1);fVal2=new Date(d.so.min);fVal2.setDate(fVal2.getDate()+val2-1);}
d.so.onSlide.call(d.so,{value:[fVal1,fVal2],handle:d.so._cfHandle});}}else{d.so._rEle.style.width=((100/(d.so._max-d.so._min))*(val1-d.so._min))+'%';if(d.so.onSlide.constructor==Function){var fVal1=val1;if(d.so.dataType=='string')fVal1=d.so.data[fVal1];else if(d.so.dataType=='date'){fVal1=new Date(d.so.min);fVal1.setDate(fVal1.getDate()+val1-1);}
d.so.onSlide.call(d.so,{value:fVal1,handle:d.so._cfHandle});}}
d.so._tVal1=val1;d.so._tVal2=val2;},onEnd:function(i,d){if(d.so.disabled)return false;if(d.so._cfHandle=='range'&&d.so.range.selectedClassName!=''){$rcn(d.so.contId+'.SLIDERRANGE',d.so.range.selectedClassName);if(d.so.handle.selectedClassName!=''){$rcn(d.so.contId+'.SLIDERHANDLE1',d.so.handle.selectedClassName);$rcn(d.so.contId+'.SLIDERHANDLE2',d.so.handle.selectedClassName);}}else if(d.so._cfHandle=='max-value'){if(d.so.handle.selectedClassName!='')$rcn(d.so.contId+'.SLIDERHANDLE2',d.so.handle.selectedClassName);}else{if(d.so.handle.selectedClassName!='')$rcn(d.so.contId+'.SLIDERHANDLE1',d.so.handle.selectedClassName);}
d.so._val1=d.so._tVal1;d.so._val2=d.so._tVal2;d.so._refresh();}});this.setValue(this.value,false);}};A5.switches={html:function(v,s){var a=typeof arguments[2]!='undefined'?arguments[2]:'';s=this._getSet(s);var loc='left';if(v==s.values.on){if(s.flow=='ltr')loc='right';}else{if(s.flow=='rtl')loc='right';}
var lText=s.text.on;var rText=s.text.off;if(s.flow=='rtl'){lText=s.text.off;rText=s.text.on;}
if(loc=='left'){var lLoc='-100%';var rLoc='0%';var bLoc='0%';}else{var lLoc='0%';var rLoc='100%';var bLoc='100%';}
html=['<div '+a+' class="'+s.className+' '+$if(v,s.onClassName,s.offClassName)+'" style="overflow: hidden;'+s.style+'">',' <div style="position: relative;" class="'+s.innerClassName+'">','  <div style="position: absolute; z-index: 1; width: 100%; left: '+lLoc+';" class="'+s.leftClassName+'">'+lText+'</div>','  <div style="position: absolute; z-index: 2; left: '+bLoc+';" class="'+s.buttonClassName+'">&nbsp;</div>','  <div style="position: absolute; z-index: 1; width: 100%; left: '+rLoc+';" class="'+s.rightClassName+'">'+rText+'</div>',' </div>','</div>'].join('\n');return html;},_getSet:function(s){var s2={theme:'',override:'base',value:false,inputId:'',flow:'ltr',style:'',className:'',disabledClassName:'',onClassName:'',offClassName:'',innerClassName:'',rightClassName:'',leftClassName:'',buttonClassName:'',text:{on:'',off:''},values:{on:true,off:false},disabled:false,onSelect:0};if(typeof s.theme!='undefined')A5.themes.assign(s2,s.theme,'switch');$u.o.assign(s2,s);A5.overrides.assign(s2,'switch',s2.override);return s2;}}
A5.Switch=Class.create({initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{theme:'',override:'base',value:false,inputId:'',flow:'ltr',className:'',disabledClassName:'',onClassName:'',offClassName:'',innerClassName:'',rightClassName:'',leftClassName:'',buttonClassName:'',text:{on:'',off:''},values:{on:true,off:false},disabled:false,onSelect:0});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'switch');$u.o.assign(this,settings);A5.overrides.assign(this,'switch',this.override);this._render();this._init=false;this._value=false;this.setValue(this.value,false);if(this.disabled)this.setDisabled(true);this._init=true;},setDisabled:function(val){A5.u.drag.setDisabled(this.contId,'custom',val);if(val)$acn(this.contId,this.disabledClassName);else $rcn(this.contId,this.disabledClassName);this.disabled=val;},setValue:function(val){var executeSelect=typeof arguments[1]!='undefined'?arguments[1]:true;if(typeof val=='boolean')val=val?this.values.on:this.values.off;var oldValue=this._value;this.value=val;var ele=$(this.contId);var loc='left';if(this.value==this.values.on){$acn(ele,this.onClassName);$rcn(ele,this.offClassName);if(this.flow=='ltr')loc='right';this._value=true;}else{$acn(ele,this.offClassName);$rcn(ele,this.onClassName);if(this.flow=='rtl')loc='right';this._value=false;}
if(loc=='left'){ele.firstChild.firstChild.style.left='-100%';ele.firstChild.lastChild.style.left='0%';ele.firstChild.childNodes[1].style.left='0%';}else{ele.firstChild.firstChild.style.left='0%';ele.firstChild.lastChild.style.left='100%';ele.firstChild.childNodes[1].style.left='100%';}
$sa(ele,'A5SwitchLoc',loc);if(this.inputId!=''){$svs(this.inputId,this.value);if(executeSelect)$e.execute(this.inputId,'change');}
if(this.onSelect.constructor==Function&&this._init&&oldValue!=this._value&&executeSelect)this.onSelect.call(this);},_switch:function(e,classInst){if(classInst.disabled)return false;var val=false;if($ga(this,'A5SwitchLoc')=='left'){if(classInst.flow=='rtl')val=true;}else{if(classInst.flow=='ltr')val=true;}
classInst.setValue(val);},_toggle:function(e,classInst){if(classInst.disabled)return false;classInst.setValue(!classInst._value);},_render:function(){var ele=$(this.contId);ele.style.overflow='hidden';$acn(ele,this.className);var iEle=document.createElement('div');iEle.style.position='relative';iEle.className=this.innerClassName;var lEle=document.createElement('div');$ss(lEle,'position: absolute; z-index: 1; width: 100%; left: -100%;');lEle.className=this.leftClassName;if(this.flow=='ltr')lEle.innerHTML=this.text.on;else lEle.innerHTML=this.text.off;iEle.appendChild(lEle);var bEle=document.createElement('div');$ss(bEle,'position: absolute; z-index: 2; left: 0%;');bEle.className=this.buttonClassName;bEle.innerHTML='&nbsp;';iEle.appendChild(bEle);var rEle=document.createElement('div');$ss(rEle,'position: absolute; z-index: 1; width: 100%; left: 0%;');rEle.className=this.rightClassName;if(this.flow=='rtl')rEle.innerHTML=this.text.on;else rEle.innerHTML=this.text.off;iEle.appendChild(rEle);ele.appendChild(iEle);$e.add(ele,'a5switch',this._switch,this);$e.add(ele,A5.d.evnts.click,this._toggle,this);A5.u.drag.add(ele,'custom',{axis:'x',onMove:function(d){var p=(d.customMoveX/this.offsetWidth)*100;if($ga(this,'A5SwitchLoc')=='right')p=((this.offsetWidth+d.customMoveX)/this.offsetWidth)*100;p=Math.max(Math.min(p,100),0);this.firstChild.firstChild.style.left=(p-100)+'%';this.firstChild.lastChild.style.left=p+'%';this.firstChild.childNodes[1].style.left=p+'%';},onEnd:function(d){var p=(d.customMoveX/this.offsetWidth)*100;if($ga(this,'A5SwitchLoc')=='right')p=((this.offsetWidth+d.customMoveX)/this.offsetWidth)*100;p=Math.max(Math.min(p,100),0);if(p<50)$sa(this,'A5SwitchLoc','left');else $sa(this,'A5SwitchLoc','right');$e.execute(this,'a5switch');}});}});A5.map={staticMap:function(s){$u.o.assign(s,{secure:false,width:400,height:300,scale:null,center:null,zoom:null,markers:[]},true);var p=[];p.push(A5.ajax.buildURLParam('size',s.width+'x'+s.height));if(s.scale)p.push(A5.ajax.buildURLParam('scale',s.scale));if(s.center)p.push(A5.ajax.buildURLParam('center',s.center));if(s.zoom)p.push(A5.ajax.buildURLParam('zoom',s.zoom));var tm='';for(var i=0;i<s.markers.length;i++){tm='';if(s.markers[i].size)tm=tm+'size:'+s.markers[i].size+'|';if(s.markers[i].color)tm=tm+'color:'+s.markers[i].color+'|';if(s.markers[i].label)tm=tm+'label:'+s.markers[i].label+'|';if(s.markers[i].location.constructor==Array){for(var k=0;k<s.markers[i].location.length;k++)tm=tm+s.markers[i].location[k]+'|';}else tm=tm+s.markers[i].location+'|';tm=$u.s.rTrim(tm,'|');p.push(A5.ajax.buildURLParam('markers',tm));}
if(s.secure)return'https://maps.googleapis.com/maps/api/staticmap?'+p.join('&')
else return'http://maps.googleapis.com/maps/api/staticmap?'+p.join('&')},initState:-1,initQueue:[],init:function(){A5.map.initState=1;for(var i=0;i<A5.map.initQueue.length;i++){A5.map._m[A5.map.initQueue[i]]._genMap();}},_fn:'http://maps.googleapis.com/maps/api/js?sensor=true&libraries=geometry&callback=A5.map.init',_m:{},_mrk:{},_mrkC:{},_ovr:{},_d:{}}
A5.Map=Class.create({initialize:function(contId,settings){this.contId=contId;$u.o.assign(this,{override:'base',type:'',ui:{draggable:true,panControl:null,zoomControl:null,zoomOnDlbClick:true,streetViewControl:null,mapTypeControl:null,scale:null,overviewMap:null},route:{draggable:false,avoid:{highways:null,tolls:null},travelMode:'driving',units:'default',optimizeOrder:false,directionsPanel:false},draw:{polygon:{startIcon:{url:'',width:false,height:false,anchor:{x:false,y:false}}}},onClick:false,onDblClick:false,onRightClick:false,onZoomChange:false,onInitialize:false});$u.o.assign(this,settings);A5.overrides.assign(this,'map',this.override);this._dmc=[];this._mrk={};this._ovr={};this._mode={clickable:true};if(A5.map.initState==1)this._genMap();else{if(A5.map.initState==-1){A5.map.initState=0;var sEle=document.createElement('script');sEle.src=A5.map._fn;document.getElementsByTagName('head')[0].appendChild(sEle);}
A5.map.initQueue.push(this.contId);}
A5.map._m[this.contId]=this;},refresh:function(){if(this._delayMethod('refresh',arguments))return false;google.maps.event.trigger(this.map,'resize');this.map.setZoom(this.map.getZoom());},setValue:function(){this.setCenter.apply(this,arguments)},setZoom:function(zoom){if(this._delayMethod('setZoom',arguments))return false;this.map.setZoom(zoom);},setCenter:function(loc){if(this._delayMethod('setCenter',arguments))return false;var pan=typeof arguments[1]!='undefnined'?arguments[1]:false;if(typeof loc=='string'){if(typeof this._gc=='undefined')this._gc=new google.maps.Geocoder();this._gc.geocode({'address':loc},Function('if(arguments[1] == google.maps.GeocoderStatus.OK) A5.map._m[\''+this.contId+'\'].map.'+$if(pan,'panTo','setCenter')+'(arguments[0][0].geometry.location);'));}else{var ll=new google.maps.LatLng(loc[0],loc[1],true);if(pan)this.map.panTo(ll);else this.map.setCenter(ll);}},view:function(){if(this._delayMethod('view',arguments))return false;var pan=false;var arg=[];for(var i=0;i<arguments.length;i++)arg.push(arguments[i]);if(typeof arg[arg.length-1]=='boolean')pan=arg.pop();if(arg.length==1){if(arg[0].constructor==Array){if(typeof arg[0][0]!='number'){arg=arg[0];arg.push(pan);this.view.apply(this,arg);return true;}}
this.setCenter(arg[0],pan);}else{var latMax=arg[0][0];var latMin=arg[0][0];var lngMax=arg[0][1];var lngMin=arg[0][1];for(var i=1;i<arg.length;i++){latMax=Math.max(latMax,arg[i][0]);latMin=Math.min(latMin,arg[i][0]);lngMax=Math.max(lngMax,arg[i][1]);lngMin=Math.min(lngMin,arg[i][1]);}
var llb=new google.maps.LatLngBounds(new google.maps.LatLng(latMax,lngMin,true),new google.maps.LatLng(latMin,lngMax,true));if(pan)this.map.panToBounds(llb);else this.map.fitBounds(llb);}},viewMarkers:function(){if(this._delayMethod('viewMarkers',arguments))return false;var locs=[];var pos=0;var arg=arguments;if(arg.length==1){if(arg[0].constructor==Array)arg=arg[0];}
for(var i=0;i<arg.length;i++){if(typeof this._mrk[arg[i]]!='undefined'){pos=A5.map._mrk[this.contId+':'+arg[i]].getPosition();locs.push([pos.lat(),pos.lng()]);}}
if(locs.length==1)this.setCenter(locs[0]);else if(locs.length>0)this.view.apply(this,locs);},viewMarkerGroups:function(){if(this._delayMethod('viewMarkerGroups',arguments))return false;var locs=[];var pos=0;var arg=arguments;if(arg.length==1){if(arg[0].constructor==Array)arg=arg[0];}
for(var prop in this._mrk){if($u.a.find(arg,this._mrk[prop].group)!=-1){pos=A5.map._mrk[this.contId+':'+prop].getPosition();locs.push([pos.lat(),pos.lng()]);}}
if(locs.length==1)this.setCenter(locs[0]);else if(locs.length>0)this.view.apply(this,locs);},addMarker:function(name,loc,settings){if(this._delayMethod('addMarker',arguments))return false;var s={group:'',icon:{url:'',width:false,height:false,anchor:{x:false,y:false}},title:'',detail:{has:false,data:''},overlay:{has:false,data:10,fill:{color:null,opacity:null},stroke:{color:null,width:null,opacity:null}},draggable:false,animation:false,emphasize:false,onClick:false,onDblClick:false,onDrag:false,onDragEnd:false,onDragStart:false,onMouseDown:false,onMouseOut:false,onMouseOver:false,onMouseUp:false,onRightClick:false,onAddComplete:false,onRemove:false};$u.o.assign(s,settings);if(typeof this._mrk[name]!='undefined')this.removeMarker(name);this._mrk[name]=s;if(typeof loc=='string'){if(typeof this._gc=='undefined')this._gc=new google.maps.Geocoder();this._gc.geocode({'address':loc},Function('if(arguments[1] == google.maps.GeocoderStatus.OK){ A5.map._m[\''+this.contId+'\']._mrk[\''+name+'\'].position = arguments[0][0].geometry.location; A5.map._m[\''+this.contId+'\']._addMarker(\''+name+'\');}'));}else{this._mrk[name].position=new google.maps.LatLng(loc[0],loc[1],true);this._addMarker(name);}},removeMarker:function(name){if(this._delayMethod('removeMarker',arguments))return false;if(typeof this._mrk[name]!='undefined'){if(this._mrk[name].onRemove)s.onRemove.call(this,this._mrk[name],A5.map._mrk[this.contId+':'+name]);if(this._mrk[name].overlay.has){A5.map._mrkC[this.contId+':'+name].setMap(null);delete A5.map._mrkC[this.contId+':'+name];}
A5.map._mrk[this.contId+':'+name].setMap(null);delete A5.map._mrk[this.contId+':'+name];delete this._mrk[name];}},setMarkerDisplay:function(name,val){if(this._delayMethod('setMarkerDisplay',arguments))return false;if(typeof this._mrk[name]!='undefined')A5.map._mrk[this.contId+':'+name].setVisible(val);},emphasizeMarker:function(name,dur){if(this._delayMethod('emphasizeMarker',arguments))return false;if(typeof this._mrk[name]!='undefined'){A5.map._mrk[this.contId+':'+name].setAnimation(google.maps.Animation.BOUNCE);if(typeof dur=='number')setTimeout(Function('A5.map._m[\''+this.contId+'\'].deemphasizeMarker(\''+name+'\')'),dur);}},deemphasizeMarker:function(name){if(this._delayMethod('deemphasizeMarker',arguments))return false;if(typeof this._mrk[name]!='undefined')A5.map._mrk[this.contId+':'+name].setAnimation(null);},removeMarkerGroup:function(group){if(this._delayMethod('removeMarkerGroup',arguments))return false;for(var prop in this._mrk){if(this._mrk[prop].group==group)this.removeMarker(prop);}},setMarkerGroupDisplay:function(group,val){if(this._delayMethod('setMarkerGroupDisplay',arguments))return false;for(var prop in this._mrk){if(this._mrk[prop].group==group)A5.map._mrk[this.contId+':'+prop].setVisible(val);}},emphasizeMarkerGroup:function(group,dur){if(this._delayMethod('emphasizeMarkerGroup',arguments))return false;for(var prop in this._mrk){if(this._mrk[prop].group==group)A5.map._mrk[this.contId+':'+prop].setAnimation(google.maps.Animation.BOUNCE);}
if(typeof dur=='number')setTimeout(Function('A5.map._m[\''+this.contId+'\'].deemphasizeMarkerGroup(\''+group+'\')'),dur);},deemphasizeMarkerGroup:function(group){if(this._delayMethod('deemphasizeMarkerGroup',arguments))return false;for(var prop in this._mrk){if(this._mrk[prop].group==group)A5.map._mrk[this.contId+':'+prop].setAnimation(null);}},getMarkerPositions:function(){if(this._delayMethod('getMarkerPositions',arguments))return false;var latLng={};var pos=0;var allMrks=arguments.length==0;var arg=arguments;if(arg.length==1){if(arg[0].constructor==Array)arg=arg[0];}
for(var prop in this._mrk){if(allMrks||$u.a.find(arg,prop)!=-1){pos=A5.map._mrk[this.contId+':'+prop].getPosition();latLng[prop]=[pos.lat(),pos.lng()];}}
return latLng;},getMarkerGroupPositions:function(){if(this._delayMethod('getMarkerGroupPositions',arguments))return false;var latLng={};var pos=0;var arg=arguments;if(arg.length==1&&arg[0].constructor==Array)arg=arg[0];for(var prop in this._mrk){if($u.a.find(arg,this._mrk[prop].group)!=-1){pos=A5.map._mrk[this.contId+':'+prop].getPosition();latLng[prop]=[pos.lat(),pos.lng()];}}
return latLng;},showMarkerDetail:function(mrk){if(this._delayMethod('showMarkerDetail',arguments))return false;if(typeof this._mrk[mrk]!='undefined'){var dData=this._mrk[mrk].detail.data;if(typeof dData=='string')this._showDetailLow(mrk,dData);else if(dData.constructor==Function)this._showDetailLow(mrk,dData());else if(dData.constructor==Object){var data='';if(typeof dData.data!='undefined')data=dData.data;new $a.simple(dData.url,{method:'get','data':data,handle:Function('if(arguments[0].responseText) A5.map._m[\''+this.contId+'\']._showDetailsLow(\''+mrk+'\',arguments[0].responseText);')})}}},plotRoute:function(){if(this._delayMethod('plotRoute',arguments))return false;this._dirSetup();var arg=[];if(arguments.length==1)arg=arguments[0];else{for(var i=0;i<arguments.length;i++)arg.push(arguments[i]);}
this._r=[].concat(arg);var s=arg.shift();if(s.constructor==Array)s=new google.maps.LatLng(s[0],s[1]);var e=arg.pop();if(e.constructor==Array)e=new google.maps.LatLng(e[0],e[1]);var wp=[];var cwp=0;if(arg.length>0){for(var i=0;i<arg.length;i++){cwp=arg[i];if(cwp.constructor==Array)cwp=new google.maps.LatLng(cwp[0],cwp[1]);wp.push({location:cwp});}}
var tm=google.maps.DirectionsTravelMode.DRIVING;var uSys=null;if(this.route.travelMode.toUpperCase()=='WALKING')tm=google.maps.DirectionsTravelMode.WALKING;if(this.route.units.toUpperCase()=='IMPERIAL')uSys=google.maps.UnitSystem.IMPERIAL;else if(this.route.units.toUpperCase()=='METRIC')uSys=google.maps.UnitSystem.METRIC;this._dirS.route({origin:s,destination:e,waypoints:wp,unitSystem:uSys,travelMode:tm,avoidHighways:this.route.avoid.highways,avoidTolls:this.route.avoid.tolls,optimizeWaypoints:this.route.optimizeOrder},Function('if(arguments[1] == google.maps.DirectionsStatus.OK) A5.map._m[\''+this.contId+'\']._dirR.setDirections(arguments[0]);'));},clearRoute:function(){if(typeof this._dirR!='undefined')this._dirR.setDirections({routes:[]});this._r=[];},getRoute:function(){var r={start:false,end:false,waypoints:{original:[],plotted:[],order:[]}};if(this._r==[])return r;var d=this._dirR.getDirections();r.start=this._r[0];r.end=this._r[this._r.length-1];for(var i=1;i<this._r.length-1;i++){r.waypoints.original.push(this._r[i]);}
r.waypoints.order=d.routes[0].waypoint_order;for(var i=0;i<r.waypoints.order.length;i++){r.waypoints.plotted.push(r.waypoints.original[r.waypoints.order[i]]);}
return r;},addOverlay:function(name,type,data,settings){if(this._delayMethod('addOverlay',arguments))return false;var s={type:type,data:data,group:'',fill:{color:null,opacity:null},stroke:{color:null,width:null,opacity:null},onClick:false,onDblClick:false,onMouseDown:false,onMouseOut:false,onMouseOver:false,onMouseUp:false,onRightClick:false,onAddComplete:false,onRemove:false};$u.o.assign(s,settings);if(typeof this._ovr[name]!='undefined')this.removeOverlay(name);this._ovr[name]=s;if(type=='circle'){if(typeof data[0]=='string'){if(typeof this._gc=='undefined')this._gc=new google.maps.Geocoder();this._gc.geocode({'address':data[0]},Function('if(arguments[1] == google.maps.GeocoderStatus.OK){ A5.map._m[\''+this.contId+'\']._ovr[\''+name+'\'].data[0] = arguments[0][0].geometry.location; A5.map._m[\''+this.contId+'\']._addOverlay(\''+name+'\');}'));}else{this._ovr[name].data[0]=new google.maps.LatLng(data[0][0],data[0][1],true);this._addOverlay(name);}}else if(type=='polygon'){this._addOverlay(name);}},getOverlayData:function(){if(this._delayMethod('getOverlayData',arguments))return false;var data={};var ovr=0;var pos=0;var path=0;var allOvrs=arguments.length==0;var arg=arguments;if(arg.length==1){if(arg[0].constructor==Array)arg=arg[0];}
for(var prop in this._ovr){if(allOvrs||$u.a.find(arg,prop)!=-1)this._getOvrData(prop,data);}
return data;},getOverlayGroupData:function(){if(this._delayMethod('getOverlayGroupData',arguments))return false;var data={};var arg=arguments;if(arg.length==1&&arg[0].constructor==Array)arg=arg[0];for(var prop in this._ovr){if($u.a.find(arg,this._ovr[prop].group)!=-1)this._getOvrData(prop,data);}
return data;},_getOvrData:function(prop,data){var ovr=A5.map._ovr[this.contId+':'+prop];var pos=0;var path=0;if(this._ovr[prop].type=='polygon'){data[prop]={type:'polygon',data:[]};path=ovr.getPath();for(var i=0;i<path.length;i++)data[prop].data.push([path.getAt(i).lat(),path.getAt(i).lng()]);}else{data[prop]={type:'circle',data:[]};pos=ovr.getCenter();data[prop].data.push([pos.lat(),pos.lng()]);data[prop].data.push(ovr.getRadius());}},removeOverlay:function(name){if(this._delayMethod('removeOverlay',arguments))return false;if(typeof this._ovr[name]!='undefined'){if(this._ovr[name].onRemove)s.onRemove.call(this,this._ovr[name],A5.map._ovr[this.contId+':'+name]);A5.map._ovr[this.contId+':'+name].setMap(null);delete A5.map._ovr[this.contId+':'+name];delete this._ovr[name];}},removeOverlayGroup:function(group){if(this._delayMethod('removeOverlayGroup',arguments))return false;for(var prop in this._ovr){if(this._ovr[prop].group==group)this.removeOverlay(prop);}},setMode:function(type){if(this._mode.type=='edit'){if(this._mode.eo!=''){var oc=A5.map._ovr[this.contId+':'+this._mode.eo];if(oc)oc.setOptions({editable:false});}}
if(this._mode.l)google.maps.event.removeListener(this._mode.l);if(this._mode.type=='draw'){if(this._mode.subType=='overlay-polygon'&&this._mrk['__A5DRAWPOLYSTART']){this.removeOverlay(this._mode.name);this.removeMarker('__A5DRAWPOLYSTART');}else if(this._mode.subType=='overlay-circle'&&this._mode.p.length==1){this.removeOverlay(this._mode.name);}}
if(type=='draw'){this._mode.type=type;this._mode.subType=arguments[1];if(this._mode.subType=='route'){this._mode.s=typeof arguments[2]!='undefined'?arguments[2]:{};$u.o.assign(this._mode.s,{maximum:false},true);this._mode.cf=typeof arguments[3]!='undefined'?arguments[3]:false;this._dirSetup();this._dirR.setOptions({preserveViewport:true});}else{this._mode.name=arguments[2];this._mode.s=typeof arguments[3]!='undefined'?arguments[3]:{};this._mode.cf=typeof arguments[4]!='undefined'?arguments[4]:false;}
if(this._mode.l)google.maps.event.removeListener(this._mode.l);this._mode.l=google.maps.event.addListener(this.map,'click',Function('A5.map._m[\''+this.contId+'\']._draw(arguments[0]);'));this._mode.p=[];this.map.setOptions({draggableCursor:'crosshair'});this._setOvrClickable(false);}else if(type=='erase'){this._mode.type=type;this._mode.subType=arguments[1];this._mode.cf=typeof arguments[2]!='undefined'?arguments[2]:false;this.map.setOptions({draggableCursor:'crosshair'});this._setOvrClickable(true);}else if(type=='edit'){this._mode.type=type;this._mode.subType=arguments[1];this._mode.cf=typeof arguments[2]!='undefined'?arguments[2]:false;this.map.setOptions({draggableCursor:'crosshair'});this._setOvrClickable(true);}else{this._mode.type='default';this._mode.subType='';if(this._mode.l)google.maps.event.removeListener(this._mode.l);if(this._mode.lc)google.maps.event.removeListener(this._mode.lc);this._mode.p=[];this.map.setOptions({draggableCursor:''});if(this._dirR)this._dirR.setOptions({preserveViewport:false});this._setOvrClickable(true);}},_addMarker:function(name){var s=this._mrk[name];var icon=null;if(s.icon.url!=''){var iAnchor=null;var iSize=null;if(s.icon.anchor.x&&s.icon.anchor.y)iAnchor=new google.maps.Point(s.icon.anchor.x,s.icon.anchor.y);if(s.icon.width&&s.icon.height)iSize=new google.maps.Size(s.icon.width,s.icon.height);icon=new google.maps.MarkerImage(s.icon.url,iSize,null,iAnchor);}
var anim=null;if(s.animation=='drop'||s.animation==true)anim=google.maps.Animation.DROP;else if(s.animation=='bounce')anim=google.maps.Animation.BOUNCE;var gs={draggable:s.draggable,icon:icon,title:s.title,position:s.position,map:this.map,animation:anim}
A5.map._mrk[this.contId+':'+name]=new google.maps.Marker(gs);if(s.detail.has)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'click',Function('A5.map._m[\''+this.contId+'\'].showMarkerDetail(\''+name+'\');'));if(s.overlay.has){var val=this._cRad(s.overlay.data);A5.map._mrkC[this.contId+':'+name]=new google.maps.Circle({map:this.map,center:s.position,radius:val,fillColor:s.overlay.fill.color,fillOpacity:s.overlay.fill.opacity,strokeColor:s.overlay.stroke.color,strokeOpacity:s.overlay.stroke.opacity,strokeWeight:s.overlay.stroke.width});if(s.draggable)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'drag',Function('A5.map._mrkC[\''+this.contId+':'+name+'\'].setCenter(arguments[0].latLng)'));}
google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'click',Function('var mObj = A5.map._m[\''+this.contId+'\']; if(mObj._mode.type == \'erase\' && mObj._mode.subType == \'marker\'){ mObj._erase(\''+name+'\');} else if(mObj._mrk[\''+name+'\'].onClick){mObj._mrk[\''+name+'\'].onClick.apply(this,arguments);}'));if(s.onDblClick)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'dblclick',s.onDblClick);if(s.onDrag)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'drag',s.onDrag);if(s.onDragEnd)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'dragend',s.onDragEnd);if(s.onDragStart)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'dragstart',s.onDragStart);if(s.onMouseDown)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'mousedown',s.onMouseDown);if(s.onMouseOut)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'mouseout',s.onMouseOut);if(s.onMouseOver)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'mouseover',s.onMouseOver);if(s.onMouseUp)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'mouseup',s.onMouseUp);if(s.onRightClick)google.maps.event.addListener(A5.map._mrk[this.contId+':'+name],'rightclick',s.onRightClick);if(typeof s.emphasize=='number')this.emphasizeMarker(name,s.emphasize);if(s.onAddComplete)s.onAddComplete.call(this,s,A5.map._mrk[this.contId+':'+name]);},_addOverlay:function(name){var s=this._ovr[name];if(s.type=='circle'){var val=this._cRad(s.data[1]);A5.map._ovr[this.contId+':'+name]=new google.maps.Circle({map:this.map,center:s.data[0],radius:val,fillColor:s.fill.color,fillOpacity:s.fill.opacity,strokeColor:s.stroke.color,strokeOpacity:s.stroke.opacity,strokeWeight:s.stroke.width,clickable:this._mode.clickable});}else if(s.type=='polygon'){var p=[];for(var i=0;i<s.data.length;i++)p.push(new google.maps.LatLng(s.data[i][0],s.data[i][1],true));A5.map._ovr[this.contId+':'+name]=new google.maps.Polygon({map:this.map,paths:p,fillColor:s.fill.color,fillOpacity:s.fill.opacity,strokeColor:s.stroke.color,strokeOpacity:s.stroke.opacity,strokeWeight:s.stroke.width,clickable:this._mode.clickable});}
google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'click',Function('var mObj = A5.map._m[\''+this.contId+'\']; if(mObj._mode.type == \'erase\' && mObj._mode.subType == \'overlay\'){ mObj._erase(\''+name+'\');} else if(mObj._mode.type == \'edit\' && mObj._mode.subType == \'overlay\'){ mObj._edit(\''+name+'\');} else if(mObj._ovr[\''+name+'\'].onClick){mObj._ovr[\''+name+'\'].onClick.apply(this,arguments);}'));if(s.onDblClick)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'dblclick',s.onDblClick);if(s.onMouseDown)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'mousedown',s.onMouseDown);if(s.onMouseOut)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'mouseout',s.onMouseOut);if(s.onMouseOver)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'mouseover',s.onMouseOver);if(s.onMouseUp)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'mouseup',s.onMouseUp);if(s.onRightClick)google.maps.event.addListener(A5.map._ovr[this.contId+':'+name],'rightclick',s.onRightClick);if(s.onAddComplete)s.onAddComplete.call(this,s,A5.map._ovr[this.contId+':'+name]);},_draw:function(data){if(this._mode.subType=='marker'){this.addMarker(this._mode.name,[data.latLng.lat(),data.latLng.lng()],this._mode.s);if(this._mode.cf.constructor==Function){var result=this._mode.cf.call(this,data);if(typeof result=='string'){this._mode.name=result;return true;}}
this.setMode('default');}else if(this._mode.subType=='overlay-circle'){this._mode.p.push(data.latLng);if(this._mode.p.length==1){var d=[[this._mode.p[0].lat(),this._mode.p[0].lng()],1];this.addOverlay(this._mode.name,'circle',d,this._mode.s);this._mode.lc=google.maps.event.addListener(this.map,'mousemove',Function('var co = A5.map._ovr[\''+this.contId+':'+this._mode.name+'\']; co.setRadius(google.maps.geometry.spherical.computeDistanceBetween(co.getCenter(),arguments[0].latLng));'));}else if(this._mode.p.length==2){if(this._mode.lc)google.maps.event.removeListener(this._mode.lc);var d=[[this._mode.p[0].lat(),this._mode.p[0].lng()],google.maps.geometry.spherical.computeDistanceBetween(this._mode.p[0],this._mode.p[1])];this.addOverlay(this._mode.name,'circle',d,this._mode.s);if(this._mode.cf.constructor==Function){var result=this._mode.cf.call(this,d);if(typeof result=='string'){this._mode.p=[];this._mode.name=result;return true;}}
this.setMode('default');}}else if(this._mode.subType=='overlay-polygon'){this._mode.p.push([data.latLng.lat(),data.latLng.lng()]);if(this._mode.p.length==1){this.addMarker('__A5DRAWPOLYSTART',this._mode.p[0],{onClick:Function('A5.map._m[\''+this.contId+'\']._drawPolyFin()'),icon:this.draw.polygon.startIcon});}else{this.addOverlay(this._mode.name,'polygon',this._mode.p,this._mode.s);}}else if(this._mode.subType=='route'){if(this._mode.p.length<this._mode.s.maximum||this._mode.s.maximum==false){this._mode.p.push([data.latLng.lat(),data.latLng.lng()]);if(this._mode.p.length>1){this.plotRoute([].concat(this._mode.p));if(this._mode.cf.constructor==Function)this._mode.cf.call(this,this._mode.p);}}}},_drawPolyFin:function(){this.removeMarker('__A5DRAWPOLYSTART');if(this._mode.cf.constructor==Function){var result=this._mode.cf.call(this,this._mode.p);if(typeof result=='string'){this._mode.p=[];this._mode.name=result;return true;}}
this.setMode('default');},_erase:function(name){var rem=true;if(this._mode.subType=='marker'){if(this._mode.cf)rem=this._mode.cf.call(this,name,this._mrk[name]);if(rem)this.removeMarker(name);}else{if(this._mode.cf)rem=this._mode.cf.call(this,name,this._ovr[name]);if(rem)this.removeOverlay(name);}},_edit:function(name){if(this._mode.cf){if(!this._mode.cf.call(this,name,this._ovr[name]))return false;}
if(this._mode.eo!=''){var oc=A5.map._ovr[this.contId+':'+this._mode.eo];if(oc)oc.setOptions({editable:false});}
A5.map._ovr[this.contId+':'+name].setOptions({editable:true});this._mode.eo=name;},_setOvrClickable:function(val){this._mode.clickable=val;for(var prop in this._ovr)A5.map._ovr[this.contId+':'+prop].setOptions({clickable:val});},_cRad:function(data){var rad=String(data);var val=$u.s.toNum(rad);if(rad.substr(rad.length-5).toLowerCase()=='sq km')val=Math.sqrt((val*1000000)/Math.PI);else if(rad.substr(rad.length-5).toLowerCase()=='sq mi')val=Math.sqrt((val*2589846.49)/Math.PI);else if(rad.substr(rad.length-5).toLowerCase()=='sq ft')val=Math.sqrt((val*0.09290304)/Math.PI);else if(rad.substr(rad.length-4).toLowerCase()=='sq m')val=Math.sqrt(val/Math.PI);else if(rad.substr(rad.length-2).toLowerCase()=='km')val=val*1000;else if(rad.substr(rad.length-2).toLowerCase()=='mi')val=val*1609.3;else if(rad.substr(rad.length-2).toLowerCase()=='ft')val=val*0.3048;return val;},_dirSetup:function(){if(typeof this._dirS=='undefined'){this._dirS=new google.maps.DirectionsService();var pEle=null;if($(this.route.directionsPanel))pEle=$(this.route.directionsPanel);this._dirR=new google.maps.DirectionsRenderer({draggable:this.route.draggable,panel:pEle});this._dirR.setMap(this.map);}},_showDetailLow:function(mrk,data){if(typeof A5.map._d[this.contId]=='undefined')A5.map._d[this.contId]=new google.maps.InfoWindow({content:''});A5.map._d[this.contId].setContent(data);A5.map._d[this.contId].open(this.map,A5.map._mrk[this.contId+':'+mrk]);},_zChange:function(){var zNew=this.map.getZoom();this.onZoomChange.call(this,{zoom:zNew,oldZoom:this._zOld});this._zOld=zNew;},_genMap:function(){var mapType=google.maps.MapTypeId.ROADMAP;if(this.type.toUpperCase()=='HYBRID')mapType=google.maps.MapTypeId.HYBRID;else if(this.type.toUpperCase()=='ROADMAP')mapType=google.maps.MapTypeId.ROADMAP;else if(this.type.toUpperCase()=='SATELLITE')mapType=google.maps.MapTypeId.SATELLITE;else if(this.type.toUpperCase()=='TERRAIN')mapType=google.maps.MapTypeId.TERRAIN;var ops={center:new google.maps.LatLng(42.40,-71.05),zoom:11,mapTypeControl:this.ui.mapTypeControl,overviewMapControl:this.ui.overviewMap,overviewMapControlOptions:{opened:true},panControl:this.ui.panControl,scaleControl:this.ui.scale,streetViewControl:this.ui.streetViewControl,zoomControl:this.ui.zoomControl,mapTypeId:mapType,draggable:this.ui.draggable,disableDoubleClickZoom:!this.ui.zoomOnDlbClick};this.map=new google.maps.Map(document.getElementById(this.contId),ops);if(this.onClick)google.maps.event.addListener(this.map,'click',this.onClick);if(this.onDblClick)google.maps.event.addListener(this.map,'dblclick',this.onDblClick);if(this.onRightClick)google.maps.event.addListener(this.map,'rightclick',this.onRightClick);if(this.onZoomChange)google.maps.event.addListener(this.map,'zoom_changed',Function('A5.map._m[\''+this.contId+'\']._zChange();'));for(var i=0;i<this._dmc.length;i++)this[this._dmc[i].method].apply(this,this._dmc[i].args);this._dmc=[];this._zOld=this.map.getZoom();if(this.onInitialize){var ll=this.map.getCenter();this.onInitialize.call(this,{zoom:this.map.getZoom(),center:[ll.lat(),ll.lng()]})}},_delayMethod:function(m,args){if(this.map)return false;var data={method:m,args:[]};for(var i=0;i<args.length;i++)data.args.push(args[i]);this._dmc.push(data);return true;}});if(typeof A5.themes=='undefined'){A5.themes={_t:{},add:function(sName,sObj){if(typeof this._t[sName]=='undefined')this._t[sName]={};$u.o.assign(this._t[sName],sObj);if(sObj.general){if(sObj.general.iconSet){if(sObj.general.iconSet.type=='svg'&&!$(sName+'-icons')){var ele=document.createElement('div');ele.id=sName+'-icons';$ss(ele,'position: absolute; top: -1000px;');ele.innerHTML=sObj.general.iconSet.icons;document.documentElement.appendChild(ele);}}}},assign:function(classInst,sPath,sType){sPath=sPath.split(':');var sName=sPath.shift();if(typeof this._t[sName]!='undefined'){var sObj=this._t[sName];if(typeof sObj[sType]!='undefined'){var stObj=sObj[sType];if(sPath.length>0){for(var i=sPath.length-1;i>=0;i--){if(typeof stObj[sPath.join(':')]!='undefined'){$u.o.assign(classInst,stObj[sPath.join(':')]);return true;}
sPath.pop();}}
if(typeof stObj.base!='undefined')$u.o.assign(classInst,stObj.base);return true;}}}}}
if(typeof A5.overrides=='undefined'){A5.overrides={_o:{},add:function(cType,sObj){if(typeof this._o[cType]=='undefined')this._o[cType]={};$u.o.assign(this._o[cType],sObj);},assign:function(classInst,cType,oType){if(typeof this._o[cType]!='undefined'){var oObj=this._o[cType];if(typeof oObj[oType]!='undefined'){if(typeof oObj[oType]!='undefined')$u.o.assign(classInst,oObj[oType]);}}}}}
A5.u={_uIdIndx:0,getUniqueId:function(){A5.u._uIdIndx++;return'A5UID'+A5.u._uIdIndx;},convertUnits:function(size,uIn,uOut){if(typeof size=='string'&&typeof uOut=='undefined'){size=$u.s.aTrim(size);uOut=uIn;uIn=size.substr(size.length-2,2);size=$u.s.toNum(size);}
if(size==0)return 0;if(uOut==uIn)return size;if(typeof this._units=='undefined'){var ele=document.createElement('div');$ss(ele,'width: 1cm; height: 1in; padding: 0px; border: none; margin: 0px; position: absolute; left: -2in; top: -2in');document.body.insertBefore(ele,document.body.firstChild);this._units={'px':1};this._units['in']=ele.offsetHeight;this._units['pt']=this._units['in']/72;this._units['pc']=this._units['pt']*12;this._units['cm']=ele.offsetWidth;this._units['mm']=this._units['cm']/10;}
var fIn=this._units[uIn];var fOut=this._units[uOut];var result=(size*fIn)/fOut;if(typeof result!='number')result=0;return result;},css:{setSelector:function(sel,css){var ssEle=$('A5STYLESHEET')
if(!ssEle){ssEle=document.createElement('style');ssEle.id='A5STYLESHEET';$sa(ssEle,'type','text/css');document.getElementsByTagName('head')[0].appendChild(ssEle);}
var ss=ssEle.sheet?ssEle.sheet:ssEle.styleSheet;var r=ss.cssRules?ss.cssRules:ss.rules;for(var i=0;i<r.length;i++){if(r[i].selectorText==sel){r[i].style.cssText=css;return true;}}
if(css=='')return false;if(ss.insertRule)ss.insertRule(sel+'{'+css+'}',r.length);else ss.addRule(sel,css);},deleteSelector:function(sel){var ssEle=$('A5STYLESHEET')
if(!ssEle)return false;var ss=ssEle.sheet?ssEle.sheet:ssEle.styleSheet;var r=ss.cssRules?ss.cssRules:ss.rules;for(var i=0;i<r.length;i++){if(r[i].selectorText==sel){if(ss.deleteRule)ss.deleteRule(i);else if(ss.removeRule)ss.removeRule(i);return true;}}}},icon:{'_':{cls:{tag:'i'},parse:function(i){if(i.substr(0,8)=='cssIcon='){i=i.substr(8);i=i.split('{');var css='';if(i.length>1){css=i[1].split('}').shift();}
i=i[0];return{t:'cls',i:i,css:css};}else if(i.substr(0,8)=='svgIcon='){i=i.substr(8);i=i.split('{');var css='';if(i.length>1){css=i[1].split('}').shift();}
i=i[0];i=i.split(':');var s=[];var cn='';if(i[1]){var d=i[1].split(',');var re=/^[0-9]/;for(var k=0;k<d.length;k++){if(re.test(d[k]))s=d[k].split(' ');else cn=d[k];}}
i=i[0];return{t:'svg',i:i,css:css,s:s,cn:cn};}else return{t:'img',i:i};}},html:function(i){if(typeof i!='string')return'';i=this._.parse(i);var a=typeof arguments[1]=='string'?' '+arguments[1]:'';if(i.t=='cls'){var cre=/class="([^"]+)"/i;var cls=cre.test(a)?' '+cre.exec(a)[0].replace(cre,'$1'):'';a=a.replace(cre,'');if(i.css!=''){var sre=/style="([^"]+)"/i;var sty=sre.test(a)?sre.exec(a)[0].replace(sre,'$1'):'';a=a.replace('style="'+sty+'"','');a=a+' style="'+sty+';'+i.css+'"';}
return'<'+this._.cls.tag+' class="'+i.i+cls+'"'+a+'></'+this._.cls.tag+'>';}else if(i.t=='svg'){var s=i.s;if(s.length>1)var s=' width="'+s[0]+'" height="'+s[1]+'"';else if(s.length==1)var s=' width="'+s[0]+'" height="'+s[0]+'"';var cn=i.cn;if(cn!='')cn=' class="'+cn+'"';if(i.css!=''){var sre=/style="([^"]+)"/i;var sty=sre.test(a)?sre.exec(a)[0].replace(sre,'$1'):'';a=a.replace('style="'+sty+'"','');a=a+' style="'+sty+';'+i.css+'"';}
return'<svg'+cn+s+a+'><use x="0" y="0" width="100%" height="100%" xlink:href="'+i.i+'"/></svg>';}else{return'<img src="'+i.i+'"'+a+' />';}},element:function(i){if(typeof i!='string')return false;i=this._.parse(i);if(i.t=='cls'){var e=document.createElement(this._.cls.tag);e.className=i.i;if(i.css!='')$ss(e,$gs(e)+';'+i.css);}else if(i.t=='svg'){var svgNS='http://www.w3.org/2000/svg';var e=document.createElementNS(svgNS,'svg');e.setAttribute('class',i.cn);if(i.s.length>1){e.setAttribute('width',i.s[0]);e.setAttribute('height',i.s[1]);}else if(i.s.length==1){e.setAttribute('width',i.s[0]);e.setAttribute('height',i.s[0]);}
var ue=document.createElementNS(svgNS,'use');ue.setAttribute('x','0');ue.setAttribute('y','0');ue.setAttribute('width','100%');ue.setAttribute('height','100%');ue.setAttributeNS('http://www.w3.org/1999/xlink','href',i.i);e.appendChild(ue);if(i.css!='')$ss(e,$gs(e)+';'+i.css);}else{var e=document.createElement('img');e.src=i.i;}
return e;},update:function(e,i){if(typeof i!='string')return false;i=this._.parse(i);if(i.t=='cls'){e.className=i.i;if(i.css!='')$ss(e,$gs(e)+';'+i.css);}else if(i.t=='svg'){if(e.childNodes){e.childNodes[0].setAttributeNS('http://www.w3.org/1999/xlink','href',i.i);}
if(i.css!='')$ss(e,$gs(e)+';'+i.css);if(i.cn!='')e.setAttribute('class',i.cn);if(i.s.length>1){e.setAttribute('width',i.s[0]);e.setAttribute('height',i.s[1]);}else if(i.s.length==1){e.setAttribute('width',i.s[0]);e.setAttribute('height',i.s[0]);}}else e.src=i.i;}},json:{compress:function(o,m){var f=typeof arguments[2]=='function'?arguments[2]:false;var m2={c:{},e:{},pn:'a',p:'a',pp:'',pu:false}
var n=this._c(o,m2,f);$u.o.assign(m,m2.e);return n;},_c:function(o,m,f){if(o==null)return o;var keep=true;if(o.constructor==Array){var n=[];for(var i=0;i<o.length;i++){n.push(this._c(o[i],m,f));}}else if(o.constructor==Object){var n={};for(var p in o){if(f)keep=f(p,o[p]);if(keep){if(typeof m.c[p]=='undefined'){m.c[p]=m.pn;m.e[m.pn]=p;if(m.pu){if(m.p<'Z')m.p=String.fromCharCode(m.p.charCodeAt(0)+1);else{m.p='a';m.pu=false;if(m.pp=='')m.pp='a';else m.pp=String.fromCharCode(m.pp.charCodeAt(0)+1);}}else{if(m.p<'z')m.p=String.fromCharCode(m.p.charCodeAt(0)+1);else{m.p='A';m.pu=true}}
m.pn=m.pp+m.p;}
n[m.c[p]]=this._c(o[p],m,f);}}}else n=o;return n;},expand:function(o,m){if(o==null)return o;if(o.constructor==Array){var n=[];for(var i=0;i<o.length;i++){n.push(this.expand(o[i],m));}}else if(o.constructor==Object){var n={};for(var p in o){n[m[p]]=this.expand(o[p],m);}}else n=o;return n;},preparse:function(o){if(o.constructor==Array){for(var i=0;i<o.length;i++){this.preparse(o[i]);}}else if(o.constructor==Object){for(var p in o){if(o[p].constructor==Function)o[p]={'*a5type':'function','*data':o[p].toString()};else if(o[p].constructor==Date)o[p]={'*a5type':'date','*data':o[p].getTime()};else if(o.constructor==Object)this.preparse(o[p]);}}},postparse:function(o){if(o.constructor==Array){for(var i=0;i<o.length;i++){this.postparse(o[i]);}}else if(o.constructor==Object){for(var p in o){if(o.constructor==Object){if(typeof o[p]['*a5type']!='undefined'){if(o[p]['*a5type']=='function'){var f=o[p]['*data']
var fd=f.substring(8,f.indexOf('{')).trim();var fb=f.substring(f.indexOf('{')+1,f.length-1);fd=fd.substring(fd.indexOf('(')+1,fd.length-1).split(',');o[p]=null;if(fd.length==0)o[p]=new Function(fb);else if(fd.length==1)o[p]=new Function(fd[0],fb);else if(fd.length==2)o[p]=new Function(fd[0],fd[1],fb);else if(fd.length==3)o[p]=new Function(fd[0],fd[1],fd[2],fb);else if(fd.length==4)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fb);else if(fd.length==5)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fb);else if(fd.length==6)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fd[5],fb);else if(fd.length==7)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fd[5],fd[6],fb);else if(fd.length==8)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fd[5],fd[6],fd[7],fb);else if(fd.length==9)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fd[5],fd[6],fd[7],fd[8],fb);else if(fd.length==10)o[p]=new Function(fd[0],fd[1],fd[2],fd[3],fd[4],fd[5],fd[6],fd[7],fd[8],fd[9],fb);}else if(o[p]['*a5type']=='date')o[p]=new Date(o[p]['*data']);}else this.postparse(o[p]);}}}}},object:{each:function(d,f){var p=typeof arguments[2]!='undefined'?arguments[2]:[];var r=[];var v=null;if(d.constructor==Array){for(var i=0;i<d.length;i++){if(d[i]!=null){if(d[i].constructor==Array||d[i].constructor==Object){r=r.concat(this.each(d[i],f,p.concat(i)));continue;}}
v=f(i,d[i],p.concat(i),r);if(typeof v!='undefined')d[i]=v;}}else if(d.constructor==Object){for(var prop in d){if(d[prop]!=null){if(d[prop].constructor==Array||d[prop].constructor==Object){r=r.concat(this.each(d[prop],f,p.concat(prop)));continue;}}
v=f(prop,d[prop],p.concat(prop),r);if(typeof v!='undefined')d[prop]=v;}}
return r;},set:function(d,p,v){if(typeof p=='string'){if(p.indexOf('[')==0)p=p.substr(1);p=p.replace(/\]/g,'');p=p.split(/[\[\.]/g);}
for(var i=0;i<p.length-1;i++){if(typeof d[p[i]]!='undefined')d=d[p[i]];else return false;}
if(typeof d[p[p.length-1]]!='undefined'){d[p[p.length-1]]=v;return true;}
return false;},get:function(d,p){if(typeof p=='string'){if(p.indexOf('[')==0)p=p.substr(1);p=p.replace(/\]/g,'');p=p.split(/[\[\.]/g);}
for(var i=0;i<p.length-1;i++){if(typeof d[p[i]]!='undefined')d=d[p[i]];else return null;}
if(typeof d[p[p.length-1]]!='undefined')return d[p[p.length-1]];return null;}},template:{formats:{'uppercase':function(v){return String(v).toUpperCase();},'lowercase':function(v){return String(v).toLowerCase();},'number':function(v){if(typeof v!='number')v=$u.s.toNum(''+v);var frm=typeof arguments[1]=='string'?arguments[1]:'';return v.toFormat(frm);},'date':function(v){var frm=typeof arguments[1]=='string'?arguments[1]:'';return v.toFormat(frm);},'dateString':function(v,formatIn,formatOut){if(typeof formatOut=='undefined')formatOut=formatIn;var d=A5.stringToDate(v,formatIn);return d.toFormat(formatOut);},'escape':function(v){v=String(v).replace(/\&/g,'&amp;');v=v.replace(/\</g,'&lt;');v=v.replace(/\>/g,'&gt;');v=v.replace(/"/g,'&quot;');return v;}},parse:function(t){var p={t:'',n:'',html:[],h:false,f:false,m:'',e:[],r:{},st:[],'*c':0,'*p':null,tf:'',hr:false};t=t.replace(/\\\{/g,'__A5OPENCURRLY__');t=t.replace(/\\\}/g,'__A5CLOSECURRLY__');this._parse(t,p);p.t=this._subParse(p.t,p,'item','',p);return p;},_parse:function(t,p){var m=t.match(/\{\/[^}]+/g);p.ml=0;if(m!=null){p.ml=m.length;var ntn='';var ntvn='';var ntnp='';var ntnf='';var ntp=0;for(var i=m.length-1;i>=0;i--){ntn=m[i].substr(2);ntnp=ntn;ntvn=ntn;ntnf='';if((ntn[0]!='*'||ntn.substr(0,5)=='*root')&&(t.indexOf('{'+ntn+'}')!=-1||t.indexOf('{'+ntn+'@')!=-1)&&t.indexOf('{/'+ntn+'}')!=-1){if(ntn=='*root'){p.hr=true;ntvn='root';}
if(t.indexOf('{'+ntn+'@')!=-1){ntnp=t.substr(t.indexOf('{'+ntn+'@')+1);ntnp=ntnp.substr(0,ntnp.indexOf('}'));ntnf=ntnp.split('@').pop().trim();}
ntp={n:ntvn,t:'',html:[],h:'',f:'',m:'',e:[],r:{},st:[],'*c':0,'*p':null,tf:ntnf};var tt=t.split('{'+ntnp+'}');tt.shift();tt=tt.join('{'+ntnp+'}').split('{/'+ntn+'}')[0];t=t.replace('{'+ntnp+'}'+tt+'{/'+ntn+'}','<template:'+ntvn+' />');ntp=this._parse(tt,ntp);if(ntp.t.indexOf('{*header}')!=-1){ntp.h=ntp.t.split('{*header}')[1].split('{/*header}')[0];ntp.t=ntp.t.replace('{*header}'+ntp.h+'{/*header}','');ntp.h=this._subParse(ntp.h,ntp,'set',ntn,p);}
if(ntp.t.indexOf('{*footer}')!=-1){ntp.f=ntp.t.split('{*footer}')[1].split('{/*footer}')[0];ntp.t=ntp.t.replace('{*footer}'+ntp.f+'{/*footer}','');ntp.f=this._subParse(ntp.f,ntp,'set',ntn,p);}
if(ntp.t.indexOf('{*empty}')!=-1){ntp.m=ntp.t.split('{*empty}')[1].split('{/*empty}')[0];ntp.t=ntp.t.replace('{*empty}'+ntp.m+'{/*empty}','');ntp.m=this._subParse(ntp.m,ntp,'set',ntn,p);}
ntp.t=this._subParse(ntp.t,ntp,'item',ntn,p);p.st.push(ntp);i=i-ntp.ml;}}}
p.t=t;return p;},_subParse:function(t,p,s,c,pp){var m=t.match(/\{\@[^}]+/g);if(m!=null){var fn='';var expr='';var fnn='';var a=false;for(var i=0;i<m.length;i++){a=false;fn=m[i].substr(2)
expr=fn.trim().split('(');fnn=expr.shift();expr=expr.join('(');if(expr!=''){expr='['+expr.substr(0,expr.length-1)+']';expr=expr.split('[countOneBased]').join('arguments[1].countOneBased');expr=expr.split('[count]').join('arguments[1].count');expr=expr.split('[path]').join('arguments[1].path');expr=expr.split('[value]').join('arguments[0]');expr=expr.split('[temp]').join('arguments[1].temp');expr=expr.split('[root]').join('arguments[1].root');expr=expr.replace(/(\[parent(\.parent)*\])/gi,function(v){v=v.split('.');return'arguments[1].parent['+(v.length)+']';});expr=expr.replace(/__A5OPENCURRLY__/g,'{');expr=expr.replace(/__A5CLOSECURRLY__/g,'}');a=Function('if(arguments[0] == null) return []; with(arguments[0]){try{var v = '+expr+'; if(v == null) return []; return v;} catch(err){ console.log(\'ERROR: template function call\');  return [];};};');}
p.e.push({n:fnn,s:s,t:'func',a:a,i:i});t=t.replace('{@'+fn+'}','<func:'+(p.e.length-1)+' />');}}
m=t.match(/\{\*partial [^}]+/g);if(m!=null){var par='';for(var i=0;i<m.length;i++){par=m[i].substr(10);p.e.push({n:par,s:s,t:'partial'});t=t.replace('{*partial '+par+'}','<partial:'+par+' />');}}
m=t.match(/\{\*if(?:\{\*if(?:\{\*if(?:\{\*if[\s\S]+?\{\*endif\}|[\s\S])+?\{\*endif\}|[\s\S])+?\{\*endif\}|[\s\S])+?\{\*endif\}/g);if(m!=null){var condBlock='';var condElse='';var condCode='';var condFunc=[];var condP={};var aReg=/[A-z0-9\.\[\]]+\[-[^\]]+\]/g;var tVal=null;var t2Val='';var t3Val='';for(var i=0;i<m.length;i++){condFunc=['with(arguments[0]){'];condP={st:[],f:0,s:s,t:'condition'};condBlock=m[i].substr(4,m[i].length-12);if(condBlock.indexOf('{*endif}')!=-1)condBlock=this._subParse(condBlock,p,s,c,pp);condBlock=condBlock.split('{*else}');condElse='';if(condBlock.length>1)condElse=condBlock.pop();condBlock=condBlock[0];condBlock=condBlock.split('{*elseif ');for(var j=0;j<condBlock.length;j++){condCode=condBlock[j].split('}');condFunc.push('if('+condCode.shift()+') return '+j+';');condCode=condCode.join('}');condP.st.push(this.parse(condCode));}
if(condElse!=''){condFunc.unshift('if(arguments[0] == null) return '+condP.st.length+';');condFunc.push('return '+condP.st.length+';');condP.st.push(this.parse(condElse));}else{condFunc.push('return -1;');condFunc.unshift('if(arguments[0] == null) return -1;');}
condFunc.push('}');condFunc=condFunc.join('\n');condFunc=condFunc.split('[countOneBased]').join('arguments[1].countOneBased');condFunc=condFunc.split('[count]').join('arguments[1].count');condFunc=condFunc.split('[path]').join('arguments[1].path');condFunc=condFunc.split('[value]').join('arguments[0]');condFunc=condFunc.split('[temp]').join('arguments[1].temp');condFunc=condFunc.split('[root]').join('arguments[1].root');condFunc=condFunc.replace(/(\[parent(\.parent)*\])/gi,function(v){v=v.split('.');return'arguments[1].parent['+(v.length)+']';});condFunc=condFunc.replace(/__A5OPENCURRLY__/g,'{');condFunc=condFunc.replace(/__A5CLOSECURRLY__/g,'}');tVal=aReg.exec(condFunc);while(tVal!=null){t2Val=tVal[0];t2Val=t2Val.split('[');t3Val=t2Val.pop();t2Val=t2Val.join('[');t2Val=t2Val+'['+t2Val+'.length'+t3Val;condFunc=condFunc.replace(tVal[0],t2Val);tVal=aReg.exec(condFunc);}
condFunc='try{'+condFunc+'} catch(err){ console.log(\'ERROR: template conditional\'); return -1;}';condP.f=Function(condFunc);p.e.push(condP);t=t.replace(m[i],'<condition:'+(p.e.length-1)+' />');}}
m=t.match(/\{[^\}]+\}/g);if(m!=null){var expr='';var errTxt=null;var tExpr='';var frm='';var frmName='';var frmArgs='';var sReg=/[\W]/;var aReg=/[A-z0-9\.\[\]]+\[-[^\]]+\]/g;var tVal=null;var t2Val='';var t3Val='';var ip=false;for(var i=0;i<m.length;i++){if(((s=='item'&&typeof p.r[m[i]]=='undefined')||(s=='set'&&typeof pp.r[m[i]]=='undefined'))&&m[i].charAt(1)!='*'&&m[i].charAt(1)!='/'){expr=m[i].substr(1,m[i].length-2);if(sReg.test(expr)&&m[i]!='{[value]}'){expr=expr.split('[countOneBased]').join('arguments[1].countOneBased');expr=expr.split('[count]').join('arguments[1].count');expr=expr.split('[path]').join('arguments[1].path');expr=expr.split('[value]').join('arguments[0]');expr=expr.split('[temp]').join('arguments[1].temp');expr=expr.split('[root]').join('arguments[1].root');expr=expr.replace(/(\[parent(\.parent)*\])/gi,function(v){v=v.split('.');return'arguments[1].parent['+(v.length)+']';});expr=expr.replace(/__A5OPENCURRLY__/g,'{');expr=expr.replace(/__A5CLOSECURRLY__/g,'}');expr=expr.replace(/\\\:/g,'__A5COLON__');errTxt=null;if(expr.indexOf('||')!=-1){expr=expr.split('||');errTxt=expr.pop();errTxt=$u.o.toJSON(errTxt);expr=expr.join('||');}
if(expr.indexOf(':')!=-1){expr=expr.split(':');tExpr=expr.shift();frm=expr.join(':').trim();expr=tExpr;frm=frm.split('(');frmName=frm.shift().trim();frmArgs=frm.join('(');if(frmArgs!='')frmArgs=','+frmArgs.substr(0,frmArgs.length-1);expr=expr+'; if(v != null) v = A5.u.template.formats[\''+frmName+'\']('+expr+frmArgs+')';}
expr=expr.replace(/__A5COLON__/g,':');tVal=aReg.exec(expr);while(tVal!=null){t2Val=tVal[0];t2Val=t2Val.split('[');t3Val=t2Val.pop();t2Val=t2Val.join('[');t2Val=t2Val+'['+t2Val+'.length'+t3Val;expr=expr.replace(tVal[0],t2Val);tVal=aReg.exec(expr);}}
if(s=='set'){if((!sReg.test(expr)||m[i]=='{[value]}')&&errTxt==null)pp.r[m[i]]=expr;else pp.r[m[i]]=Function('if(arguments[0] == null) return '+errTxt+'; with(arguments[0]){try{var v = '+expr+'; if(v == null) return '+errTxt+'; return v;} catch(err){ console.log(\'ERROR: template expression\'); return '+errTxt+';};};');}else{if((!sReg.test(expr)||m[i]=='{[value]}')&&errTxt==null)p.r[m[i]]=expr;else p.r[m[i]]=Function('if(arguments[0] == null) return '+errTxt+'; with(arguments[0]){try{var v = '+expr+'; if(v == null) return '+errTxt+'; return v;} catch(err){ console.log(\'ERROR: template expression\'); return '+errTxt+';};};');}}}}
return t;},expand:function(data,set){if(typeof set=='string')set={template:set};var temp=typeof arguments[2]!='undefined'?arguments[2]:{};$u.o.assign(set,{template:'',nullValue:'',partials:{}},true);if(typeof set.nullHTML!='undefined')set.nullValue=set.nullHTML;for(var p in set.partials){if(typeof set.partials[p]=='string')set.partials[p]=this.parse(set.partials[p]);}
if(typeof set.template=='string')t=this.parse(set.template);else t=set.template;if(t.hr){t['*p']=[];this._e({'root':data},t,set,'',temp,data,[data],true);}else{var dd=false;if(data!=null){if(data.constructor==Array)dd=true;}
if(dd){for(var i=0;i<=data.length-1;i++){t['*p']=[{type:'array',property:'root',index:i}];this._e(data[i],t,set,'',temp,data,[data],true);t['*c']++;}}else{t['*p']=[{type:'object',property:'root',index:0}];this._e(data,t,set,'',temp,data,[data],true);}}
var html=t.html.join('');html=html.replace('__A5OPENCURRLY__','{');html=html.replace('__A5CLOSECURRLY__','}');t.html=[];return html;},_e:function(data,t,set,prefix,temp,root,parent,addParent){if(addParent)parent.unshift(data);var html=t.t;for(var i=0;i<t.st.length;i++){if(typeof data[t.st[i].n]=='undefined')html=html.replace('<template:'+t.st[i].n+' />',this._rs(t.st[i].m));else{var tData=data[t.st[i].n];if(tData.constructor==Array){if(t.st[i].tf!=''){var f=this._gf(t.st[i].tf.split('.'));if(f)tData=f.c([].concat(tData),temp,root,parent);}
if(tData.length==0)html=html.replace('<template:'+t.st[i].n+' />',this._rs(t.st[i].m));else{t.st[i]['*c']=0;for(var j=0;j<tData.length;j++){t.st[i]['*p']=t['*p'].concat([{type:'array',property:t.st[i].n,index:j}]);this._e(tData[j],t.st[i],set,prefix+t.st[i].n+'.',temp,root,parent,true);t.st[i]['*c']++;}
html=html.replace('<template:'+t.st[i].n+' />',this._rs(t.st[i].h+t.st[i].html.join('')+t.st[i].f));}}else{t.st[i]['*p']=t['*p'].concat([{type:'object',property:t.st[i].n,index:0}]);this._e(tData,t.st[i],set,prefix+t.st[i].n+'.',temp,root,parent,true);html=html.replace('<template:'+t.st[i].n+' />',this._rs(t.st[i].h+t.st[i].html.join('')+t.st[i].f));}
html=this._eCmds(html,t.st[i],tData,data,'set',set,prefix,temp,root,parent);t.st[i].html=[];}}
html=this._eCmds(html,t,data,data,'item',set,prefix,temp,root,parent);var val='';for(var r in t.r){if(r=='{[value]}')val=data;else if(typeof t.r[r]=='string')val=data[t.r[r]];else val=t.r[r].call(this,data,{count:t['*c'],countOneBased:t['*c']+1,path:t['*p'],temp:temp,root:root,parent:parent});if(val==null||typeof val=='undefined')html=html.split(String(r)).join(set.nullValue);else html=html.split(String(r)).join(val);}
t.html.push(html);if(addParent)parent.shift();},_eCmds:function(html,t,data,pData,s,set,prefix,temp,root,parent){var e=t.e;for(var i=e.length-1;i>=0;i--){if(e[i].s==s){if(e[i].t=='func'){var f=this._gf(e[i].n.split('.'));if(f){if(e[i].a)html=html.replace('<func:'+i+' />',this._rs(f.c.apply(f.s,e[i].a.call(this,data,{count:t['*c'],countOneBased:t['*c']+1,path:t['*p'],temp:temp,root:root,parent:parent}))));else{if(s=='set')html=html.replace('<func:'+i+' />',this._rs(f.c(pData,t.n,temp,root,parent)));else html=html.replace('<func:'+i+' />',this._rs(f.c(data,'',temp,root,parent)));}}}else if(e[i].t=='partial'){if(s=='set')this._e(pData,set.partials[e[i].n],set,prefix,temp,root,parent);else this._e(data,set.partials[e[i].n],set,prefix,temp,root,parent);var tHTML=set.partials[e[i].n].html.join('');set.partials[e[i].n].html=[];html=html.replace('<partial:'+e[i].n+' />',this._rs(tHTML));}else if(e[i].t=='condition'){if(s=='set')var indx=e[i].f.call(this,pData,{count:t['*c'],countOneBased:t['*c']+1,path:t['*p'],temp:temp,root:root,parent:parent});else var indx=e[i].f.call(this,data,{count:t['*c'],countOneBased:t['*c']+1,path:t['*p'],temp:temp,root:root,parent:parent});var tHTML='';if(indx>-1){e[i].st[indx]['*c']=t['*c'];e[i].st[indx]['*p']=t['*p'];this._e(data,e[i].st[indx],set,prefix,temp,root,parent);var tHTML=e[i].st[indx].html.join('');e[i].st[indx].html=[];}
html=html.replace('<condition:'+i+' />',this._rs(tHTML));}}}
return html;},_rs:function(s){return s.split('$$').join('$$$$');},_gf:function(n){var c=typeof arguments[1]!='undefined'?arguments[1]:{c:window,s:window};c.s=c.c;c.c=c.c[n.shift()];if(typeof c.c=='undefined')return false;if(n.length!=0)c=this._gf(n,c);return c;}},element:{cssGroup:function(eles,settings){$u.o.assign(settings,{firstClassName:false,lastClassName:false,middleClassName:false},true);for(var i=0;i<eles.length;i++){if(settings.firstClassName)$rcn(eles[i],settings.firstClassName);if(settings.lastClassName)$rcn(eles[i],settings.lastClassName);if(settings.middleClassName)$acn(eles[i],settings.middleClassName);}
for(var i=0;i<eles.length;i++){if(eles[i].style.display!='none'){if(settings.firstClassName)$acn(eles[i],settings.firstClassName);if(settings.middleClassName)$rcn(eles[i],settings.middleClassName);break;}}
for(var i=eles.length-1;i>=0;i--){if(eles[i].style.display!='none'){if(settings.lastClassName)$acn(eles[i],settings.lastClassName);if(settings.middleClassName)$rcn(eles[i],settings.middleClassName);break;}}},toggle:function(ele,anim){if(typeof anim!='object')anim={};if(ele.style.display=='none'){if(typeof anim.show!='undefined')A5.u.element.show(ele,anim.show);else A5.u.element.show(ele,anim);}else{if(typeof anim.hide!='undefined')A5.u.element.hide(ele,anim.hide);else A5.u.element.hide(ele,anim);}},metrics:function(ele){var cs={paddingTop:'',paddingBottom:'',paddingRight:'',paddingLeft:'',borderTopWidth:'',borderRightWidth:'',borderBottomWidth:'',borderLeftWidth:''};if(typeof window.getComputedStyle!='undefined')cs=window.getComputedStyle(ele);else if(ele.currentStyle)cs=ele.currentStyle;var hPad=0;if(cs.paddingLeft!='')hPad=hPad+A5.u.convertUnits(cs.paddingLeft,'px');if(cs.paddingRight!='')hPad=hPad+A5.u.convertUnits(cs.paddingRight,'px');if(cs.borderLeftWidth!='')hPad=hPad+A5.u.convertUnits(cs.borderLeftWidth,'px');if(cs.borderRightWidth!='')hPad=hPad+A5.u.convertUnits(cs.borderRightWidth,'px');var vPad=0;if(cs.paddingTop!='')vPad=vPad+A5.u.convertUnits(cs.paddingTop,'px');if(cs.paddingBottom!='')vPad=vPad+A5.u.convertUnits(cs.paddingBottom,'px');if(cs.borderTopWidth!='')vPad=vPad+A5.u.convertUnits(cs.borderTopWidth,'px');if(cs.borderBottomWidth!='')vPad=vPad+A5.u.convertUnits(cs.borderBottomWidth,'px');return{width:ele.offsetWidth,height:ele.offsetHeight,innerWidth:ele.offsetWidth-hPad,innerHeight:ele.offsetHeight-vPad};},hide:function(ele,anim){if(typeof anim!='object')anim={};var animTypes=['fade','slide','blind','clip','drop','explode','fold','puff','scale','size','pulsate'];var func=typeof anim.onComplete!='undefined'?anim.onComplete:null;if($u.a.find(animTypes,anim.type)!=-1&&typeof jQuery!='undefined'){if(ele.style.display!='none')$sa(ele,'A5StyleDisplay',ele.style.display);if(jQuery(ele).queue().length!=0)jQuery(ele).stop(true,true);else if(ele.style.display=='none'&&!anim.force)return false;if(anim.force){var dVal=$ga(ele,'A5StyleDisplay');if(typeof dVal=='string')ele.style.display=dVal;else ele.style.display='';}
if(anim.type=='slide')jQuery(ele).slideUp(anim.duration,func);else if(anim.type=='fade')jQuery(ele).fadeOut(anim.duration,func);else jQuery(ele).hide(anim.type,anim.duration,func);}else{if(ele.style.display=='none')return false;$sa(ele,'A5StyleDisplay',ele.style.display);ele.style.display='none';if(func)func();}},show:function(ele,anim){if(typeof anim!='object')anim={};var animTypes=['fade','slide','blind','clip','drop','explode','fold','puff','scale','size','pulsate'];var func=typeof anim.onComplete!='undefined'?anim.onComplete:null;if($u.a.find(animTypes,anim.type)!=-1&&typeof jQuery!='undefined'){if(jQuery(ele).queue().length!=0)jQuery(ele).stop(true,true);else if(ele.style.display!='none'&&!anim.force)return false;if(anim.force)ele.style.display='none';if(anim.type=='slide')jQuery(ele).slideDown(anim.duration,func);else if(anim.type=='fade')jQuery(ele).fadeIn(anim.duration,func);else jQuery(ele).show(anim.type,anim.duration,func);}else{if(ele.style.display!='none')return false;var dVal=$ga(ele,'A5StyleDisplay');if(typeof dVal=='string')ele.style.display=dVal;else ele.style.display='';if(func)func();}},setContent:function(ele,html){ele=$(ele);var scrl=typeof arguments[2]!='undefined'?arguments[2]:false;if(ele.firstChild){if(ele.firstChild.nodeType==1){if(ele.firstChild.id==ele.id+'.SCROLLWRAPPER')ele=ele.firstChild;}}
if(typeof html=='object'){ele.innerHTML='';ele.appendChild(html);}else ele.innerHTML=html;if(scrl){if(typeof scrl.element!='undefined')A5.u.element.setScroll(ele,scrl.element,scrl.settings);else A5.u.element.setScroll(ele,scrl.x,scrl.y,scrl.settings);}},setScroll:function(ele,x,y,s){ele=$(ele);if(ele==false)return false;if(ele.id.split('.').pop()=='SCROLLWRAPPER')ele=ele.parentNode;var cScrl=$ga(ele,'A5CustomScroll');var tEle=false;if(typeof x=='object'||typeof x=='string'){var tEle=$(x);s=y;x=false;y=false;}
if(typeof s!='object')s={};$u.o.assign(s,{fireEvent:false,mode:'into-view',axis:'both',offset:{x:0,y:0},animation:{allow:false,duration:300}},true);if(tEle){var cs=A5.u.element.getScroll(ele);var pEle=tEle.parentNode;var oT=tEle.offsetTop;var oL=tEle.offsetLeft;if(ele.style.position!='absolute'&&ele.style.position!='relative'){oT-=ele.offsetTop;oL-=ele.offsetLeft;}
while(pEle!=ele){if(pEle.style.position=='absolute'||pEle.style.position=='relative'){oT+=pEle.offsetTop;oL+=pEle.offsetLeft;}
pEle=pEle.parentNode;}
if(s.mode=='top')y=oT-s.offset.y;else if(s.mode=='bottom')y=(oT+tEle.offsetHeight-ele.offsetHeight)+s.offset.y;else{if(cs.left>oL||ele.offsetWidth<tEle.offsetWidth)x=oL-s.offset.x;else if((cs.left+ele.offsetWidth)<(oL+tEle.offsetWidth))x=(oL+tEle.offsetWidth-ele.offsetWidth)+s.offset.x;if(cs.top>oT||ele.offsetHeight<tEle.offsetHeight)y=oT-s.offset.y;else if((cs.top+ele.offsetHeight)<(oT+tEle.offsetHeight))y=(oT+tEle.offsetHeight-ele.offsetHeight)+s.offset.y;}}
if(typeof cScrl=='string'&&cScrl!=''){if(!ele.firstChild)return false;else if(ele.firstChild.id!=ele.id+'.SCROLLWRAPPER')return false;cScrl=cScrl.split(',');var cSX=Number(cScrl[0]);var cSY=Number(cScrl[1]);if(typeof x=='number'&&s.axis!='y')cSX=x;if(typeof y=='number'&&s.axis!='x')cSY=y;var sW=Math.max(ele.scrollWidth+cSX-ele.offsetWidth,0);var sH=Math.max(ele.firstChild.offsetHeight-ele.offsetHeight,0);if(cSX<0)cSX=0;else if(cSX>sW)cSX=sW;if(cSY<0)cSY=0;else if(cSY>sH)cSY=sH;var sr=A5.u.drag._snap(ele,cSX,cSY);cSX=sr.x;cSY=sr.y;$sa(ele,'A5CustomScroll',cSX+','+cSY);if(s.animation.allow){ele.firstChild.style[A5.u.css.properties.transitionDOM]=A5.u.css.properties.transform+' '+s.animation.duration+'ms ease';ele.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D((cSX*-1),(cSY*-1));}else{ele.firstChild.style[A5.u.css.properties.transitionDOM]='';if(A5.flags.iOSVersion!=-1)ele.firstChild.style[A5.u.css.properties.transformDOM]='translate('+(cSX*-1)+'px,'+(cSY*-1)+'px)';else ele.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D((cSX*-1),(cSY*-1));}
if(A5.u.drag._st[ele.id]){clearInterval(A5.u.drag._st[ele.id].inter);delete A5.u.drag._st[ele.id];}
var sIBEle=$(ele.id+'.SCROLLINDICATOR.X');if(sIBEle){sIBEle.style[A5.u.css.properties.transitionDOM]='';sIBEle.style.display='none';}
sIBEle=$(ele.id+'.SCROLLINDICATOR.Y');if(sIBEle){sIBEle.style[A5.u.css.properties.transitionDOM]='';sIBEle.style.display='none';}}else{if(typeof x=='number'&&s.axis!='y')ele.scrollLeft=x;if(typeof y=='number'&&s.axis!='x')ele.scrollTop=y;}
if(s.fireEvent)$e.execute(ele,'scroll');},getScroll:function(ele){ele=$(ele);if(ele==false)return false;if(ele.id.split('.').pop()=='SCROLLWRAPPER')ele=ele.parentNode;var cScrl=$ga(ele,'A5CustomScroll');if(cScrl){cScrl=cScrl.split(',');var cSX=Number(cScrl[0]);var cSY=Number(cScrl[1]);if(A5.u.drag._st[ele.id]){var swcs={};swcs[A5.u.css.properties.transformDOM]='';if(typeof window.getComputedStyle!='undefined')swcs=window.getComputedStyle(ele.firstChild);else if(ele.currentStyle)swcs=ele.firstChild.currentStyle;var transform={e:0,f:0};if(A5.flags.isFireFox||A5.flags.isOpera){var mRE=/matrix\(\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*\,\s*(-?\d+(?:\.\d+)?)\s*,\s*(-?\d+(?:\.\d+)?)\s*\)/;var mREM=swcs[A5.u.css.properties.transformDOM].match(mRE);if(mREM){transform.e=mREM[1];transform.f=mREM[2];}}else if(A5.flags.isWebKit){transform=new WebKitCSSMatrix(swcs[A5.u.css.properties.transformDOM]);}else{transform=new MSCSSMatrix(swcs[A5.u.css.properties.transformDOM]);}
cSX=Math.round(transform.e)*-1;cSY=Math.round(transform.f)*-1;}
var sW=ele.scrollWidth+cSX;var sH=ele.firstChild?ele.firstChild.offsetHeight:ele.offsetHeight;return{top:cSY,left:cSX,width:sW,height:sH};}
return{top:ele.scrollTop,left:ele.scrollLeft,width:ele.scrollWidth,height:ele.scrollHeight};}}}
A5.PanelCard=Class.create({initialize:function(settings){this.contId='';this.renderMode='default';this._initLow.apply(this,arguments);this._ieCludge=false;if(document.all&&!document.createElement('canvas').getContext)this._ieCludge=true;if(this.onInitialize.constructor==Function)this.onInitialize.call(this);},_initLow:function(settings){$u.o.assign(this,{theme:'',override:'base',placeholderHTML:'',className:'',header:{show:false,scroll:false,html:'',className:'',style:0},body:{scroll:{axis:'both'},content:{type:'',src:'',data:''},className:'',style:0},overlay:{show:false,html:''},footer:{show:false,scroll:false,html:'',className:'',style:0},onSize:0,onInitialize:0,onCreate:0,onBeforeDestroy:0,onDestroy:0,width:0,height:0,_sizing:'',_beforeBody:0,_afterBody:0,_onSetSize:0,_panelType:'panelCard',_name:'',_title:'',_w:0,_h:0});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'panelCard');$u.o.assign(this,settings);A5.overrides.assign(this,'panelCard',this.override);},create:function(){if(this._created)return $(this.contId);var t=typeof arguments[0]!='undefined'?arguments[0]:false;var ci=typeof arguments[1]!='undefined'?arguments[1]:false;var cl=this.contId!=''?true:false;var ele=false;if(!ci){if(cl)ele=$(this.contId);if(ele==false){if(t){this.contId=t;if($(this.contId))var ele=$(this.contId);else{var ele=document.createElement('div');ele.id=this.contId;}}else{this.contId=A5.u.getUniqueId();var ele=document.createElement('div');ele.id=this.contId;}
cl=false;}}else{this.contId=t;ele=document.createElement('div');ele.id=this.contId;if(this.renderMode=='auto-create-destroy'||this.renderMode=='auto-create'||this.renderMode=='programmatic'){ele.innerHTML=this.placeholderHTML;return ele;}}
if(!cl){ele.className=this.className;ele.style.position='relative';}
ele.innerHTML='';var hEle=document.createElement('div');hEle.id=this.contId+'.HEADER';hEle.className=this.header.className;if(typeof this.header.style=='string'||typeof this.header.style=='object')$ss(hEle,this.header.style);hEle.innerHTML=this._parseHTML(this.header.html);if(hEle.style.overflow=='')hEle.style.overflow='hidden';if(!this.header.show)hEle.style.display='none';hEle.style.position='relative';if(this.header.scroll){hEle.style.overflow='auto';if(typeof this.header.scroll=='object'){if(typeof this.header.scroll.theme=='undefined')this.header.scroll.theme=this.theme;A5.u.drag.add(hEle,'scroll',this.header.scroll);}else A5.u.drag.add(hEle,'scroll',{axis:'both',theme:this.theme});}
ele.appendChild(hEle);if(this._beforeBody.constructor==Function)this._beforeBody(ele,bEle);if(this._panelType=='panelCard'){if(this.body.content.type=='url'){var bEle=document.createElement('iframe');bEle.id=this.contId+'.BODY';if(typeof this.body.style=='string'||typeof this.body.style=='object')$ss(bEle,this.body.style);bEle.frameBorder='0';bEle.border='0';bEle.style.padding='0px';bEle.style.width='100%';if(!document.all)bEle.style.marginBottom='-5px';var cURL='';var cData='';if(this.body.content.src.constructor==Function)cURL=this.body.content.src.call(this);else cURL=this.body.content.src;if(this.body.content.data.constructor==Function)cData=this.body.content.data.call(this);else cData=this.body.content.data;if(cData!='')cURL+=cData;bEle.src=cURL;}else{var bEle=document.createElement('div');bEle.id=this.contId+'.BODY';var html='';if(this.body.content.type=='html'){if(this.body.content.src.constructor==Function)html=this.body.content.src.call(this);else html=this.body.content.src;}else if(this.body.content.type=='callback'){var cURL='';var cData='';if(this.body.content.src.constructor==Function)cURL=this.body.content.src.call(this);else cURL=this.body.content.src;if(this.body.content.data.constructor==Function)cData=this.body.content.data.call(this);else cData=this.body.content.src;new $a.simple(cURL,{data:cData,handleGeneric:true,method:'get'});}
bEle.innerHTML=this._parseHTML(html);if(typeof this.body.style=='string'||typeof this.body.style=='object')$ss(bEle,this.body.style);bEle.style.position='relative';if(this.body.scroll){bEle.style.overflow='auto';if(typeof this.body.scroll=='object'){if(typeof this.body.scroll.theme=='undefined')this.body.scroll.theme=this.theme;A5.u.drag.add(bEle,'scroll',this.body.scroll);}else A5.u.drag.add(bEle,'scroll',{axis:'both',theme:this.theme});}}}else{var bEle=document.createElement('div');bEle.id=this.contId+'.BODY';if(typeof this.body.style=='string'||typeof this.body.style=='object')$ss(bEle,this.body.style);bEle.style.overflow='hidden';bEle.style.position='relative';if(this._panelType=='panelLayout'){bEle.innerHTML='<div id="'+this.contId+'.BODYINNER" style="position: absolute; left: 0px; top: 0px;"><div id="'+this.contId+'.DOCKOVERLAY" class="'+this.dock.flowLock.className+'" style="position: absolute; left: 0px; top: 0px; display: none; z-index: 4;"></div></div>';$e.add(this.contId+'.DOCKOVERLAY',A5.d.evnts.click,function(e,classInst){classInst.hideDock();},this);}}
bEle.className=this.body.className;ele.appendChild(bEle);var fEle=document.createElement('div');fEle.id=this.contId+'.FOOTER';fEle.className=this.footer.className;if(typeof this.footer.style=='string'||typeof this.footer.style=='object')$ss(fEle,this.footer.style);fEle.innerHTML=this._parseHTML(this.footer.html);if(fEle.style.overflow=='')fEle.style.overflow='hidden';if(!this.footer.show)fEle.style.display='none';fEle.style.position='relative';if(this.footer.scroll){fEle.style.overflow='auto';if(typeof this.footer.scroll=='object'){if(typeof this.footer.scroll.theme=='undefined')this.footer.scroll.theme=this.theme;A5.u.drag.add(fEle,'scroll',this.footer.scroll);}else A5.u.drag.add(fEle,'scroll',{axis:'both',theme:this.theme});}
ele.appendChild(fEle);var oEle=document.createElement('div');oEle.id=this.contId+'.OVERLAY';oEle.innerHTML=this._parseHTML(this.overlay.html);if(!this.overlay.show)oEle.style.display='none';ele.appendChild(oEle);if(this._afterBody.constructor==Function)this._afterBody(ele,bEle,hEle,fEle);if(A5.flags.supportsTouch){$e.add(ele,'touchmove',function(e){var tempT=$e.getTouches(e);var pDef=true;if(tempT){if(tempT.length){if(tempT.length>1)pDef=false;}}
if(pDef)$e.preventDefault(e);});}
var css=$gs(ele);if(!this._ieCludge&&css.search('box-sizing:')==-1)$ss(ele,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');css=$gs(bEle);if(!this._ieCludge&&css.search('box-sizing:')==-1)$ss(bEle,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');if(this.onCreate.constructor==Function)this.onCreate.call(this,ele,bEle,hEle,fEle);this._created=true;return ele;},destroy:function(){if(this.onBeforeDestroy.constructor==Function)this.onBeforeDestroy.call(this);if(this._panelType!='panelCard'){for(var i=0;i<this.panels.length;i++)this.panels[i].src.destroy();}
A5.u.drag.remove(this.contId+'.FOOTER','scroll');A5.u.drag.remove(this.contId+'.BODY','scroll');A5.u.drag.remove(this.contId+'.FOOTER','scroll');var ele=$(this.contId);var pEle=ele.parentElement;if(this._sizing=='self'){$e.remove(ele,'a5resize',this._sizeEle);}else if(this._sizing=='parent'){$e.remove(ele.parentNode,'a5resize',this._sizeEle);}else if(this._sizing=='window'){if(!A5.flags.isMobile)$e.remove(window,'resize',this._sizeWindow);else{$e.remove(window,'orientationchange',this._sizeWindow);if(A5.flags.iOSVersion==-1)$e.remove(window,'resize',this._sizeWindow);}}
ele.innerHTML=this.placeholderHTML;this._created=false;this._w=0;this._h=0;if(this.onDestroy.constructor==Function)this.onDestroy.call(this);$e.execute(pEle,'a5paneldestroy');},bindSize:function(type){if($(this.contId))var ele=$(this.contId);else return false;if(type=='self'){$e.add(ele,'a5resize',this._sizeEle,this);this._sizeEle.call(ele,{},this);}else if(type=='parent'){$e.add(ele.parentNode,'a5resize',this._sizeEle,this);this._sizeEle.call(ele.parentNode,{},this);}else if(type=='window'){document.body.style.margin='0px';document.body.style.padding='0px';if(!A5.flags.isMobile)$e.add(window,'resize',this._sizeWindow,this,true);else{$e.add(window,'orientationchange',this._sizeWindow,this,true);if(A5.flags.iOSVersion==-1)$e.add(window,'resize',this._sizeWindow,this,true);}
document.body.style.overflow='hidden';this._sizeWindowComplete();}
this._sizing=type;},refresh:function(){this.setSize(this._w,this._h);},resize:function(){if($(this.contId))var ele=$(this.contId);else return false;if(this._sizing=='self'){this._sizeEle.call(ele,{},this);}else if(this._sizing=='parent'){this._sizeEle.call(ele.parentNode,{},this);}else if(this._sizing=='window'){this._sizeWindowComplete();}},setSize:function(w,h){if(this._created){var lazy=arguments[2]?arguments[2]:false;var fireSizeEvnt=arguments[3]?arguments[3]:true;if(lazy&&this._w==w&&this._h==h)return false;var ele=$(this.contId);var bEle=$(this.contId+'.BODY');if(ele==false||bEle==false)return false;ele.style.height='';var css=$gs(ele);var dif=0;if(this._ieCludge&&ele.currentStyle['padding-right'])dif=A5.u.convertUnits($u.s.toNum(ele.currentStyle['padding-right']),$u.s.aTrim(ele.currentStyle['padding-right'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(ele.currentStyle['padding-left']),$u.s.aTrim(ele.currentStyle['padding-left'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(ele.currentStyle['border-right-width']),$u.s.aTrim(ele.currentStyle['border-right-width'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(ele.currentStyle['border-left-width']),$u.s.aTrim(ele.currentStyle['border-left-width'],' 1234567890.'),'px');else if(css.search('box-sizing:')==-1)$ss(ele,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');if(w>=0){var marginL=ele.style.marginLeft;var marginR=ele.style.marginRight;if(marginL=='')marginL=ele.style.margin;if(marginR=='')marginR=ele.style.margin;dif+=marginL==''?0:A5.u.convertUnits($u.s.toNum(marginL),$u.s.aTrim(marginL,' 1234567890.'),'px');dif+=marginR==''?0:A5.u.convertUnits($u.s.toNum(marginR),$u.s.aTrim(marginR,' 1234567890.'),'px');ele.style.width=(w-dif)+'px';this._w=w;this.width=w;}
if(h>=0){css=$gs(bEle);dif=0;if(this._ieCludge&&bEle.currentStyle['padding-top'])dif=A5.u.convertUnits($u.s.toNum(bEle.currentStyle['padding-top']),$u.s.aTrim(bEle.currentStyle['padding-top'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(bEle.currentStyle['padding-bottom']),$u.s.aTrim(bEle.currentStyle['padding-bottom'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(bEle.currentStyle['border-top-width']),$u.s.aTrim(bEle.currentStyle['border-top-width'],' 1234567890.'),'px')+A5.u.convertUnits($u.s.toNum(bEle.currentStyle['border-bottom-width']),$u.s.aTrim(bEle.currentStyle['border-bottom-width'],' 1234567890.'),'px');else if(css.search('box-sizing:')==-1)$ss(bEle,css+' box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');var marginT=ele.style.marginTop;var marginB=ele.style.marginBottom;if(marginT=='')marginT=ele.style.margin;if(marginB=='')marginB=ele.style.margin;dif+=marginT==''?0:A5.u.convertUnits($u.s.toNum(marginT),$u.s.aTrim(marginT,' 1234567890.'),'px');dif+=marginB==''?0:A5.u.convertUnits($u.s.toNum(marginB),$u.s.aTrim(marginB,' 1234567890.'),'px');bEle.style.height=(h-(ele.offsetHeight-bEle.offsetHeight)-dif)+'px';this._h=h;this.height=h;}
$e.execute(bEle,'a5resize');if(this._onSetSize.constructor==Function)this._onSetSize.call(this);if(this.onSize.constructor==Function&&fireSizeEvnt)this.onSize.call(this,{width:this._w,height:this._h});}else{var ele=$(this.contId);if(ele){ele.style.width=w+'px';ele.style.height=h+'px';}}},setDisplay:function(part,show){if(this._created){part=part.toLowerCase();if(part=='header'||part=='footer'||part=='overlay'){if(this[part].show!=show){this[part].show=show;var ele=$(this.getPanelId(part));if(show)ele.style.display='';else ele.style.display='none';this.setSize(this._w,this._h,false,false);}}}},getPanelId:function(part){part=typeof arguments[0]!='undefined'?arguments[0].toString():'';part=part.toLowerCase();var eleId=this.contId;if(part=='header')eleId=eleId+'.HEADER';else if(part=='body')eleId=eleId+'.BODY';else if(part=='footer')eleId=eleId+'.FOOTER';else if(part=='overlay')eleId=eleId+'.OVERLAY';return eleId;},_sizeEle:function(e,classInst){if(this)classInst.setSize(this.offsetWidth,this.offsetHeight,true);},_sizeWindow:function(e){if(A5.flags.iOSVersion!=-1){A5.PanelCard._iOSAE=false;if(document.activeElement){var tn=document.activeElement.tagName.toLowerCase();var tt=String(document.activeElement.type).toLowerCase();if((tn=='input'&&$u.a.find(['button','radio','checkbox','submit','reset','image','file','range'],tt))||tn=='textarea'||tn=='select'){A5.PanelCard._iOSAE=document.activeElement;A5.PanelCard._iOSSel=A5.edit.getSelection(document.activeElement);document.activeElement.blur();}}}
var classInst=this;clearTimeout(this._swTO);this._swTO=setTimeout(function(){classInst._sizeWindowComplete();delete classInst},50);},_sizeWindowComplete:function(){var viewportwidth;var viewportheight;if(typeof window.innerWidth!='undefined'){viewportwidth=window.innerWidth;viewportheight=window.innerHeight;}else if(typeof document.documentElement!='undefined'&&typeof document.documentElement.clientWidth!='undefined'&&document.documentElement.clientWidth!=0){viewportwidth=document.documentElement.clientWidth;viewportheight=document.documentElement.clientHeight;}else{viewportwidth=document.getElementsByTagName('body')[0].clientWidth;viewportheight=document.getElementsByTagName('body')[0].clientHeight;}
this.setSize(viewportwidth,viewportheight,true);if(A5.flags.iOSVersion!=-1){if(A5.PanelCard._iOSAE){A5.PanelCard._iOSAE.focus();A5.edit.getSelection(A5.PanelCard._iOSAE,A5.PanelCard._iOSSel.start,A5.PanelCard._iOSSel.end);}}},_parseHTML:function(html){html=html.split('{panel.id}').join(this.contId);html=html.split('{panel.name}').join(this._name);html=html.split('{panel.title}').join(this._title);return html;},_getPanelEleById:function(id,p){var eles=0;var isPanelCard=false;if(typeof p.tagName!='undefined'){var pId=p.id;var ele=p;}else{var pId=p.src.contId;var ele=p._ele;if(p.src._panelType=='panelCard')isPanelCard=true;}
id=id.split('{panel.id}').join(pId);if(arguments[2]||isPanelCard){eles=ele.getElementsByTagName('*');for(var i=0;i<eles.length;i++){if(eles[i].id==id)return eles[i];}}else{eles=ele.firstChild.getElementsByTagName('*');for(var i=0;i<eles.length;i++){if(eles[i].id==id)return eles[i];}
eles=ele.lastChild.previousSibling.getElementsByTagName('*');for(var i=0;i<eles.length;i++){if(eles[i].id==id)return eles[i];}}
return false;},_gDef:function(){for(var i=0;i<arguments.length;i++)if(arguments[i]!=''&&arguments[i]!=false&&arguments[i]!=null)return arguments[i];return'';}});A5.PanelNavigator=Class.create(A5.PanelCard,{_initLow:function(panels,settings){this.panels=panels;$u.o.assign(this,{type:'',flow:'ltr',theme:'',override:'base',loopNavigate:false,placeholderHTML:'',className:'',header:{show:false,html:'',className:'',style:0},body:{className:'',style:0},overlay:{show:false,html:''},footer:{show:false,html:'',className:'',style:0},indicator:{show:false,location:'bottom',className:'',panelClassName:'',panelSelectedClassName:''},controls:{prev:{has:false,id:'{panel.id}.CTRL.PREV',settings:{layout:'text',html:'Back'}},next:{has:false,id:'{panel.id}.CTRL.NEXT',settings:{layout:'text',html:'Next'}},back:{has:false,id:'{panel.id}.CTRL.BACK',settings:{layout:'text',html:'Back'}},forward:{has:false,id:'{panel.id}.CTRL.FORWARD',settings:{layout:'text',html:'Forward'}},panels:[]},animation:{type:'slide',duration:400},state:{activePanel:'',hasPrevPanel:false,prevPanelIndex:0,prevPanel:'',hasNextPanel:false,nextPanelIndex:0,nextPanel:'',history:[],historyIndex:-1,hasHistoryBack:false,historyBack:'',hasHistoryForward:false,historyForward:''},onSize:0,onInitialize:0,onCreate:0,onBeforeDestroy:0,onDestroy:0,onPanelActivate:0,onBeforePanelActivate:0,onPanelActivateComplete:0,_isRemPanel:false,_isHistoryNav:false,_sizing:'',_panelIndx:-1,_beforeBody:0,_overrideBeforeActivate:false,_panelType:'panelNavigator',_name:'',_title:'',_pOff:'-'+Math.max(screen.width+100,screen.height+100)+'px'});if(settings.type=='tabband'){$u.o.assign(settings,{location:'top',tabband:{location:'',theme:''}},true);if(settings.tabband.location=='')settings.tabband.location=settings.location;if(settings.tabband.theme==''){if(settings.tabband.location=='bottom')settings.tabband.theme=settings.theme+':bottom';else settings.tabband.theme=settings.theme;}}else if(settings.type=='carousel'){$u.o.assign(settings,{swipe:{allow:true,velocity:.5}},true);}
if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'panelNavigator');$u.o.assign(this,settings);A5.overrides.assign(this,'panelNavigator',this.override);},refresh:function(){this.setSize(this._w,this._h);},getPanel:function(panel){var panelArr=panel.split(':');var pObj={};var pScope=this;var panelIndx=-1;while(panelArr.length>0){panelIndx=pScope._getPanelIndx(panelArr.shift());if(panelIndx!=-1){pObj=pScope.panels[panelIndx];pScope=pObj.src;}else return false;}
return pObj;},setActivePanel:function(panel){if(window.event){if(window.event.type=='touchend'||window.event.type=='touchstart'){$e.preventDefault(window.event);}}
var args=[];var ci=this;for(var i=0;i<arguments.length;i++)args.push(arguments[i]);setTimeout(function(){ci._setActivePanel.apply(ci,args);delete ci;delete args;},0);},_setActivePanel:function(panel){if(panel=='')return false;var panelArr=panel.split(':');panel=panelArr.shift();var panelIndx=this._getPanelIndx(panel);if(panelIndx==-1||this.panels.length==0)return false;var percent=typeof arguments[1]!='undefined'?arguments[1]:0;var doAnim=true;var hasPercent=true;if(typeof percent=='boolean'){doAnim=percent;hasPercent=false;percent=0;}else if(typeof arguments[2]!='undefined')doAnim=arguments[2];if(this.onBeforePanelActivate.constructor==Function&&!this._overrideBeforeActivate){var result=this.onBeforePanelActivate();if(result==false){if(hasPercent){this._overrideBeforeActivate=true;this._panelIndx=panelIndx;percent=Math.abs(percent-1);if(percent==1)percent=0;this.setActivePanel(this.state.activePanel,percent);this._overrideBeforeActivate=false;}
return false;}}
var bEle=$(this.contId+'.BODY');if(this.panels[panelIndx].src.renderMode.substr(0,11)=='auto-create'&&!this.panels[panelIndx].src._created){this._pToCreate=panelIndx;}else{if(panelIndx!=this._panelIndx)this.panels[panelIndx].src.setSize(bEle.clientWidth,bEle.clientHeight,true);}
if(panelArr.length!=0&&(this.panels[panelIndx].src._panelType=='panelNavigator'||this.panels[panelIndx].src._panelType=='panelLayout'))this.panels[panelIndx].src.setActivePanel(panelArr.join(':'),$if(panelIndx==this._panelIndx&&doAnim,true,false));if(panelIndx==this._panelIndx){var state=false;for(var i=0;i<this.controls.panels.length;i++){if(this.controls.panels[i]._b){state=false;if(this.controls.panels[i].panel==this.state.activePanel)state=true;this.controls.panels[i]._b.setValue(state);}}
return false;}
if(this._panelIndx!=-1){if(this.panels[this._panelIndx].src.renderMode=='auto-create-destroy'){this._pToDestroy=this._panelIndx;}}
var ele=$(this.panels[panelIndx]._id);var oEle=this._panelIndx!=-1?$(this.panels[this._panelIndx]._id):false;var animDir=panelIndx-this._panelIndx;if(this.loopNavigate&&((panelIndx==0&&this._panelIndx==this.panels.length-1)||(this._panelIndx==0&&panelIndx==this.panels.length-1)))animDir=animDir*-1
var animType=this.animation.type;if(animType=='slide'){if(this.flow=='ttb'||this.flow=='btt'){if(this.flow=='btt')animDir=animDir*-1;if(animDir>0)animType='slide-up';else animType='slide-down';}else{if(this.flow=='rtl')animDir=animDir*-1;if(animDir>0)animType='slide-left';else animType='slide-right';}}
if(!this._isHistoryNav){this.state.historyIndex++;this.state.history.splice(this.state.historyIndex);this.state.history.push(panel);}
this._panelIndx=panelIndx;this._setPanelState();if(this.type=='tabband'){if(this._tbSet)this._tabband.select(panel);}else if(this.type=='carousel')this._setPanelInfo(bEle);if(this.onPanelActivate.constructor==Function)this.onPanelActivate();this._transEle(ele,oEle,animType,percent,doAnim);if(this.controls.prev.has){if(this.state.hasPrevPanel)this.controls.prev._b.setDisplay(true);else this.controls.prev._b.setDisplay(false);}
if(this.controls.next.has){if(this.state.hasNextPanel)this.controls.next._b.setDisplay(true);else this.controls.next._b.setDisplay(false);}
if(this.controls.back.has){if(this.state.hasHistoryBack)this.controls.back._b.setDisplay(true);else this.controls.back._b.setDisplay(false);}
if(this.controls.forward.has){if(this.state.hasHistoryForward)this.controls.forward._b.setDisplay(true);else this.controls.forward._b.setDisplay(false);}
var state=false;for(var i=0;i<this.controls.panels.length;i++){if(this.controls.panels[i]._b){state=false;if(this.controls.panels[i].panel==this.state.activePanel)state=true;this.controls.panels[i]._b.setValue(state)}}},firstPanel:function(doAnim){if(this._panelIndx>0)this.setActivePanel(this.panels[0].name,doAnim);},prevPanel:function(doAnim){if(this.state.hasPrevPanel)this.setActivePanel(this.state.prevPanel,doAnim);},nextPanel:function(doAnim){if(this.state.hasNextPanel)this.setActivePanel(this.state.nextPanel,doAnim);},lastPanel:function(doAnim){if(this._panelIndx<this.panels.length-1)this.setActivePanel(this.panels[this.panels.length-1].name,doAnim);},historyFirst:function(doAnim){if(this.state.historyIndex<=0)return false;this.state.historyIndex=0;this._isHistoryNav=true;this.setActivePanel(this.state.history[this.state.historyIndex],doAnim);this._isHistoryNav=false;},historyBack:function(doAnim){if(this.state.historyIndex<=0)return false;this.state.historyIndex--;this._isHistoryNav=true;this.setActivePanel(this.state.history[this.state.historyIndex],doAnim);this._isHistoryNav=false;},historyForward:function(doAnim){if(this.state.historyIndex>this.state.history.length-2)return false;this.state.historyIndex++;this._isHistoryNav=true;this.setActivePanel(this.state.history[this.state.historyIndex],doAnim);this._isHistoryNav=false;},historyLast:function(doAnim){if(this.state.historyIndex>this.state.history.length-2)return false;this.state.historyIndex=this.state.history.length-1;this._isHistoryNav=true;this.setActivePanel(this.state.history[this.state.historyIndex],doAnim);this._isHistoryNav=false;},addPanel:function(pObj){this.panels.push(pObj);var bEle=$(this.contId+'.BODY');this._addPanel(pObj,bEle,false);if(this.indicator.show)this._renderIndc($(this.contId+'.INDICATOR'));if(this.type=='tabband')this._tabband.add({html:this.panels[this.panels.length-1].title,value:this.panels[this.panels.length-1].name,close:this.panels[this.panels.length-1].close});this._setPanelState();this._setPanelInfo(bEle);if(this.panels.length==1)this.setActivePanel(pObj.name,false);},insertPanel:function(pObj,panel){var panelIndx=this._getPanelIndx(panel);if(panelIndx==-1)this.addPanel(pObj);if(panelIndx<=this._panelIndx)this._panelIndx++;this.panels.splice(panelIndx,0,pObj);var bEle=$(this.contId+'.BODY');var sEle=$(this.panels[panelIndx]._id);this._addPanel(pObj,bEle,sEle);if(this.indicator.show)this._renderIndc($(this.contId+'.INDICATOR'));if(this.type=='tabband')this._tabband.insert({html:this.panels[panelIndx].title,value:this.panels[panelIndx].name,close:this.panels[panelIndx].close},this.panels[panelIndx+1].name);this._setPanelState();this._setPanelInfo(bEle);if(this.panels.length==1)this.setActivePanel(pObj.name,false);},removePanel:function(panel){var panelIndx=this._getPanelIndx(panel);if(panelIndx==-1)return false;if(this.type=='tabband')this._tabband.remove(this.panels[panelIndx].name);this._isRemPanel=true;this.panels[panelIndx].src.destroy();this._isRemPanel=false;var bEle=$(this.contId+'.BODY');var cEle=$(this.panels[panelIndx]._id);bEle.removeChild(cEle);this.panels.splice(panelIndx,1);if(panelIndx==this._panelIndx){this._panelIndx=-1;if(this.state.hasPrevPanel)this.setActivePanel(this.state.prevPanel,false);if(this.state.hasNextPanel)this.setActivePanel(this.state.nextPanel,false);}else if(panelIndx<this._panelIndx)this._panelIndx--;if(this.indicator.show)this._renderIndc($(this.contId+'.INDICATOR'));this._setPanelState();this._setPanelInfo(bEle);},getState:function(){var state={type:this._panelType,panels:[]};$u.o.assign(state,this.state);for(var i=0;i<this.panels.length;i++){if(this.panels[i].src._panelType!='panelCard'){state.panels[i]=this.panels[i].src.getState();}else state.panels[i]={type:'panelCard'}}
return state;},setState:function(state){this.setActivePanel(state.activePanel,false);for(var i=0;i<this.panels.length;i++){if(this.panels[i].src._panelType!='panelCard'){this.panels[i].src.setState(state.panels[i]);}}},_afterBody:function(ele,bEle,hEle,fEle){$e.add(bEle,'a5transcomplete',this._activeComp,this,true);$e.add(bEle,'a5paneldestroy',this._childDestroy,this,true);this._panelIndx=0;this._pCount=0;var p={};for(var i=0;i<this.panels.length;i++){p=this.panels[i];if(i==0){var tEle=this._addPanel(p,bEle,false,true);tEle.style.top='0px';tEle.style.left='0px';}else this._addPanel(p,bEle,false);}
if(this.indicator.show){var iEle=document.createElement('div');iEle.id=this.contId+'.INDICATOR';iEle.className=this.indicator.className;$e.add(iEle,A5.d.evnts.click,this._indClick,this);var loc=this.indicator.location;if(loc[0]=='#')this._indLoc='element';else{loc=loc.toLowerCase();if(loc=='auto'){if(this.flow=='ttb'||this.flow=='btt')loc='right';else loc='bottom';}
this._indLoc=loc;$ss(iEle,'position: absolute; '+loc+': 0px; z-index: 4; text-align: center;');}
this._renderIndc(iEle);if(this._indLoc=='element'){var icEle=this._getPanelEleById(loc.substr(1),ele);icEle.appendChild(iEle);}else{bEle.appendChild(iEle);if(this._indLoc=='left'||this._indLoc=='right'){iEle.style.marginTop='-'+(iEle.offsetHeight/2)+'px';iEle.style.top='50%';}else{iEle.style.marginLeft='-'+(iEle.offsetWidth/2)+'px';iEle.style.left='50%';}}}
if(this.panels.length==0)this._panelIndx=-1;else{this.state.history=[this.panels[this._panelIndx].name];this.state.historyIndex=0;}
this._setPanelState();bEle.style.padding='0px';if(this.type=='tabband'){var tbEle=document.createElement('div');tbEle.id=this.contId+'.TABBAND';$e.add(tbEle,'a5setactivepanel',this._tbChange,this);$e.add(tbEle,'a5removepanel',this._tbRemove,this);if(this.location=='bottom')ele.insertBefore(tbEle,fEle);else ele.insertBefore(tbEle,bEle);this.tabband.onRemove=function(d){$sa(this._ele,'A5REMNAVPANEL',d.value);$e.execute(this._ele,'a5removepanel');};this._tabband=new A5.TabBand(tbEle,[],this.tabband);this._tabband.onChange=function(d){$sa(this._ele,'A5NEWNAVPANEL',d.value);$e.execute(this._ele,'a5setactivepanel');};this._tbSet=true;for(var i=0;i<this.panels.length;i++){this._tabband._add({html:this.panels[i].title,value:this.panels[i].name,close:this.panels[i].close});}
this._tabband._firstTabIndx=this._tabband._getFirstAvailableTab();this._tabband._lastTabIndx=this._tabband._getLastAvailableTab();this._tabband.refresh();this._tabband.select(this.state.activePanel);}else if(this.type=='carousel'){this._setPanelInfo(bEle);var a='x';if(this.flow=='ttb'||this.flow=='btt')a='y';var endFunc='$sa(this,\'A5PanelNavSwipe\',\'none\');\n$e.execute(this,\'a5carouselend\');';if(this.swipe.allow){var endFunc=['var d = arguments[0];','vX = $u.n.round((d.startX-d.x)/Math.round(d.endT-d.startT),2);','vY = $u.n.round((d.startY-d.y)/Math.round(d.endT-d.startT),2);','var swipe = \'none\';','if(Math.max(Math.abs(vX),Math.abs(vY)) > '+this.swipe.velocity+'){',' if(Math.abs(vX) > Math.abs(vY)){','  if(vX > 0) swipe = \'left\';','  else swipe = \'right\';',' } else{','  if(vX > 0) swipe = \'up\';','  else swipe = \'down\';',' }','}','$sa(this,\'A5PanelNavSwipe\',swipe);','$e.execute(this,\'a5carouselend\');'].join('\n');}
A5.u.drag.add(bEle,'custom',{axis:a,stopPropagation:true,animate:(A5.u.css.supportsTransition&&this.animation.type!='none'),tolerance:15,onStart:function(d,i){var data=$ga(this,'A5PanelNavData').split(',');var pEle=$(data[1]);var nEle=$(data[2]);d._d={ele:$(data[0]),sp:'left',ap:'top',w:this.offsetWidth,h:this.offsetHeight};if(data[3]=='ttb'||data[3]=='btt'){d._d.sp='top';d._d.ap='left';if(data[3]=='btt'){d._d.bEle=nEle;d._d.aEle=pEle;}else{d._d.bEle=pEle;d._d.aEle=nEle;}}else if(data[3]=='rtl'){d._d.bEle=nEle;d._d.aEle=pEle;}else{d._d.bEle=pEle;d._d.aEle=nEle;}
if(i.animate){if(d._d.bEle!=false){d._d.bEle.style.top='0px';d._d.bEle.style.left='0px';}
if(d._d.aEle!=false){d._d.aEle.style.top='0px';d._d.aEle.style.left='0px';}
if(d._d.sp=='left'){if(d._d.bEle!=false)d._d.bEle.style[A5.u.css.properties.transformDOM]='translate(-100%,0px)';if(d._d.aEle!=false)d._d.aEle.style[A5.u.css.properties.transformDOM]='translate(100%,0px)';}else{if(d._d.bEle!=false)d._d.bEle.style[A5.u.css.properties.transformDOM]='translate(0px,-100%)';if(d._d.aEle!=false)d._d.aEle.style[A5.u.css.properties.transformDOM]='translate(0px,100%)';}}else{if(d._d.bEle!=false){d._d.bEle.style[d._d.sp]='-100%';d._d.bEle.style[d._d.ap]='0px';}
if(d._d.aEle!=false){d._d.aEle.style[d._d.sp]='100%';d._d.aEle.style[d._d.ap]='0px';}}
$e.execute(this,'a5carouselstart');},onMove:function(d,i,e){if(d._d.sp=='left'||d._d.sp=='right'){var s=d._d.w;var val=d.customMoveX;}else{var s=d._d.h;var val=d.customMoveY;}
val=Math.max(Math.min(val,s),s*-1);if(i.animate){if(d._d.sp=='left'){if(d._d.ele!=false)d._d.ele.style[A5.u.css.properties.transformDOM]='translate('+val+'px,0px)';if(d._d.bEle!=false)d._d.bEle.style[A5.u.css.properties.transformDOM]='translate('+(val-s)+'px,0px)';if(d._d.aEle!=false)d._d.aEle.style[A5.u.css.properties.transformDOM]='translate('+(s+val)+'px,0px)';}else{if(d._d.ele!=false)d._d.ele.style[A5.u.css.properties.transformDOM]='translate(0px,'+val+'px)';if(d._d.bEle!=false)d._d.bEle.style[A5.u.css.properties.transformDOM]='translate(0px,'+(val-s)+'px)';if(d._d.aEle!=false)d._d.aEle.style[A5.u.css.properties.transformDOM]='translate(0px,'+(s+val)+'px)';}}else{if(d._d.ele!=false)d._d.ele.style[d._d.sp]=val+'px';if(d._d.bEle!=false)d._d.bEle.style[d._d.sp]=(val-s)+'px';if(d._d.aEle!=false)d._d.aEle.style[d._d.sp]=(s+val)+'px';}},onEnd:Function(endFunc)});$e.add(bEle,'a5carouselstart',this._cStart,this,true);$e.add(bEle,'a5carouselend',this._cEnd,this,true);}
var ctrlEle=false;if(this.controls.prev.has){ctrlEle=this._getPanelEleById(this.controls.prev.id,ele,true);if(ctrlEle){this.controls.prev._b=new A5.Button(this.controls.prev.settings);this.controls.prev._b.bind(ctrlEle);if(this.panels.length==0||!this.loopNavigate)ctrlEle.style.display='none';$e.add(ctrlEle,A5.d.evnts.click,this.prevPanel,this,true);}}
if(this.controls.next.has){ctrlEle=this._getPanelEleById(this.controls.next.id,ele,true);if(ctrlEle){this.controls.next._b=new A5.Button(this.controls.next.settings);this.controls.next._b.bind(ctrlEle);if(this.panels.length==0)ctrlEle.style.display='none';$e.add(ctrlEle,A5.d.evnts.click,this.nextPanel,this,true);}}
if(this.controls.back.has){ctrlEle=this._getPanelEleById(this.controls.back.id,ele,true);if(ctrlEle){this.controls.back._b=new A5.Button(this.controls.back.settings);this.controls.back._b.bind(ctrlEle);ctrlEle.style.display='none';$e.add(ctrlEle,A5.d.evnts.click,this.historyBack,this,true);}}
if(this.controls.forward.has){ctrlEle=this._getPanelEleById(this.controls.forward.id,ele,true);if(ctrlEle){this.controls.forward._b=new A5.Button(this.controls.forward.settings);this.controls.forward._b.bind(ctrlEle);ctrlEle.style.display='none';$e.add(ctrlEle,A5.d.evnts.click,this.historyForward,this,true);}}
for(var i=0;i<this.controls.panels.length;i++){ctrlEle=this._getPanelEleById(this.controls.panels[i].id,ele,true);if(ctrlEle){this.controls.panels[i]._b=new A5.ButtonToggle(this.controls.panels[i].settings);this.controls.panels[i]._b.bind(ctrlEle);if(this.controls.panels[i].panel==this.state.activePanel)this.controls.panels[i]._b.setValue(true,ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this._activatePanel,this);$sa(ctrlEle,'A5LinkedPanel',this.controls.panels[i].panel);}}},_addPanel:function(p,bEle,sEle){var forceCreate=typeof arguments[3]!='undefined'?arguments[3]:false;$u.o.assign(p,this._pDefaults,true);p.src._name=p.name;p.src._title=p.title;p._id=this.contId+'.PANEL.'+this._pCount;tEle=p.src.create(p._id,!forceCreate);tEle.style.position='absolute';tEle.style.top='';tEle.style.top=this._pOff;tEle.style.left=this._pOff;tEle.style.width='100px';this._transClearEvnt(tEle);if(sEle)bEle.insertBefore(tEle,sEle);else bEle.appendChild(tEle);p._ele=tEle;if(p.src._created){this._panelControls(p);}
this._pCount++;return tEle;},_childDestroy:function(){if(!this._isRemPanel){var bEle=$(this.contId+'.BODY');var cEle=null;for(var i=this.panels.length-1;i>=0;i--){if($(this.panels[i]._id+'.BODY')==false){if(this.type=='tabband')this._tabband.remove(this.panels[i].name);bEle.removeChild($(this.panels[i]._id));}}
this.panels=[];}},_panelControls:function(p){var ctrlEle=false;if(p.controls.prev.has){ctrlEle=this._getPanelEleById(p.controls.prev.id,p);if(ctrlEle){p.controls.prev._b=new A5.Button(p.controls.prev.settings);p.controls.prev._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.prevPanel,this,true);}}
if(p.controls.next.has){ctrlEle=this._getPanelEleById(p.controls.next.id,p);if(ctrlEle){p.controls.next._b=new A5.Button(p.controls.next.settings);p.controls.next._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.nextPanel,this,true);}}},_renderIndc:function(iEle){var ipEle=0;iEle.innerHTML='';for(var i=0;i<this.panels.length;i++){ipEle=document.createElement('div');if(i==this._panelIndx)ipEle.className=this._gDef(this.panels[i].indicator.className,this.indicator.panelClassName)+' '+this._gDef(this.panels[i].indicator.selectedClassName,this.indicator.panelSelectedClassName);else ipEle.className=this._gDef(this.panels[i].indicator.className,this.indicator.panelClassName);iEle.appendChild(ipEle);if(this._indLoc=='left'||this._indLoc=='right')iEle.appendChild(document.createElement('br'));}},_activatePanel:function(e,classInst){panel=$ga(this,'A5LinkedPanel');classInst.setActivePanel(panel);},_onSetSize:function(){var bEle=$(this.contId+'.BODY');if(this._panelIndx!=-1)this.panels[this._panelIndx].src.setSize(bEle.clientWidth,bEle.clientHeight,true);if(this.type=='tabband'){this._tabband.refresh();}
if(this._indLoc!='element'){var iEle=$(this.contId+'.INDICATOR');if(iEle){if(this._indLoc=='left'||this._indLoc=='right')iEle.style.marginTop='-'+(iEle.offsetHeight/2)+'px';else iEle.style.marginLeft='-'+(iEle.offsetWidth/2)+'px';}}},_getPanelIndx:function(panel){if(typeof panel=='number')return panel;for(var i=0;i<this.panels.length;i++){if(this.panels[i].name==panel){return i;}}
return-1;},_tbChange:function(e,classInst){classInst._tbSet=false;classInst.setActivePanel($ga(this,'A5NEWNAVPANEL'));classInst._tbSet=true;},_tbRemove:function(e,classInst){var pName=$ga(this,'A5REMNAVPANEL');setTimeout(function(){classInst._tbRemoveComplete(pName);delete classInst},0);},_tbRemoveComplete:function(pName){if(!this._tbRem){this._tbRem=true;this.removePanel(pName);this._tbRem=false;}},_indClick:function(e,classInst){if(this.offsetHeight>this.offsetWidth)var pos=(e.clientY-$gpt(this))-(this.offsetHeight/2);else var pos=(e.clientX-$gpl(this))-(this.offsetWidth/2);if(pos>0)classInst.nextPanel();else classInst.prevPanel();},_cStart:function(){var bEle=$(this.contId+'.BODY');if(this.state.hasPrevPanel)this.panels[this.state.prevPanelIndex].src.setSize(bEle.clientWidth,bEle.clientHeight,true);if(this.state.hasNextPanel)this.panels[this.state.nextPanelIndex].src.setSize(bEle.clientWidth,bEle.clientHeight,true);},_cEnd:function(){var bEle=$(this.contId+'.BODY');var data=$ga(bEle,'A5PanelNavData').split(',');var swipe=$ga(bEle,'A5PanelNavSwipe');var ele=$(data[0]);var pEle=$(data[1]);var nEle=$(data[2]);var aEle=false;if(this.flow=='ttb'||this.flow=='btt'){var pOffset=$gpt(ele.parentNode);var offset=$gpt(ele)-pOffset;var size=bEle.offsetHeight;if(pEle){if(Math.abs($gpt(pEle)-pOffset)<size)aEle=pEle;}
if(nEle){if(Math.abs($gpt(nEle)-pOffset)<size)aEle=nEle;}
if(this.flow=='ttb'){var pDir='bottom';var nDir='top';}else{var pDir='top';var nDir='bottom';}}else{var pOffset=$gpl(ele.parentNode);var offset=$gpl(ele)-pOffset;var size=bEle.offsetWidth;if(pEle){if(Math.abs($gpl(pEle)-pOffset)<size)aEle=pEle;}
if(nEle){if(Math.abs($gpl(nEle)-pOffset)<size)aEle=nEle;}
if(this.flow=='rtl'){pDir='left';nDir='right';}else{var pDir='right';var nDir='left';}}
var percent=(1/size)*Math.abs(offset);if(swipe==pDir&&this.state.hasPrevPanel){this.setActivePanel(this.state.prevPanel,percent);}else if(swipe==nDir&&this.state.hasNextPanel){this.setActivePanel(this.state.nextPanel,percent);}else if(Math.abs(offset)>15){if(percent>.5&&aEle){percent=(1-percent);var panelName='';for(var i=0;i<this.panels.length;i++){if(aEle.id==this.panels[i]._id){panelName=this.panels[i].name;break;}}
this.setActivePanel(panelName,percent);}else{var animDir=offset;var animType='';if(this.flow=='ttb'||this.flow=='btt'){if(this.flow=='btt')animDir=animDir*-1;if(animDir>0)animType='slide-up';else animType='slide-down';}else{if(this.flow=='rtl')animDir=animDir*-1;if(animDir>0)animType='slide-left';else animType='slide-right';}
if(percent==1&&!aEle)percent=0;this._transEle(ele,aEle,animType,percent);}}},_setPanelInfo:function(bEle){if(!this.panels[this._panelIndx])return false;var data=[];data.push(this.panels[this._panelIndx]._id);if(this.state.hasPrevPanel)data.push(this.panels[this.state.prevPanelIndex]._id);else data.push('');if(this.state.hasNextPanel)data.push(this.panels[this.state.nextPanelIndex]._id);else data.push('');data.push(this.flow);$sa(bEle,'A5PanelNavData',data.join(','));},_setPanelState:function(){var s=this.state;s.activePanel='';s.hasPrevPanel=false;s.prevPanel='';s.prevPanelIndex=-1;s.hasNextPanel=false;s.nextPanel='';s.nextPanelIndex=-1;if(this.panels.length!=0){if(this.panels[this._panelIndx])s.activePanel=this.panels[this._panelIndx].name;if(this._panelIndx>0){s.hasPrevPanel=true;s.prevPanelIndex=this._panelIndx-1;s.prevPanel=this.panels[s.prevPanelIndex].name;}else if(this.loopNavigate){s.hasPrevPanel=true;s.prevPanelIndex=this.panels.length-1;s.prevPanel=this.panels[s.prevPanelIndex].name;}
if(this._panelIndx<=this.panels.length-2){s.hasNextPanel=true;s.nextPanelIndex=this._panelIndx+1;s.nextPanel=this.panels[s.nextPanelIndex].name;}else if(this.loopNavigate){s.hasNextPanel=true;s.nextPanelIndex=0;s.nextPanel=this.panels[s.nextPanelIndex].name;}}
if(s.historyIndex>0){s.hasHistoryBack=true;s.historyBack=s.history[s.historyIndex-1];}else{s.hasHistoryBack=false;s.historyBack='';}
if(s.historyIndex<s.history.length-1){s.hasHistoryForward=true;s.historyForward=s.history[s.historyIndex+1];}else{s.hasHistoryForward=false;s.historyForward='';}
var iEle=$(this.contId+'.INDICATOR');if(iEle){var ipEles=iEle.getElementsByTagName('div');for(var i=0;i<this.panels.length;i++)ipEles[i].className=this._gDef(this.panels[i].indicator.className,this.indicator.panelClassName);if(this.panels.length!=0&&this.panels[this._panelIndx])ipEles[this._panelIndx].className=this._gDef(this.panels[this._panelIndx].indicator.className,this.indicator.panelClassName)+' '+this._gDef(this.panels[this._panelIndx].indicator.selectedClassName,this.indicator.panelSelectedClassName);}},_transEle:function(ele,oEle,type){var percent=typeof arguments[3]!='undefined'?arguments[3]:0;var doAnim=typeof arguments[4]!='undefined'?arguments[4]:true;if(percent==1)return false;var nVal='';var oVal='';var cssProp=A5.u.css.properties.transform;var cssDOMProp=A5.u.css.properties.transformDOM;var cssAnimProp=A5.u.css.properties.transitionDOM;if(A5.u.css.supportsTransition&&type!='none'){if(type=='slide-left'){if(percent==0)ele.style[cssDOMProp]=A5.u.css.transform2D('100%','0px');ele.style.top='0px';ele.style.left='0px';nVal=A5.u.css.transform2D('0px','0px');oVal=A5.u.css.transform2D('-100%','0px');}else if(type=='slide-right'){if(percent==0)ele.style[cssDOMProp]=A5.u.css.transform2D('-100%','0px');ele.style.top='0px';ele.style.left='0px';nVal=A5.u.css.transform2D('0px','0px');oVal=A5.u.css.transform2D('100%','0px');}else if(type=='slide-up'){if(percent==0)ele.style[cssDOMProp]=A5.u.css.transform2D('0px','100%');ele.style.top='0px';ele.style.left='0px';nVal=A5.u.css.transform2D('0px','0px');oVal=A5.u.css.transform2D('0px','-100%');}else if(type=='slide-down'){if(percent==0)ele.style[cssDOMProp]=A5.u.css.transform2D('0px','-100%');ele.style.top='0px';ele.style.left='0px';nVal=A5.u.css.transform2D('0px','0px');oVal=A5.u.css.transform2D('0px','100%');}else if(type=='fade'){cssProp='opacity';cssDOMProp='opacity';ele.style.opacity='0';ele.style.top='1px';ele.style.left='1px';nVal='1';oVal='0';}
ele.style[cssAnimProp]='';$sa(ele,'A5PanelNavIsActive','true');if(oEle){oEle.style[cssAnimProp]='';$sa(oEle,'A5PanelNavIsActive','false');}
var dur=this.animation.duration;var tween='ease-in-out';if(percent!=0){dur=Math.round(dur*percent);tween='ease-out';}
if(doAnim){ele.offsetHeight;ele.style[cssAnimProp]=cssProp+' '+dur+'ms '+tween;ele.style[cssDOMProp]=nVal;}else{ele.style[cssDOMProp]=nVal;$e.execute(ele.parentNode,'a5transcomplete');}
if(oEle){if(doAnim){oEle.offsetHeight;oEle.style[cssAnimProp]=cssProp+' '+dur+'ms '+tween;oEle.style[cssDOMProp]=oVal;}else{oEle.style.top=this._pOff;}}}else{if(oEle)oEle.style.top=this._pOff;ele.style.top='0px';ele.style.left='0px';$e.execute(ele.parentNode,'a5transcomplete');}},_transClearEvnt:function(ele){$e.add(ele,A5.u.css.properties.transitionEndEvent,Function('var e = arguments[0]; if(e.target.id != this.id) return true; if($ga(this,\'A5PanelNavIsActive\') == \'true\'){$e.execute(this.parentNode,\'a5transcomplete\');}; this.style[A5.u.css.properties.transitionDOM] = \'\'; this.style[A5.u.css.properties.transformDOM] = \'\'; this.style.top = $if($ga(this,\'A5PanelNavIsActive\') == \'true\',\'0px\',\''+this._pOff+'\'); this.style.left = \'0px\';'));},_activeComp:function(e){if(typeof this._pToDestroy=='number'){this.panels[this._pToDestroy].src.destroy();this._pToDestroy=false;}
if(typeof this._pToCreate=='number'){var bEle=$(this.contId+'.BODY');this.panels[this._pToCreate].src.create();this.panels[this._pToCreate].src.setSize(bEle.clientWidth,bEle.clientHeight,true);this._panelControls(this.panels[this._pToCreate]);this._pToCreate=false;}
if(this.onPanelActivateComplete.constructor==Function)this.onPanelActivateComplete();},_pDefaults:{name:'',title:'',show:true,close:false,indicator:{className:'',selectedClassName:''},controls:{prev:{has:false,id:'{panel.id}.CTRL.PREV',settings:{layout:'text',html:'Back'}},next:{has:false,id:'{panel.id}.CTRL.NEXT',settings:{layout:'text',html:'Next'}}}}});A5.PanelLayout=Class.create(A5.PanelCard,{_initLow:function(panels,settings){this.panels=panels;$u.o.assign(this,{theme:'',override:'base',flow:'ltr',placeholderHTML:'',className:'',header:{show:false,html:'',className:'',style:0},body:{className:'',style:0},overlay:{show:false,html:''},footer:{show:false,html:'',className:'',style:0},dock:{method:'overlay',panel:{beforeClassName:'',afterClassName:''},flowLock:{has:true,className:''}},controls:{prev:{has:false,id:'{panel.id}.CTRL.PREV',settings:{layout:'text',html:'Back'}},next:{has:false,id:'{panel.id}.CTRL.NEXT',settings:{layout:'text',html:'Next'}},dock:[]},animation:{type:'slide',duration:400},state:{activePanel:'',firstPanel:'',lastPanel:'',flowCollapsed:'',hasPrevPanel:false,prevPanel:'',hasNextPanel:false,nextPanel:'',hasDockPanel:false,beforeDockPanels:[],afterDockPanels:[],dockPanelShown:false,currentDockPanel:''},onSize:0,onInitialize:0,onCreate:0,onBeforeDestroy:0,onDestroy:0,onLayoutRefresh:0,onDockPanelShow:0,onDockPanelHide:0,onPanelActivate:0,onBeforePanelActivate:0,_sizing:'',_flowSize:0,_altSize:0,_oldFlow:'',_fpCollapsed:false,_fpActive:0,_fpFirst:0,_fpLast:0,_fpCollapseTrg:[],_beforeBody:0,_curDock:-1,_prevDock:-1,_panelType:'panelLayout',_name:'',_title:''});if(typeof settings.theme!='undefined')A5.themes.assign(this,settings.theme,'panelLayout');$u.o.assign(this,settings);A5.overrides.assign(this,'panelLayout',this.override);},refresh:function(){var curPanelSize=0;for(var i=0;i<this.panels.length;i++){this.panels[i]._flex=-1;this.panels[i]._lateSize=false;curPanelSize=this.panels[i].size;if(curPanelSize.substr(0,5)=='flex('){this.panels[i]._flex=$u.s.toNum(curPanelSize.substr(5));curPanelSize=this.panels[i].minSize;}else if(curPanelSize.substr(0,1)=='-'){this.panels[i]._lateSize=A5.u.convertUnits(curPanelSize,'px');;}else if(curPanelSize.substr(curPanelSize.length-1,1)=='%'){this.panels[i]._lateSize='%';}
if(typeof curPanelSize!='number')curPanelSize=A5.u.convertUnits(curPanelSize,'px');this.panels[i]._size=curPanelSize;}
this._onSetSize(false);},getPanel:function(panel){var panelArr=panel.split(':');var pObj={};var pScope=this;var panelIndx=-1;while(panelArr.length>0){panelIndx=pScope._getPanelIndx(panelArr.shift());if(panelIndx!=-1){pObj=pScope.panels[panelIndx];pScope=pObj.src;}else return false;}
return pObj;},setActivePanel:function(panel){if(window.event){if(window.event.type=='touchend'||window.event.type=='touchstart'){$e.preventDefault(window.event);}}
var args=[];var ci=this;for(var i=0;i<arguments.length;i++)args.push(arguments[i]);setTimeout(function(){ci._setActivePanel.apply(ci,args);delete ci;delete args;},0);},_setActivePanel:function(panel){if(this.onBeforePanelActivate.constructor==Function){var result=this.onBeforePanelActivate();if(result==false)return false;}
var doAnim=arguments[1];var doAnimSub=true;if(panel=='')return false;var panelArr=panel.split(':');panel=panelArr.shift();var panelIndx=this._getPanelIndx(panel);var fpCollapseIndx=0
for(var i=this._fpCollapseTrg.length-1;i>=0;i--){fpCollapseIndx=this._getPanelIndx(this._fpCollapseTrg[i]);if(fpCollapseIndx>panelIndx){this._fpCollapseTrg.pop();if(this.panels[fpCollapseIndx].controls.flowCollapse.has)this.panels[fpCollapseIndx].controls.flowCollapse._b.setValue(0);}else break;}
if(this._fpCollapseTrg.length==0)this.state.flowCollapsed=false;if(panelIndx>-1){var p=this.panels[panelIndx];clearTimeout(p._hideTimeout);var pPrev=false;if(this._prevDock>-1)pPrev=this.panels[this._prevDock];if(p.isDocked){if(this._curDock!=panelIndx){if(p.src.renderMode.substr(0,11)=='auto-create'&&!p.src._created){p.src.create();this._panelControls(p);}
var doEle=$(this.contId+'.DOCKOVERLAY');if(this.dock.flowLock.has)doEle.style.display='';var tEle=p._ele;if(this.flow!='rtl')tEle.style.left='';else tEle.style.right='';var aArr=[];var lAfter=p.dock.search('after')!=-1
if(this.dock.method=='underlay'){var cEle=$(this.contId+'.BODY').firstChild;var sPos=0;if(pPrev){if(this._prevDock==this._curDock&&lAfter==(pPrev.dock.search('after')!=-1)){this._transEle(pPrev._ele,aArr,pPrev._size*-1,p._size*-1,lAfter,null,null,doAnim);sPos=pPrev._size;}
pPrev._ele.style.zIndex=1;}
this._transEle(tEle,aArr,sPos*-1,p._size*-1,lAfter,null,null,doAnim);this._transEle(cEle,aArr,sPos,p._size,lAfter,true,null,doAnim);tEle.style.zIndex=2;}else if(this.dock.method=='push'){var cEle=$(this.contId+'.BODY').firstChild;var sPos=0;if(pPrev){if(this._prevDock==this._curDock&&lAfter==(pPrev.dock.search('after')!=-1)){this._transEle(pPrev._ele,aArr,pPrev._size*-1,p._size*-1,lAfter,null,null,doAnim);sPos=pPrev._size;}
pPrev._ele.style.zIndex=4;}
this._transEle(tEle,aArr,0,p._size*-1,lAfter,null,null,false);this._transEle(cEle,aArr,sPos,p._size,lAfter,true,null,doAnim);tEle.style.zIndex=4;}else{this._transEle(tEle,aArr,p._size*-1,0,lAfter,null,null,doAnim);if(pPrev){if(this._prevDock==this._curDock)this._transEle(pPrev._ele,aArr,0,pPrev._size*-1,pPrev.dock.search('after')!=-1,null,null,arguments[1]);pPrev._ele.style.zIndex=4;}
tEle.style.zIndex=5;}
if(this.flow=='ttb'||this.flow=='btt')p.src.setSize(this._altSize,p._size,true);else p.src.setSize(p._size,this._altSize,true);setTimeout(Function(aArr.join('\n')),0);this._curDock=panelIndx;this._prevDock=panelIndx;this.state.dockPanelShown=true;this.state.currentDockPanel=panel;var state=false;for(var i=0;i<this.controls.dock.length;i++){if(this.controls.dock[i]._b){state=false;if(this.controls.dock[i].panel==this.state.currentDockPanel)state=true;this.controls.dock[i]._b.setValue(state)}}
if(this.onDockPanelShow.constructor==Function)this.onDockPanelShow();doAnimSub=false;}}else{this.hideDock();if(p._hidden){p.show=true;this._fpActive=panelIndx;this._layoutRefresh(true,true);doAnimSub=false;}}}
if(panelArr.length!=0&&(this.panels[panelIndx].src._panelType=='panelNavigator'||this.panels[panelIndx].src._panelType=='panelLayout'))this.panels[panelIndx].src.setActivePanel(panelArr.join(':'),$if(doAnimSub&&doAnim,true,false));if(this.onPanelActivate.constructor==Function)this.onPanelActivate();},firstPanel:function(){for(var i=0;i<this.panels.length;i++){p=this.panels[i];if(p.show&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&p.dock!='auto-collapse-before'&&p.dock!='auto-collapse-after'){this.setActivePanel(p.name);break;}}},prevPanel:function(){if(this.state.hasPrevPanel)this.setActivePanel(this.state.prevPanel);},nextPanel:function(){if(this.state.hasNextPanel)this.setActivePanel(this.state.nextPanel);},lastPanel:function(){for(var i=this.panels.length-1;i>=0;i--){p=this.panels[i];if(p.show&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&p.dock!='auto-collapse-before'&&p.dock!='auto-collapse-after'){this.setActivePanel(p.name);break;}}},hideDock:function(){if(this._curDock==-1)return false;var panelIndx=this._curDock;this._curDock=-1;if(this.panels[panelIndx].src.renderMode=='auto-create-destroy')this.panels[panelIndx].src.destroy();var tEle=this.panels[panelIndx]._ele;var aArr=[];var lAfter=this.panels[panelIndx].dock.search('after')!=-1
if(this.dock.method=='underlay'){var cEle=$(this.contId+'.BODY').firstChild;this._transEle(tEle,aArr,this.panels[panelIndx]._size*-1,0,lAfter);this._transEle(cEle,aArr,this.panels[panelIndx]._size,0,lAfter,true);}else if(this.dock.method=='push'){var cEle=$(this.contId+'.BODY').firstChild;this._transEle(cEle,aArr,this.panels[panelIndx]._size,0,lAfter,true);}else{this._transEle(tEle,aArr,0,this.panels[panelIndx]._size*-1,lAfter);var doEle=$(this.contId+'.DOCKOVERLAY');doEle.style.display='none';}
setTimeout(Function(aArr.join('\n')),0);this.state.dockPanelShown=false;this.state.currentDockPanel='';for(var i=0;i<this.controls.dock.length;i++){if(this.controls.dock[i]._b)this.controls.dock[i]._b.setValue(false)}
if(this.onDockPanelHide.constructor==Function)this.onDockPanelHide();},collapseFlow:function(panel){var anim=typeof arguments[1]=='boolean'?arguments[1]:true;var panelIndx=this._getPanelIndx(panel);if(panelIndx!=-1){if(this.state.flowCollapsed){if(this._fpCollapseTrg[this._fpCollapseTrg.length-1]==panelIndx)return false;}
this._fpCollapseTrg.push(panelIndx);this._fpActive=panelIndx;this.state.flowCollapsed=true;if(this.panels[panelIndx].controls.flowCollapse.has)this.panels[panelIndx].controls.flowCollapse._b.setValue(1);this._layoutRefresh(anim,true);}},expandFlow:function(){if(this._fpCollapseTrg.length==0)return false;var anim=typeof arguments[1]=='boolean'?arguments[1]:true;var fpCollapseIndx=0;if(arguments[0]){for(var i=0;i<this._fpCollapseTrg.length;i++){fpCollapseIndx=this._getPanelIndx(this._fpCollapseTrg[i]);if(this.panels[fpCollapseIndx].controls.flowCollapse.has)this.panels[fpCollapseIndx].controls.flowCollapse._b.setValue(0);}
this._fpCollapseTrg=[];}else{fpCollapseIndx=this._fpCollapseTrg.pop();fpCollapseIndx=this._getPanelIndx(fpCollapseIndx);if(this.panels[fpCollapseIndx].controls.flowCollapse.has)this.panels[fpCollapseIndx].controls.flowCollapse._b.setValue(0);}
if(this._fpCollapseTrg.length==0)this.state.flowCollapsed=false;this._layoutRefresh(anim,true);},getState:function(){var state={type:this._panelType,panels:[]};$u.o.assign(state,this.state);for(var i=0;i<this.panels.length;i++){if(this.panels[i].src._panelType!='panelCard'){state.panels[i]=this.panels[i].src.getState();}else state.panels[i]={type:'panelCard'}}
return state;},setState:function(state){if(state.flowCollapsed)this.collapseFlow(state.firstPanel,false);for(var i=0;i<this.panels.length;i++){if(this.panels[i].src._panelType!='panelCard'){this.panels[i].src.setState(state.panels[i]);}}},_afterBody:function(ele,bEle){var cEle=bEle.firstChild;$e.add(bEle,'scroll',function(){this.scrollLeft=0;this.scrollTop=0;});this._transClearEvnt(cEle);$e.add(cEle,'a5transpost',this._transPost,this);for(var i=0;i<this.panels.length;i++)this._createPanel(cEle,i);bEle.style.padding='0px';var ctrlEle=false;if(this.controls.prev.has){ctrlEle=this._getPanelEleById(this.controls.prev.id,ele,true);if(ctrlEle){this.controls.prev._b=new A5.Button(this.controls.prev.settings);this.controls.prev._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.prevPanel,this,true);}}
if(this.controls.next.has){ctrlEle=this._getPanelEleById(this.controls.next.id,ele,true);if(ctrlEle){this.controls.next._b=new A5.Button(this.controls.next.settings);this.controls.next._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.nextPanel,this,true);}}
for(var i=0;i<this.controls.dock.length;i++){ctrlEle=this._getPanelEleById(this.controls.dock[i].id,ele,true);if(ctrlEle){this.controls.dock[i]._b=new A5.ButtonToggle(this.controls.dock[i].settings);this.controls.dock[i]._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this._showDock,this);$sa(ctrlEle,'A5LinkedPanel',this.controls.dock[i].panel);}}},_createPanel:function(cEle,i){var p=this.panels[i];$u.o.assign(p,this._pDefaults,true);p.src._name=p.name;p.src._title=p.title;this.panels[i]._flex=-1;this.panels[i]._lateSize=false;var curPanelSize=this.panels[i].size;if(curPanelSize.substr(0,5)=='flex('){this.panels[i]._flex=$u.s.toNum(curPanelSize.substr(5));curPanelSize=this.panels[i].minSize;}else if(curPanelSize.substr(0,1)=='-'){this.panels[i]._lateSize=A5.u.convertUnits(curPanelSize,'px');}else if(curPanelSize.substr(curPanelSize.length-1,1)=='%'){this.panels[i]._lateSize='%';}
if(typeof curPanelSize!='number')curPanelSize=A5.u.convertUnits(curPanelSize,'px');this.panels[i]._size=curPanelSize;var tEle=p.src.create(this.contId+'.PANEL.'+i,true);tEle.style.position='absolute';if(this.flow!='btt')tEle.style.top='0px';else tEle.style.bottom='0px';if(this.flow!='rtl')tEle.style.left='0px';else tEle.style.right='0px';tEle.style.zIndex=3;$sa(tEle,'A5PanelIndex',''+i);$e.add(tEle,'a5transpost',this._transPost,this);this._transClearEvnt(tEle);cEle.appendChild(tEle);p._ele=tEle;if(p.src._created){this._panelControls(p);}},_panelControls:function(p){var ctrlEle=false;if(p.controls.prev.has){ctrlEle=this._getPanelEleById(p.controls.prev.id,p);if(ctrlEle){p.controls.prev._b=new A5.Button(p.controls.prev.settings);p.controls.prev._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.prevPanel,this,true);}}
if(p.controls.next.has){ctrlEle=this._getPanelEleById(p.controls.next.id,p);if(ctrlEle){p.controls.next._b=new A5.Button(p.controls.next.settings);p.controls.next._b.bind(ctrlEle);$e.add(ctrlEle,A5.d.evnts.click,this.nextPanel,this,true);}}
if(p.controls.flowCollapse.has){ctrlEle=this._getPanelEleById(p.controls.flowCollapse.id,p);if(ctrlEle){var s=[];s.push(p.controls.flowCollapse.states.collapse);s.push(p.controls.flowCollapse.states.expand);p.controls.flowCollapse.settings.type='multi-state';$u.o.assign(p.controls.flowCollapse.settings,p.controls.flowCollapse.states.collapse);p.controls.flowCollapse._b=new A5.ButtonToggle(p.controls.flowCollapse.settings,s);p.controls.flowCollapse._b.bind(ctrlEle);$sa(ctrlEle,'A5LinkedPanel',p.name);$e.add(ctrlEle,A5.d.evnts.click,this._toggleFlowCollapse,this);}}},_layoutRefresh:function(anim,lazySize){if(this._oldFlow!=this.flow){if(((this._oldFlow=='ttb'||this._oldFlow=='btt')&&(this.flow=='rtl'||this.flow=='ltr'))||(this._oldFlow=='rtl'||this._oldFlow=='ltr')&&(this.flow=='ttb'||this.flow=='btt')){var tSize=this._flowSize;this._flowSize=this._altSize;this._altSize=tSize;}
this._oldFlow=this.flow;}
var p=0;if(this.dock.method!='overlay'){this._transEle($(this.contId+'.BODY').firstChild,false,0,0);}
var flowSize=this._flowSize;var altSize=this._altSize;var vp=this._getVPSize();var vpLayout=0;if(vp.width<vp.height)vpLayout=1;var selfLayout=0;if(this._w<this._h)selfLayout=1
var curMinTotalSizeWDock=0
for(var i=0;i<this.panels.length;i++){p=this.panels[i];if(p._lateSize){if(p._lateSize=='%'){p._size=Math.round((flowSize/100)*$u.s.toNum(p.size));}else{p._size=flowSize+p._lateSize;}}
if(p.show&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&!(vpLayout==0&&(p.dock=='landscape-collapse-before'||p.dock=='landscape-collapse-after'))&&!(vpLayout==1&&(p.dock=='portrait-collapse-before'||p.dock=='portrait-collapse-after'))&&!(selfLayout==0&&(p.dock=='self-landscape-collapse-before'||p.dock=='self-landscape-collapse-after'))&&!(selfLayout==1&&(p.dock=='self-portrait-collapse-before'||p.dock=='self-portrait-collapse-after')))curMinTotalSizeWDock+=p._size;}
var newFPFirst=-1;var newFPLast=0;var newFPTotalFixedWidth=0;var newFPTotalFlexVal=0;var newFPHasFlex=false;var curFPCollapse=-1;if(this._fpCollapseTrg.length!=0)curFPCollapse=this._fpCollapseTrg[this._fpCollapseTrg.length-1];var curPanelSize=0;var curTotalSize=0;var flagCD=curMinTotalSizeWDock>flowSize;var curFPCollapseCanExpand=false;for(var i=this._fpActive;i<this.panels.length;i++){p=this.panels[i];if(p.show&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&!(flagCD&&(p.dock=='auto-collapse-before'||p.dock=='auto-collapse-after'))&&!(vpLayout==0&&(p.dock=='landscape-collapse-before'||p.dock=='landscape-collapse-after'))&&!(vpLayout==1&&(p.dock=='portrait-collapse-before'||p.dock=='portrait-collapse-after'))&&!(selfLayout==0&&(p.dock=='self-landscape-collapse-before'||p.dock=='self-landscape-collapse-after'))&&!(selfLayout==1&&(p.dock=='self-portrait-collapse-before'||p.dock=='self-portrait-collapse-after'))){if(newFPFirst==-1)newFPFirst=i;curPanelSize=p._size;if(curTotalSize+curPanelSize<=flowSize||newFPFirst==i){newFPLast=i;if(p._flex==-1)newFPTotalFixedWidth+=curPanelSize;else newFPTotalFlexVal+=p._flex;curTotalSize+=curPanelSize;}else break;}}
if(newFPFirst>0&&curTotalSize<flowSize){for(var i=newFPFirst-1;i>=0;i--){p=this.panels[i];if(p.show&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&!(flagCD&&(p.dock=='auto-collapse-before'||p.dock=='auto-collapse-after'))&&!(vpLayout==0&&(p.dock=='landscape-collapse-before'||p.dock=='landscape-collapse-after'))&&!(vpLayout==1&&(p.dock=='portrait-collapse-before'||p.dock=='portrait-collapse-after'))&&!(selfLayout==0&&(p.dock=='self-landscape-collapse-before'||p.dock=='self-landscape-collapse-after'))&&!(selfLayout==1&&(p.dock=='self-portrait-collapse-before'||p.dock=='self-portrait-collapse-after'))){curPanelSize=p._size;if(i<curFPCollapse){if(curTotalSize+curPanelSize<=flowSize)curFPCollapseCanExpand=true;break;}
if(curTotalSize+curPanelSize<=flowSize){newFPFirst=i;if(p._flex==-1)newFPTotalFixedWidth+=curPanelSize;else newFPTotalFlexVal+=p._flex;curTotalSize+=curPanelSize;}else break;}}}
if(curTotalSize!=newFPTotalFixedWidth)newFPHasFlex=true;var oldFPFirst=this._fpFirst;var oldFPLast=this._fpLast;this._fpFirst=newFPFirst;this._fpLast=newFPLast;var totalFlexWidth=flowSize-newFPTotalFixedWidth;var curOffset=0;var tEle=0;var aArr=[];this.state.firstPanel=this.panels[newFPFirst].name;this.state.lastPanel=this.panels[newFPLast].name;this.state.activePanel=this._fpActive<newFPFirst?this.state.firstPanel:this.panels[this._fpActive].name;this.state.hasPrevPanel=false;this.state.prevPanel='';this.state.hasNextPanel=false;this.state.nextPanel='';this.state.hasDockPanel=false;this.state.beforeDockPanels=[];this.state.afterDockPanels=[];var lateSize=false;for(var i=0;i<this.panels.length;i++){p=this.panels[i];tEle=p._ele;if(p.show&&i>=newFPFirst&&i<=newFPLast&&p.dock!='collapse-before'&&p.dock!='collapse-after'&&!(flagCD&&(p.dock=='auto-collapse-before'||p.dock=='auto-collapse-after'))&&!(vpLayout==0&&(p.dock=='landscape-collapse-before'||p.dock=='landscape-collapse-after'))&&!(vpLayout==1&&(p.dock=='portrait-collapse-before'||p.dock=='portrait-collapse-after'))&&!(selfLayout==0&&(p.dock=='self-landscape-collapse-before'||p.dock=='self-landscape-collapse-after'))&&!(selfLayout==1&&(p.dock=='self-portrait-collapse-before'||p.dock=='self-portrait-collapse-after'))){if(p.src.renderMode.substr(0,11)=='auto-create'&&!p.src._created){p.src.create();this._panelControls(p);}
if(this.flow!='rtl'){tEle.style.left='0px';tEle.style.right='';}else{tEle.style.right='0px';tEle.style.left='';}
curPanelSize=p._size;if(p._flex!=-1)curPanelSize=Math.round((totalFlexWidth/newFPTotalFlexVal)*p._flex);if(i==newFPLast)curPanelSize=flowSize-curOffset;lateSize=p._curSize>curPanelSize&&anim;if(anim){if(!p._hidden)this._transEle(tEle,aArr,p._curOffset,curOffset,false,false,lateSize);else if(i>oldFPLast)this._transEle(tEle,aArr,flowSize,curOffset,false,false,lateSize);else this._transEle(tEle,false,0,curOffset,false);}else this._transEle(tEle,false,0,curOffset,false);if(!lateSize){if(this.flow=='ttb'||this.flow=='btt')p.src.setSize(altSize,curPanelSize,lazySize);else p.src.setSize(curPanelSize,altSize,lazySize);}else if(p._altSize!=altSize){if(this.flow=='ttb'||this.flow=='btt')p.src.setSize(altSize,p._curSize,lazySize);else p.src.setSize(p._curSize,altSize,lazySize);}
tEle.style.zIndex=3;p.isDocked=false;p._hidden=false;p._curOffset=curOffset;p._curSize=curPanelSize;p._altSize=altSize;curOffset+=curPanelSize;if(p.dock.search('collapse')!=-1){if(p.dock.search('after')!=-1&&this.dock.panel.afterClassName!='')$rcn(tEle,this.dock.panel.afterClassName);else if(this.dock.panel.beforeClassName!='')$rcn(tEle,this.dock.panel.beforeClassName);}
if(this._curDock==i)this._curDock=-1;if(p.controls.prev.has){if(this.state.hasPrevPanel&&i==newFPFirst)p.controls.prev._b.setDisplay(true);else p.controls.prev._b.setDisplay(false);}
if(p.controls.next.has)p.controls.next._b.setDisplay(false);if(p.controls.flowCollapse.has){if(this.state.hasPrevPanel)p.controls.flowCollapse._b.setDisplay(false);else p.controls.flowCollapse._b.setDisplay(true);}}else{if(!p._hidden){if(p.src.renderMode=='auto-create-destroy')p.src.destroy();if(i>newFPLast){tEle.style.zIndex=1;this._transEle(tEle,aArr,p._curOffset,flowSize,false);}else{tEle.style.zIndex=1;if(!anim)tEle.style[$if(this.flow!='rtl','left','right')]='-5000px';else p._hideTimeout=setTimeout(Function('$(\''+tEle.id+'\').style.'+$if(this.flow!='rtl','left','right')+' = \'-5000px\';'),this.animation.duration+100);}}else{if(i>newFPLast)this._transEle(tEle,false,flowSize,flowSize,false);else if(tEle.style.left!='-5000px'&&tEle.style.right!='-5000px'){if(!anim)tEle.style[$if(this.flow!='rtl','left','right')]='-5000px';else p._hideTimeout=setTimeout(Function('$(\''+tEle.id+'\').style.'+$if(this.flow!='rtl','left','right')+' = \'-5000px\';'),this.animation.duration+100);}
tEle.style.zIndex=1;}
if(p.dock.search('collapse')!=-1){p.isDocked=true;this.state.hasDockPanel=true;if(p.dock.search('after')!=-1){this.state.afterDockPanels.push(p.name);if(this.dock.panel.afterClassName!='')$acn(tEle,this.dock.panel.afterClassName);}else{this.state.beforeDockPanels.push(p.name);if(this.dock.panel.beforeClassName!='')$acn(tEle,this.dock.panel.beforeClassName);}}else if(i<newFPFirst&&(i>=curFPCollapse||!curFPCollapseCanExpand)&&p.show){this.state.hasPrevPanel=true;this.state.prevPanel=p.name;}else if(i>newFPLast&&p.show&&!this.state.nextPanel){this.state.hasNextPanel=true;this.state.nextPanel=p.name;}
p._hidden=true;if(this._curDock==i){if(p.isDocked){clearTimeout(p._hideTimeout);tEle.style[$if(this.flow!='rtl','left','right')]='0px';var lAfter=p.dock.search('after')!=-1;if(this.dock.method=='underlay'){var cEle=$(this.contId+'.BODY').firstChild;var sPos=0;this._transEle(tEle,false,sPos*-1,p._size*-1,lAfter);this._transEle(cEle,false,sPos,p._size,lAfter,true);tEle.style.zIndex=2;}else if(this.dock.method=='push'){var cEle=$(this.contId+'.BODY').firstChild;var sPos=0;this._transEle(tEle,false,0,p._size*-1,lAfter,false);this._transEle(cEle,false,sPos,p._size,lAfter,true);tEle.style.zIndex=2;}else{this._transEle(tEle,false,p._size*-1,0,lAfter);tEle.style.zIndex=5;}
if(!lateSize){if(this.flow=='ttb'||this.flow=='btt')p.src.setSize(altSize,p._size,lazySize);else p.src.setSize(p._size,altSize,lazySize);}else if(p._altSize!=altSize){if(this.flow=='ttb'||this.flow=='btt')p.src.setSize(altSize,p._size,lazySize);else p.src.setSize(p._size,altSize,lazySize);}
if(this.dock.flowLock.has)$(this.contId+'.DOCKOVERLAY').style.display='';}else{this._curDock=-1;if(this.dock.flowLock.has)$(this.contId+'.DOCKOVERLAY').style.display='none';}}}}
if(anim)setTimeout(Function(aArr.join('\n')),0);if(this.controls.prev.has){if(this.state.hasPrevPanel)this.controls.prev._b.setDisplay(true);else this.controls.prev._b.setDisplay(false);}
p=this.panels[newFPLast];if(p.controls.next.has&&this.state.hasNextPanel)p.controls.next._b.setDisplay(true);if(this.controls.next.has){if(this.state.hasNextPanel)this.controls.next._b.setDisplay(true);else this.controls.next._b.setDisplay(false);}
var d=0;var state=false;for(var i=0;i<this.controls.dock.length;i++){d=this.controls.dock[i];state=false;if(d._b){if(d.panel=='*generic'){if(this.state.hasDockPanel)state=true;}else if(d.panel=='*before'){if(this.state.beforeDockPanels.length>0)state=true;}else if(d.panel=='*after'){if(this.state.afterDockPanels.length>0)state=true;}else if(this.panels[this._getPanelIndx(d.panel)].isDocked)state=true;d._b.setDisplay(state);}}
if(this.onLayoutRefresh.constructor==Function)this.onLayoutRefresh();},_onSetSize:function(){var lazySize=typeof arguments[0]=='boolean'?arguments[0]:true;var bEle=$(this.contId+'.BODY');var cEle=bEle.firstChild;var doEle=$(this.contId+'.DOCKOVERLAY');var cWidth=bEle.clientWidth;var cHeight=bEle.clientHeight;this._flowSize=cWidth;this._altSize=cHeight;if(this.flow=='ttb'||this.flow=='btt'){this._flowSize=cHeight;this._altSize=cWidth;}
cEle.style.width=cWidth+'px';cEle.style.height=cHeight+'px';doEle.style.width=cWidth+'px';doEle.style.height=cHeight+'px';this._layoutRefresh(false,lazySize);},_showDock:function(e,classInst){panel=$ga(this,'A5LinkedPanel');var panelIndx=classInst._getPanelIndx(panel);if(panelIndx>-1){if($ga(this,'A5ButtonState')!='true')classInst.hideDock();else classInst.setActivePanel(panel);}else{var menuItems=[];var genSingleDock=(classInst.state.beforeDockPanels.length+classInst.state.afterDockPanels.length==1&&panel=='*generic');var p=0;if(panel=='*before'||panel=='*generic'){if((classInst.state.beforeDockPanels.length==1&&panel=='*after')||genSingleDock){classInst.setActivePanel(classInst.state.beforeDockPanels[0]);return true;}
for(var i=0;i<classInst.state.beforeDockPanels.length;i++){p=classInst.panels[classInst._getPanelIndx(classInst.state.beforeDockPanels[i])];menuItems.push({html:p.name,value:p.name});}}
if(panel=='*after'||panel=='*generic'){if((classInst.state.afterDockPanels.length==1&&panel=='*after')||genSingleDock){classInst.setActivePanel(classInst.state.afterDockPanels[0]);return true;}
for(var i=0;i<classInst.state.afterDockPanels.length;i++){p=classInst.panels[classInst._getPanelIndx(classInst.state.afterDockPanels[i])];menuItems.push({html:p.name,value:p.name});}}
if(!classInst._dMenu)classInst._dMenu=new A5.Menu([],{theme:classInst.theme,iconColumn:{show:false},onClick:function(item){pl1Obj.setActivePanel(item.value);}});classInst._dMenu.populate(menuItems);classInst._dMenu.show('dropdown',this);}},_toggleFlowCollapse:function(e,classInst){var panel=$ga(this,'A5LinkedPanel');if(classInst.state.flowCollapsed){if(classInst._fpCollapseTrg[classInst._fpCollapseTrg.length-1]==classInst._getPanelIndx(panel))classInst.expandFlow();else classInst.collapseFlow(panel);}else classInst.collapseFlow(panel);},_getPanelIndx:function(panel){if(typeof panel=='number')return panel;panel=panel.toLowerCase();for(var i=0;i<this.panels.length;i++){if(this.panels[i].name.toLowerCase()==panel)return i;}
return-1;},_getVPSize:function(){return AUI.u.getVPSize();},_transEle:function(ele,aArr,sVal,eVal,after,alwaysTL,lateSize){var doAnim=typeof arguments[7]=='boolean'?arguments[7]:true;var mLoc=this._locVals[this.flow.substr(0,1)];var aLoc=this._locVals[this.flow.substr(2,1)];if(after){var tLoc=mLoc;mLoc=aLoc;aLoc=tLoc;}
if(alwaysTL){if(mLoc=='bottom'||mLoc=='right'){var tLoc=mLoc;mLoc=aLoc;aLoc=tLoc;sVal=sVal*-1;eVal=eVal*-1;}}
if(ele.style[mLoc]==''){ele.style[mLoc]='0px';ele.style[aLoc]='';}
var cssProp=mLoc;var cssDOMProp=mLoc;var cssAnimProp='';if(A5.u.css.supportsTransition&&this.animation.type!='none'){if(mLoc=='left'){sVal=A5.u.css.transform2D(sVal+'px','0px');eVal=A5.u.css.transform2D(eVal+'px','0px');}else if(mLoc=='right'){sVal=A5.u.css.transform2D((sVal*-1)+'px','0px');eVal=A5.u.css.transform2D((eVal*-1)+'px','0px');}else if(mLoc=='top'){sVal=A5.u.css.transform2D('0px',sVal+'px');eVal=A5.u.css.transform2D('0px',eVal+'px');}else if(mLoc=='bottom'){sVal=A5.u.css.transform2D('0px',(sVal*-1)+'px');eVal=A5.u.css.transform2D('0px',(eVal*-1)+'px');}
cssProp=A5.u.css.properties.transform;cssDOMProp=A5.u.css.properties.transformDOM;cssAnimProp=A5.u.css.properties.transitionDOM;}else{sVal=sVal+'px';eVal=eVal+'px';}
if(aArr.constructor==Array){ele.style[cssDOMProp]=sVal;aArr.push('var tEle = $(\''+ele.id+'\');');aArr.push('tEle.style[\''+cssDOMProp+'\'] = \''+eVal+'\';');if(doAnim&&A5.u.css.supportsTransition)aArr.push('tEle.style[\''+cssAnimProp+'\'] = \''+cssProp+' '+this.animation.duration+'ms ease-in-out\';');else if(!this.state.dockPanelShown&&ele.id==this.contId+'.BODYINNER')aArr.push('$(\''+this.contId+'.BODYINNER\').style.display = \'none\';');}else{ele.style[cssDOMProp]=eVal;if(!this.state.dockPanelShown&&ele.id==this.contId+'.BODYINNER')$(this.contId+'.DOCKOVERLAY').style.display='none';}
if(lateSize||ele.id==this.contId+'.BODYINNER')$sa(ele,'A5PanelTransPost','true');else $sa(ele,'A5PanelTransPost','false');},_transClearEvnt:function(ele){$e.add(ele,A5.u.css.properties.transitionEndEvent,Function('if(arguments[0].target.id != this.id) return true; this.style[A5.u.css.properties.transitionDOM] = \'\'; if($ga(this,\'A5PanelTransPost\') == \'true\'){ $e.execute(this,\'a5transpost\');}'));},_transPost:function(e,classInst){if(!classInst.state.dockPanelShown&&this.id==classInst.contId+'.BODYINNER')$(classInst.contId+'.DOCKOVERLAY').style.display='none';var panelIndx=Number(''+$ga(this,'A5PanelIndex'));if(!isNaN(panelIndx)){var curPanelSize=classInst.panels[panelIndx]._curSize;var altSize=classInst._altSize;if(classInst.flow=='ttb'||classInst.flow=='btt')classInst.panels[panelIndx].src.setSize(altSize,curPanelSize,true);else classInst.panels[panelIndx].src.setSize(curPanelSize,altSize,true);}},_pDefaults:{name:'',title:'',size:'flex(1)',minSize:0,dock:'',show:true,controls:{prev:{has:false,id:'{panel.id}.CTRL.PREV',settings:{layout:'text',html:'Back'}},next:{has:false,id:'{panel.id}.CTRL.NEXT',settings:{layout:'text',html:'Next'}},flowCollapse:{has:false,id:'{panel.id}.CTRL.FLOWCOLLAPSE',settings:{layout:'text'},states:{collapse:{html:'&laquo;'},expand:{html:'&raquo;'}}}},isDocked:false,_curOffset:0,_curSize:0,_altSize:0,_hidden:true},_locVals:{'l':'left','r':'right','b':'bottom','t':'top'}});A5.u.pointerTracker={_:{w:{},a:false,i:{t:'',ti:[],oad:{x:0,y:0},s:{},d:{}},isInit:false,start:function(e){$e.preventDefault(e);var pt=A5.u.pointerTracker._;if(!pt.a){pt.a=true;pt.i.s=pt.w[this.id];if(e.type=='touchstart')pt.i.t='touch';else pt.i.t='mouse';pt.i.oad.x=0;pt.i.oad.y=0;pt.i.d={type:'single',captured:1,preventAdd:false,x:0,y:0,start:{x:0,y:0},delta:{x:0,y:0,min:{x:0,y:0},max:{x:0,y:0}},original:{x:0,y:0},addDelta:{x:0,y:0},points:[],rotation:false,scale:false}
if(pt.i.t=='touch')pt.i.ti.push(e.changedTouches[0].identifier);pt.calcData(pt.i,e,'s');pt.i.d.original.x=pt.i.d.x;pt.i.d.original.y=pt.i.d.y;if(typeof pt.i.s.onStart=='function')pt.i.s.onStart.call(this,pt.i.d,pt.i.s,e);if(typeof pt.i.s.onSingleStart=='function')pt.i.s.onSingleStart.call(this,pt.i.d,pt.i.s,e);if(pt.i.t=='touch'){if(e.changedTouches.length>1&&!pt.i.d.preventAdd){if(typeof pt.i.s.onSingleEnd=='function')pt.i.s.onSingleEnd.call(this,pt.i.d,pt.i.s,e);pt.i.ti.push(e.changedTouches[1].identifier);pt.calcData(pt.i,e,'s');pt.i.d.captured++;pt.i.d.type='double';if(typeof pt.i.s.onDblStart=='function')pt.i.s.onDblStart.call(this,pt.i.d,pt.i.s,e);}
if(e.changedTouches.length>2&&!pt.i.d.preventAdd){if(typeof pt.i.s.onDblEnd=='function')pt.i.s.onDblEnd.call(this,pt.i.d,pt.i.s,e);for(var i=2;i<e.changedTouches.length;i++){pt.i.ti.push(e.changedTouches[i].identifier);pt.i.d.captured++;}
pt.calcData(pt.i,e,'s');pt.i.d.type='multi';if(typeof pt.i.s.onMultiStart=='function')pt.i.s.onMultiStart.call(this,pt.i.d,pt.i.s,e);}}}else if(pt.i.t=='touch'&&!pt.i.d.preventAdd){pt.i.oad.x=pt.i.d.addDelta.x;pt.i.oad.y=pt.i.d.addDelta.y;if(pt.i.d.type=='single'){if(typeof pt.i.s.onSingleEnd=='function')pt.i.s.onSingleEnd.call(this,pt.i.d,pt.i.s,e);pt.i.d.type='double';pt.i.ti.push(e.changedTouches[0].identifier);pt.calcData(pt.i,e,'s');pt.i.d.captured++;if(typeof pt.i.s.onDblStart=='function')pt.i.s.onDblStart.call(this,pt.i.d,pt.i.s,e);if(e.changedTouches.length>1){if(typeof pt.i.s.onDblEnd=='function')pt.i.s.onDblEnd.call(this,pt.i.d,pt.i.s,e);pt.i.d.type='multi';for(var i=1;i<e.changedTouches.length;i++){pt.i.ti.push(e.changedTouches[i].identifier);pt.i.d.captured++;}
pt.calcData(pt.i,e,'s');if(typeof pt.i.s.onMultiStart=='function')pt.i.s.onMultiStart.call(this,pt.i.d,pt.i.s,e);}}else if(pt.i.d.type=='double'){if(typeof pt.i.s.onDblEnd=='function')pt.i.s.onDblEnd.call(this,pt.i.d,pt.i.s,e);pt.i.d.type='multi';for(var i=0;i<e.changedTouches.length;i++){pt.i.ti.push(e.changedTouches[i].identifier);pt.i.d.captured++;}
pt.calcData(pt.i,e,'s');if(typeof pt.i.s.onMultiStart=='function')pt.i.s.onMultiStart.call(this,pt.i.d,pt.i.s,e);}else{for(var i=0;i<e.changedTouches.length;i++){pt.i.ti.push(e.changedTouches[i].identifier);pt.i.d.captured++;}
pt.calcData(pt.i,e,'a');if(typeof pt.i.s.onMultiAdd=='function')pt.i.s.onMultiAdd.call(this,pt.i.d,pt.i.s,e);}}},move:function(e){if(!A5.u.pointerTracker._.a)return false;$e.preventDefault(e);var pt=A5.u.pointerTracker._;if(pt.i.t=='touch'){if(!pt.touchIsTracked(pt.i.ti,e))return;}
if(typeof pt.i.s.onChange=='function'){pt.calcData(pt.i,e,'m');pt.i.s.onChange.call(this,pt.i.d,pt.i.s,e);}},end:function(e){if(!A5.u.pointerTracker._.a)return false;$e.preventDefault(e);var pt=A5.u.pointerTracker._;if(pt.i.t=='touch'){if(!pt.touchIsTracked(pt.i.ti,e))return;var indx=0;for(var i=0;i<e.changedTouches.length;i++){indx=pt.i.ti.indexOf(e.changedTouches[i].identifier);if(indx!=-1)pt.i.ti.splice(indx,1);}
if(pt.i.d.type=='single'){if(typeof pt.i.s.onSingleEnd=='function')pt.i.s.onSingleEnd.call(this,pt.i.d,pt.i.s,e);}else if(pt.i.d.type=='double'){if(typeof pt.i.s.onDblEnd=='function')pt.i.s.onDblEnd.call(this,pt.i.d,pt.i.s,e);}else if(pt.i.d.type=='multi'&&pt.i.ti.length<3){if(typeof pt.i.s.onMultiEnd=='function')pt.i.s.onMultiEnd.call(this,pt.i.d,pt.i.s,e);}
if(pt.i.ti.length==0){if(typeof pt.i.s.onEnd=='function')pt.i.s.onEnd.call(this,pt.i.d,pt.i.s,e);pt.a=false}else{if(pt.i.ti.length==1){pt.i.d.type='single';pt.calcData(pt.i,e,'s');if(typeof pt.i.s.onSingleStart=='function')pt.i.s.onSingleStart.call(this,pt.i.d,pt.i.s,e);}else if(pt.i.ti.length==2){pt.i.d.type='double';pt.calcData(pt.i,e,'s');if(typeof pt.i.s.onDblStart=='function')pt.i.s.onDblStart.call(this,pt.i.d,pt.i.s,e);}else{pt.i.d.type='multi';pt.calcData(pt.i,e,'r');if(typeof pt.i.s.onMultiRemove=='function')pt.i.s.onMultiRemove.call(this,pt.i.d,pt.i.s,e);}}}else{if(typeof pt.i.s.onSingleEnd=='function')pt.i.s.onSingleEnd.call(this,pt.i.d,pt.i.s,e);if(typeof pt.i.s.onEnd=='function')pt.i.s.onEnd.call(this,pt.i.d,pt.i.s,e);pt.a=false}},calcData:function(i,e,t){if(i.t=='touch'){if(t=='s'||t=='e'||t=='a'||t=='r'){i.d.points=[];for(var j=0;j<i.ti.length;j++)i.d.points.push({x:0,y:0});}
for(var j=0;j<i.ti.length;j++){for(var k=0;k<e.touches.length;k++){if(i.ti[j]==e.touches[k].identifier){i.d.points[j].x=e.touches[k].clientX;i.d.points[j].y=e.touches[k].clientY;break;}}}
if(i.ti.length==1){if(t=='s'||t=='e'){i.d.x=i.d.points[0].x;i.d.y=i.d.points[0].y;i.d.start.x=i.d.x;i.d.start.y=i.d.y;i.d.delta.x=0;i.d.delta.y=0;i.d.delta.min.x=0;i.d.delta.min.y=0;i.d.delta.max.x=0;i.d.delta.max.y=0;i.d.scale=false;i.d.rotation=false;}else{i.d.x=i.d.points[0].x;i.d.y=i.d.points[0].y;i.d.delta.x=i.d.x-i.d.start.x;i.d.delta.y=i.d.y-i.d.start.y;}}else if(i.ti.length==2){if(t=='s'||t=='e'){i.d.x=Math.floor((i.d.points[0].x+i.d.points[1].x)/2);i.d.y=Math.floor((i.d.points[0].y+i.d.points[1].y)/2);i.d.start.x=i.d.x;i.d.start.y=i.d.y;i.d.delta.x=0;i.d.delta.y=0;i.d.delta.min.x=0;i.d.delta.min.y=0;i.d.delta.max.x=0;i.d.delta.max.y=0;i.d.scale={value:1,width:0,height:0,length:0,delta:{width:0,height:0,length:0},start:{width:0,height:0,length:0}};i.d.scale.width=Math.abs(i.d.points[0].x-i.d.points[1].x);i.d.scale.height=Math.abs(i.d.points[0].y-i.d.points[1].y);i.d.scale.length=Math.floor(Math.sqrt((i.d.scale.width*i.d.scale.width)+(i.d.scale.height*i.d.scale.height)));i.d.scale.start.width=i.d.scale.width;i.d.scale.start.height=i.d.scale.height;i.d.scale.start.length=i.d.scale.length;i.d.rotation={angle:0,quad:0,delta:{angle:0},start:{angle:0,quad:0}};var ang=-Math.floor(Math.atan2(i.d.points[1].y-i.d.points[0].y,i.d.points[1].x-i.d.points[0].x)*180/Math.PI);if(ang<0)ang=ang+360;i.d.rotation.angle=ang;i.d.rotation.start.angle=ang;if(i.d.rotation.angle<=90)i.d.rotation.quad=1;else if(i.d.rotation.angle<=180)i.d.rotation.quad=2;else if(i.d.rotation.angle<=270)i.d.rotation.quad=3;else i.d.rotation.quad=4;i.d.rotation.start.quad=i.d.rotation.quad;}else{i.d.x=Math.floor((i.d.points[0].x+i.d.points[1].x)/2);i.d.y=Math.floor((i.d.points[0].y+i.d.points[1].y)/2);i.d.delta.x=i.d.x-i.d.start.x;i.d.delta.y=i.d.y-i.d.start.y;i.d.scale.width=Math.abs(i.d.points[0].x-i.d.points[1].x);i.d.scale.height=Math.abs(i.d.points[0].y-i.d.points[1].y);i.d.scale.length=Math.floor(Math.sqrt((i.d.scale.width*i.d.scale.width)+(i.d.scale.height*i.d.scale.height)));i.d.scale.delta.width=i.d.scale.width-i.d.scale.start.width;i.d.scale.delta.height=i.d.scale.height-i.d.scale.start.height;i.d.scale.delta.length=i.d.scale.length-i.d.scale.start.length;i.d.scale.value=i.d.scale.length/i.d.scale.start.length;var ang=-Math.floor(Math.atan2(i.d.points[1].y-i.d.points[0].y,i.d.points[1].x-i.d.points[0].x)*180/Math.PI);if(ang<0)ang=ang+360;i.d.rotation.delta.angle=i.d.rotation.delta.angle+(ang-i.d.rotation.angle);i.d.rotation.angle=ang;if(i.d.rotation.angle<=90)i.d.rotation.quad=1;else if(i.d.rotation.angle<=180)i.d.rotation.quad=2;else if(i.d.rotation.angle<=270)i.d.rotation.quad=3;else i.d.rotation.quad=4;}}else{if(t=='s'||t=='e'||t=='a'||t=='r'){i.d.x=0;i.d.y=0;for(var j=0;j<i.d.points.length;j++){i.d.x+=i.d.points[j].x;i.d.y+=i.d.points[j].y;}
i.d.x=Math.floor(i.d.x/i.d.points.length);i.d.y=Math.floor(i.d.y/i.d.points.length);i.d.start.x=i.d.x;i.d.start.y=i.d.y;i.d.delta.x=0;i.d.delta.y=0;i.d.delta.min.x=0;i.d.delta.min.y=0;i.d.delta.max.x=0;i.d.delta.max.y=0;i.d.scale=false;i.d.rotation=false;}else{i.d.x=0;i.d.y=0;for(var j=0;j<i.d.points.length;j++){i.d.x+=i.d.points[j].x;i.d.y+=i.d.points[j].y;}
i.d.x=Math.floor(i.d.x/i.d.points.length);i.d.y=Math.floor(i.d.y/i.d.points.length);i.d.delta.x=i.d.x-i.d.start.x;i.d.delta.y=i.d.y-i.d.start.y;}}}else{if(t=='s'||t=='e'){i.d.points=[{x:e.clientX,y:e.clientY}];i.d.x=e.clientX;i.d.y=e.clientY;i.d.start.x=i.d.x;i.d.start.y=i.d.y;i.d.delta.x=0;i.d.delta.y=0;i.d.delta.min.x=0;i.d.delta.min.y=0;i.d.delta.max.x=0;i.d.delta.max.y=0;i.d.scale=false;i.d.rotation=false;}else{i.d.points[0].x=e.clientX;i.d.points[0].y=e.clientY;i.d.x=e.clientX;i.d.y=e.clientY;i.d.delta.x=i.d.x-i.d.start.x;i.d.delta.y=i.d.y-i.d.start.y;}}
i.d.delta.min.x=Math.min(i.d.delta.min.x,i.d.delta.x);i.d.delta.min.y=Math.min(i.d.delta.min.y,i.d.delta.y);i.d.delta.max.x=Math.max(i.d.delta.max.x,i.d.delta.x);i.d.delta.max.y=Math.max(i.d.delta.max.y,i.d.delta.y);i.d.addDelta.x=i.oad.x+i.d.delta.x;i.d.addDelta.y=i.oad.y+i.d.delta.y;},touchIsTracked:function(tt,e){for(var i=0;i<e.changedTouches.length;i++){if(tt.indexOf(e.changedTouches[i].identifier)!=-1){return true;}}
return false;},init:function(){if(!this.isInit){$e.add(document.body,'touchmove',this.move);$e.add(document.body,'touchend',this.end);$e.add(document.body,'touchcancel',this.end);$e.add(document.documentElement,'mousemove',this.move);$e.add(document.documentElement,'mouseup',this.end);this.isInit=true;}},selStop:function(e){var sEle=e.target||e.srcElement;if(sEle){var tag=sEle.tagName.toLowerCase();if(tag=='input'||tag=='textarea')return null;}
$e.stopEvent($e.getEvent(e));return false;}},add:function(ele,s){ele=$(ele);if(!this._.w[ele.id]){$e.add(ele,A5.d.evnts.down,this._.start);$e.add(ele,'selectstart',this._.selStop);$e.add(ele,'dragstart',this._.selStop);}
$u.o.assign(s,{onStart:false,onEnd:false,onSingleStart:false,onSingleEnd:false,onDblStart:false,onDblEnd:false,onMutliStart:false,onMultiEnd:false,onMultiAdd:false,onMultiRemove:false,onChange:false},true);this._.w[ele.id]=s;this._.init();},remove:function(ele){ele=$(ele);if(this._.w[ele.id]){$e.remove(ele,A5.d.evnts.down,this._.start);$e.remove(ele,'selectstart',this._.selStop);$e.remove(ele,'dragstart',this._.selStop);delete this._.w[ele.id];}}}
A5.u.drag={useDragScrolling:'auto',defaults:{custom:{tolerance:5},scroll:{theme:'',snap:false,pull:{x:'atuo',y:'atuo'},onPull:0,onPullRelease:0,onPullEnd:0,momentum:{allow:true,duration:1000},bounce:{allow:true},indicator:{show:true,h:{show:true,className:'',barClassName:'',location:'bottom',offset:'0px',left:'0px',right:'0px'},v:{show:true,className:'',barClassName:'',location:'right',offset:'0px',top:'0px',bottom:'0px'}}}},_sDif:0,_w:{},_st:{},_i:{_a:false},_da:false,_di:false,_start:function(e){var sEle=e.target||e.srcElement;if(sEle){var tag=sEle.tagName.toLowerCase();if(tag=='input'||tag=='textarea')return null;}
var d=A5.u.drag;var i=d._i;if(i._a)return true;var c=d._getCoors(e);var ti=false;if(e.type=='touchstart')ti=e.changedTouches[0].identifier;d._setupI(i,c.clientX,c.clientY,ti);d._awe={};var stopEvent=false;var ele=this;var eId='';while(ele.tagName.toUpperCase()!='BODY'){eId=ele.id;if(eId!=''){if(typeof d._w[eId]!='undefined'){d._awe[eId]=ele;if(d._w[eId].p){stopEvent=true;break;}
if(d._w[eId].s&&!d._w[eId].s.disabled&&!i._s){var ss=d._w[eId].s;var cScrl=$ga(ele,'A5CustomScroll');var cSX=0;var cSY=0;if(cScrl){cScrl=cScrl.split(',');cSX=Number(cScrl[0]);cSY=Number(cScrl[1]);}
if(typeof ss._p=='undefined'){ss._p={t:0,b:0};var swcs={paddingTop:'',paddingBottom:''};if(typeof window.getComputedStyle!='undefined')swcs=window.getComputedStyle(ele);else if(ele.currentStyle)swcs=ele.currentStyle;if(swcs.paddingTop!='')ss._p.t=A5.u.convertUnits(swcs.paddingTop,'px');if(swcs.paddingBottom!='')ss._p.b=A5.u.convertUnits(swcs.paddingBottom,'px');ss._p.y=ss._p.t+ss._p.b;}
var sW=ele.scrollWidth+cSX;var sH=ele.firstChild.offsetHeight+ss._p.y;if(d._st[eId]){var swcs={};swcs[A5.u.css.properties.transformDOM]='';if(typeof window.getComputedStyle!='undefined')swcs=window.getComputedStyle(ele.firstChild);else if(ele.currentStyle)swcs=ele.firstChild.currentStyle;var transform={e:0,f:0};if(A5.flags.isFireFox||A5.flags.isOpera){var mRE=/matrix\(\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*,\s*-?\d+(?:\.\d+)?\s*\,\s*(-?\d+(?:\.\d+)?)\s*,\s*(-?\d+(?:\.\d+)?)\s*\)/;var mREM=swcs[A5.u.css.properties.transformDOM].match(mRE);if(mREM){transform.e=mREM[1];transform.f=mREM[2];}}else if(A5.flags.isWebKit){transform=new WebKitCSSMatrix(swcs[A5.u.css.properties.transformDOM]);}else{transform=new MSCSSMatrix(swcs[A5.u.css.properties.transformDOM]);}
cSX=Math.round(transform.e)*-1;cSY=Math.round(transform.f)*-1;sW=d._st[eId].w;sH=d._st[eId].h;clearInterval(d._st[eId].inter);delete d._st[eId];ele.firstChild.style[A5.u.css.properties.transitionDOM]='';ele.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D((cSX*-1),(cSY*-1));}
i._s={id:eId,iX:false,iY:false,x:false,y:false,vX:cSX,vY:cSY,cX:cSX,cY:cSY,sW:sW,sH:sH,mX:sW-ele.clientWidth,mY:sH-ele.clientHeight,p:ss.pull,oP:ss.onPull.constructor==Function,oPE:ss.onPullEnd.constructor==Function,oPF:ss.onPull,oPEF:ss.onPullEnd,b:ss.bounce.allow,pX:ele.offsetWidth/2,pY:ele.offsetHeight/2,pXP:0,pYP:0,oW:ele.offsetWidth,oH:ele.offsetHeight,xIBEle:false,yIBEle:false};if((ss.axis=='x'||ss.axis=='both')&&!i._cX&&(ele.clientWidth+4<i._s.sW||ss.pull.x=='always')){i._s.x=true;if(ss.indicator.show&&ss.indicator.h.show){var sIEle=$(ele.id+'.SCROLLINDICATOR.X');if(!sIEle){sIEle=document.createElement('div');sIEle.id=ele.id+'.SCROLLINDICATOR.X';sIEle.className=ss.indicator.h.className;ele.appendChild(sIEle);$ss(sIEle,'display: none; position: absolute; overflow: hidden; left: '+ss.indicator.h.left+'; right: '+ss.indicator.h.right+'; width: auto; '+ss.indicator.h.location+': '+ss.indicator.h.offset+';');sIEle.innerHTML='<div class="'+ss.indicator.h.barClassName+'" style="position: absolute; top: 0px; left: 0px; font: 0px; width: 5px; height: 5px;"></div>';}
sIEle.style.display='none';var sIBEle=sIEle.firstChild;sIBEle.style.left=((i._s.vX/i._s.sW)*100)+'%';sIBEle.style.width=Math.max(5,(ele.clientWidth/i._s.sW)*100)+'%';sIBEle.style.minWidth='10px';sIBEle.style[A5.u.css.properties.transitionDOM]='';i._s.xIBEle=sIBEle;}}
if((ss.axis=='y'||ss.axis=='both')&&!i._cY&&(ele.clientHeight+4<i._s.sH||ss.pull.y=='always')){i._s.y=true;if(ss.indicator.show&&ss.indicator.v.show){var sIEle=$(ele.id+'.SCROLLINDICATOR.Y');if(!sIEle){sIEle=document.createElement('div');sIEle.id=ele.id+'.SCROLLINDICATOR.Y';sIEle.className=ss.indicator.v.className;ele.appendChild(sIEle);$ss(sIEle,'display: none; position: absolute; overflow: hidden; top: '+ss.indicator.v.top+'; bottom: '+ss.indicator.v.bottom+'; height: auto; '+ss.indicator.v.location+': '+ss.indicator.v.offset+';');sIEle.innerHTML='<div class="'+ss.indicator.v.barClassName+'" style="position: absolute; top: 0px; left: 0px; font: 0px; width: 5px; height: 5px;"></div>';}
sIEle.style.display='none';var sIBEle=sIEle.firstChild;sIBEle.style.top=((i._s.vY/i._s.sH)*100)+'%';sIBEle.style.height=((ele.clientHeight/i._s.sH)*100)+'%';sIBEle.style.minHeight='10px';sIBEle.style[A5.u.css.properties.transitionDOM]='';i._s.yIBEle=sIBEle;}}
if(ss.stopPropagation){if(!i._cX&&i._s.x)i._cX=true;if(!i._cY&&i._s.y)i._cY=true;}}
if(d._w[eId].c&&!d._w[eId].c.disabled){if(d._w[eId].c.axis=='x'&&!i._cX)i._cX={id:eId,l:false,a:false,f:i._s==false};else if(d._w[eId].c.axis=='y'&&!i._cY)i._cY={id:eId,l:false,a:false,f:i._s==false};else{if(!i._cX)i._cX={id:eId,l:false,a:false,f:i._s==false};if(!i._cY)i._cY={id:eId,l:false,a:false,f:i._s==false};}
if(i._cX!=false&&i._cY!=false)break;}}}
ele=ele.parentNode;}
if(i._cX==true)i._cX=false;if(i._cY==true)i._cY=false;if(!i._cX)i._cX={id:false,a:false,l:false,f:false};if(!i._cY)i._cY={id:false,a:false,l:false,f:false};if(i._cX.id&&i._cY.id){if(i._cX.id==i._cY.id)i._cB=true;}
if(i._s||i._cX.id||i._cY.id){d._da=true;var imd=false;if(i._cX.id){if(d._w[i._cX.id].c.tolerance==-1)imd=true;}
if(i._cY.id){if(d._w[i._cY.id].c.tolerance==-1)imd=true;}
if(imd)d._move(e);}else{i._a=false;if(stopEvent){i._a=true;setTimeout(function(){A5.u.drag._i._a=false},0);}}},_move:function(e){if(!A5.u.drag._da)return;$e.preventDefault(e);var d=A5.u.drag;var i=d._i;if(i.touchId!=false){if(e.type=='mousemove')return false;else if(i.touchId!=e.changedTouches[0].identifier)return false;}
var c=d._getCoors(e);i.x=c.clientX;i.y=c.clientY;if(i.startX==false)i.startX=i.x;if(i.startY==false)i.startY=i.y;i.moveX=i.x-i.startX;i.moveY=i.y-i.startY;i.customMoveX=i.moveX;i.customMoveY=i.moveY;i.maxX=Math.max(i.moveX,i.maxX);i.minX=Math.min(i.moveX,i.minX);i.maxY=Math.max(i.moveY,i.maxY);i.minY=Math.min(i.moveY,i.minY);var dt=((Date.now()-i.startT));if(Math.abs(i.moveX)/dt>1||Math.abs(i.moveY)/dt>1)i.hasMomentum=true;else i.hasMomentum=false;var useCX=true;var useCY=true;if(i._s){useCX=false;useCY=false;var oldPXP=i._s.pXP;var oldPYP=i._s.pYP;if(i._s.x){if(!i._s.iX){if(i._s.xIBEle&&i.moveX!=0){i._s.xIBEle.parentNode.style.display='';i._s.iX=true;}}
var sX=i._s.vX-i.moveX;if(sX<0||sX>i._s.mX){var oX=0;if(sX<0)oX=sX*-1;else if(sX>i._s.mX)oX=(sX-i._s.mX)*-1;if(i._cX.id){useCX=true;i.customMoveX=oX;}else if(i._s.p.x!='never'){i._s.cX=sX;i._s.pXP=oX;}}else{i._s.cX=sX;i._s.pXP=0;i.customMoveX=0;if(i._cX.a){if(d._w[i._cX.id].c.onEnd&&!(i._cB&&i._cY.a))d._w[i._cX.id].c.onEnd.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);i._cX.a=false;i._cY.l=false;}}
if(i._s.xIBEle)i._s.xIBEle.style.left=((i._s.cX/i._s.sW)*100)+'%';}else{if(i._s.y&&i._cX.id){if(Math.max(Math.abs(i.minY),i.maxY)<d._w[i._cX.id].c.tolerance||i._cX.f)useCX=true;}else useCX=true;}
if(i._s.y){if(!i._s.iY){if(i._s.yIBEle&&i.moveY!=0){i._s.yIBEle.parentNode.style.display='';i._s.iY=true;}}
var sY=i._s.vY-i.moveY;if(sY<0||sY>i._s.mY){var oY=0;if(sY<0)oY=sY*-1;else if(sY>i._s.mY)oY=(sY-i._s.mY)*-1;if(i._cY.id){useCY=true;i.customMoveY=oY;}else if(i._s.p.y!='never'){i._s.cY=sY;i._s.pYP=oY;}}else{i._s.cY=sY;i._s.pYP=0;i.customMoveY=0;if(i._cY.a){if(d._w[i._cY.id].c.onEnd&&!(i._cB&&i._cX.a))d._w[i._cY.id].c.onEnd.call(d._awe[i._cY.id],i,d._w[i._cY.id].c,e);i._cY.a=false;i._cX.l=false;}}
if(i._s.yIBEle)i._s.yIBEle.style.top=((i._s.cY/i._s.sH)*100)+'%';}else{if(i._s.x&&i._cY.id){if(Math.max(Math.abs(i.minX),i.maxX)<d._w[i._cY.id].c.tolerance||i._cY.f)useCY=true;}else useCY=true;}
if(i._s.oP&&(i._s.pXP!=0||i._s.pYP!=0)){i._s.oPF.call(d._awe[i._s.id],i,d._w[i._s.id].s,i._s.pXP*-1,i._s.pYP*-1,e);}
if(i._s.oPE&&((i._s.pXP==0&&oldPXP!=0)||(i._s.pYP==0&&oldPYP!=0))){i._s.oPEF.call(d._awe[i._s.id],i,d._w[i._s.id].s,i._s.pXP*-1,i._s.pYP*-1,e);}
d._awe[i._s.id].firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D((i._s.cX*-1),(i._s.cY*-1));$sa(d._awe[i._s.id],'A5CustomScroll',i._s.cX+','+i._s.cY);d._sDif=Math.max(d._sDif,Math.max(Math.abs(i.startX-i.x),Math.abs(i.startY-i.y)));d._scrlEvnt(d._awe[i._s.id]);}
if(i._cB&&useCX&&useCY){if(i._cX.a&&i._cY.a){if(d._w[i._cX.id].c.onMove)d._w[i._cX.id].c.onMove.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);}else if(Math.max(Math.abs(i.customMoveX),Math.abs(i.customMoveY))>d._w[i._cX.id].c.tolerance){if(d._w[i._cX.id].c.onStart)d._w[i._cX.id].c.onStart.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);i._cX.a=true;i._cY.a=true;}}else{if(i._cX.id&&useCX&&!i._cX.l){if(i._cX.a){if(d._w[i._cX.id].c.onMove)d._w[i._cX.id].c.onMove.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);}else if(Math.abs(i.customMoveX)>d._w[i._cX.id].c.tolerance){if(d._w[i._cX.id].c.onStart)d._w[i._cX.id].c.onStart.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);i._cX.a=true;if(d._w[i._cX.id].c.stopPropagation)i._cY.l=true;}}
if(i._cY.id&&useCY&&!i._cY.l){if(i._cY.a){if(d._w[i._cY.id].c.onMove)d._w[i._cY.id].c.onMove.call(d._awe[i._cY.id],i,d._w[i._cY.id].c,e);}else if(Math.abs(i.customMoveY)>d._w[i._cY.id].c.tolerance){if(d._w[i._cY.id].c.onStart)d._w[i._cY.id].c.onStart.call(d._awe[i._cY.id],i,d._w[i._cY.id].c,e);i._cY.a=true;if(d._w[i._cY.id].c.stopPropagation)i._cX.l=true;}}}},_end:function(e){if(!A5.u.drag._da)return;var d=A5.u.drag;var i=d._i;if(i.touchId!=false&&e){if(e.type=='mouseup')return false;else if(i.touchId!=e.changedTouches[0].identifier)return false;}
d._da=false;i._a=false;i.endT=Date.now();if(e){var c=d._getCoors(e);i.x=c.clientX;i.y=c.clientY;if(i.startX==false)i.startX=i.x;if(i.startY==false)i.startY=i.y;}
if(i._cB&&i._cX.a&&i._cY.a){if(d._w[i._cX.id].c.onEnd)d._w[i._cX.id].c.onEnd.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);}else if(i._cX.a){if(d._w[i._cX.id].c.onEnd)d._w[i._cX.id].c.onEnd.call(d._awe[i._cX.id],i,d._w[i._cX.id].c,e);}else if(i._cY.a){if(d._w[i._cY.id].c.onEnd)d._w[i._cY.id].c.onEnd.call(d._awe[i._cY.id],i,d._w[i._cY.id].c,e);}
if(i._s){setTimeout(function(){A5.u.drag._sDif=0;},50);if(d._w[i._s.id]){var s=d._w[i._s.id].s;if(s.onPullRelease.constructor==Function&&(i._s.pXP!=0||i._s.pYP!=0)){s.onPullRelease.call(d._awe[i._s.id],i,s,i._s.pXP*-1,i._s.pYP*-1,e);}
var ele=$(i._s.id);var snap=s.snap;if(typeof snap!='undefined'){if(snap.constructor==Function)snap=snap();}
if((i.hasMomentum&&s.momentum.allow)||i._s.pXP!=0||i._s.pYP!=0||snap||typeof i.overrideX!='undefined'||typeof i.overrideY!='undefined'){var dur=s.momentum.duration;var tX=i._s.cX;var tY=i._s.cY;if(s.momentum.allow){var dT=i.endT-i.startT;var vX=(i._s.vX-tX)/dT;var vY=(i._s.vY-tY)/dT;tX=i._s.x?tX-(vX*(dur/2)):tX;tY=i._s.y?tY-(vY*(dur/2)):tY;}
tX=Math.round(Math.max(Math.min(tX,i._s.mX),0));tY=Math.round(Math.max(Math.min(tY,i._s.mY),0));var sr=d._snap(ele,tX,tY,snap);tX=sr.x;tY=sr.y;if(typeof i.overrideX!='undefined')tx=i.overrideX;if(typeof i.overrideY!='undefined')tY=i.overrideY;ele.firstChild.style[A5.u.css.properties.transitionDOM]=A5.u.css.properties.transform+' '+dur+'ms ease';ele.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D((tX*-1),(tY*-1));d._st[ele.id]={w:i._s.sW,h:i._s.sH,inter:setInterval(Function('A5.u.drag._scrlEvnt($(\''+ele.id+'\'))'),50)};i._s.cX=tX;i._s.cY=tY;if(i._s.xIBEle){i._s.xIBEle.style[A5.u.css.properties.transitionDOM]='left '+dur+'ms ease';i._s.xIBEle.style.left=((i._s.cX/i._s.sW)*100)+'%';}
if(i._s.yIBEle){i._s.yIBEle.style[A5.u.css.properties.transitionDOM]='top '+dur+'ms ease';i._s.yIBEle.style.top=((i._s.cY/i._s.sH)*100)+'%';}}else{if(i._s.xIBEle)i._s.xIBEle.parentNode.style.display='none';if(i._s.yIBEle)i._s.yIBEle.parentNode.style.display='none';}
$sa(ele,'A5CustomScroll',i._s.cX+','+i._s.cY);}}
this._awe={};},_snap:function(ele,tX,tY){var snap=arguments[3];if(typeof snap=='undefined'&&A5.u.drag._w[ele.id]){snap=A5.u.drag._w[ele.id].s.snap;if(typeof snap!='undefined'){if(snap.constructor==Function)snap=snap();}}
if(snap){var tStep=0;var tOffset=0;if(snap.x){$u.o.assign(snap.x,{step:1,offset:0},true);if((snap.x.step+' '+snap.x.offset).indexOf('%')!=-1)var es=A5.u.element.metrics(ele);if(typeof snap.x.offset=='string'){if(snap.x.offset.indexOf('%')!=-1)tOffset=(es.innerWidth/100)*$u.s.toNum(snap.x.offset);else{snap.x.offset=A5.u.convertUnits(snap.x.offset,'px');tOffset=snap.x.offset;}}else tOffset=snap.x.offset;if(snap.x.step.constructor==Array){}else{if(typeof snap.x.step=='string'){if(snap.x.step.indexOf('%')!=-1)tStep=(es.innerWidth/100)*$u.s.toNum(snap.x.step);else{snap.x.step=A5.u.convertUnits(snap.x.step,'px');tStep=snap.x.step;}}else tStep=snap.x.step;tX=(Math.round((tX-tOffset)/tStep)*tStep)+tOffset;}}
if(snap.y){$u.o.assign(snap.y,{step:1,offset:0},true);if((snap.y.step+' '+snap.y.offset).indexOf('%')!=-1)var es=A5.u.element.metrics(ele);if(typeof snap.y.offset=='string'){if(snap.y.offset.indexOf('%')!=-1)tOffset=(es.innerHeight/100)*$u.s.toNum(snap.y.offset);else{snap.y.offset=A5.u.convertUnits(snap.y.offset,'px');tOffset=snap.y.offset;}}else tOffset=snap.y.offset;if(snap.y.step.constructor==Array){}else{if(typeof snap.y.step=='string'){if(snap.y.step.indexOf('%')!=-1)tStep=(es.innerHeight/100)*$u.s.toNum(snap.y.step);else{snap.y.step=A5.u.convertUnits(snap.y.step,'px');tStep=snap.y.step;}}else tStep=snap.y.step;tY=(Math.round((tY-tOffset)/tStep)*tStep)+tOffset;}}}
return{'x':tX,'y':tY};},_scrlTranEnd:function(e,classInst){if(classInst._st[this.parentNode.id]){clearInterval(classInst._st[this.parentNode.id].inter);delete classInst._st[this.parentNode.id];}
this.style[A5.u.css.properties.transitionDOM]='';var sIEle=$(this.parentNode.id+'.SCROLLINDICATOR.X')
if(sIEle)sIEle.style.display='none';var sIEle=$(this.parentNode.id+'.SCROLLINDICATOR.Y')
if(sIEle)sIEle.style.display='none';classInst._scrlEvnt(this.parentNode);},_scrlEvnt:function(ele){if(ele){var evt=document.createEvent('UIEvent');evt.initEvent('scroll',true,true);ele.dispatchEvent(evt);}},_setupI:function(i,x,y,ti){i.touchId=ti;i._a=true;i.startT=Date.now();i.endT=false;i.x=x;i.y=y;i.startX=i.x;i.startY=i.y;i.moveX=0;i.moveY=0;i.customMoveX=0;i.customMoveY=0;i.maxX=0;i.minX=0;i.maxY=0;i.minY=0;i.hasMomentum=false;i._s=false;i._cX=false;i._cY=false;i._cB=false;},stop:function(){if(A5.u.drag._i._a)this._end(false);},start:function(s){this.stop();var eId='*a5unbound';if(!this._w[eId])this._w[eId]={c:false,s:false,p:false,i:{}};$u.o.assign(s,{touchId:false,axis:'both',onMove:false,onEnd:false,endOnUp:true},true);s.tolerance=0;this._w[eId].c=s;var d=A5.u.drag;var i=d._i;d._setupI(i,false,false,s.touchId);d._awe={};d._awe[eId]={};if(d._w[eId].c&&!d._w[eId].c.disabled){if(d._w[eId].c.axis=='x'&&!i._cX)i._cX={id:eId,l:false,a:true,f:i._s==false};else if(d._w[eId].c.axis=='y'&&!i._cY)i._cY={id:eId,l:false,a:true,f:i._s==false};else{if(!i._cX)i._cX={id:eId,l:false,a:true,f:i._s==false};if(!i._cY)i._cY={id:eId,l:false,a:true,f:i._s==false};}}
if(i._cX==true)i._cX=false;if(i._cY==true)i._cY=false;if(!i._cX)i._cX={id:false,a:false,l:false,f:false};if(!i._cY)i._cY={id:false,a:false,l:false,f:false};if(i._cX.id&&i._cY.id){if(i._cX.id==i._cY.id)i._cB=true;}
this._init();d._da=true;},add:function(ele,t,s){if(t=='scroll'){if((!A5.flags.supportsTouch&&!(this.useDragScrolling=='always'&&A5.u.css.supportsTransition))||this.useDragScrolling=='never')return false;}
ele=this._gEle(ele);if($ga(ele,'A5HasDrag')!='true')delete this._w[ele.id];this._add(ele);if(t=='scroll'){var fcEle=ele.firstChild;var fcId='';if(fcEle){if(typeof fcEle.tagName!='undefined')fcId=fcEle.id;}
if(fcId!=ele.id+'.SCROLLWRAPPER'){var swEle=document.createElement('div');swEle.id=ele.id+'.SCROLLWRAPPER';$e.add(swEle,A5.u.css.properties.transitionEndEvent,this._scrlTranEnd,this);if(A5.flags.isIPhone||A5.flags.isIPad)$e.add(swEle,'keyup',function(){this.parentNode.scrollTop=0;this.parentNode.scrollLeft=0;});if(A5.flags.isAndroid)$e.add(ele,'scroll',function(){this.scrollTop=0;this.scrollLeft=0;});for(var i=ele.childNodes.length-1;i>=0;i--){swEle.insertBefore(ele.childNodes[i],swEle.firstChild);}
ele.appendChild(swEle);$e.add(ele,'a5resize',this._scrlResize);}
var ts={};$u.o.assign(ts,this.defaults.scroll);if(typeof s.theme!='undefined')A5.themes.assign(ts,s.theme,'scroll');$u.o.assign(s,ts,true);if(typeof s.axis=='undefined')s.axis='both';if(typeof s.stopPropagation=='undefined')s.stopPropagation=false;this._w[ele.id].s=s;if(ele.style.position!='absolute')ele.style.position='relative';$sa(ele,'A5CustomScroll','0,0');$sa(ele,'A5DragScrollDisabled','false');ele.style.overflow='hidden';ele.style.overflowX='hidden';ele.style.overflowY='hidden';}else if(t=='custom'){$u.o.assign(s,{axis:'both',tolerance:this.defaults.custom.tolerance,onStart:false,onMove:false,onEnd:false,disabled:false,stopPropagation:false},true);this._w[ele.id].c=s;}else if(t=='prevent')this._w[ele.id].p=true;$sa(ele,'A5HasDrag','true');this._init();},remove:function(ele,t){ele=$(ele);if(!this._w[ele.id])this._w[ele.id]={};if(this._i._a){if(this._i._s.id==ele.id)this.stop();}
if(t=='scroll'){this._w[ele.id].s=false;$e.remove(ele,'a5resize',this._scrlResize);}else if(t=='custom')this._w[ele.id].c=false;else if(t=='prevent')this._w[ele.id].p=false;this._rem(ele);},setDisabled:function(ele,t,val){ele=$(ele);if(this._w[ele.id]){if(t=='scroll'&&this._w[ele.id].s){this._w[ele.id].s.disabled=val;var setScrl=typeof arguments[3]!='undefined'?arguments[3]:true;if(setScrl)ele.firstChild.style[A5.u.css.properties.transformDOM]=A5.u.css.transform2D(0,0);$sa(ele,'A5DragScrollDisabled',''+val);}else if(this._w[ele.id].c)this._w[ele.id].c.disabled=val;}},_scrlResize:function(){if(document.activeElement){if(document.activeElement!=document.body){var ele=document.activeElement;var pEle=ele.parentNode;while(pEle!=this&&pEle!=document.body)pEle=pEle.parentNode;if(pEle==this){A5.u.element.setScroll(this,ele);return true;}}}
var scrl=A5.u.element.getScroll(this);A5.u.element.setScroll(this,scrl.left,scrl.top);},_gEle:function(ele){ele=$(ele);ele.unselectable=true
$ss(ele,$gs(ele)+'; -moz-user-select: -moz-none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none;');if(ele.id=='')ele.id=A5.u.getUniqueId();return ele;},_init:function(){if(!this._di){$e.add(document.body,'touchmove',this._move);$e.add(document.body,'touchend',this._end);$e.add(document.body,'touchcancel',this._end);$e.add(document.documentElement,'mousemove',this._move);$e.add(document.documentElement,'mouseup',this._end);this._di=true;}},_add:function(ele){if(!this._w[ele.id]){this._w[ele.id]={c:false,s:false,p:false,i:{}};$e.add(ele,A5.d.evnts.down,this._start);$e.add(ele,'selectstart',this._dStop);$e.add(ele,'dragstart',this._dStop);}},_rem:function(ele){if(!this._w[ele.id].c&&!this._w[ele.id].s){$e.remove(ele,A5.d.evnts.down,this._start);$e.remove(ele,'selectstart',this._dStop);$e.remove(ele,'dragstart',this._dStop);delete this._w[ele.id];}},_getCoors:function(e){var t=e.type;if(t.substr(0,5)=='touch')return{clientX:e.changedTouches[0].clientX,clientY:e.changedTouches[0].clientY};else return{clientX:e.clientX,clientY:e.clientY};},_dStop:function(e){var sEle=e.target||e.srcElement;if(sEle){var tag=sEle.tagName
if(tag){tag=tag.toLowerCase();if(tag=='input'||tag=='textarea')return null;}}
$e.stopEvent($e.getEvent(e));return false;}}
A5.d._numFrm={};Number.prototype.toFormat=function(frm){var aFrm=this.parseFormat(frm);var num=this;var isNeg=false;if(num<0)isNeg=true;if(aFrm.constructor==Array){for(var fIndx=0;fIndx<aFrm.length;fIndx++){if(aFrm[fIndx].condition(num))break;}
frm=aFrm[fIndx];}else frm=aFrm;if(frm.type=='mask'){num=num.toString().split('.').join('').split('');var tm=[];for(var i=0;i<frm.mask.length;i++){if(frm.mask[i]=='#')tm.push(num.shift());else tm.push(frm.mask[i]);}
num=tm.join('');}else if(frm.type=='text'){num=frm.text;}else{if(typeof frm.fix.to=='number'){var rp=Math.pow(10,frm.fix.to);var off=0;if(frm.fix.direction>0)off=.49999
else if(frm.fix.direction<0)off=-.49999
num=Math.round((Math.abs(num)*rp)+off)/rp;}
num=num.toString().split('.');var fp='';if(num.length>1)fp=num[1];var ip=num[0];if(ip.length<frm.integer.pad.to)ip=$u.s.pad(ip,frm.integer.pad.to,frm.integer.pad.character);if(frm.integer.group.every!=false){var sCount=0;var tIp=[];for(var i=ip.length-1;i>=0;i--){tIp.unshift(ip.charAt(i));sCount++;if(sCount==frm.integer.group.every&&i!=0){tIp.unshift(frm.integer.group.character);sCount=0;}}
ip=tIp.join('');}
if(fp.length<frm.fractional.pad.to)fp=$u.s.pad(fp,frm.fractional.pad.to,frm.fractional.pad.character,'r');else if(frm.fractional.pad.to==-1&&fp.length<frm.fix.to)fp=$u.s.pad(fp,frm.fix.to,frm.fractional.pad.character,'r');else if(frm.fix.to!=false&&fp.length>frm.fix.to)fp=fp.substr(0,frm.fix.to);if(frm.fractional.displayAsFraction){var frac='';fp=Number('.'+fp);frac=fp.toFraction();fp='';}
if(fp.trim()!='')num=frm.prefix+ip+frm.fractional.character+fp+frm.suffix;else num=frm.prefix+ip+frm.suffix;if(isNeg&&(frm.negative=='-'||frm.negative=='(')){if(frm.negative=='-')num='-'+num;else num='('+num+')';}
if(frm.fractional.displayAsFraction)num=num.split('-/-').join(frac);}
return num;}
Number.prototype.parseFormat=function(frm){var dFrm={condition:function(){return true;},process:false,type:'number',mask:'',text:'',fix:{to:false,direction:0},integer:{group:{every:false,character:','},pad:{to:0,character:'0'}},fractional:{character:'.',displayAsFraction:false,pad:{to:0,character:'0'}},negative:'',prefix:'',suffix:''};if(frm==''){frm={};$u.o.assign(frm,dFrm);frm.negative='-';}
if(typeof frm=='string'){if(typeof A5.d._numFrm[frm]!='undefined')return A5.d._numFrm[frm];var tFrm=frm.split(';');frm=[];var tData='';var pChar='';var pLen=0;var dLen=0;var gLen=0;var countGroup=false;var cChar='';var nChar='';var part='p';var fixInt=false;var hasIntSep=true;var hasCond=false;var fre=/[#_0][^#_0][#_0\*]|[#_0]\]/g;for(var i=0;i<tFrm.length;i++){pLen=0;dLen=0;gLen=0;countGroup=false;part='p';fixInt=false;frm[i]={};$u.o.assign(frm[i],dFrm);tFrm[i]=this._escapeStrFrm(tFrm[i],true);if(tFrm[i].substr(0,3)=='if('){tFrm[i]=tFrm[i].split(')');tData='n = arguments[0]; return '+tFrm[i].shift().substr(3);frm[i].condition=Function(tData);tFrm[i]=tFrm[i].join(')');hasCond=true;}
if(tFrm[i].search('=\\(')!=-1&&tFrm[i].substr(tFrm[i].length-1)==')'){tData='n = arguments[0]; return '+tFrm[i].substr(tFrm[i].search('=\\(')+1);frm[i].process=Function(tData);tFrm[i]=tFrm[i].substr(0,tFrm[i].search('=\\('));}
if(tFrm[i].search('-/-')!=-1)frm[i].fractional.displayAsFraction=true;if(tFrm[i].substr(0,1)=='='){tFrm[i]=tFrm[i].substr(1);frm[i].type='mask';frm[i].mask=tFrm[i]}else{tData=tFrm[i].match(fre);if(tData!=null){if(tData.length==1)hasIntSep=false;}
for(var j=0;j<tFrm[i].length;j++){cChar=tFrm[i][j];if(j==tFrm[i].length-1)nChar='';else nChar=tFrm[i][j+1];if((cChar=='#'||cChar=='0'||cChar=='_')&&part!='s'){if(part=='p')part='i';else if(part=='i'&&fixInt)frm[i].fix.to--;if(part=='f')dLen++;else if(part=='i'&&countGroup)gLen++;if(cChar!='#'){pLen++;pChar=cChar;}}else if((cChar=='['||cChar=='<'||cChar=='>')&&part=='i'){fixInt=true;if(cChar=='<')frm[i].fix.direction=1;else if(cChar=='>')frm[i].fix.direction=-1;frm[i].fix.to=0;}else if(cChar==']'&&part=='i'){if(!fixInt){frm[i].fix.to=0;if(nChar=='<'){frm[i].fix.direction=1;j++;}else if(nChar=='>'){frm[i].fix.direction=-1;j++;}}
part='s';}else if((nChar=='#'||nChar=='0'||nChar=='_'||nChar=='*')&&part!='s'&&part!='p'){if(part=='i'&&nChar!='*'&&frm[i].integer.group.every==false&&hasIntSep){frm[i].integer.group.character=cChar;frm[i].integer.group.every=3;countGroup=true;}else{frm[i].fractional.character=cChar;frm[i].integer.pad.to=pLen;frm[i].integer.pad.character=pChar;if(nChar=='*'){part='s';j++;}else{pChar='';pLen=0;part='f';}}}else if((cChar=='<'||cChar=='>')&&part=='f'){if(cChar=='<')frm[i].fix.direction=1;else if(cChar=='>')frm[i].fix.direction=-1;}else{if(part=='i')part='s';else if(part=='f'){part='s';frm[i].fix.to=dLen;frm[i].fractional.pad.to=pLen;frm[i].fractional.pad.character=pChar;}
if(part=='p')frm[i].prefix=frm[i].prefix+cChar;else if(part=='s')frm[i].suffix=frm[i].suffix+cChar;}}
frm[i].integer.group.every=gLen;frm[i].prefix=this._escapeStrFrm(frm[i].prefix,false);frm[i].suffix=this._escapeStrFrm(frm[i].suffix,false);if(frm[i].prefix.search('\\(')==-1&&frm[i].prefix.search('-')==-1&&frm[i].suffix.search('\\(')==-1&&frm[i].suffix.search('-')==-1)frm[i].negative='-';if(part=='f'){frm[i].fix.to=dLen;frm[i].fractional.pad.to=pLen;frm[i].fractional.pad.character=pChar;}else if(part=='p'){frm[i].type='text';frm[i].text=frm[i].prefix;}}
if(hasCond==false&&frm.length>1){if(frm.length==2){frm[0].condition=function(n){return n>=0;};frm[1].condition=function(n){return n<0;};}else{frm[0].condition=function(n){return n>0;};frm[1].condition=function(n){return n<0;};frm[2].condition=function(n){return n==0;};}}}
A5.d._numFrm[tFrm.join(';')]=frm;}else{if(frm.constructor==Aray){for(var i=0;i<frm.length;i++){$u.o.assign(frm[i],dFrm,true);if(frm[i].negative=='')frm[i].negative='-';}}else{$u.o.assign(frm,dFrm,true);if(frm.negative=='')frm.negative='-';}}
return frm;}
Number.prototype._escapeStrFrm=function(frm,dir){var esc=[['\\(','A5PARENO'],['\\)','A5PARENC'],['\\=','A5EQUALS']];var s=0;var r=1;if(!dir){s=1;r=0;}
for(var i=0;i<esc.length;i++)frm=frm.replace(esc[i][s],esc[i][r]);return frm;}
Number.prototype.toFraction=function(){var decimal=this;whole=String(decimal).split('.')[0];decimal=parseFloat('.'+String(decimal).split('.')[1]);num='1';for(i=0;i<String(decimal).length-2;i++)num+='0';decimal=decimal*num;num=parseInt(num);for(i=2;i<decimal+1;i++){if(decimal%i==0&&num%i==0){decimal=decimal/i;num=num/i;i=2;}}
if(decimal.toString().length==2&&num.toString().length==3){decimal=Math.round(Math.round(decimal)/10);num=Math.round(Math.round(num)/10);}else if(decimal.toString().length==2&&num.toString().length==2){decimal=Math.round(decimal/10);num=Math.round(num/10);}else{decimal=Math.round(decimal);num=Math.round(num);}
var t=function(u,v){var U=u,V=v
while(true){if(!(U%=V))return V
if(!(V%=U))return U}}(decimal,num);return((whole==0)?"":whole+" ")+decimal/t+"/"+num/t;}
A5.u.css.transform2D=function(x,y){if(typeof x=='number')x=x+'px';if(typeof y=='number')y=y+'px';if(A5.flags.isOpera)return'translate('+x+','+y+')';else return'translate3d('+x+','+y+',0px)';}
if(document.all&&navigator.appName!='Opera'&&!window.atob)A5.u.css.supportsTransition=false;else A5.u.css.supportsTransition=true;if(A5.flags.isFireFox)A5.u.css.properties={transform:'-moz-transform',transformDOM:'MozTransform',transitionDOM:'MozTransition',transitionEndEvent:'transitionend'};else if(A5.flags.isOpera)A5.u.css.properties={transform:'-o-transform',transformDOM:'OTransform',transitionDOM:'OTransition',transitionEndEvent:'oTransitionEnd'};else if(A5.flags.isWebKit)A5.u.css.properties={transform:'-webkit-transform',transformDOM:'webkitTransform',transitionDOM:'webkitTransition',transitionEndEvent:'webkitTransitionEnd'};else A5.u.css.properties={transform:'transform',transformDOM:'transform',transitionDOM:'transition',transitionEndEvent:'transitionend'};if(!Date.now){Date.now=function now(){return new Date().getTime();};}
if(!String.prototype.trim){String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,'');};}
if(!window.JSON){window.JSON={parse:function(sJSON){return eval("("+sJSON+")");},stringify:function(vContent){if(vContent instanceof Object){var sOutput="";if(vContent.constructor===Array){for(var nId=0;nId<vContent.length;sOutput+=this.stringify(vContent[nId])+",",nId++);return"["+sOutput.substr(0,sOutput.length-1)+"]";}
if(vContent.toString!==Object.prototype.toString){return"\""+vContent.toString().replace(/"/g,"\\$&")+"\"";}
for(var sProp in vContent){sOutput+="\""+sProp.replace(/"/g,"\\$&")+"\":"+this.stringify(vContent[sProp])+",";}
return"{"+sOutput.substr(0,sOutput.length-1)+"}";}
return typeof vContent==="string"?"\""+vContent.replace(/"/g,"\\$&")+"\"":String(vContent);}};}
	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



function load_date_picker(target,old_date,settings){settings.contID=target+'_CalendarCont';if(old_date==$ga(target,'A5WatermarkText'))old_date='';style=settings.style
path=settings.path
use_select=settings.use_select
format=settings.format
low_year=settings.low_year
high_year=settings.high_year
switch_year=settings.switch_year
if(!settings.months)settings.months=['January','February','March','April','May','June','July','August','September','October','November','December'];if(!settings.days)settings.days=['Sun','Mon','Tue','Wed','Thur','Fri','Sat'];if(!settings.start_day)settings.start_day=1;if(!settings.todayText)settings.todayText='Today';if(!settings.closeText)settings.closeText='Close';object_name=$if(settings.object_name,settings.object_name,target+'_DateSet');if(settings.cellpadding!=undefined){cur_cellpadding=settings.cellpadding}
else{cur_cellpadding=2}
if(settings.cellspacing!=undefined){cur_cellspacing=settings.cellspacing}
else{cur_cellspacing=0}
month_type=1
if(format.search('mm')!=-1){month_type=1}
else if(format.search('m')!=-1){month_type=8}
else if(format.search('month')!=-1){month_type=5}
else if(format.search('MONTH')!=-1){month_type=6}
else if(format.search('Month')!=-1){month_type=7}
else if(format.search('mon')!=-1){month_type=2}
else if(format.search('MON')!=-1){month_type=3}
else if(format.search('Mon')!=-1){month_type=4}
day_type=1
if(format.search('dd')!=-1){day_type=1}
else if(format.search('d')!=-1){day_type=2}
else if(format.search('x')!=-1){day_type=3}
var old_date_obj=new Date()
if(old_date==''){old_day=old_date_obj.getDate()
old_month=old_date_obj.getMonth()
old_year=old_date_obj.getFullYear()
second_date=0}
else{if(old_date.slice(old_date.length-2)=='..'){second_date=1}
else{second_date=0}
var tDate_arr=old_date.split(/[^0-9A-z]/);var date_arr=new Array();for(var i=0;i<tDate_arr.length;i++){if(tDate_arr[i]!=''){date_arr.push(tDate_arr[i]);}}
if(day_type==1){day_loc=format.search('dd')}
else if(day_type==2){day_loc=format.search('d')}
else if(day_type==3){day_loc=format.search('x')}
if(month_type==1){month_loc=format.search('mm')}
else if(month_type==8){month_loc=format.search('m')}
else if(month_type==5){month_loc=format.search('mon')}
else if(month_type==6){month_loc=format.search('MON')}
else if(month_type==7){month_loc=format.search('Mon')}
else if(month_type==2){month_loc=format.search('mon')}
else if(month_type==3){month_loc=format.search('MON')}
else if(month_type==4){month_loc=format.search('Mon')}
year_loc=format.search('yy')
if(day_type==3){if(day_loc>month_loc){if(day_loc>year_loc){day_val=parseInt(date_arr[2])}
else{day_val=parseInt(date_arr[1])}}
else{if(day_loc>year_loc){day_val=parseInt(date_arr[1])}
else{day_val=parseInt(date_arr[0])}}}
else{if(day_loc>month_loc){if(day_loc>year_loc){day_val=Number(date_arr[2])}
else{day_val=Number(date_arr[1])}}
else{if(day_loc>year_loc){day_val=Number(date_arr[1])}
else{day_val=Number(date_arr[0])}}}
if(month_type==1||month_type==8){if(month_loc>day_loc){if(month_loc>year_loc){month_val=Number(date_arr[2])}
else{month_val=Number(date_arr[1])}}
else{if(month_loc>year_loc){month_val=Number(date_arr[1])}
else{month_val=Number(date_arr[0])}}}
else if(month_type==2||month_type==3||month_type==4){if(month_loc>day_loc){if(month_loc>year_loc){month_val=get_num_month(settings,date_arr[2])}
else{month_val=get_num_month(settings,date_arr[1])}}
else{if(month_loc>year_loc){month_val=get_num_month(settings,date_arr[1])}
else{month_val=get_num_month(settings,date_arr[0])}}}
else{if(month_loc>day_loc){if(month_loc>year_loc){month_val=get_num_month(settings,date_arr[2])}
else{month_val=get_num_month(settings,date_arr[1])}}
else{if(month_loc>year_loc){month_val=get_num_month(settings,date_arr[1])}
else{month_val=get_num_month(settings,date_arr[0])}}}
if(year_loc>month_loc){if(year_loc>day_loc){year_val=Number(date_arr[2])}
else{year_val=Number(date_arr[1])}}
else{if(month_loc>day_loc){year_val=Number(date_arr[1])}
else{year_val=Number(date_arr[0])}}
if(day_val>0&&day_val<32){old_day=day_val}
else{old_day=old_date_obj.getDate()}
if(month_val>0&&month_val<13){old_month=(month_val-1)}
else{old_month=old_date_obj.getMonth()}
if(isNaN(year_val)){year_val=old_date_obj.getFullYear()}
if(format.search('yyyy')>=0){if(year_val<10){year_val='0'+year_val}
old_year=year_val}
else if(year_val>999){if(year_val<10){year_val='0'+year_val}
old_year=year_val}
else{test_val=Number(year_val)
if(year_val<10){year_val='0'+year_val}
if(test_val>=switch_year){new_val='19'+year_val
old_year=Number(new_val)}
else{new_val='20'+year_val
old_year=Number(new_val)}}}
if(use_select==1){month_html='&nbsp;<select id="'+settings.contID+'.sel_month" class="'+style+'Select" onchange="fill_calendar(document.getElementById(\''+settings.contID+'.sel_month\').value,document.getElementById(\''+settings.contID+'.sel_year\').value,'+object_name+','+month_type+','+day_type+')" value="'+old_month+'">\n'
for(var i=0;i<12;i++){if(old_month==i)month_html=month_html+'<option value="'+i+'" selected>'+settings.months[i]+'</option>\n'
else month_html=month_html+'<option value="'+i+'">'+settings.months[i]+'</option>\n'}
month_html=month_html+'</select>'
year_html='<select id="'+settings.contID+'.sel_year" class="'+style+'Select" onchange="fill_calendar(document.getElementById(\''+settings.contID+'.sel_month\').value,document.getElementById(\''+settings.contID+'.sel_year\').value,'+object_name+','+month_type+','+day_type+')" value="'+old_year+'">\n'
for(i=low_year;i<=high_year;i++){if(i==old_year){year_html=year_html+'<option value="'+i+'" selected>'+i+'</option>\n'}
else{year_html=year_html+'<option value="'+i+'">'+i+'</option>\n'}}
year_html=year_html+'</select>';month_year_html=month_html+' '+year_html+'&nbsp;'}
else{month_html=settings.months[old_month];year_html=''+old_year;month_year_html='<div id="'+settings.contID+'_date_display" style="width:125px">'+month_html+' '+year_html+'</div>';}
calendar_html='<table cellspacing="'+cur_cellspacing+'" cellpadding="'+cur_cellpadding+'" class="table" style="width: 100%">\n<tr>\n';var day_of_the_week=settings.start_day;for(i=0;i<=6;i++){calendar_html=calendar_html+'<th class="calendar" align="center" style="width:14.3%">'+settings.days[day_of_the_week-1]+'</th>\n';day_of_the_week++;if(day_of_the_week>7)day_of_the_week=day_of_the_week-7}
calendar_html=calendar_html+'</tr>\n';for(i=1;i<=6;i++){calendar_html=calendar_html+'<tr>\n'
for(j=1;j<=7;j++){if(j==1||j==7){calendar_html=calendar_html+'<td id="'+settings.contID+'_1_w_'+i+'_d_'+j+'" class="weekend" align="center">&nbsp;</td>\n'}
else{calendar_html=calendar_html+'<td id="'+settings.contID+'_1_w_'+i+'_d_'+j+'" class="workday" align="center">&nbsp;</td>\n'}}
calendar_html=calendar_html+'</tr>\n'}
calendar_html=calendar_html+'</table>\n'
var old_date_obj=new Date()
new_html='<table id="cal_layout_table" cellpadding="0" cellspacing="0" border="0">\n'+'<tr>\n'+'<td align="center">\n'+'<table cellpadding="0" cellspacing="0" border="0">\n'+'<tr>\n'+'<td align="center" nowrap>'+'<a href="#" onclick="prev_year('+object_name+','+month_type+','+day_type+'); return false"><img src="'+path+style+'/PrevYear.png" alt="Previous Year" border="0"></a>'+'<a href="#" onclick="prev_month('+object_name+','+month_type+','+day_type+'); return false"><img src="'+path+style+'/PrevMonth.png" alt="Previous Month" border="0"></a>'+'</td>\n'+'<td align="center" nowrap>'+month_year_html+'</td>\n'+'<td align="center" nowrap>'+'<a href="#" onclick="next_month('+object_name+','+month_type+','+day_type+'); return false"><img src="'+path+style+'/NextMonth.png" alt="Next Month" border="0"></a>'+'<a href="#" onclick="next_year('+object_name+','+month_type+','+day_type+'); return false"><img src="'+path+style+'/NextYear.png" alt="Next Year" border="0"></a>'+'</td>\n'+'</tr>\n'+'<tr>\n'+'<td style="height:5px" colspan="3"></td>\n'+'</tr>\n'+'<tr>\n'+'<td colspan="3">'+calendar_html+'</td>\n'+'</tr>\n'+'<tr>\n'+'<td style="height:5px" colspan="3"></td>\n'+'</tr>\n'+'<tr>\n'+'<td align="center" colspan="3">'+'<button class="CalendarButtons" onclick="set_date(1,'+old_date_obj.getDate()+','+object_name+','+month_type+','+day_type+')">'+settings.todayText+'</button> '+'<button class="CalendarButtons" onclick="hide_calendar('+object_name+')">'+settings.closeText+'</button>'+'</td>\n'+'</tr>\n'+'</table>\n'+'</td>\n'+'</tr>\n'+'</table>';if(!settings.object_name){settings.object_name=object_name;}
settings.target_input=target;settings.second_date=second_date;settings.old_year=old_year;settings.old_month=old_month;settings.old_day=old_day;settings.cur_year=old_year;settings.cur_month=old_month;settings.cur_day=old_day;if(!document.getElementById(settings.contID)){obj=document.createElement('div');obj.id=settings.contID;obj.className=style+'AltDataTD '+
style+'DataTD '+
style+'FormTABLE '+
style+'PageBODY';obj.style.borderStyle='solid';obj.style.borderColor='ThreeDShadow';obj.style.borderWidth='1px';obj.style.position='absolute';obj.style.top='0px';obj.style.left='0px';obj.style.padding='3px';obj.style.zIndex='1000';document.body.insertBefore(obj,document.body.firstChild);$e.add(settings.contID,'mousedown',$e.stopPropagation);}
if(document.all&&!window['XMLHttpRequest']){eles=document.body.getElementsByTagName('select');for(var i=0;i<eles.length;i++){if(eles[i].id!=settings.contID+'.sel_year'&&eles[i].id!=settings.contID+'.sel_month')eles[i].style.visibility='hidden';}}
settings._iframes=new Array();eles=document.body.getElementsByTagName('iframe');for(var i=0;i<eles.length;i++){if(eles[i].style.visibility!='hidden'&&eles[i].id!=''&&eles[i].src.toString().split('.').pop().substr(0,3).toLowerCase()=='pdf'){settings._iframes.push(eles[i].id);eles[i].style.visibility='hidden';}}
document.getElementById(settings.contID).style.display='block';document.getElementById(settings.contID).innerHTML=new_html;fill_calendar(old_month,old_year,settings,month_type,day_type);$po(document.getElementById(settings.contID),document.getElementById(target),'dropdown',-1)
$e.add(document.documentElement,'mousedown',hide_calendar_evnt,settings);}
function fill_calendar(cur_month,cur_year,settings,month_type,day_type){cur_month=Number(cur_month)
cur_year=Number(cur_year)
if(cur_month==settings.old_month&&cur_year==settings.old_year){cur_day=settings.old_day}else{cur_day=0}
delete date_obj
date_obj=new Date();if(cur_month==date_obj.getMonth()&&cur_year==date_obj.getFullYear()){cur_today=date_obj.getDate()
if(cur_day==cur_today){cur_day=0}}
else{cur_today=0}
date_obj.setDate(1);date_obj.setFullYear(cur_year);date_obj.setMonth(cur_month);start_day=date_obj.getDay();end_month_check_1=new Date(cur_year,cur_month+1,1);timeDifference=end_month_check_1-86400000;end_month_check_2=new Date(timeDifference);var days_in_month=end_month_check_2.getDate();var day_count=1;var day_of_the_week=settings.start_day;start_day=start_day-day_of_the_week+1;if(start_day<1)start_day=start_day+7
for(i=1;i<=6;i++){for(j=1;j<=7;j++){tar=document.getElementById(settings.contID+'_1_w_'+i+'_d_'+j)
if(i==1&&j<=start_day){tar.innerHTML='&nbsp;'
if(j==1||j==7){if(tar.className!="weekend"){tar.className="weekend"}}
else{if(tar.className!="workday"){tar.className="workday"}}}else{if(day_count<=days_in_month){if(cur_day==day_count){tar.innerHTML='<a href="#" onclick="set_date(0,'+day_count+','+settings.object_name+','+month_type+','+day_type+'); return false" class="selectedDay">'+day_count+'</a>'
tar.className="selectedDay"}else if(cur_today==day_count){tar.innerHTML='<a href="#" onclick="set_date(0,'+day_count+','+settings.object_name+','+month_type+','+day_type+'); return false" class="today">'+day_count+'</a>'
tar.className="today"}else{tar.innerHTML='<a href="#" onclick="set_date(0,'+day_count+','+settings.object_name+','+month_type+','+day_type+'); return false" class="weekday weekDay">'+day_count+'</a>'
if(day_of_the_week==1||day_of_the_week==7){if(tar.className!="weekend"){tar.className="weekend"}}
else{if(tar.className!="workday"){tar.className="workday"}}}
day_count++;}
else{tar.innerHTML='&nbsp;'
if(day_of_the_week==1||day_of_the_week==7){if(tar.className!="weekend"){tar.className="weekend"}}
else{if(tar.className!="workday"){tar.className="workday"}}}}
day_of_the_week++;if(day_of_the_week>7)day_of_the_week=day_of_the_week-7}}
if(settings.use_select==0){month_html=settings.months[cur_month];year_html=''+cur_year;month_year_html=month_html+' '+year_html;document.getElementById(settings.contID+'_date_display').innerHTML=month_year_html
settings.cur_month=cur_month;settings.cur_year=cur_year;}}
function prev_month(settings,month_type,day_type){if(settings.use_select==1){cur_month=Number(document.getElementById(settings.contID+'.sel_month').value)
cur_year=Number(document.getElementById(settings.contID+'.sel_year').value)
if(cur_month==0){document.getElementById(settings.contID+'.sel_month').value=11
document.getElementById(settings.contID+'.sel_year').value=cur_year-1}
else{document.getElementById(settings.contID+'.sel_month').value=cur_month-1}
fill_calendar(document.getElementById(settings.contID+'.sel_month').value,document.getElementById(settings.contID+'.sel_year').value,settings,month_type,day_type)}
else{cur_month=settings.cur_month
cur_year=settings.cur_year
if(cur_month==0){settings.cur_month=11
settings.cur_year=cur_year-1}
else{settings.cur_month=cur_month-1}
fill_calendar(settings.cur_month,settings.cur_year,settings,month_type,day_type)}}
function prev_year(settings,month_type,day_type){if(settings.use_select==1){cur_year=Number(document.getElementById(settings.contID+'.sel_year').value)
document.getElementById(settings.contID+'.sel_year').value=cur_year-1
fill_calendar(document.getElementById(settings.contID+'.sel_month').value,document.getElementById(settings.contID+'.sel_year').value,settings,month_type,day_type)}
else{cur_year=settings.cur_year
settings.cur_year=cur_year-1
fill_calendar(settings.cur_month,settings.cur_year,settings,month_type,day_type)}}
function next_month(settings,month_type,day_type){if(settings.use_select==1){cur_month=Number(document.getElementById(settings.contID+'.sel_month').value)
cur_year=Number(document.getElementById(settings.contID+'.sel_year').value)
if(cur_month==11){document.getElementById(settings.contID+'.sel_month').value=0
document.getElementById(settings.contID+'.sel_year').value=cur_year+1}
else{document.getElementById(settings.contID+'.sel_month').value=cur_month+1}
fill_calendar(document.getElementById(settings.contID+'.sel_month').value,document.getElementById(settings.contID+'.sel_year').value,settings,month_type,day_type)}
else{cur_month=Number(settings.cur_month)
cur_year=Number(settings.cur_year)
if(cur_month==11){settings.cur_month=0
settings.cur_year=cur_year+1}
else{settings.cur_month=cur_month+1}
fill_calendar(settings.cur_month,settings.cur_year,settings,month_type,day_type)}}
function next_year(settings,month_type,day_type){if(settings.use_select==1){cur_year=Number(document.getElementById(settings.contID+'.sel_year').value)
document.getElementById(settings.contID+'.sel_year').value=cur_year+1
fill_calendar(document.getElementById(settings.contID+'.sel_month').value,document.getElementById(settings.contID+'.sel_year').value,settings,month_type,day_type)}
else{cur_year=settings.cur_year
settings.cur_year=cur_year+1
fill_calendar(settings.cur_month,settings.cur_year,settings,month_type,day_type)}}
function set_date(style,cur_day,settings,month_type,day_type){if(style==1){var old_date_obj=new Date()
cur_month=old_date_obj.getMonth()
cur_year=old_date_obj.getFullYear()}
else{if(settings.use_select==1){cur_month=Number(document.getElementById(settings.contID+'.sel_month').value)
cur_year=Number(document.getElementById(settings.contID+'.sel_year').value)}
else{cur_month=settings.cur_month
cur_year=settings.cur_year}}
format=settings.format
cur_day=Number(cur_day)
if(day_type==1){cur_day_str=''
if(cur_day<10){cur_day_str='0'+cur_day}
else{cur_day_str=''+cur_day}
format=format.replace('dd',cur_day_str)}
else if(day_type==2){format=format.replace('d',cur_day)}
else if(day_type==3){cur_day_str=''
if(cur_day==1||cur_day==21||cur_day==31){cur_day_str=cur_day+'st'}
else if(cur_day==2||cur_day==22){cur_day_str=cur_day+'nd'}
else if(cur_day==3||cur_day==23){cur_day_str=cur_day+'rd'}
else{cur_day_str=cur_day+'th'}
format=format.replace('x',cur_day_str)}
cur_month=Number(cur_month)+1
if(month_type==1){cur_month_str=''
if(cur_month<10){cur_month_str='0'+cur_month}
else{cur_month_str=''+cur_month}
format=format.replace('mm',cur_month_str)}
else if(month_type==8){format=format.replace('m',cur_month)}
else if(month_type==5){format=format.replace('month',get_chr_month(settings,cur_month,month_type))}
else if(month_type==6){format=format.replace('MONTH',get_chr_month(settings,cur_month,month_type))}
else if(month_type==7){format=format.replace('Month',get_chr_month(settings,cur_month,month_type))}
else if(month_type==2){format=format.replace('mon',get_chr_month(settings,cur_month,month_type))}
else if(month_type==3){format=format.replace('MON',get_chr_month(settings,cur_month,month_type))}
else if(month_type==4){format=format.replace('Mon',get_chr_month(settings,cur_month,month_type))}
format=format.replace('mm',cur_month)
if(format.search('yyyy')>=0){format=format.replace('yyyy',cur_year)}
else{temp_year=String(cur_year)
temp_year=temp_year.slice(2)
format=format.replace('yy',temp_year)}
hide_calendar(settings);if(settings.second_date==0){document.getElementById(settings.target_input).value=format}
else{document.getElementById(settings.target_input).value=document.getElementById(settings.target_input).value+format}
if($e){if($e.execute){$e.execute(settings.target_input,'change');}}}
function hide_calendar_evnt(e,settings){hide_calendar(settings)}
function hide_calendar(settings){document.getElementById(settings.contID).style.display='none';if(document.all&&!window['XMLHttpRequest']){eles=document.body.getElementsByTagName('select');for(var i=0;i<eles.length;i++){eles[i].style.visibility='';}}
for(var i=0;i<settings._iframes.length;i++){document.getElementById(settings._iframes[i]).style.visibility='';}
$e.remove(document.documentElement,'mousedown',hide_calendar_evnt);}
function get_num_month(settings,month_to_convert){month_to_convert=month_to_convert.toLowerCase();month_to_convert=month_to_convert.substr(0,3);cur_month_num=1;for(var i=0;i<settings.months.length;i++){if(settings.months[i].substr(0,3).toLowerCase()==month_to_convert){cur_month_num=i+1;break;}}
return cur_month_num}
function get_chr_month(settings,cur_month,month_type){cur_chr_month=settings.months[cur_month-1];if(month_type==2||month_type==3||month_type==4){cur_chr_month=cur_chr_month.substr(0,3)}
if(month_type==2||month_type==5){cur_chr_month=cur_chr_month.toLowerCase()}
else if(month_type==3||month_type==6){cur_chr_month=cur_chr_month.toUpperCase()}
return cur_chr_month}
	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



var Report=Class.create();Report.prototype={initialize:function(reportId,templateId){this.reportId=reportId;this.templateId=templateId;this._prepareReport($(this.reportId));},populate:function(data){var rEle=false;for(var prop in data){if(data[prop].constructor==Array){var rEle=$(this.reportId+'.'+prop);this._addRows(this.templateId+'.'+prop,this.templateId+'.'+prop,rEle,data[prop],false);}else{$svs(this.reportId+'.'+prop,data[prop]);}}
var reportState=data['*state'];if(reportState)
this._setState(reportState);},_prepareReport:function(ele){for(var i=0;i<ele.childNodes.length;i++){if(ele.childNodes[i].getAttribute){if(ele.childNodes[i].getAttribute('A5ReportDataIndex')!=''&&ele.childNodes[i].getAttribute('A5ReportDataIndex')){ele.childNodes[i].id=this.reportId+'.'+ele.childNodes[i].getAttribute('A5ReportDataIndex');}}
if(ele.childNodes[i].childNodes){if(ele.childNodes[i].childNodes.length!=0)this._prepareReport(ele.childNodes[i]);}}},_addRows:function(templateId,nodeId,tEle,data,flatten){var ele=false;var fAttr=$(templateId).getAttribute('A5ReportFlatten');if(fAttr!=''&&fAttr){flatten=$u.s.toBool(fAttr);}
var prop='';for(var i=0;i<data.length;i++){if(!flatten){ele=document.getElementById(templateId).cloneNode(true);ele.id=nodeId+'['+i+']';tEle.appendChild(ele);this._fillRow(ele,data[i],nodeId+'['+i+']');}else{if($(templateId)){ele=document.getElementById(templateId).cloneNode(true);ele.id=nodeId+'['+i+']';tEle.appendChild(ele);this._fillRow(ele,data[i],nodeId+'['+i+']');}}
for(prop in data[i]){if(data[i][prop].constructor==Array){this._createGroup(templateId+'.'+prop,nodeId+'['+i+'].'+prop,ele,data[i][prop],flatten);}}
if(flatten){if($(templateId+'~')){ele=document.getElementById(templateId+'~').cloneNode(true);ele.id=nodeId+'['+i+']~';tEle.appendChild(ele);this._fillRow(ele,data[i],nodeId+'['+i+']');}}}},_createGroup:function(templateId,nodeId,ele,data,flatten){if(flatten){this._addRows(templateId,nodeId,ele.parentNode,data,flatten);return false;}
var tEles=ele.getElementsByTagName('table');var ttEle=false;for(var i=0;i<tEles.length;i++){if(tEles[i].getAttribute('A5ReportGroupIndex')==templateId){ttEle=tEles[i];break;}}
if(ttEle){ttEle.id=nodeId;this._addRows(templateId,nodeId,ttEle,data,flatten);}},_fillRow:function(ele,data,nodeId){for(var i=0;i<ele.childNodes.length;i++){if(ele.childNodes[i].getAttribute){if(ele.childNodes[i].getAttribute('A5ReportDataIndex')!=''&&ele.childNodes[i].getAttribute('A5ReportDataIndex')){if(ele.childNodes[i].tagName.toLowerCase()=='img')ele.childNodes[i].src=data[ele.childNodes[i].getAttribute('A5ReportDataIndex')];else ele.childNodes[i].innerHTML=data[ele.childNodes[i].getAttribute('A5ReportDataIndex')];}
if(ele.childNodes[i].getAttribute('A5ReportDataAttrib')!=''){ele.childNodes[i].setAttribute('A5ReportDataAttrib',data[ele.childNodes[i].getAttribute('A5ReportDataAttrib')]);}
if(ele.childNodes[i].getAttribute('A5ReportConditionIndex')!=''&&ele.childNodes[i].getAttribute('A5ReportConditionIndex')){if(!data[ele.childNodes[i].getAttribute('A5ReportConditionIndex')]){ele.childNodes[i].style.display='none';}}
if(ele.childNodes[i].getAttribute('A5ReportRecordReference')!=''&&ele.childNodes[i].getAttribute('A5ReportRecordReference')){if(ele.childNodes[i].getAttribute('A5ReportRecordReference')!='.')ele.childNodes[i].setAttribute('A5ReportRecordReference',nodeId+'.'+ele.childNodes[i].getAttribute('A5ReportRecordReference'));else ele.childNodes[i].setAttribute('A5ReportRecordReference',nodeId);}
if(ele.childNodes[i].getAttribute('A5ReportGeneratedId')!=''&&ele.childNodes[i].getAttribute('A5ReportGeneratedId')){ele.childNodes[i].id=nodeId+'.'+ele.childNodes[i].getAttribute('A5ReportGeneratedId');}
if(ele.childNodes[i].getAttribute('A5ReportClassNameIndex')!=''&&ele.childNodes[i].getAttribute('A5ReportClassNameIndex')){$acn(ele.childNodes[i],data[ele.childNodes[i].getAttribute('A5ReportClassNameIndex')]);}}
if(ele.childNodes[i].childNodes){if(ele.childNodes[i].childNodes.length!=0)this._fillRow(ele.childNodes[i],data,nodeId);}}},_toggleBranch:function(branchId){var idArr=branchId.split('.');var groupName=idArr.pop();idArr=idArr.join('.');var ele=$(branchId);if(ele.style.display=='none'){ele.style.display='';$acn(idArr,groupName+'_isOpen');}else{ele.style.display='none';$rcn(idArr,groupName+'_isOpen');}},_toggleRow:function(buttonPtr,branchId){var ele=$(branchId);if(ele.style.display=='none'){ele.style.display='';$acn(buttonPtr,'A5ReportButtonExpanded');}else{ele.style.display='none';$rcn(buttonPtr,'A5ReportButtonExpanded');}},_toggleColumn:function(buttonPtr,colGroup){var tblName=buttonPtr.getAttribute('A5ReportRecordReference');var tbl=$(tblName);var classList=tbl.className;if(classList&&classList.indexOf('hide'+colGroup)>-1){$rcn(tbl,'hide'+colGroup);$acn(buttonPtr,'A5ReportButtonExpanded');}else{$acn(tbl,'hide'+colGroup);$rcn(buttonPtr,'A5ReportButtonExpanded');}},_setCurrentRow:function(currentState,prefix){var name=currentState['name'];var offset=currentState['offset'];var child=currentState['child'];var branchId=prefix+name;var idArr=branchId.split('.');var tbl=$(branchId);if(tbl){if(tbl.style.display=='none'){tbl.style.display='';$acn(idArr,name+'_isOpen');}}else{alert('Could not find branch '+branchId);return;}
if(child){this._setCurrentRow(child,prefix+name+'['+(offset-1)+'].');}else{var rowName=prefix+name+'['+(offset-1)+']';var rowEle=$(rowName);if(rowEle){rowEle.focus();rowEle.scrollIntoView();}}},_setState:function(reportState){var currentRow=reportState['current_row'];if(currentRow){this._setCurrentRow(currentRow,this.templateId+'.');}}}

/*
Copyright (c) 2001, 2013 Alpha Software Corporation
All Rights Reserved.

This Javascript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/


A5.GridComponentHelper = Class.create();
A5.GridComponentHelper.prototype = {
	initialize: function(gridId,settings){
		this.gridId = gridId;

		$u.o.assign(settings,{
			ajaxURL: '',
			gridColumnInfo: [],
			detailViewColumnInfo: [],
			rowRefreshOnFocus: false,
			rowRefreshOnDirty: false,
			pageNumber: 0,
			pagesInGrid: 0,
			rowsPerPage: 0,
			actualRowsOnPage: 0,
			logicalRecordNumberFirstRecordOnPage: 0,
			_gridRowState: 'view',
			_detailViewState: 'view',
			fieldErrors: {
				type: '',
				className: '',
				inputClassName: '',
				icon: '',
				global: {
					contId: '',
					hoverClassName: '',
					hoverInputClassName: ''
				}
			},
			rowErrors: {
				showMessageBox: false,
				messageBoxTitle: 'Errors',
				style: 'width: 6in; height: 2in; color:red;'
			},
			detailViewDataPreFetch: false,
			detailViewRefreshOnDirty: false,
			detailViewScrollIntoView: false,
			detailViewAnimation: {show: {type: '', duration: 1000}, hide: {type: '', duration: 1000} },
			_readOnly: false,
			_embeddedMode: false,
			_batchChange: false,
			hasEditRowMenu: false,
			_editPermissions: {
				allowDelete: true,
				allowInsert: true,
				allowUpdate: true
			},
			onColumnSort: 0,
			onDetailViewNewRecord: 0
		},true);
		$u.o.assign(this,settings,true);

		this._gridRowWatches = new Object();
		this._detailViewWatches = new Object();
		this._gridWatches = new Object();
		this._searchWatches = new Object();
		this._searchValues = new Object();
		this.stateInfo = {};
		this._currentSubmitTimeStamp = false;
		this._submitTestInterval = 5000;
		this._buttons = [];

		this._menus = [];
		this._menuData = [];
		this._ajaxCallbackCompleteCode = {};

		this.fieldErrors.global.contId = this.gridId + '.GLOBALERRORS';
		this._eh = new A5.ErrorHandler(this.fieldErrors);
		this._reh = new A5.ErrorHandler({
			type: 'tip',
			className: 'errorTip',
			inputClassName: ''
		});
		this._gridColNames = new Array();
		for(var i = 0; i < this.gridColumnInfo.length; i++) {
			this._gridColNames.push(this.gridColumnInfo[i].name);
		}
		this._detailViewColNames = new Array();
		for(var i = 0; i < this.detailViewColumnInfo.length; i++) {
			this._detailViewColNames.push(this.detailViewColumnInfo[i].name);
		}
		this._searchColNames = new Array();
		if(this.searchColumnInfo) {
			for(var i = 0; i < this.searchColumnInfo.length; i++) {
				this._searchColNames.push(this.searchColumnInfo[i].name);
			}
		}
		if(this.hasEditRowMenu) {
			this._rowMenuRow = 0;
			this._rowMenuTO = 0;
			this._rowMenuId = this.gridId + '.EDITROWMENU';
			$e.add(this._rowMenuId,'mouseover',this._rowMenuStopHide,this,true);
			$e.add(this._rowMenuId,'mouseout',this._rowMenuMOut,this);
		}

		if(this.rowOnDblClick.constructor != Function && typeof this.rowOnDblClick != 'string' ) {
			this.rowOnDblClick = '';
		}

		var ele = $(this.gridId+'.GRID_PART.FORM_CONTAINER_DIV');

		var HTMLFocusCatcher = document.createElement('button');
		HTMLFocusCatcher.id = this.gridId+'.FOCUSCATCHER';
		//switched from input to button because this caused a scroll bar when in right-to-left. uses same as list (button not input for focuscatcher)
		//HTMLFocusCatcher.readonly = true;
		//HTMLFocusCatcher.style.position = 'absolute';
		//HTMLFocusCatcher.style.left = '-5000px';
		//HTMLFocusCatcher.style.height = '1px';
		//HTMLFocusCatcher.style.width = '1px';
		//HTMLFocusCatcher.style.fontSize = '0px';
		$ss(HTMLFocusCatcher,'position: absolute; font-size: 0px; outline: none; opacity: 0; filter: alpha(opacity=0); height: 0px; width: 0px');


		$e.add(HTMLFocusCatcher,'focus',this._setControlFocus,this);
		$e.add(HTMLFocusCatcher,'blur',this._setControlBlur,this);


		//ele.parentNode.insertBefore(HTMLFocusCatcher,ele)  ;
		var wEle = document.createElement('div');
		wEle.style.position = 'relative';
		wEle.appendChild(HTMLFocusCatcher);
		ele.parentNode.insertBefore(wEle,ele);

		this._focusRow = 0;
		this._selectedRow = 0;
		this._focusControl = '';
		this._focusControl2 = '';
		this._dvFocustControl = '';
		this._dvFocustControl2 = '';
		this._focusRowTO = 0;
		this._helpTO = 0;
		this._detailViewRow = 0;
		this._detailViewIsDirty = false;
		this._disabledBySecurity = [];
		this._disabledBySecurityDV = [];

		this._cascadingSelectChoices = new Object();
		this._dVImages = new Object();



		this._kw = new AUI.KeyWatcher([
				{key: 'F1', handle: this._keyF1},
				{key: 'up', handle: this._keyPrevRow},
				{key: 'down', handle: this._keyNextRow},
				{key: 'F9', handle: this._keySave},
				{key: 'SHIFT+F9', handle: this._keySaveAll},
				{key: 'ENTER', handle: this._keyEnter},
				{key: 'PAGEUP', handle: this._keyPageUp},
				{key: 'PAGEDOWN', handle: this._keyPageDown},
				{key: 'F2', handle: this._keyOpenLookupWindow},
				{key: 'CTRL+D', handle: this._keyDeleteRecord},
				{key: 'ESCAPE', handle: this._keyEscape}

			],this);

		this._dvkw = new AUI.KeyWatcher([
				{key: 'F1', handle: this._dvKeyF1},
				{key: 'F9', handle: this._dvKeySave},
				{key: 'CTRL+F9', handle: this._dvKeySaveAndEnter},
				{key: 'ESCAPE', handle: this._dvKeyEscape},
				{key: 'F2', handle: this._dvKeyOpenLookupWindow},
				{key: 'CTRL+D', handle: this._dvKeyDeleteRecord}
			],this);

		this._originalValues = new Array();
		this._originalNullValues = new Array();
		this._originalDVValues = new Array();
		this._originalDVNullValues = new Array();
		this._localDVNullValues = new Array();
		this._checkedRowKeys = new Array();
		this._openLookupWindows = new Array();
		this._openDVLookupWindows = new Array();

		this._qbeMenu = {
			c: ['EXACTMATCH','STARTSWITH','ENDSWITH','CONTAINS','GREATERTHAN','GREATERTHANOREQUALTO','LESSTHAN','LESSTHANOREQUALTO','WILDCARD','QBESYNTAX','ISBLANK','ISNULL','ISNOTBLANK','ISNOTNULL'],
			n: ['EXACTMATCH','GREATERTHAN','GREATERTHANOREQUALTO','LESSTHAN','LESSTHANOREQUALTO','QBESYNTAX','ISNULL','ISNOTNULL'],
			l: ['EXACTMATCH','ISNULL','ISNOTNULL'],
			d: ['EXACTMATCH','GREATERTHAN','GREATERTHANOREQUALTO','LESSTHAN','LESSTHANOREQUALTO','QBESYNTAX','ISBLANK','ISNULL','ISNOTBLANK','ISNOTNULL']
		}
		this._qbeMenu.e = this._qbeMenu.n;
		this._qbeMenu.t = this._qbeMenu.d;
		this._qbeMenu.y = this._qbeMenu.t;

		this._dvFloatingWindow = 0;
		this._floatingLookupWindow = {};

		this._defaultWindowSettings = new Object();
		this._defaultWindowSettings['dropdown'] = {
			type: 'popup',
			theme: this.styleName,
			title: {html: 'Null',show: false},
			body:  {content: {type: 'blank'}}
		};

		this._genericWindow = new Object();

		var closeButton = {action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'};
		if(typeof A5.themes != 'undefined') {
			if(typeof A5.themes._t[this.styleName] != 'undefined') closeButton = A5.themes._t[this.styleName].window.base._defaultTools.close;
		}

		this._defaultWindowSettings['modal'] = {
			type: 'modal', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window',
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};

		this._defaultWindowSettings['modalpopup'] = {
			type: 'modal-popup', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window',
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};


		this._defaultWindowSettings['modeless'] = {
			type: 'modeless', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window',
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};


		this._defaultWindowSettings['modelesspopup'] = {
			type: 'popup', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window',
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};

		this._dirtyRows =  new Array();
		this._dirtyNewRows =  new Array();
		this._editModeRows =  new Array();
		this._isDirty = false;
		this._functions = {};

		this._fieldHelpers_S = new Object();
		this._fieldHelpers_G = new Object();
		this._fieldHelpers_DV = new Object();

		this._detailViewWindowState = '';

		this._refreshLinkedContentTO = 0;
		this._keyPageNavigateTO = 0;


		this._gridFilter = '';
		this._gridOrder = '';
		this._gridArguments = '';
		this._gridDBType = '';

		this._vars = {SESSION : {}, PAGEVARIABLE : {}};
		this._hiddenCols = new Array();

	},

	_destroy: function() {
		var _obj = this.wsclient;
		if(_obj) _obj.disconnect();

		var ele = 0;
		for(var winName in this._genericWindow){
			ele = $(this._genericWindow[winName].getWindowId('body'));
			if(ele.tagName.toLowerCase() == 'div') ele.innerHTML = '';
		}
		this.autoRefreshStop();

	},

	_executeEvent: function(eventName) {
		var result = true;
		var targs = new Array();
		for(var i = 1; i < arguments.length; i++) targs.push(arguments[i]);
		var tresult = false;
		if(typeof this[eventName] != 'undefined'  ) {

			if(this[eventName].constructor == Function) {
				tresult = this[eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = tresult;
			}
		}
		if(typeof this['_' +eventName] != 'undefined' ) {
			if(this['_'+eventName].constructor == Function) {
				tresult = this['_'+eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = result && tresult;
			}

		}
		//if(eventName == 'onRowSelect' || eventName == 'onRowStateChange' || eventName == 'onDetailViewStateChange') this._fireWatches('all');
		if(eventName == 'onRowSelect' || eventName == 'onRowStateChange' ) this._fireWatches('G',targs[0].rowNumber);
		if(eventName == 'onDetailViewStateChange' || eventName == 'afterDetailViewCancelEdits') this._fireWatches('D',1);
		if(eventName == 'afterDetailViewSubmit' || eventName == 'afterGridSubmit' || eventName == 'afterRowSubmit') this._currentSubmitTimeStamp = false;

		return result;
	},

	_getCurrentKey: function(rowNum) {
		if(typeof this._keys == 'undefined') {
			if(this._rowsInGrid > 0) {
				alert('Primary key for Grid was not defined.');
			}
			return '';
		}
		if(rowNum < 0) return '';
		if(typeof this._keys[rowNum-1] == 'undefined') return '';
		return this._keys[rowNum-1].join('|||');
	},

	_setRowKeys: function(keys) {
		this._keys = keys;
	},

	_rowMenuMOver: function(e, classInst) {
		classInst._rowMenuStopHide();
		classInst._rowMenuRow = Number(this.id.split('.')[1].substr(1));
		var mEle = $(classInst._rowMenuId);
		$po(mEle,this,'dropdown');
		mEle.style.display = 'block';
	},

	_rowMenuMOut: function(e, classInst) {
		classInst._rowMenuTO = setTimeout(function(){classInst._rowMenuHide();},200)
	},

	_rowMenuHide: function() {
		$(this._rowMenuId).style.display = 'none';
	},

	_rowMenuStopHide: function() {
		clearTimeout(this._rowMenuTO);
	},


	_setStateInfo: function(property,value) {
		var stateInfoID = this.gridId + '.STATEINFO';
		var stateInfo = $gvs(stateInfoID);
		var property2 = property + '=';
		var propertyLen = property2.length ;
		if(stateInfo.indexOf('&' + property2) != -1) {
			stateInfo = stateInfo.split('&');
			for(var i = stateInfo.length -1; i >= 0; i--) {
				if(stateInfo[i].substr(0,propertyLen) == property2) {
					stateInfo[i] = A5.ajax.buildURLParam(property,value);
					$svs(stateInfoID,stateInfo.join('&'));
					return true;
				}
			}
		} else {
			stateInfo = stateInfo + '&' + A5.ajax.buildURLParam(property,value);
			$svs(stateInfoID,stateInfo);
		}
	},


	setErrors: function(errors) {

		for(var i = 0; i < errors.length; i++) {
			var colName = '';
			var part = '';
			var rowNum = '';
			if(errors[i].id.split('.').length == 5) {
				colName = errors[i].id.split('.')[4];
				part = errors[i].id.split('.')[1];
				rowNum = errors[i].id.split('.')[3].replace('R','');
			} else if(errors[i].id.split('.').length == 4) {
				colName = errors[i].id.split('.')[3];
				part = 'G';
				rowNum = errors[i].id.split('.')[2].replace('R','');
			}
			this.activateControlContainer(colName,part,rowNum);
			this._eh.set(errors[i].id,errors[i].message);
		}
	},

	_dynamicMask: function(fnName) {
		if(window[this.format.maskFunctionName])
		{
			var id = this._editTargetId;
			id = id.split('.');
			id = id[1];
			var classInst = window[this.format.maskComponentObject];
			var e = {};
			e.rowNumber = classInst._selectedRow;
			if(id == 'S' || id == 'D') e.part = id;
			else e.part = 'G';
			return window[this.format.maskFunctionName].call(classInst,e);
		}
		return '';
	},

	getSelectedRow: function() {
		var selectedRow = this._selectedRow;
		var flagSelectedRowIsDeleted = false;
		var ele = $(this.gridId + '.R' +selectedRow);
		if( $ga(ele,'a5deletedrow') != null) flagSelectedRowIsDeleted = true;
		if(flagSelectedRowIsDeleted) return null;
		else return selectedRow;
	},

	getRowsInGrid: function() {
		if(!this._editPermissions.allowDelete && !this._editPermissions.allowInsert && !this._editPermissions.allowUpdate) {
			return this._rowsInGrid;
		}

		var a_tbody = $(this.gridId + '.GRID_PART.DATAREGION').getElementsByTagName('tbody');
		var count = a_tbody.length;
		var a = [];
		var flagDeleted = '';
		var flagDataRegion = ''
		var r = '';
		var id = '';
		var rowCount = 0;
		for(var i = 0; i < count; i++) {
		    flagDelete = $ga(a_tbody[i],'a5deletedrow');
		    flagDataRegion = $ga(a_tbody[i],'a5dataregion');
		    if(flagDataRegion == 'A5DataRegion' && flagDelete == null)  {
		        id = a_tbody[i].id;
		        r = id.split('.');
		        r = String(r[1]);
		        r = r.replace('R','');
		        r = Number(r);
		        if(r > 0) rowCount = rowCount + 1 ;
		    }
		}
		return rowCount;
	},




	getSessionVariable: function(varname) {
		varname = varname.toUpperCase();
		return this._vars.SESSION[varname];
	},

	getPageVariable: function(varname) {
		varname = varname.toUpperCase();
		return this._vars.PAGEVARIABLE[varname];
	},

	_getGridVariables: function(grid,detailView) {
		var data = typeof arguments[2] != 'undefined' ? arguments[2]: { };
		if(typeof data.rowNumber != 'undefined') var rowNumber = data.rowNumber;
		else var rowNumber = this._selectedRow;
		grid.recordsInGrid = 0;
		if(typeof this._rowsInGrid != 'undefined') grid.recordsInGrid = this._rowsInGrid;
		grid.rowState = this._gridRowState;
		grid.pageNumber = this.pageNumber;
		grid.pagesInGrid = this.pagesInGrid;
		if(rowNumber > 0) {
			grid.logicalRecordNumber = ((grid.pageNumber - 1) * this.rowsPerPage) + rowNumber;
		} else {
			grid.logicalRecordNumber = 0
		}
		grid.isNewRecordRow = $if(rowNumber > 0, false, true);
		grid.hasDetailView = $if(this._detailViewColNames.length > 0, true,false);

		if(grid.hasDetailView==false) {
			grid.isDirty = this._isDirty;
			if(rowNumber > 0) {
				grid.isRowDirty = this._dirtyRows[rowNumber -1];
			} else {
				grid.isRowDirty = this._dirtyNewRows[(rowNumber* -1) -1];
			}
		} else {
			grid.isDirty = false;
			grid.isRowDirty = false;
		}

		grid.isOnFirstPage = $if(grid.pageNumber == 1,true,false);
		grid.isOnLastPage = $if(grid.pageNumber == grid.pagesInGrid, true, false);
		grid.hasNextPage = $if(grid.pageNumber < grid.pagesInGrid, true,false);
		grid.hasPrevPage = $if(grid.pageNumber > 1, true,false);
		if(grid.hasDetailView == false) {
			detailView.rowState = '';
			detailView.isOnFirstRecord = false;
			detailView.isOnLastRecord = false;
			detailView.hasNextRecord = false;
			detailView.hasNextRecord = false;
			detailView.isDirty = false;
		} else {
			detailView.rowState = this._detailViewState;
			detailView.isOnFirstRecord = $if(rowNumber == 1 && grid.pageNumber == 1,true,false);
			detailView.isOnLastRecord = $if( (rowNumber == this._rowsInGrid) && (grid.pageNumber == grid.pagesInGrid) , true, false);
			detailView.hasNextRecord =$if( (grid.pageNumber < grid.pagesInGrid) || (rowNumber <  this._rowsInGrid), true, false);
			detailView.hasPrevRecord = $if(grid.pageNumber == 1 && rowNumber == 1, false, true);
			detailView.isDirty = $if(this._detailViewIsDirty,true,false);
		}
		var count = 0;
		if( this.checkBoxSelector == 'singlePage') {
		    var count = 0;
		    var ele = '';
		    var txt = ''
		    for(var i = 1; i <= this._rowsInGrid; i++) {
		        ele = $(this.gridId + '.V.R' + i + '.__ROWCHECKBOX');
		        txt = $gvs(ele);
		        if( $gvs(ele) != '') count = count + 1;
		    }
		} else if(this.checkBoxSelector == 'multiplePage') {
		    var count = this._checkedRowKeys.length
		}
		grid.checkedRowCount = count
		var eleCR = $(this.gridId + '.V.R' + rowNumber + '.__ROWCHECKBOX');
		grid.rowIsChecked = false;
		if($gvs(eleCR) != '') grid.rowIsChecked = true;

	},



	clearErrors: function() {
		if(typeof arguments[0] != 'undefined') {
			var errorsToClear = new Array();
			for(var i = 0; i < arguments[0].length; i++) {
				if(typeof arguments[0][i] == 'number') {
					for(var j = 0; j < this._eh._e.length; j++) {
						if(this._eh._e[j].id.indexOf('.R'+arguments[0][i]+'.') > -1) {
							errorsToClear.push(this._eh._e[j].id);
						}
					}
				} else {
					errorsToClear.push(arguments[0][i]);
				}

			}

			this._eh.clear(errorsToClear);
		} else {
			this._eh.clear();
		}
		this.clearDetailViewGlobalError();
	},

	_confirmAction: function() {

		if(this._readOnly) return true;
		var silentFlag = typeof arguments[0] != 'undefined' ? arguments[0] : false;
		if(this._isDirty) {
			if(!silentFlag) A5.msgBox.show(this.messages.t_dirtyRecordWarning,this.messages.dirtyRecordWarning,'O',function() {} );
			return false;
		} else if(this._detailViewIsDirty) {
			if(!silentFlag) A5.msgBox.show(this.messages.t_dirtyRecordWarning,this.messages.dirtyRecordWarning,'O',function() {} );
			return false;
		}
		return true;
	},

	fadeOutMessage: function(id,message) {
		var duration = typeof arguments[2] != 'undefined' ? arguments[2] : 2000;
		var flagStyle = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		A5.fadeOutMessage(id,message,duration,flagStyle,this.styleName);
	},

	setRowErrors: function(errors) {
		//when entire grid is editable, set the error state for a particular row in the grid.
		//shows the ErrorColumn and shows the error icon in this column.

		var errorMessages = new Array();



		this._showGridErrorColumn(true);
		for(var i = 0; i < errors.length; i++) {
			$acn(this.gridId +'.TD.R'+errors[i].row+'.__SYSTEM_ERRORCOLUMN','A5GridHasRowError');
			errors[i].id = this.gridId +'.R'+errors[i].row+'.__SYSTEM_ROWERROR';
			this._reh.set(errors[i].id,errors[i].message);
			errorMessages.push(errors[i].message);
		}

		if(this.rowErrors.showMessageBox == true) {
			var msgTxt = errorMessages.join('\n');
			msgTxt = '<div style="' + this.rowErrors.style + '">' + msgTxt + '</div>';
			A5.msgBox.show(this.rowErrors.messageBoxTitle,msgTxt,'O');
		}


	},

	_setCountInfo: function(a) {
			//js_pageNumber
			//js_pagesInGrid
			//js_rowsPerPage
			//js_actualRowsOnPage
			//js_LogicalRecordNumberFirstRecordOnPage
			this.pageNumber = a[0];
			this.pagesInGrid = a[1];
			this.rowsPerPage = a[2];
			this.actualRowsOnPage = a[3];
			this.logicalRecordNumberFirstRecordOnPage = a[4];
	},


	_columnTitlesShowHide: function(mode) {
		var eleT = $(this.gridId + '.COLUMNTITLES.TOP');
		var eleB = $(this.gridId + '.COLUMNTITLES.BOTTOM');
		if(eleT) eleT.style.display = mode;
		if(eleB) eleB.style.display = mode;
	},

	columnTitlesRefresh: function() {
		if(this._rowsInGrid == 0 && this.suppressTitlesIfNoRecords == true ) this._columnTitlesShowHide('none');
		else this._columnTitlesShowHide('');
	},

	_clearHiddenRowData: function(rowNum) {
		var ele = '';
		ele = $(this.gridId + '._HIDDENA5DATA.R' + rowNum);
		if(ele) ele.value = '';
	},

	clearRowErrors: function() {
		var rowsToClear = new Array();
		if(typeof arguments[0] != 'undefined') {
			for(var i = 0; i < arguments[0].length; i++) {
				this._clearHiddenRowData(arguments[0][i]);
				$rcn(this.gridId +'.TD.R'+arguments[0][i]+'.__SYSTEM_ERRORCOLUMN','A5GridHasRowError');
				rowsToClear.push(this.gridId +'.R'+arguments[0][i]+'.__SYSTEM_ROWERROR');
			}
			this._reh.clear(rowsToClear);

			if(this._reh._e.length == 0) this._showGridErrorColumn(false);

		} else {
			for(var i = 0; i <= this._rowsInGrid ; i++) {
				$rcn(this.gridId +'.TD.R'+(i+1)+'.__SYSTEM_ERRORCOLUMN','A5GridHasRowError');
				rowsToClear.push(this.gridId +'.R'+(i+1)+'.__SYSTEM_ROWERROR');
			}
			this._reh.clear();
			this._showGridErrorColumn(false);
		}
	},

	refreshExternalTreeNavigator: function() {
		A5.ajax.callback(this.ajaxURL,'__FormID='+this.gridId+'&__FormAction=GenerateTreeBranches&__treeType=externalnavigator&__treeName=TREENAVIGATOR&__treeObject='+this.gridId+'_EXTERNALNAVIGATOR_TREENAVIGATOR&'+$gvs(this.gridId + '.STATEINFO'));
	},

	refreshRow: function(rowNum) {
		if(typeof arguments[0] == 'undefined') rowNum = this._selectedRow;

		if(typeof this._keys == 'undefined') {
			alert('Row can not be refreshed because it does not have a Primary Key');
			return false;
		}

		//don't refresh rows that are already dirty
		if(this._dirtyRows[rowNum-1]) return false;
		var methodType = 'gridEvent';
		if(typeof arguments[1] != 'undefined') {
			if(arguments[1] == true) methodType = 'controlDirty';
		}

		var pkdata = this._getRowKey(rowNum);
		var regionId = this.gridId  + '.R' + rowNum;
		data = this._harvestGrid(regionId);
		if(data != '') data = '&' + data;
		if(pkdata != '') data = data + '&' + pkdata;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'refreshRow'})
		this._submitLow('refreshRow',this.gridId,this.ajaxURL,'__row=' + rowNum + '&__methodType=' + methodType + data);

	},

	blur: function() {
		$(this.gridId + '.FOCUSCATCHER').blur();
		this._kw.off();
	},


	sort: function(column){

		if(!this._executeEvent('canSort',{sortColumn: column})) return false;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'sort'})
		if(!this._confirmAction()) return false;
		var sDir = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		column = '' + column;
		var x = column.split(':');
		if(typeof x[1] != 'undefined') {
			column = 'expression:' + urlencode(x[1]);
		}
		if(sDir.toLowerCase() == 'a'){
			this._submitLow('sortA',this.gridId,this.ajaxURL,'__sortcolumn=' + column +  '&__dvWindow=' + this._detailViewWindowState);
		} else if(sDir.toLowerCase() == 'd'){
			this._submitLow('sortD',this.gridId,this.ajaxURL,'__sortcolumn=' + column + '&__dvWindow=' + this._detailViewWindowState);
		} else {
			this._submitLow('sort',this.gridId,this.ajaxURL,'__sortcolumn=' + column+ '&__dvWindow=' + this._detailViewWindowState);
		}
		this.clearDetailViewGlobalError();
		return false;
	},

	pageNavigate: function(target) {
		if(!this._executeEvent('canPageNavigate',{target: target})) return false;
		var part = typeof arguments[1] != 'undefined' ? arguments[1] : 'G';
		var additionalData = typeof arguments[2] != 'undefined' ? arguments[2] : '';
		if(!this._confirmAction()) return false;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'PageNavigate'})
		this._submitLow('PageNavigate',this.gridId,this.ajaxURL,'__targetPage=' + target +'&__part=' + part + '&__dvWindow=' + this._detailViewWindowState +'&' + additionalData);
		this.clearDetailViewGlobalError();
		return false;
	},

	groupBreakShowHide: function(groupLevel,id,mode) {
		var flagSnaking = false;
		if(id.replace(/\s/g,'') == '') id = 'NULLVALUE';
		var gobj = this._rowsInGroupHeader1[id];
		if(typeof gobj == 'string') flagSnaking = true;
		var rEle = '';
		var mode2 = '';
		var rid = ''

		if(!flagSnaking) rid = gobj[0];
		else rid = gobj.split('|')[1];

		if(mode == 'hide') mode2 = 'none';
		if(mode == 'show') mode2 = '';
		if(mode == 'toggle') {
			if(!flagSnaking) rEle = $(this.gridId + '.R' + rid);
			else rEle = $(this.gridId +'.SNAKING.' + rid);
			if(rEle) mode = rEle.style.display;
			if(mode == '') mode2 = 'none';
			else mode2 = '';

		}
		var isDeleted = '';
		var eleCloseIcon = $(this.gridId + '.GHCLOSE.' + rid);
		var eleOpenIcon = $(this.gridId + '.GHOPEN.' + rid);
		if(mode2 == 'none') {
			if(eleCloseIcon) eleCloseIcon.style.display = 'none';
			if(eleOpenIcon) eleOpenIcon.style.display = '';
		} else {
			if(eleCloseIcon) eleCloseIcon.style.display = '';
			if(eleOpenIcon) eleOpenIcon.style.display = 'none';

		}
		if(!flagSnaking) {
			for(var rowNum in gobj){
				rEle = $(this.gridId + '.R' + gobj[rowNum]);
				if(rEle) {
					isDeleted = $u.s.toBool(''+$ga(rEle,'a5deletedrow'));
					if(!isDeleted ) rEle.style.display = mode2;
				}
			}
		} else {
			rEle = $(this.gridId +'.SNAKING.' + rid);
			if(rEle) rEle.style.display = mode2;

		}
		if(typeof this._groupBreakState == 'undefined') this._groupBreakState = {};
		this._groupBreakState[id] = mode2;
	},

	_applyGroupBreakState: function() {
		var gobj = this._rowsInGroupHeader1;
		if(typeof this._groupBreakState == 'undefined') return false;
		var sobj = this._groupBreakState;
		var mode = '';
		for(var id in gobj) {
			mode = sobj[id];
			if(typeof mode != 'undefined') {
				if(mode == 'none') mode = 'hide';
				if(mode == '') mode = 'show';
				this.groupBreakShowHide(1,id,mode);
			}
		}

	},

	collapseAllRows: function() {
		var flagSnaking = false;
		var gobj = this._rowsInGroupHeader1;
		for(var ii in gobj) {
			if(typeof gobj[ii] == 'string') {
				flagSnaking = true;
				break;
			}
		}
		var rEle = '';
		if(flagSnaking) {
			var id = '';
			for(var ii in gobj) {
				id = gobj[ii].split('|')[1];
				rEle = $(this.gridId + '.SNAKING.' + id);
				if(rEle) rEle.style.display = 'none';
				var eleCloseIcon = $(this.gridId + '.GHCLOSE.' + id);
				var eleOpenIcon = $(this.gridId + '.GHOPEN.' + id);
				if(eleCloseIcon) eleCloseIcon.style.display = 'none';
				if(eleOpenIcon) eleOpenIcon.style.display = '';
			}
			return false;
		}
		for(var i = 1; i <= this._rowsInGrid; i++) {
			rEle = $(this.gridId + '.R' + i);
			if(rEle) rEle.style.display = 'none';

			var eleCloseIcon = $(this.gridId + '.GHCLOSE.' + i);
			var eleOpenIcon = $(this.gridId + '.GHOPEN.' + i);
			if(eleCloseIcon) eleCloseIcon.style.display = 'none';
			if(eleOpenIcon) eleOpenIcon.style.display = '';
			}
	},

	refresh: function() {
			var refreshChoices = typeof arguments[0] != 'undefined' ? arguments[0] : false;
			if(!this._confirmAction()) return false;
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'refresh'})
			this._submitLow('PageNavigate',this.gridId,this.ajaxURL,'__targetPage=' + 'same' +'&__part=G&__refreshChoices=' + refreshChoices );
			this.clearDetailViewGlobalError();
			return false;
	},

		argumentValue: function(name) {
			var args = this._gridArguments;
			if(typeof args == 'undefined') return '';
			var arr = args.split('\n');
			var arr2 = '';
			argName = '';
			argVal = '';
			for(var i = 1; i <= arr.length; i++) {
				arr2 = arr[i-1].split('|');
				argName = arr2[arr2.length-1];
				if(argName.toLowerCase() == name.toLowerCase() ) {
					argVal = arr[i-1].split('|||')[0];
					break;
				}
			}
		return argVal;
	},

	getParentObject: function() {
		if(this.parentGridAlias !='') {
			if(typeof window[this.parentGridAlias+'_GridObj'] != 'undefined') return window[this.parentGridAlias+'_GridObj'];
			if(typeof window[this.parentGridAlias+'_DlgObj'] != 'undefined') return window[this.parentGridAlias+'_DlgObj'];
			return false;
		} else return false;
	},

	setFocus: function(rowNum) {

		//if(!$(this.gridId+'.R'+(this._focusRow))) return false;
		if(!$(this.gridId+'.R'+(rowNum))) return false;

		if(this._focusRow != 0) {
			this._executeEvent('onRowBlur', {rowNumber: this._focusRow});
		}

		this._focusRow = rowNum;
		if(!this._editModeRows[this._focusRow-1]){
			this._focusRowClick.call($(this.gridId+'.R'+(this._focusRow)),null,this);
			$f(this.gridId+'.FOCUSCATCHER');
		} else {
			if(this._focusControl == '') {
				//this._focusControl = this._gridColNames[0];
				for(i=0;i<this.gridColumnInfo.length;i++) {
					if(this.gridColumnInfo[i].type.split(',')[0] != 'label' && this.gridColumnInfo[i].type.split(',')[0] != 'label-html') {
						this._focusControl = this.gridColumnInfo[i].name;
						break;
					}
				}
			}

			if(this._focusControl != '') {
				//IE complains if you give focus to a disabled control
				var ele = $(this.gridId+'.V.R'+(this._focusRow)+'.'+this._focusControl);
				if(ele.disabled != true) {
					$f(this.gridId+'.V.R'+(this._focusRow)+'.'+this._focusControl);
				}
			}
		}
	},

	setSelectedRow: function(rowNum) {
		if(typeof jQuery != 'undefined') jQuery.noConflict();
		//commented out becuause causes unselect row to fail when opening a detail view
		//if($(this.gridId + '.R' + rowNum) == false) return false;

		//alert('begin - ' + rowNum);
		if(typeof arguments[1] == 'boolean' && this._selectedRow != rowNum) var flagResynchLinkedContent = arguments[1];
		else var flagResynchLinkedContent = false;
		if(this._selectedRow != 0 && this._selectedRow <= this._rowsInGrid) {
			//$rcn(this.gridId+'.R'+this._selectedRow,this.rowSelectedClassName);
			if(this.rowSelectedClassName != '') {
				if($(this.gridId+'.R'+this._selectedRow)) this._removeRowClassName($(this.gridId+'.R'+this._selectedRow),this.rowSelectedClassName);
			}
			if(this.hasRowSelectorIcon) {
				if(this._selectedRow < 0) {
					if(this.newRowSelectorIconOff != '') {
						if($(this.gridId+'.R'+this._selectedRow)) $(this.gridId + '.R' + this._selectedRow + '.__ROWSELECTOR').src = this.newRowSelectorIconOff;
					} else {
						if($(this.gridId+'.R'+this._selectedRow))  $(this.gridId + '.R' + this._selectedRow + '.__ROWSELECTOR').style.visibility = 'hidden';
					}

				} else {
					if(this.rowSelectorIconOff != '') $(this.gridId + '.R' + this._selectedRow + '.__ROWSELECTOR').src = this.rowSelectorIconOff;
					else {
						if($(this.gridId + '.R' + this._selectedRow + '.__ROWSELECTOR')) $(this.gridId + '.R' + this._selectedRow + '.__ROWSELECTOR').style.visibility = 'hidden';
					}
				}
			}
		}
		this._selectedRow = rowNum;
		if(this._selectedRow != 0 && this._selectedRow <= this._rowsInGrid) {
			//$acn(this.gridId+'.R'+rowNum,this.rowSelectedClassName);
			if(this.rowSelectedClassName != '') this._addRowClassName($(this.gridId+'.R'+rowNum),this.rowSelectedClassName);
			if(this.hasRowSelectorIcon) {
				var ele = $(this.gridId + '.R' + rowNum + '.__ROWSELECTOR');

				if(rowNum < 0) {
					ele.src = this.newRowSelectorIconOn;
					if(this.newRowSelectorIconOff == '') {
						if(ele.style) ele.style.visibility = '';
					}
				} else {
					ele.src = this.rowSelectorIconOn;
					if(this.rowSelectorIconOff == '') {
						if(ele.style) ele.style.visibility = '';
					}
				}
			}
		} else if(this._selectedRow > this._rowsInGrid)  {
			this._selectedRow = 0;
		}
		if(flagResynchLinkedContent) this._internalRefreshLinkedContent();
		this._executeEvent('onRowSelect', {rowNumber: this._selectedRow});

	},

	_addRowClassName: function(ele,rowClassName) {
		if(!ele) return false;
		for(var i = 0; i < ele.childNodes.length; i++) {
			if(ele.childNodes[i].tagName) {
				if(ele.childNodes[i].id != ele.id + '.__ROWEXPAND_TR') $acn(ele.childNodes[i],rowClassName);
			}
		}
	},

	_removeRowClassName: function(ele,rowClassName) {
		if(!ele) return false;
		for(var i = 0; i < ele.childNodes.length; i++) {
			if(ele.childNodes[i].tagName) $rcn(ele.childNodes[i],rowClassName);
		}
	},

	_selectAllRowCheckboxes: function(cvalue) {
		for(i=1;i<=this._rowsInGrid;i++) {
			$svs(this.gridId + '.V.R' + i + '.__ROWCHECKBOX',cvalue);
			this._setCheckedRow(i,cvalue);
		}
		this._fireWatches('all')
	},

	saveSearchCriteria: function(name) {
		if(name=='') {
			alert('Name not specified.');
			return false;
		}
		this.submitSearchForm(false,name);
	},

	_executeLoadSavedSearch: function(eleName,flagExecute) {
		var ele = $(eleName);
		var nameSearch = $gvs(ele);
		this.loadSavedSearch(nameSearch,flagExecute);
		var cwin = A5.windows.getFromElement(ele);
		cwin.hide();
	},

	_executeSaveSavedSearch: function(eleName) {

		var ele = $(eleName);
		var nameSearch = $gvs(ele);
		eleError = $(this.gridId + '.SAVESEARCHERROR');
		if(nameSearch == '') {
			if(eleError) {
				eleError.style.display = '';
				eleError.innerHTML = this._saveSavedSearchDialog.warningBlankName;
				return false;
			}
		} else {
			eleError.style.display = 'none';
			this.saveSearchCriteria(nameSearch);
		}
	},

	loadSavedSearch: function(name,flagExecuteSearch) {
		if(typeof flagExecuteSearch == 'undefined') flagExecuteSearch = false;
		var data='_searchName=' + name + '&_execute=' + flagExecuteSearch;
		this.ajaxCallback('G','none','__a5systemLoadSavedSearch','',data);
	},

	loadSearchUI: function(ele) {
		var obj = {};
		obj = this._loadSavedSearchDialog;
		this._promptRepository(ele,obj);
	},

	saveSearchUI: function(ele) {
		var obj = {};
		obj = this._saveSavedSearchDialog;
		this._promptRepository(ele,obj);
	},


	_getRepositoryChoices: function(listBoxId,id,dataType,otherData) {
		var data = '_listBoxId=' + listBoxId + '&_idToPopulate=' + id + '&_repositoryDataType='+dataType;
		if(otherData!='') data = data + '&' + otherData;

		this.ajaxCallback('G','none','__a5LoadFromRepository','',data);
	},

	_promptRepository: function(objEle,obj) {
		var windowName = obj.windowName;
		var currWindow = this.getWindow(windowName);
		var windowDefObj = 	{
			type: 'modeless',
			body: {	content: {type: 'blank',elementId: '~'}},
			height: obj.windowHeight,
			width: obj.windowWidth,
			title: {html: 'Window',	location: 'top'},
			disableMove: true,
			animation: obj.windowAnimation,
			buttons: obj.windowButtons
			}
		if(!currWindow) {
			currWindow = this.createWindow(windowName,'dropdown',windowDefObj);
		}
		var windowDiv = currWindow.getWindowId('body');
		$(windowDiv).innerHTML = obj.windowHTML;
		currWindow.show('dropdown',objEle);
		if(obj.javascript) {
			eval(obj.javascript);
		}
	},


	submitSearchForm: function() {
		var flagRunSearch = typeof arguments[0] != 'undefined' ? arguments[0] : true;
		var savedSearchName = typeof arguments[1] != 'undefined' ? arguments[1] : '';

		if(flagRunSearch) {
			if(!this._executeEvent('canSearchSubmit',{})) return false;
			if(!this._confirmAction()) return false;
		}

		if(flagRunSearch) {
			if(this.onlyShowDetailViewOnRequest && this.detailViewPosition == 'page' && this.hideGridWhenDetailViewIsShown) {
				//this solves problem: DV set to hide Grid when DV is open. DV set to show new record when no records in query. When user clears search, Grid, not DV should be shown
				this._detailViewWindowState = 'closed';
			}
		}

		var mapData = this.getMapDataFromSearchPart();

		var stateInfoID = this.gridId + '.STATEINFO';
		if(flagRunSearch) {
			var data = '_submitActionType=SubmitSearchForm';
		} else {
			var data = '_submitActionType=SaveSearchForm&_searchName='+savedSearchName;
		}
		data = data +   '&__dvWindow=' + this._detailViewWindowState;
		data = data +  mapData;
		if(flagRunSearch) {
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'submitSearchForm'})
		}
		this._submitLow('submit:new',this.gridId +'.SEARCH_PART.FORM',this.ajaxURL,data,true,stateInfoID,'__sf');
		return false;
	},

	getMapDataFromSearchPart: function() {

		var maps = '';
		var mapDataI = '';
		var mapData = '';
		if(this._searchPartMaps) maps = this._searchPartMaps;
		if(maps != '') {
			for(i=0;i<maps.length;i++) {
				var field = maps[i];
				var mapDataI = this['googleMap_SEARCH_' + field].computePostValues();
				mapDataI = mapDataI.split('&');
				var delim = 'GM_' + field;

				mapDataI = delim + '.' + mapDataI.join('&' +delim + '.');
				mapDataI = '&' + mapDataI;
				//mapDataI = mapDataI + '&' + delim + '._bounds=' + this['googleMap_SEARCH_' + field].map.getBounds();
				var mapObj = this['googleMap_SEARCH_' + field].map;
				var LatLngBounds=mapObj.getBounds();
				var NE= LatLngBounds.getNorthEast();
				var SW= LatLngBounds.getSouthWest();
				var NElat=NE.lat();
				var NElng=NE.lng();
				var SWlat=SW.lat();
				var SWlng=SW.lng();
				var mapData2 = '&' + delim+'._NElat=' + NElat + '&' + delim + '._NElng=' + NElng + '&' + delim + '._SWlat=' + SWlat + '&' + delim + '._SWlng=' + SWlng;
				mapData2 = mapData2 +'&' + delim + '._zoom=' + mapObj.getZoom();
				mapData = mapData + mapDataI + mapData2;
			}
		}


		return mapData;

	},

	computeSearchFromMetaData: function(data) {

		if(!this._executeEvent('canSearchSubmit',{})) return false;
		if(!this._confirmAction()) return false;
		this.ajaxCallback('G','none','__a5systemComputeSearchFromMetaData','',data);

	},

	clearAllSearchPartMaps: function() {
		var maps = '';
		if(this._searchPartMaps) maps = this._searchPartMaps;
		if(maps == '') return false;
		for(i=0;i<maps.length;i++) {
			var field = maps[i];
			var mapDataI = this['googleMap_SEARCH_' + field].deleteOverlays();
		}
	},


	initializeAllSearchPartMaps: function() {
	var maps = '';
	if(this._searchPartMaps) maps = this._searchPartMaps;
		if(maps == '') return false;
		for(i=0;i<maps.length;i++) {
			var field = maps[i];
			var mapDataI = this['googleMap_SEARCH_' + field].initializeGoogleMap();
		}
	},


	clearSearchForm: function() {
		if(!this._executeEvent('canSearchClear',{})) return false;
		if(!this._confirmAction()) return false;

		if(this.onlyShowDetailViewOnRequest && this.detailViewPosition == 'page' && this.hideGridWhenDetailViewIsShown) {
			//this solves problem: DV set to hide Grid when DV is open. DV set to show new record when no records in query. When user clears search, Grid, not DV should be shown
			this._detailViewWindowState = 'closed';
		}

		this._resetSearchForm();
		this.clearAllSearchPartMaps();
		//if map is set to radius, replaces the center marker.
		this.initializeAllSearchPartMaps();
		this._searchValues = new Object();
		var stateInfoID = this.gridId + '.STATEINFO';
		var data = '__clearSearch=yes&_submitActionType=ClearSearchForm'  + '&__dvWindow=' + this._detailViewWindowState;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'clearSearchForm'})
		this._submitLow('submit:new',this.gridId +'.SEARCH_PART.FORM',this.ajaxURL,data,true,stateInfoID,'__sf');
		return false;

	},



	_resetSearchForm: function() {
		var ele = 0;
		var val = '';
		if(typeof this.searchColumnInfo == 'undefined') return true;

		if(this.searchPartIsKeyword) {
			$svs(this.gridId + '_KEYWORDSEARCH','');
		} else {
			for(var i=0; i < this.searchColumnInfo.length; i++) {
				if(this.searchColumnInfo[i].isRange) {
					ele = $n( 'S.FROM.' + this.searchColumnInfo[i].name);
					ele = $cetp(ele,$(this.gridId+'.SEARCH_PART.FORM'));
					if(ele) {
						if(!ele.tagName) val = $ga(ele[0],'A5OriginalValue').split('||A5ARRAYSEP||');
						else val = $ga(ele,'A5OriginalValue').split('||A5ARRAYSEP||');
						if(val.length == 1) val = val[0];
						if(typeof this._fieldHelpers_S[this.searchColumnInfo[i].name] == 'object') {
							this._fieldHelpers_S[this.searchColumnInfo[i].name].setValue(val,ele[0]);
						} else {
							$svs(ele,val);
						}

						ele = $n( 'S._TO.' + this.searchColumnInfo[i].name);
						ele = $cetp(ele,$(this.gridId+'.SEARCH_PART.FORM'));
						if(!ele.tagName) val = $ga(ele[0],'A5OriginalValue').split('||A5ARRAYSEP||');
						else val = $ga(ele,'A5OriginalValue').split('||A5ARRAYSEP||');
						if(val.length == 1) val = val[0];
						if(typeof this._fieldHelpers_S[this.searchColumnInfo[i].name] == 'object') {
							this._fieldHelpers_S[this.searchColumnInfo[i].name].setValue(val,ele[0]);
						} else {
							$svs(ele,val);
						}
					}



				} else {
					ele = $n( 'S.' + this.searchColumnInfo[i].name);
					ele = $cetp(ele,$(this.gridId+'.SEARCH_PART.FORM'));
					if(ele) {
						val = $ga(ele[0],'A5OriginalValue').split('||A5ARRAYSEP||');
						if(val.length == 1) val = val[0];
						if(typeof this._fieldHelpers_S[this.searchColumnInfo[i].name] == 'object') {
							this._fieldHelpers_S[this.searchColumnInfo[i].name].setValue(val,ele[0]);
						} else {
							$svs(ele,val);
						}
					}
				}
			}
		}
	},

	showAlternateView: function(targetId) {
		var index = -1;
		var prop = 'id';
		var searchVal = targetId;
		for(var i = 0; i < this._altViews.length; i++) {
			if(this._altViews[i][prop] == searchVal) {
			  index = i;
			  break;
			}
		}
		if(index == -1) return false;
		var idToShow = this._altViews[i].id;
		var eventName = this._altViews[i].onActivate;
		if(typeof eventName == 'function') {
			eventName();
		} else if(eventName != '') window[eventName].call(this);

		for(var i = 0; i < this._altViews.length; i++) {
			var ele = $(this.gridId + '.ALTVIEW.' +this._altViews[i].id);
			if(ele) ele.style.display = 'none';
		}
		ele = $(this.gridId + '.ALTVIEW.' + targetId);
		if(ele) ele.style.display = '';
	},

	argumentsSubmit: function() {
		var data = '_submitActionType=SubmitArguments';
		var stateInfoID = this.gridId + '.STATEINFO';
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'submitArguments'})
		this._submitLow('submit:all',this.gridId+'.ARGUMENTS',this.ajaxURL,data,true,stateInfoID,'');
		return false;

	},

	argumentsCancel: function() {
		var data = '_submitActionType=CancelArguments';
		var stateInfoID = this.gridId + '.STATEINFO';
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'cancelArguments'})
		this._submitLow('submit:all',this.gridId+'.ARGUMENTS',this.ajaxURL,data,true,stateInfoID,'');
		return false;
	},

	showAll: function() {
		//turns off all filters in the Grid (other than base filters and linking filters)
		if(!this._confirmAction()) return false;
		ele = $(this.gridId +'.SEARCH_PART.FORM')
		if(ele) {
			//ele.reset()
			//A5.form.reset(this.gridId +'.SEARCH_PART.FORM');
			this._resetSearchForm();
		}
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'showAll'})
		this._submitLow('ShowAll',this.gridId,this.ajaxURL,'' );


	},

	hideNewRecordRows: function () {
		this._executeEvent('onNewRowsHide',{});
		if(this._dirtyNewRows) {
			if($u.a.find(this._dirtyNewRows,true) != -1) {
				if(!this._confirmAction()) return false;
			}
		}
		var ele = ''
		for(var i = 0; i < this._newRowsInGrid; i++) {
			ele = this.gridId + '.R-' + (i+1);
			$(ele).style.display = 'none';
		}
	},

	showNewRecordRows: function () {
		var countRowsInEditMode = 0;
		for(var i = 1; i <= this._rowsInGrid; i++) {
			if(this._editModeRows[i-1]) countRowsInEditMode++;
		}
		if(this._executeEvent('canNewRowsShow',{rowsInEditMode: countRowsInEditMode}) == false) return false;

		var ele = ''
		for(var i = 0; i < this._newRowsInGrid; i++) {
			ele = this.gridId + '.R-' + (i+1);
			$(ele).style.display = '';
		}

		this._executeEvent('onNewRowsShow',{});
	},

	toggleNewRecordRows: function () {
		var ele =  this.gridId + '.R-1';
		var pEle = $(ele);
		if(pEle.style.display == 'none') {
			this.showNewRecordRows();
		} else {
			this.hideNewRecordRows();
		}
	},

	toggleEmbeddedSearchPartRow: function() {
		if(this.embedSearchPartStyle == 's') {
			var e = $(this.gridId + '.EMBEDDED_FREEFORM_SEARCH');
			if(this.animateSearchPart != '') {
				this._embeddedSearchIsOpen = $if(e.style.display == '',false,true);
				A5.anim.toggle(e,this.animateSearchPart);
			} else {
				if(e.style.display == '') e.style.display = 'none';
				else e.style.display = '';
				this._embeddedSearchIsOpen = $if(e.style.display == '',true,false);
			}
		} else {
			var e = $(this.gridId + '.SEARCH_PART.FORM');
			if(e.style.display == '') {
				e.style.display = 'none';
			} else {
				e.style.display = '';
			}
			this._embeddedSearchIsOpen = $if(e.style.display == '',true,false);
		}

	},




	toggleVisibility: function(part) {

			part = part.toUpperCase();
			if(part=='SEARCH_PART') {
				var titleH = $(this.gridId + '.SEARCH_PART.TITLE.HIDDEN');
				var titleS = $(this.gridId + '.SEARCH_PART.TITLE.SHOWN');
				var cont = $(this.gridId + '.SEARCH_PART.FORM_CONTAINER_DIV');

				var setting = '';
				if(titleH.style.display == 'none') {
					titleH.style.display = '';
					titleS.style.display = 'none';
					if(this.animateSearchPart!='') A5.anim.toggle(cont,this.animateSearchPart,'hide');
					else cont.style.display = 'none';
				} else {
					titleH.style.display = 'none';
					titleS.style.display = '';
					if(this.animateSearchPart!='') A5.anim.toggle(cont,this.animateSearchPart,'show');
					else cont.style.display = '';
					this.initializeAllSearchPartMaps();

				}

				/*
				if(this.animateSearchPart) {
					if(this.animateSearchPart != '') {
						A5.anim.toggle(cont,this.animateSearchPart);
					} else {
						cont.style.display = setting;
					}
				}
				*/

			}
	},

	quickSearch: function(searchFor) {

		/*Executes a quick search*/

		if(!this._executeEvent('canQuickSearch',{})) return false;

		if(searchFor.constructor == Array) searchFor = searchFor.join('\n');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'quickSearch'})
		this._submitLow('QuickSearch',this.gridId,this.ajaxURL,'__quickSearch=' + urlencode(searchFor) + '&__dvWindow=' + this._detailViewWindowState );
		return false;
	},


	quickSearchClear: function() {
		this.quickSearch('');

	},



	setRowsPerPage: function(rows) {
		if(!this._executeEvent('canSetRowsPerPage',{})) return false;
		if(!this._confirmAction()) return false;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'setRowsPerPage'})
		this._submitLow('SetRowsPerPage',this.gridId,this.ajaxURL,'__rowsPerPage=' + rows);
		return false;
	},



	gridFilterSet: function(filterExpression, orderExpression, filterParameters) {
		/*Set a user filter on the Grid using automation
		Example: to set the filter, but not order .gridFilterSet('city="boston",null,parameters)
		*/
		filterExpression = $if(filterExpression==undefined,'Null',filterExpression);
		orderExpression = $if(orderExpression==undefined,'Null',orderExpression);
		filterParameters = $if(filterParameters==undefined,'Null',filterParameters);
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'setGridFilter'})
		this._submitLow('SetGridFilter',this.gridId,this.ajaxURL,'__filterExpression=' + urlencode(filterExpression) +'&__orderExpression='+urlencode(orderExpression) +'&__filterParameters='+urlencode(filterParameters));
		return false;


	},

	gridFilterRemove: function() {
		/*Remove a previously set user filter on the Grid using automation*/
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'removeGridFilter'})
		this._submitLow('RemoveGridFilter',this.gridId,this.ajaxURL,'');
				return false;


	},

	gridBaseFilterSet: function(filterExpression, orderExpression, filterParameters) {
		/*This replaces the filter that was set in the Query String.
	          User searches are additive to this query.
	          I.e. this query is like a base query (in addition to the base query defined in the Grid itself)

	          NOT YET IMPLEMENTED - not sure if it is a good idea. maybe should add a
	          4th parameter that says that the filterExpression is encrypted.
		*/

		filterExpression = $if(filterExpression==undefined,'Null',filterExpression);
		orderExpression = $if(orderExpression==undefined,'Null',orderExpression);
		filterParameters = $if(filterParameters==undefined,'Null',filterParameters);
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'setGridBaseFilter'})
		this._submitLow('SetGridBaseFilter',this.gridId,this.ajaxURL,'__filterExpression=' + urlencode(filterExpression) +'&__orderExpression='+urlencode(orderExpression) +'&__filterParameters='+urlencode(filterParameters));
				return false;

	},



	gridLink: function(linkDefinition)	{
		/*Set a Link on the Grid using automation.
		Example: .gridLink('firstname(C:sam),lastname(C:jones)');
		*/
		var data = '';
		data = '__LinkDefinition=' + urlencode(linkDefinition);

		var filterExpression = 'Null';
		if(typeof arguments[1] != 'undefined') filterExpression = arguments[1];
		var orderExpression = 'Null';
		if(typeof arguments[2] != 'undefined') orderExpression = arguments[2];

		data = data + '&__filterExpression=' + urlencode(filterExpression);
		data = data + '&__orderExpression='+ urlencode(orderExpression);
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'setGridLink'})
		this._submitLow('SetGridLink',this.gridId,this.ajaxURL,data);
		return false;
		},

	gridUnlink: function()	{
			var data = '';
			var filterExpression = 'Null';
			if(typeof arguments[0] != 'undefined') filterExpression = arguments[0];
			var orderExpression = 'Null';
			if(typeof arguments[1] != 'undefined') orderExpression = arguments[1];

			data = data + '__filterEpxression=' + urlencode(filterExpression);
			data = data + '&__orderExpression='+ urlencode(orderExpression);
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'removeGridLink'})
			this._submitLow('RemoveGridLink',this.gridId,this.ajaxURL,data);
					return false;

		},

	fetchMoreRecords: function() {
		if(!this._hasMoreRecords) return false;
		var data = '__rowsInGrid=' + this._rowsInGrid;
		this._executeEvent('beforeFetchMoreRecords',{ajaxEvent: 'fetchMoreRecords'})
		var ele = $(this.gridId +'.FETCHMOREBTN');
		if(ele) ele.innerHTML = '<img src="'+this.waitIconSmall+'" />'
		this.pageNavigate('next-morerecords','G',data);
	},

	fetchExplicitRecord: function(pk) {
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'fetchExplicitRecord'})
		var data = '__pk=' + pk;
		data = data + '&__rowsInGrid=' + this._rowsInGrid;
		this.ajaxCallback('G','none','__a5systemFetchExplicitRecord','',data);

	},

	_registerLinkedGrid: function(lcsName,index,name) {
		if(typeof this._linkedGrids == 'undefined') this._linkedGrids = {};
		if(typeof this._linkedGrids[lcsName] == 'undefined') this._linkedGrids[lcsName] = {};
		//if(typeof this._linkedGrids[lcsName][index] == 'undefined')
		this._linkedGrids[lcsName][index] = name;

	},

	cascadingDropdown: function(rowNumber, value,childControls,part,thisControl) {

		var data = '';
		data = data + '__dropdownValue=' + urlencode(value);
		data = data + '&__childControls=' + urlencode(childControls);
		data = data + '&__thisControl=' + urlencode(thisControl);
		data = data + '&__part=' + urlencode(part);
		//when a grid was being run as a lookup grid, __part was getting overwritten with the wrong value
		data = data + '&__part2=' + urlencode(part);
		data = data + '&_rowNumber=' + urlencode(rowNumber);


		var formData = '';
		if(part=='G') {
			var regionId = this.gridId  + '.R' + rowNumber;
			formData = this._harvestGrid(regionId);
			}
		if(part=='D') {
			formData = A5.form.harvest(this.gridId +'.DETAILVIEW_PART.FORM',true,true);
		}

		if(part=='S') {
			formData = A5.form.harvest(this.gridId +'.SEARCH_PART.FORM',true,true);
			}

		if(formData != '') data = formData + '&' + data
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'cascadingDropdown'})
		this._submitLow('CascadingDropdown',this.gridId,this.ajaxURL,data);
					return false;
	},

	_getEditState: function(part,rowNum) {
		//for edit on demand, tell if row state is current edit or view
		var mode = '';

		if(part == 'S') return 'edit';

		if(part == 'D') {
			mode = this.detailViewEditMode;
			if(mode == 'on') return 'edit';
			if(mode == '') return 'view';
			if(mode == 'dvod') {
				if(typeof this._dvEditingMode == 'undefined') return 'view';
				else return this._dvEditingMode;
			}
		} else {
			mode = this.rowEditMode;
			if(mode == 'all') return 'edit';
			if(mode == '') return 'view';
			if(mode == 'rod' || mode == 'rod-s') {
				if(this._editModeRows[rowNum-1]) return 'edit';
				else return 'view';
			}

		}

	},



	_getRowKey: function(keyIndex) {
		if(typeof this._keys == 'undefined') return '';

		if(this._keys[keyIndex-1]) {
			var key = this._keys[keyIndex-1];
			var prefix = typeof arguments[1] != 'undefined' ? arguments[1] : 'KEYS';
			var data = new Array() ;
			if(key.constructor == Array) {
				var key_i = '';
				for(var i = 0;i < key.length; i++) {
					key_i = key[i];

					if(this._embeddedMode) {
						//
						if(key_i == '') key_i = '__nullvalue__';
					}
					//alert(this._embeddedMode + ' - ' + key_i);

					data.push(A5.ajax.buildURLParam(prefix + '.R'+keyIndex+'[]',key_i));
				}
			} else {
				data.push(A5.ajax.buildURLParam(prefix + '.R'+keyIndex+'[]',key));
			}

			return data.join('&');

		} else {
			return '';
		}
	},

	_setCheckedRow: function(rowNum,cvalue) {
		this._executeEvent('onGridRowCheck',{ rowNumber: rowNum, checkboxValue: cvalue })
		if(this.checkBoxSelector != 'multiplePage') return false;
		var key = this._keys[rowNum-1];
		var keystr = key.toString();
		if(cvalue == true) {
			for(var i=0; i < this._checkedRowKeys.length; i++) {
				if(this._checkedRowKeys[i].toString() == keystr) return false;
			}
			this._checkedRowKeys.push(key);
		} else {
			for(var i= this._checkedRowKeys.length -1; i >= 0 ; i--) {
				if(this._checkedRowKeys[i].toString() == keystr) {
					this._checkedRowKeys.splice(i,1);
					return false;
				}
			}
		}
	},


	_genericLinkedContentHandler: function(gridNumber,isLinkedContentSection, linkedContentName) {

		var selectedRow = this._selectedRow;

		var _gridRowNumber = 'Null';
		if(typeof arguments[3] != 'undefined') {
			//this argument is passed in in the case where the linked content is embedded into a Grid field
			_gridRowNumber = arguments[3];
			selectedRow = parseInt(_gridRowNumber);
		}



		var rowId = '' + selectedRow;
		var rowNum = selectedRow;
		var _hasParentRow = '';
		if(selectedRow > this._rowsInGrid || selectedRow < 0) _hasParentRow = 'true';
		else _hasParentRow = 'false';

		var callbackData = '_gridNumber='+gridNumber +'&_isLcs=' + isLinkedContentSection + '&_lcsName=' + linkedContentName;
		callbackData = callbackData + '&_selectedRow=' + selectedRow +'&_hasParentRow=' + _hasParentRow;
		this.ajaxCallback('G',selectedRow,'__a5systemLinkedContentHandler','',callbackData);
	},


openLookup: function(part,rowNum,fieldName) {

		if(!this._executeEvent('canOpenLookup',{})) return false;
		var windowAttributesFirst = '';
		var windowAttributesSecond = '';
		if(typeof arguments[3] != 'undefined') windowAttributesFirst = arguments[3];
		if(typeof arguments[4] != 'undefined') windowAttributesSecond = arguments[4];

		var tempObj =  windowAttributesSecond.split(':');
		if(tempObj[0] == 'element') windowAttributesSecond = $(tempObj[1]);

	var openLW = this._openLookupWindows
		this._lookupRow = rowNum
		var lookupWindowId = this.gridId + '.GRID.LOOKUPWINDOW.' + fieldName;
		if(part=='DV') {
			openLW = this._openDVLookupWindows;
			lookupWindowId = this.gridId + '.DV.LOOKUPWINDOW.' + fieldName;
		}


		var data = '_part=' + part +'&_rowNumber='+rowNum +'&_field=' +fieldName;
		data = data+this._getData(part,rowNum,false);
		var eleCont = this.gridId + '_LOOKUP_'+fieldName+'.GRID_PART.FORM_CONTAINER_DIV'
		//if(part == 'DV') eleCont = this.gridId + '_LOOKUP_'+fieldName+'.DETAILVIEW_PART.FORM_CONTAINER_DIV'

		var lookupWorkingHTML = this.lookupFieldsWorkingMessages[fieldName];
		if(typeof lookupWorkingHTML == 'undefined' || lookupWorkingHTML == '') lookupWorkingHTML = '<div style="width: 4in; height: 3in"><img src="CSS/A5System/Images/wait.gif" /> Working...</div>';

		var indxMustResetFilter = $u.a.find(this.lookupFieldsResetFilter,fieldName);
		var flagShowAllAfterSelect = false;
		if(indxMustResetFilter > -1) flagShowAllAfterSelect = true;

		//has the lookup window been instantiated?
		var indx = $u.a.find(openLW,fieldName);
		if(indx == -1) {
			//lookup window has not been instantiated
			var eleTemp = this.gridId + '.GRID.LOOKUPWINDOW.' + fieldName;
			if(part == 'DV') eleTemp = this.gridId + '.DV.LOOKUPWINDOW.' + fieldName;
			$(eleTemp).innerHTML = lookupWorkingHTML;
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'showLookupGrid'})
			this._submitLow('showLookupGrid',this.gridId,this.ajaxURL,data);
		} else {
			//lookup window has been instantiated - send callback to refresh window
			//must filter be reset for this lookup field?
			//if field has has a dynamicFilter, then Yes (must refresh Grid)
			//if field does not have a dynamicFilter, and field is in lookupFieldResetFilter, then Yes (must refresh Grid)
			var indxDynFilter = $u.a.find(this.lookupDynamicFilters,fieldName);
			if(indxDynFilter != -1) {
				$(eleCont).innerHTML = lookupWorkingHTML;
				//need to send back stateInfo which has the gridCacheId in it
				var stateInfo2 = window[this.gridId + '_LOOKUP_'+fieldName+'_GridObj'].getStateInfo();
				if(stateInfo2 != '') data = data + '&' + stateInfo2;
				window[this.gridId + '_LOOKUP_'+fieldName+'_GridObj'].refreshLookupGrid(data);
			}
		}

		if(indx == -1) 	openLW.push(fieldName);
		$(lookupWindowId).style.display = 'block';
		if(part != 'DV') this.setSelectedRow(rowNum);
		var indx = $u.a.find(this.dropDownLookupWindows,fieldName);

		if(indx == -1) {

			if(windowAttributesFirst == '') {
				this._floatingLookupWindow[fieldName].show();
			} else {
				this._floatingLookupWindow[fieldName].show(windowAttributesFirst,windowAttributesSecond);
			}
		} else {
			if(part == 'DV') var ele = $(this.gridId + '.D.V.R1.' + fieldName);
			else var ele = $(this.gridId + '.V.R' + rowNum + '.' + fieldName);
			this._floatingLookupWindow[fieldName].show('dropdown',ele);
		}
		return false;
	},



synchronizeGrid: function(go) {

		var arr = new Array();
		var flagRunningInWindow = true;
		if(typeof go.runningInWindow != 'undefined') flagRunningInWindow = go.runningInWindow;

		if(typeof go.linkedContentSectionName == 'undefined') go.linkedContentSectionName = '';

		if(go.localArguments == undefined) go.localArguments = '';
		if(go.parameterBucket == undefined) go.parameterBucket = '';
		if(go.argumentValueBucket == undefined) go.argumentValueBucket = '';

		if(typeof go._noParentRecord == 'undefined') go._noParentRecord = false;

		if(go._gridCurrentFilter == undefined) go._gridCurrentFilter = '';
		if(go._gridCurrentOrder == undefined) go._gridCurrentOrder = '';
		if(go._gridCurrentArguments == undefined) go._gridCurrentArguments = '';
		if(go._gridCurrentDBType == undefined) go._gridCurrentDBType = '';


		arr.push('__vp__fn=GR');
		arr.push('__vp__path=' + go.a5_default_path );
		arr.push(A5.ajax.buildURLParam('__vp__gridName',go.gridName));
		arr.push('__vp__div=' + go.gridDiv);
		arr.push('__vp__alias=' + go.alias);
		var flags = go.flagTimer + go.flagQueryEcho + go.flagDebugMode;
		arr.push('__vp__flags=' + flags);
		arr.push(A5.ajax.buildURLParam('__vp__userFilter',go.userFilter));
		arr.push(A5.ajax.buildURLParam('__vp__userOrder',go.userOrder));
		arr.push(A5.ajax.buildURLParam('__vp__baseFilter',go.baseFilter));
		arr.push(A5.ajax.buildURLParam('__vp__linkDefinition',go.linkDefinition));
		arr.push(A5.ajax.buildURLParam('__vp__arguments',go.arguments));
		arr.push(A5.ajax.buildURLParam('__vp__localArguments',go.localArguments));
		arr.push(A5.ajax.buildURLParam('__vp__parameterBucket',go.parameterBucket));
		arr.push(A5.ajax.buildURLParam('__vp__argumentValueBucket',go.argumentValueBucket));
		arr.push(A5.ajax.buildURLParam('__vp__placeHolderValues',go.placeHolderValues));

		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentFilter',go._gridCurrentFilter));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentOrder',go._gridCurrentOrder));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentArguments',go._gridCurrentArguments));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentDBType',go._gridCurrentDBType));
		arr.push(A5.ajax.buildURLParam('__vp___LCSName',go.linkedContentSectionName));
		arr.push(A5.ajax.buildURLParam('__vp___NoParentRecord',''+go._noParentRecord));
		arr.push(A5.ajax.buildURLParam('__synchronizeGrid','true'));


		if(go.isLookupGrid == undefined) go.isLookupGrid = false;
		if(go.isLookupGrid) {
			arr.push(A5.ajax.buildURLParam('__vp__isLookupGrid','true'));

		}




		var params = arr.join('&');
		params = $u.s.tran(params,'\n','%0D%0A');

		var pageVars = String(window.location);
		pageVars = pageVars.split('?');
		pageVars.shift();
		pageVars=pageVars.join('?');

		var data = pageVars;

		var formData = '';

		if(!go._noParentRecord) {
			if(go.sourceGridPart=='G') {
				var rowNumber = go.sourceGridRowNumber;
				var regionId = go.parentGridId + '.R' + rowNumber;
				formData = window[go.parentGridId + '_GridObj']._harvestGrid(regionId);
				}
			if(go.sourceGridPart=='D') {
				var rowNumber = 1;
				formData = A5.form.harvest(go.parentGridId +'.DETAILVIEW_PART.FORM',true,true);
			}

			if(go.sourceGridPart=='O') {
				var rowNumber = go.sourceGridRowNumber;
				formData = window[go.parentGridId + '_DlgObj']._harvestRow(rowNumber);

			}
		}

		var otherData = '_rowNumber=' +go.sourceGridRowNumber + '&__gridPart=' +go.sourceGridPart +'&__parentGridID=' + go.parentGridId  +'&__windowName=' + go.windowName ;
		if(formData != '') {
			formData = formData + '&' + data + '&' + otherData;
		} else {
			formData = otherData;
		}

		if(formData != '') data = formData + '&' + data

		data = params + '&' + data;
		data = data + '&__runningInWindow=' + flagRunningInWindow;



		if(flagRunningInWindow) {

			//$(go.gridDiv).innerHTML = go.workingMessage;
			if($(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV')) $(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV').innerHTML = go.workingMessage;
			if($(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV')) $(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV').innerHTML = '';

			if(go.sourceGridPart=='O') {
				var currWindow = window[go.parentGridId + '_DlgObj'].getWindow(go.windowName);
			} else {
				var currWindow = window[go.parentGridId + '_GridObj'].getWindow(go.windowName);
			}

			if(typeof go.showWindowParameters != 'undefined' && typeof go.windowPositionArg1 == 'undefined') {
				var params = go.showWindowParameters.split('\'');
				go.windowPositionArg1 = params[1];
				go.windowPositionArg2 = params[3];
			}

			if(typeof go.windowPositionArg1 != 'undefined' ) currWindow.show(go.windowPositionArg1,go.windowPositionArg2);
			else currWindow.show('in-view');

		}



		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'synchronizeGrid'})
		this._submitLow('SynchronizeGridInWindow',this.gridId,this.ajaxURL,data);
		return false;


	},




	openChildGrid: function(go) {
		if(typeof go.setFocus == 'undefined') go.setFocus = 'true';
		if(typeof go.gridDiv == 'undefined') go.gridDiv = '';
		if(typeof go.centerFlags == 'undefined') go.centerFlags = '';
		if(typeof go.gridName == 'undefined') go.gridName = '';
		if(typeof go.alias == 'undefined') go.alias = go.gridName;
		if(typeof go.guid == 'undefined') go.guid = A5.ajax.guid() ;
		if(typeof go.submitCurrentFieldValues == 'undefined') go.submitCurrentFieldValues = false;
		if(typeof go.sourceGridPart == 'undefined') go.sourceGridPart = '';
		if(typeof go.sourceGridRowNumber == 'undefined') go.sourceGridRowNumber = 0;
		if(typeof go._gridCurrentFilter == 'undefined') go._gridCurrentFilter = '';
		if(typeof go._gridCurrentOrder == 'undefined') go._gridCurrentOrder = '';
		if(typeof go._gridCurrentArguments == 'undefined') go._gridCurrentArguments = '';
		if(typeof go._gridCurrentDBType == 'undefined') go._gridCurrentDBType = '';
		if(typeof go._thisGridAlias == 'undefined') go._thisGridAlias = '';
		if(typeof go.linkedContentSectionName == 'undefined') go.linkedContentSectionName = '';
		if(typeof go._thisGridGUID == 'undefined') go._thisGridGUID = '__unknown__';
		if(typeof go._noParentRecord == 'undefined') go._noParentRecord = false;
		if(typeof go.showWindowParameters == 'undefined') go.showWindowParameters = '';



		if(go.gridDiv == '') {
			alert('Fatal Error. DIV to display Grid Component was not defined.');
			return false;
			}

		if(go.gridName == '') {
			go.gridName = $(go.gridDiv).innerHTML = 'Fatal error: Grid to display was not specified.';
			return false;
			}

		if(go.alias == '') {
			$(go.reportDiv).innerHTML = 'Fatal error: Grid alias was not specified.';
			return false;
			}

		if(go.workingMessage == undefined) go.workingMessage = '<img src="CSS/A5System/Images/wait.gif" /> Working...';
		if(go.flagTimer == undefined) go.flagTimer = 'F';
		if(go.flagQueryEcho == undefined) go.flagQueryEcho = 'F';
		if(go.flagDebugMode == undefined) go.flagDebugMode = 'F';
		if(go.userFilter == undefined) go.userFilter = '';
		if(go.baseFilter == undefined) go.baseFilter = '';
		if(go.linkDefinition == undefined) go.linkDefinition = '';
		if(go.arguments == undefined) go.arguments = '';
		if(go.localArguments == undefined) go.localArguments = '';
		if(go.parameterBucket == undefined) go.parameterBucket = '';
		if(go.argumentValueBucket == undefined) go.argumentValueBucket = '';
		if(go.placeHolderValues == undefined) go.placeHolderValues = '';
		if(go.userOrder == undefined) go.userOrder = '';
		if(go.overrideSettings == undefined) go.overrideSettings = '';
		if(go.linkDefinition == undefined) go.linkDefinition = '';


		var flags = go.flagTimer + go.flagQueryEcho + go.flagDebugMode;

		var arr = new Array();
		arr.push('__vp__fn=GR');
		arr.push('__vp__div=' + go.gridDiv);
		arr.push('__vp__centerFlags=' + go.centerFlags);
		arr.push(A5.ajax.buildURLParam('__vp__gridName',go.gridName));
		arr.push('__vp__path=' + go.a5_default_path );
		arr.push('__vp__guid=' + go.guid );
		arr.push('__vp__alias=' + go.alias);
		arr.push('__vp__flags=' + flags);

		arr.push(A5.ajax.buildURLParam('__vp__userFilter',go.userFilter));
		arr.push(A5.ajax.buildURLParam('__vp__userOrder',go.userOrder));
		arr.push(A5.ajax.buildURLParam('__vp__baseFilter',go.baseFilter));
		arr.push(A5.ajax.buildURLParam('__vp__linkDefinition',go.linkDefinition));
		arr.push(A5.ajax.buildURLParam('__vp__override',go.overrideSettings));
		arr.push(A5.ajax.buildURLParam('__vp__arguments',go.arguments));
		arr.push(A5.ajax.buildURLParam('__vp__localArguments',go.localArguments));
		arr.push(A5.ajax.buildURLParam('__vp__parameterBucket',go.parameterBucket));
		arr.push(A5.ajax.buildURLParam('__vp__argumentValueBucket',go.argumentValueBucket));
		arr.push(A5.ajax.buildURLParam('__vp__placeHolderValues',go.placeHolderValues));
		arr.push(A5.ajax.buildURLParam('__vp__setFocus',go.setFocus));

		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentFilter',go._gridCurrentFilter));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentOrder',go._gridCurrentOrder));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentArguments',go._gridCurrentArguments));
		arr.push(A5.ajax.buildURLParam('__vp___gridCurrentDBType',go._gridCurrentDBType));
		arr.push(A5.ajax.buildURLParam('__vp___thisGridAlias',go._thisGridAlias));
		arr.push(A5.ajax.buildURLParam('__vp___thisGridGUID',go._thisGridGUID));
		arr.push(A5.ajax.buildURLParam('__vp___LCSName',go.linkedContentSectionName));
		arr.push(A5.ajax.buildURLParam('__vp___NoParentRecord','' +go._noParentRecord));
		arr.push(A5.ajax.buildURLParam('__openChildGrid','true'));
		arr.push(A5.ajax.buildURLParam('__vp___showWindowParameters',go.showWindowParameters));

		var params = arr.join('&');


		params = $u.s.tran(params,'\n','%0D%0A');
		var fakeData = params

		var page = '&' + params + '._a5_ajax';

		var pageVars = String(window.location);
		pageVars = pageVars.split('?');
		pageVars.shift();
		pageVars=pageVars.join('?');

		//var data = '';
		var data = pageVars;

		//Submit form data if necessary to that filter and link can be based on edited data in current record



		if(go.submitCurrentFieldValues == true) {
			var formData = '';
			if(!go._noParentRecord) {
				if(go.sourceGridPart=='G') {
					var rowNumber = go.sourceGridRowNumber;
					var regionId = this.gridId  + '.R' + rowNumber;
					formData = this._harvestGrid(regionId);
					}
				if(go.sourceGridPart=='D') {
					var rowNumber = 1;
					formData = A5.form.harvest(this.gridId +'.DETAILVIEW_PART.FORM',true,true);
				}
			}

			var otherData = '_rowNumber=' +rowNumber + '&__gridPart=' +go.sourceGridPart + '&__useCurrentFieldValues=Yes';
			if(formData != '') {
				formData = formData + '&' + data + '&' + otherData;
			} else {
				formData = otherData;
			}

			if(formData != '') data = formData + '&' + data
		}

		data = data + '&' + fakeData;
		var page = '_dummyPage._a5_ajax';
		//tell the virtual page what the page type is - gr
		var page = '&__guid=' + go.guid +  '&__fn=gr' +  '._a5_ajax';

		page = '__a5runGrid.a5w';
		data = data + '&__preprocessInternal=true';
		$(go.gridDiv).innerHTML = go.workingMessage;
		data = A5.ajax.addParamRequiredData(data);
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'openChildGrid'})


		var flagIIS = false;
		var flagWorkingPreview = false;
		var flagSimulateIIS = false;
		if(typeof A5.__flagIIS != 'undefined') flagIIS = A5.__flagIIS;
		if(typeof A5.__flagWorkingPreview != 'undefined') flagWorkingPreview = A5.__flagWorkingPreview;
		if(typeof A5.__flagSimulateIIS != 'undefined') flagSimulateIIS = A5.__flagSimulateIIS;

		if(flagIIS) {
			//rewrite the url for IIS
			page = go.gridName + '.a5wcmp';
			data = '__virtualPage=__a5RunGrid.a5w&' + data;
		}

		if(flagSimulateIIS && !flagWorkingPreview) {
			page = go.gridName + '.a5wcmp?__virtualPage=' + page;
		}


		new $a.simple(page,{data:data, method:'post', handleGeneric:true});

	},


	refreshLookupGrid: function(data) {
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'refreshLookupGrid'})
		this._submitLow('refreshLookupGrid',this.gridId,this.ajaxURL,data);
	},

	lookupGridSelectRow: function(parentGridId,fieldName, part, rowNum) {
		if(!this._executeEvent('canLookupGridSelectRow',{})) return false;

		if(part!='O') {
			var lookupWindowId = parentGridId + '.GRID.LOOKUPWINDOW.' + fieldName;
			if(part=='DV') {
				lookupWindowId = parentGridId + '.DV.LOOKUPWINDOW.' + fieldName;
			}
			var eleW = $(lookupWindowId);
			if(eleW) eleW.style.display = 'none';

		};
		var data = new Array();
		var missingFld = new Array();
		var currField = '';
		for(var i=0;i < this.lookupGridFieldsToReturn.length; i++) {
			currField = this.lookupGridFieldsToReturn[i];
			for(var j = 0; j < this.gridColumnInfo.length; j++) {
				if(this.gridColumnInfo[j].name == this.lookupGridFieldsToReturn[i]) {
					if(this.gridColumnInfo[j].type.substr(0,4) == 'link' && this._originalValues[rowNum-1][j].constructor == Array) data.push(this._originalValues[rowNum-1][j][0]);
					else  data.push(this._originalValues[rowNum-1][j]);
					currField = '';
					break;
				}
			}
			if(currField != '') missingFld.push(currField);
		}

		if(missingFld.length != 0) {
			alert('Error: Lookup grid does not contain all of the mapped fillin fields. The following fields are in the Lookup Map, but are not in the Lookup Grid\n' + missingFld.join(', '));
			return false;
		}



		if(part=='O') {
			window[parentGridId+'_DlgObj'].fillinLookupValues(data, fieldName, part, this.gridId);
		} else {
			window[parentGridId+'_GridObj'].fillinLookupValues(data, fieldName, part, this.gridId);
		}
	},

	fillinLookupValues: function(data, fieldName, part, lookupGridId) {
		this._floatingLookupWindow[fieldName].hide();
		if(part=='G') {
			this._populateDirtyRow(this._lookupRow, data, this.lookupFieldsToFillin[fieldName]);
		} else if(part=='DV') {
			this._populateDirtyDetailView(this._lookupRow,data,this.lookupFieldsToFillin[fieldName]);

		}
		if(window[lookupGridId+'_GridObj'].flagResetFilterAfterSelect) {
			window[lookupGridId+'_GridObj'].showAll();
		}
		this._executeEvent('afterLookupGridFillinValues',{});
	},

	detailView: function(rowNumber) {
		clearTimeout(this._focusRowTO);
		if(!this._executeEvent('canDetailViewOpen',{rowNumber: rowNumber})) return false;
		if(!this._confirmAction()) return false;
		this._detailViewWindowState = 'open';
		var windowAttributesFirst = this._detailViewWindowPos1;
		var windowAttributesSecond = this._detailViewWindowPos2;
		windowAttributesSecond = windowAttributesSecond.replace(/___rowNumber___/g,''+rowNumber);
		windowAttributesSecond = windowAttributesSecond.replace(/___this___/g,this.gridId + '.R'+rowNumber);
		var tempObj =  windowAttributesSecond.split(':');
		if(tempObj[0] == 'element') windowAttributesSecond = $(tempObj[1]);

		var executeAfterDetailViewEvent = false;

		if(this.detailViewDataPreFetch == false) {
			$e.removeGroup(this.gridId + '.DETAILVIEW_PART.FORMEvents');
			var keys = this._getRowKey(rowNumber);
			var data = '_rowNumber='+rowNumber +'&' + keys;
			if(windowAttributesFirst != '') {

				if(tempObj[0] == 'element') windowAttributesSecond = windowAttributesSecond.id;
				data = '_w1=' + windowAttributesFirst + '&_w2=' + windowAttributesSecond + '&' + data;
			}
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'showDetailView'})
			this._submitLow('ShowDetailView',this.gridId,this.ajaxURL,data);
		} else {
			this.clearDetailViewGlobalError();
			this._detailViewRow = rowNumber;
			var data = new Array();
			for(var i = 0; i < this._originalDVValues[rowNumber -1 ].length; i++) {
				if(this._originalDVValues[rowNumber -1 ][i].constructor == Array) {
					data[i] = new Array();
					for(var j = 0; j < this._originalDVValues[rowNumber -1 ][i].length; j ++) {
						data[i][j] = this._originalDVValues[rowNumber -1 ][i][j];
					}
				} else data[i] = this._originalDVValues[rowNumber -1 ][i];
			}
			if(this.detailViewEditMode == 'dvod') {
				if(this._editModeRows[0]) {
					this.cancelEditDetailViewRecord();
				} else {
					this._populateDetailView(rowNumber, data, this._detailViewColNames,false,[],1,false);
					executeAfterDetailViewEvent = true;
				}
			} else {
				//this._populateDetailView(rowNumber, data, this._detailViewColNames,false,[],1,false);
				this._populateDetailView(rowNumber, data, this._detailViewColNames,false,[],0,false);
				executeAfterDetailViewEvent = true;
			}
			if(this._originalDVNullValues.length > 0 ) {
				this._localDVNullValues[0] = this._originalDVNullValues[rowNumber -1];
			}
			this.setSelectedRow(rowNumber,true);

			if(this.detailViewPosition == 'popup') {
				//alert(windowAttributesFirst + '-' + windowAttributesSecond.id);
				$(this.gridId + '.DETAILVIEW_PART.COMPLETE').style.display = 'block';
				if(windowAttributesFirst == '') {
					this._dvFloatingWindow.show();
				} else {
					this._dvFloatingWindow.show(windowAttributesFirst,windowAttributesSecond);
				}
			} else if(this.detailViewPosition == 'inline') {
				var eleDV = $(this.gridId + '.DETAILVIEW_PART.COMPLETE');
				eleDV.style.display = 'block';
				this._showInlineDetailView();
				eleDV.style.display = 'none';
				A5.u.element.show(eleDV,this.detailViewAnimation.show);

			} else {
				//$(this.gridId + '.DETAILVIEW_PART.COMPLETE').style.display = '';
				A5.u.element.show($(this.gridId + '.DETAILVIEW_PART.COMPLETE'),this.detailViewAnimation.show);
				if(this.detailViewScrollIntoView) {
					var dvId = this.gridId + '.DETAILVIEW_PART.COMPLETE'
					setTimeout(function() {
						var dvele = $(dvId);
						if(dvele)  dvele.style.display = 'block';
						$swto(dvele);
						},100);
				}
			}

			this._executeEvent('onDetailViewRender',{rowNumber: this._detailViewRow});
			//need to run ._setDetailViewControlsDisabledState() to cause combo box in editable DV that is 'edit on demand' to be disabled.
			this._setDetailViewControlsDisabledState();

		}

		if(this.detailViewPosition == 'page') {
			if(this.hideGridWhenDetailViewIsShown == true) {
				var ele = $(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV');
				ele.style.display = 'none';
				if(this.detailViewDataPreFetch == false) {
					var eleDV = $(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV');
					eleDV.innerHTML = '<img src="CSS/A5System/Images/wait.gif" />Working...';
				}
			}
		}
		if(executeAfterDetailViewEvent) this._executeEvent('afterDetailViewOpen',{rowNumber: rowNumber});
		//turn off gridKeywatches
		var classInst = this;
		setTimeout(function() {classInst._kw.off();},10);
		delete classInst;
		return false;
	},


	detailCancelNewRecord: function() {
		var nrEle =  $(this.gridId +'.DETAILVIEW_PART.NEWRECORDBUTTON');
		var cnrEle =  $(this.gridId +'.DETAILVIEW_PART.CANCELNEWRECORDBUTTON');
		if(this._detailViewOldRow > 0  && this._detailViewOldWindowState == 'open' ) {
				if(!this._confirmAction()) return false;
				this.detailView(this._detailViewOldRow);
		} else {
			//if you get here then the detail view was not open before going into the new record, so just close it
			this.closeDetailView();
		}
		nrEle.style.display = '';
		cnrEle.style.display = 'none';

		var mode = 'view';
		this._detailViewState = mode;
		this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': false, 'rowNumber': this._detailViewRow});

		if(this.detailViewEditMode == 'dvod') {
			this._cancelEditDetailViewRecordWithoutConfirmation(false);
		}
	},

	detailViewNewRecord: function() {
		if(!this._executeEvent('canDetailViewNewRecord',{})) return false;
		if(!this._confirmAction()) return false;
		this._detailViewOldRow = this._detailViewRow;
		this._detailViewOldWindowState = this._detailViewWindowState;
		this._detailViewWindowState = 'open';


		if(this.detailViewEditMode == 'dvod') {
			var ele = $(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV');
			this._detailViewHTMLCache = ele.innerHTML;
		}

		var data = '_rowsInGrid=' + this._rowsInGrid +'&_dvCurrentRow=' + this._detailViewRow;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'detailViewNewRecord'})
		this._submitLow('DetailViewNewRecord',this.gridId,this.ajaxURL,data);

		/*
		//Send this command back as part of the response, or else you get screen flicker
		if(this.detailViewPosition == 'popup') {
			$(this.gridId + '.DETAILVIEW_PART.COMPLETE').style.display = 'block';
			this._dvFloatingWindow.show();
		}
		*/

		if(this.detailViewPosition == 'page') {
			if(this.hideGridWhenDetailViewIsShown == true) {
				var ele = $(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV');
				ele.style.display = 'none';
				//don't condition on PreFetch mode since we always do a callback for the new record.
				//if(this.detailViewDataPreFetch == false) {
					var eleDV = $(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV');
					eleDV.innerHTML = '<img src="CSS/A5System/Images/wait.gif" />Working...';
				//}
			}
		}
		//this can get overwritten, so the same code is also added to the ajax callback
		if($(this.gridId+'.DVTOOLBAR_VIEWMODE')) $(this.gridId+'.DVTOOLBAR_VIEWMODE').style.display = 'none';
		if($(this.gridId+'.DVTOOLBAR_CHANGEMODE')) $(this.gridId+'.DVTOOLBAR_CHANGEMODE').style.display = 'none';
		if($(this.gridId+'.DVTOOLBAR_ENTERMODE')) $(this.gridId+'.DVTOOLBAR_ENTERMODE').style.display = '';

		var mode = 'enter';
		this._detailViewState = mode;
		this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': false, 'rowNumber': this._detailViewRow});



	},


	detailViewRefresh: function() {
		if(this._detailViewRow == -1) return false;
		var pkdata = this._getRowKey(this._detailViewRow);
		var regionId = this.gridId  + '.D.R1';
		var data = '';
		if(pkdata != '') data = data + '&' + pkdata;
		data = data + '&' + '_rowNumber=' + this._detailViewRow +'&_submitActionType=detailViewRefresh';
		var stateInfoID = this.gridId + '.STATEINFO';
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'detailViewRefresh'})
		//false at end means do not remove events, or else events such as onBlur that were added will be removed.
		this._submitLow('submit:all',this.gridId + '.DETAILVIEW_PART.FORM',this.ajaxURL,data,true,stateInfoID,'',false);
	},

	detailViewNextRecord: function() {

		if(this._detailViewRow == -1) {
			this.detailViewLastRecord();
			return false;
		}
		var nextRow = -1;
		for(var i = this._detailViewRow + 1; i <= this._rowsInGrid; i++) {
			if($(this.gridId +'.R' + i).style.display != 'none') {
				nextRow = i;
				break;
			}
		}


		var currentPageNumber = this.pageNumber;
		var currentRow = this._detailViewRow;
		var pagesInGrid = this.pagesInGrid;
		var rig = this._rowsInGrid;
		var arop = this.actualRowsOnPage;

		if((currentPageNumber == pagesInGrid) && (currentRow == rig)) {
			return false;
		} else {
			if(nextRow == -1 ) this.pageNavigate('next','DV');
			else this.detailView(nextRow);
		}
	},

	detailViewFirstRecord: function() {
		/*
		var nextRow = -1;
		for(var i = this._detailViewRow + 1; i <= this._rowsInGrid; i++) {
			if($(this.gridId +'.R' + i).style.display != 'none') {
				nextRow = i;
				break;
			}
		}
		if(nextRow == -1 ) this.pageNavigate('next');
		else this.detailView(nextRow);
		*/

		if(this.pageNumber == 1) {
			this.detailView(1);
		} else {
			this.pageNavigate('first','DV');
		}
	},


	detailViewPreviousRecord: function() {
		var nextRow = -1;
		for(var i = this._detailViewRow - 1; i > 0; i--) {
			if($(this.gridId +'.R' + i).style.display != 'none') {
				nextRow = i;
				break;
			}
		}
		if(nextRow == -1 ) {
			if(this.pageNumber ==1 && this._detailViewRow == 1) {
				//do nothing - you are already on the first logical record
				return false;
			} else {
				this.pageNavigate('prev-LastRecord','DV');
			}
		} else {
			this.detailView(nextRow);
		}
	},

	detailViewLastRecord: function() {
		if(this.pageNumber == this.pagesInGrid) {
			this.detailView(this.actualRowsOnPage);
		} else {
			this.pageNavigate('Last-LastRecord','DV');
		}
	},

	validateDetailView: function() {
		this.submitDetailView(false,true);
	},

	validateDetailViewField: function(fieldName) {
		this.submitDetailView(false,true,fieldName);
	},




	_resetDVFocus: function() {
		if(typeof this._dvFocusControl2	!= 'undefined') {
			var ele = $(this.gridId + '.D.V.R1.' + this._dvFocusControl2);
			if(ele) {
				try
				{
					if(typeof ele.focus != 'undefined') ele.focus();
					if(typeof ele.select != 'undefined') ele.select();
				}
				catch(err) {}
			}
		}
	},


	submitDetailView: function() {
		if(this._testAlreadySubmitting()) return false;

		if(this._detailViewIsDirty) {
			var validateMode = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			var fieldToValidate = typeof arguments[2] != 'undefined' ? arguments[2] : '';
			if(validateMode != true) {
				if(!this._executeEvent('canDetailViewSubmit',{rowNumber: this._detailViewRow})) return false;
			}

			var data = this._getRowKey(this._detailViewRow);
			data = data + $if(data != '','&','') + '_rowNumber='+this._detailViewRow ;
			var submitActionType = $if(arguments[0],'saveDetailViewAndEnter','saveDetailView');
			if(validateMode) {
				submitActionType = 'validateDetailView';
				if(fieldToValidate != '') {
					submitActionType = 'validateDetailViewField&__fieldToValidate=' + fieldToValidate;
				}
			}
			data =  data + '&_detailViewRecord='+this._detailViewRow +'&_rowsInGrid=' + this._rowsInGrid +'&_submitActionType='+submitActionType;
			data = data +'&__dvWindow=' + this._detailViewWindowState;


			if(this._localDVNullValues.length > 0) {
				var nullData = '&__Nulls_1='+this._localDVNullValues[0].toString();
				data = data + nullData;
			}
			var stateInfoID = this.gridId + '.STATEINFO';

			var submitActionType = $if(arguments[0],'submitAndEnterDetailView','submitDetailView');
			if(validateMode) submitActionType = 'validateDetailView';

			this._executeEvent('beforeAjaxCallback',{ajaxEvent: submitActionType})
			//if we are in validate mode, last argument is false, which means do not remove the events
			this._submitLow('submit:all',this.gridId + '.DETAILVIEW_PART.FORM',this.ajaxURL,data,true,stateInfoID,'',!validateMode)
		}
		return false;
	},

	checkedRowsAction: function(actionName) {
		var data = this.getCheckedRows();
		data = A5.ajax.buildURLParam('_checkboxAction',actionName) + '&' + data
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'checkedRowsAction'})
		A5.ajax.callback(this.ajaxURL,data);
	},


	getCheckedRows: function() {
		var data = new Array();
		var checkCount = 0;
		var checkedRows = $gvs(this.gridId + '.__ROWCHECKBOX');
		if(this.checkBoxSelector == 'multiplePage') {
			for(var i = 0; i < this._checkedRowKeys.length; i++) {
				data.push(A5.ajax.buildURLParam('checkedRows.key' + (i+1) + '[]',this._checkedRowKeys[i]));
				checkCount++;
			}
		} else if(this.checkBoxSelector == 'singlePage') {
			var key = '';
			for(var i = 0; i < checkedRows.length; i++) {
				if(typeof this._keys != 'undefined') {
					key = this._keys[Number(checkedRows[i]) -1]	;
					data.push(A5.ajax.buildURLParam('checkedRows.key' + (i+1) + '[]',key));
				}
				checkCount++;
			}
		}
		if(checkCount > 0) data.push(A5.ajax.buildURLParam('checkboxRows.rows[]',checkedRows));
		data.push(A5.ajax.buildURLParam('checkboxRows.countChecked',''+checkCount));
		data = data.join('&');

		return data;
	},


	resetDetailView: function() {
		var classInst = this;
		if(!this._executeEvent('canDetailViewCancelEdits',{rowNumber: this._detailViewRow})) return false;
		A5.msgBox.show(this.messages.t_undoEditsWarning,this.messages.undoEditsWarning,'OC',function(action) {
			if(action=='ok') {classInst._resetDetailViewWithoutConfirmation() };
		});
	},


	_resetDetailViewWithoutConfirmation: function() {
		if(this._detailViewIsDirty) {
			//A5.form.reset(this.gridId +'.DETAILVIEW_PART.FORM',true);
			if(this._detailViewRow < 0) {
				this._populateDetailView(-1,this._newDVValues,this._detailViewColNames);
			} else {
				if(this.detailViewDataPreFetch) {
					this._populateDetailView(this._detailViewRow,this._originalDVValues[this._detailViewRow -1],this._detailViewColNames);
				} else {
					//in non-prefecth mode, _originalDVValues[] has only one entry
					this._populateDetailView(1,this._originalDVValues[0],this._detailViewColNames);
				}
			}
			this.clearErrors();
			this.clearDetailViewGlobalError();
			var data = '';
			var eImg = '';
			for(var i=0;i<this.detailViewColumnInfo.length;i++) {
				if(this.detailViewColumnInfo[i].type == 'img,label') {
					eImg = $(this.gridId + '.D.V.R1.' + this.detailViewColumnInfo[i].name) ;
					if(eImg) eImg.value = '';
				}
				if(this.detailViewColumnInfo[i].type == 'select,label') {
					data = this._cascadingSelectChoices[this.gridId + '.D.V.R1.' + this.detailViewColumnInfo[i].name];
					if(data) {
						A5.form.populateSelect(	this.gridId + '.D.V.R1.' + this.detailViewColumnInfo[i].name, data.value, data.data, true);
					}
				}
			}
			this._executeEvent('afterDetailViewCancelEdits',{rowNumber: this._detailViewRow});
		}
		return false;
	},

	setRowCountMessage: function(action,val) {
		var eleT = $(this.gridId + '.RECORDCOUNT.TOP');
		var eleB = $(this.gridId + '.RECORDCOUNT.BOTTOM');
		var currentNumber = '';
		if(eleT && eleB) {
			currentNumber = $gvs(eleT);
		} else if(eleT) {
			currentNumber = $gvs(eleT);
		} else if(eleB) {
			currentNumber = $gvs(eleB);
		}
		if(currentNumber == '') return false;
		var newNumber = '';
		if(action=='I') {
			newNumber = parseInt(currentNumber) + 1;
		} else if(action=='D') {
			newNumber = parseInt(currentNumber) - 1;
		} else if(action=='R') {
			newNumber = val;
		}

		if(eleT) $svs(eleT,newNumber);
		if(eleB) $svs(eleB,newNumber);



	},

	deleteDetailViewRecord: function() {
		if(this._detailViewState == 'enter') return false;
		if(!this._executeEvent('canDetailViewDeleteRecord',{rowNumber: this._detailViewRow})) return false;
		var classInst = this;
		A5.msgBox.show(this.messages.t_deleteRow,this.messages.deleteRow,'OC',function(action) {
			if(action=='ok') {
				classInst._deleteDetailViewRecordWithoutConfirmation()
			};
		} );
	},

	_deleteDetailViewRecordWithoutConfirmation: function() {
		var rowNumber = this._detailViewRow
		var data = this._getRowKey(this._detailViewRow);
		data = data + $if(data != '','&','') + '_rowNumber='+this._detailViewRow ;
		data = data + '&_submitActionType=DeleteDetailViewRecord';
		var stateInfoID = this.gridId + '.STATEINFO';
		if(this.detailViewEditMode == 'dvod') {
			var oldData = new Array();

			if(this.detailViewDataPreFetch) {
				oldData = this._originalDVValues[rowNumber-1];
			} else {
				oldData = this._originalDVValues[0];
			}
			var tempData = new Array();
			for(var i = 0; i < oldData.length; i++) {
				tempData.push(A5.ajax.buildURLParam('old.V.R1.' + this.detailViewColumnInfo[i].name,oldData[i]));
			}
			tempData = tempData.join('&');
			data = data +'&' + tempData;
			var stateInfo = $(stateInfoID).value ? $(stateInfoID).value : '';
			if(stateInfo != '') data = data + '&' + stateInfo;
			data = '__FormAction=submit&__FormID=' + this.gridId + '.DETAILVIEW_PART.FORM&' + data;
			data = $u.s.tran(data,'\n','%0D%0A');
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'deleteDetailViewRecord'})
			A5.ajax.callback(this.ajaxURL,data);
		} else {
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'deleteDetailViewRecord'})
			this._submitLow('submit:all',this.gridId + '.DETAILVIEW_PART.FORM',this.ajaxURL,data,true,stateInfoID)
		}
	},

	setDetailViewGlobalError: function(txt) {
		if($(this.gridId + '.GLOBALERRORS')) {
			$(this.gridId + '.GLOBALERRORS').innerHTML = txt;
			$(this.gridId + '.GLOBALERRORS').style.display = 'block';
			}

		if(this.rowErrors.showMessageBox == true) {
			var msgTxt = txt;
			msgTxt = '<div style="' + this.rowErrors.style + '">' + msgTxt + '</div>';
			A5.msgBox.show(this.rowErrors.messageBoxTitle,msgTxt,'O');
		}




	},

	clearDetailViewGlobalError: function() {
		if($(this.gridId + '.GLOBALERRORS')) {
			$(this.gridId + '.GLOBALERRORS').innerHTML = '';
			$(this.gridId + '.GLOBALERRORS').style.display = 'none';
			}
		var ele = '';
		ele = $(this.gridId + 'D._HIDDENA5DATA.R1');
		if(ele) ele.value = '';
	},

	closeParentContainer: function() {
		var eleWindow = this.gridId +'.GRID_PART.FORM_CONTAINER_DIV';
		closeParentA5Window(eleWindow);
		if(typeof tbiObj != 'undefined') {
			for(var i=0; i < tbiObj._tbObj._panes.length; i++) {
				if(tbiObj._tbObj._panes[i].name.toUpperCase() == this.gridId) {
					tbiObj._tbObj.remove(tbiObj._tbObj._panes[i]._id);
					break;
				}
			}
		}
	},


	closeCurrentTabbedUIPane: function() {
		if(typeof tbiObj != 'undefined') {
			var idx = tbiObj._tbObj._curTabIndx;
			tbiObj._tbObj.remove(idx);
		}
	},


	closeDetailView: function() {
		var that = this;
		setTimeout(function() { that.closeDetailView_low(); delete that;},0);

	},


	closeDetailView_low: function() {

		if(!this._executeEvent('canDetailViewClose',{rowNumber: this._detailViewRow})) return false;
		if(!this._confirmAction()) return false;

		//if dv is 'editondemand' and you enter a new record, but abort without commit, then when you try to edit some existing row, it would still be in edit mode, but locked to prevent editing.
		if(this.detailViewEditMode == 'dvod') {
			if(typeof this._detailViewHTMLCache != 'undefined') {
				var ele = $(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV');
				ele.innerHTML = this._detailViewHTMLCache;
				delete this._detailViewHTMLCache;
			}
		}

		if(this.detailViewPosition != 'popup')	{
			//if($(this.gridId + '.DETAILVIEW_PART.COMPLETE')) $(this.gridId + '.DETAILVIEW_PART.COMPLETE').style.display = 'none';
			if($(this.gridId + '.DETAILVIEW_PART.COMPLETE')) {
				if(this.detailViewPosition == 'inline') {
					var tAnim = {};
					$u.o.assign(tAnim,this.detailViewAnimation.hide);
					tAnim.onComplete = Function('$(\''+this.gridId+'.RDV\').style.display = \'none\';');
					A5.u.element.hide($(this.gridId + '.DETAILVIEW_PART.COMPLETE'),tAnim);
				} else A5.u.element.hide($(this.gridId + '.DETAILVIEW_PART.COMPLETE'),this.detailViewAnimation.hide);
			}
		} else {
			//this._dvFloatingWindow.hide();
			if(this._dvFloatingWindow.type == 'modal') AUI.LockUI.pageFree();
			else if(this._dvFloatingWindow.type == 'popup') $e.remove(document.documentElement,'click',this._dvFloatingWindow._popupHide);
			var wEle = $(this._dvFloatingWindow._windowId);
			if(this._dvFloatingWindow.animation.disabled) {
				if(document.all && navigator.appName != 'Opera') wEle.style.display = 'none';
				else wEle.style.visibility = 'hidden';
			} else A5.u.element.hide(wEle,this._dvFloatingWindow.animation.hide);
			if(this._dvFloatingWindow.activeClassName != '') $rcn(wEle,this._dvFloatingWindow.activeClassName);
			this._dvFloatingWindow._lockIndex = -1;
			this._dvFloatingWindow.hidden = true;
			this._dvFloatingWindow._focusTopWindow();
		}

		this._detailViewWindowState = '';

		if(this.detailViewPosition == 'page') {
			if(this.hideGridWhenDetailViewIsShown == true) {
			var ele = $(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV');
			ele.style.display = 'block';
			}
		}
		this._executeEvent('afterDetailViewClose',{rowNumber: this._detailViewRow});
		$(this.gridId+'.FOCUSCATCHER').focus();
		return true;
	},

	detailViewToggle: function(rowNumber) {
		if(this._detailViewWindowState == '' || this._detailViewRow != rowNumber) {
			this.detailView(rowNumber);
		} else {
			this.closeDetailView()
		}
	},

	globalUpdate: function(rowNumber,obj) {
		var field = obj.fieldToUpdate;
		if(field=='<CurrentField>') field = this._focusControl;
		field = field.toUpperCase();

		var id = this.gridId + '.V.R' + rowNumber +'.' + field;
		var ele = $(id);
		if(!ele) return false;

		if(obj.type == 'search') {
			obj.onlyUpdateBlankFields = false;
			var eleSearch = $(obj.elementIdSearchValue);
			if(!eleSearch) return false;
			var searchVal = $gvs(eleSearch);

			var eleReplace = $(obj.elementIdReplaceValue);
			if(!eleReplace) return false;
			var replaceVal = $gvs(eleReplace);

			var searchFlags = ""
			if(obj.allInstances) searchFlags = searchFlags + 'g';
			if(obj.caseInsensitive) searchFlags = searchFlags + 'i';
		} else {
			if(obj.sourceValue == 'ReadFromCurrentRow') {
				var sv = this.getValue('G',field,rowNumber);
			} else {
				var eleS = $(obj.sourceElementId);
				if(!eleS) return false;
				var sv = $gvs(eleS);
			}
		}
		var eleT = '';
		var valC = ''
		this._batchChange = true;
		var flagOKtoChange = true;
		var flagChecked = true;
		var eleChk = '';
		var promptResult = true;
		var msg = '';
		var flagSuppressPrompt = false;
		if(obj.rowsToUpdate.toLowerCase() != 'allnewrecordrows') {
			for(var i = 1; i<=this._rowsInGrid;i++) {
				flagSuppressPrompt = false;
				if(obj.rowsToUpdate.toLowerCase() == 'checkedrows') {
					eleChk = $(this.gridId + '.V.R'+i+'.__ROWCHECKBOX');
					if(eleChk) flagChecked = eleChk.checked;
					else flagChecked = true;
				}
				valC = this.getValue('G',field,i);
				if(obj.onlyUpdateBlankFields) {
					if( (valC == '' || valC == '&nbsp;') )  flagOKtoChange = true;
					else flagOKtoChange = false;
				} else flagOKtoChange = true;

				if(obj.type == 'search') {
					sv = this._searchReplace(valC,searchVal,replaceVal,searchFlags);
				}
				if(sv == valC) flagSuppressPrompt = true;

				if(flagChecked && flagOKtoChange && obj.promptForConfirmation && valC != '' && !flagSuppressPrompt) {
					var msg = obj.confirmationMessage;
					msg = msg.replace('[row]','' + i);
					msg = msg.replace('[old]',valC);
					msg = msg.replace('[new]',sv);
					var promptResult = confirm(msg);
				} else {
					promptResult = true;
				}
				if(sv == valC) flagOKtoChange = false;

				if(flagOKtoChange && flagChecked && promptResult ) {
					this.setValue('G',field,i,sv);
					this._setRowState(i,true);
				}
			}
		}
		flagNewRecordRowsVisible = false;
		var ele = $(this.gridId + '.R-1');
		if(ele) flagNewRecordRowsVisible = $if(ele.style.display == 'none',false,true);
		promptResult = true;
		if(flagNewRecordRowsVisible) {
			if(obj.rowsToUpdate.toLowerCase() == 'allvisiblerows' || obj.rowsToUpdate.toLowerCase() == 'allnewrecordrows') {
				for(var i = 1; i<= this._newRowsInGrid; i++) {
					flagSuppressPrompt = false;
					valC = this.getValue('G',field,i*-1);
					if(obj.onlyUpdateBlankFields) {
						if( (valC == '' || valC == '&nbsp;') )  flagOKtoChange = true;
						else flagOKtoChange = false;
					} else flagOKtoChange = true;

					if(obj.type == 'search') {
						sv = this._searchReplace(valC,searchVal,replaceVal,searchFlags);
					}
					if(sv == valC) flagSuppressPrompt = true;
					if(flagOKtoChange && obj.promptForConfirmation && valC != '' && !flagSuppressPrompt) {
						var msg = obj.confirmationMessage;
						msg = msg.replace('[row]','' + i +' (new record)');
						msg = msg.replace('[old]',valC);
						msg = msg.replace('[new]',sv);
						var promptResult = confirm(msg);
					} else {
						promptResult = true;
					}

					if(sv == valC) flagOKtoChange = false;

					if(flagOKtoChange) {
						this.setValue('G',field,i*-1,sv);
						this._setRowState(i*-1,true);
					}
				}
			}
		}
		this._batchChange = false;
	},



	_searchReplace: function (string,search,replace,flags) {
	    var r = search;
	    r = r.replace(/[\\\.\^\$\*\+\?\{\}\[\]\(\)\|]/g,function(val){
	               return '\\'+val;
	          });
	    var y = string.replace(RegExp(r,flags),replace);
	    return y;
	},


	_rowExpandLow: function(rowNum) {
		//if this row is being expanded for the fist time, the ajax callback generates the animation code in the response
		var withAnimation = false;
		var withAnimation = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		if(this.rowExpandMode == 'single') {
			for(var i = 1; i <= this._rowsInGrid; i++) {
				if(i != rowNum) this.rowCollapse(i);
			}
		}

		if($(this.gridId+'.R' + rowNum + '.__ROWEXPAND_SEP')) $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_SEP').style.display = '';
		trEle = $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_TR');
		if(withAnimation) {
			var ele2 = $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_DIV')
			ele2.style.display = 'none';
			var ele2JS = '#' +$u.s.tran(this.gridId+'.R' + rowNum + '.__ROWEXPAND_DIV','.','\\.');
		}
		trEle.style.display = '';
		if(withAnimation) {
			if(this.animationMethod == 'slide') jQuery(ele2JS).slideToggle(this.animationSpeed);
			if(this.animationMethod == 'fade') jQuery(ele2JS).fadeToggle(this.animationSpeed);
		}
		if(this.rowExpandAutoRefresh != true) $sa(trEle,'A5RowExpanded','true');
		$(this.gridId +'.R' + rowNum + '.__ROWEXPANDER').src = this.rowCollapseIcon;
	},

	rowCollapse: function(rowNum) {
		var trEle = $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_TR');
		if(trEle == false) return false;
		var flagFireCanRowCollapse = false;

		if($ga(trEle,'A5RowExpanded') == 'true') {
			flagFireCanRowCollapse = true;
		}

		if(flagFireCanRowCollapse) {
			if(!this._executeEvent('canRowCollapse',{rowNumber: rowNum})) return false;
		}
		if($(this.gridId+'.R' + rowNum + '.__ROWEXPAND_SEP')) $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_SEP').style.display = 'none';

		var flagAnimate = false;
		if(this.rowExpandAnimation) flagAnimate = this.rowExpandAnimation ;
		if(flagAnimate) {
			var ele2JS = '#' +$u.s.tran(this.gridId+'.R' + rowNum + '.__ROWEXPAND_DIV','.','\\.');
			var eleTR = this.gridId+'.R' + rowNum + '.__ROWEXPAND_TR';
			if(this.animationMethod == 'slide') jQuery(ele2JS).slideToggle(this.animationSpeed,function() {$(eleTR).style.display = 'none';} );
			if(this.animationMethod == 'fade') jQuery(ele2JS).fadeToggle(this.animationSpeed,function() {$(eleTR).style.display = 'none';} );
		} else {
			$(this.gridId+'.R' + rowNum + '.__ROWEXPAND_TR').style.display = 'none';
		}
		$(this.gridId +'.R' + rowNum + '.__ROWEXPANDER').src = this.rowExpandIcon;
		if(flagFireCanRowCollapse) {
			this._executeEvent('afterRowCollapse',{rowNumber: rowNum});
		}

		$sa(trEle,'A5RowExpanded','false');
	},

	rowExpand: function(rowNum) {
		this.rowExpandToggle(rowNum,true);
	},

	rowExpandToggle: function(rowNum) {
		var forceExpand = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var flagAnimate = false;
		if(this.rowExpandAnimation) flagAnimate = this.rowExpandAnimation ;

		var trEle = $(this.gridId+'.R' + rowNum + '.__ROWEXPAND_TR');
		if(trEle == false) return false;

		var rowIsDirty = false;
		if(rowNum > 0) {
			rowIsDirty = this._dirtyRows[rowNum -1];
		} else {
			rowIsDirty = this._dirtyNewRows[(rowNum* -1) -1];
		}



		if(trEle.style.display == 'none' || forceExpand) {
			if(!this._executeEvent('canRowExpand',{rowNumber: rowNum, isDirty: rowIsDirty})) return false;
			if($ga(trEle,'A5RowExpanded') == 'true') {
				this._rowExpandLow(rowNum,flagAnimate);
				this._executeEvent('afterRowExpand',{rowNumber: rowNum});
			} else {
				//we will put the expand in the response from the callback.
				//var data = '__FormId=' + this.gridId + '&__FormAction=expandRow&_rowNumber='+ rowNum;
				//A5.ajax.callback(this.ajaxURL,data);
				this._rowExpandLow(rowNum);

				var keys = this._getRowKey(rowNum);
				var data = '_rowNumber='+rowNum +'&' + keys;
				this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'expandRow'})

				if(this.rowExpandAutoRefresh) {
					var eleRE = $(this.gridId + '.R' + rowNum + '.__ROWEXPAND_DIV');
					eleRE.innerHTML  = this.rowExpandWorkingMessage;
				}

				this._submitLow('expandRow',this.gridId,this.ajaxURL,data);
				return false;

			}
		} else {
			this.rowCollapse(rowNum);
		}

	},

	showRowExpandGrid: function(gridNum,rowNum) {
		var keys = this._getRowKey(rowNum);
		var data = '_gridNumber=' + gridNum +'&_rowNumber='+rowNum +'&' + keys;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'expandRow'})
		this._submitLow('expandRowGrid',this.gridId,this.ajaxURL,data);
		return false;
	},


	alphabetSearch: function(searchId) {
		if(!this._executeEvent('canAlphabetButtonSearch',{})) return false;
		var data = '_searchId='+searchId + '&__dvWindow=' + this._detailViewWindowState;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'alphabetButtonSearch'})
		this._submitLow('Search_AlphabetButtons',this.gridId,this.ajaxURL,data);
		return false;
	},

	editRow: function(rowNumber) {
		/*check if this.rowEditMode is 'rod-s' (row on demand, one row at a time)
		if so, then check if the currently edited row is dirty. if so, then warn and abort.
		*/

		var newRecordRowsVisible = true;
		var pEle = $(this.gridId + '.R-1');
		if(pEle) newRecordRowsVisible = $if(pEle.style.display == 'none', false,true);

		if(!this._executeEvent('canRowSwitchToEditable',{'rowNumber': rowNumber, 'field': '', 'newRecordRowsVisible' : newRecordRowsVisible})) return false;
		var data = '';

		if(this.rowEditMode == 'rod-s') {
			if($u.a.find(this._dirtyRows,true) != -1) {
				if(!this._confirmAction()) return false;
			}
			//Need to send back the data for the row that was in edit mode so that the server
			//can conver that row back to view mode.
			var rowInEditModeNum = $u.a.find(this._editModeRows,true);
			var dataArr = new Array();
			if(rowInEditModeNum != -1) {
				for(var i = 0; i < this.gridColumnInfo.length; i++) {
					dataArr.push(A5.ajax.buildURLParam('V.R' + (rowInEditModeNum+1) + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowInEditModeNum][i]) );
				}
				data = dataArr.join('&');
			}
			data = '_existingRowInEditMode=' + (rowInEditModeNum+1) + $if(data != '','&' + data, '');

			var stateInfo = $(this.gridId +'.STATEINFO').value;
			if(stateInfo!='') data=data +'&' + stateInfo;
		}

		var keys = this._getRowKey(rowNumber);
		data = '_rowNumber='+rowNumber +'&' + keys + $if(data != '','&' + data, '');
		data = $u.s.tran(data,'\n','%0D%0A');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'editRow'})
		this._submitLow('EditRow',this.gridId,this.ajaxURL,data);
		return false;
	},

	editField: function(rowNumber, field) {
		if(!this._executeEvent('canRowSwitchToEditable',{'rowNumber': rowNumber, 'field': field})) return false;
		var data = '';
		if(this.rowEditMode == 'rod-s') {
			if(!this._confirmAction()) return false;
			//Need to send back the data for the row that was in edit mode so that the server
			//can conver that row back to view mode.
			var rowInEditModeNum = $u.a.find(this._editModeRows,true);
			var dataArr = new Array();
			if(rowInEditModeNum != -1) {
				for(var i = 0; i < this.gridColumnInfo.length; i++) {
					dataArr.push(A5.ajax.buildURLParam('V.R' + (rowInEditModeNum+1) + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowInEditModeNum][i]) );
				}
				data = dataArr.join('&');
			}
			data = '_existingRowInEditMode=' + (rowInEditModeNum+1) + $if(data != '','&' + data, '');

			var stateInfo = $(this.gridId +'.STATEINFO').value;
			if(stateInfo!='') data=data +'&' + stateInfo;
		}
		var keys = this._getRowKey(rowNumber);
		data = '_rowNumber='+rowNumber +'&_FieldName='+field +'&' + keys + $if(data != '','&' + data, '');
		data = $u.s.tran(data,'\n','%0D%0A');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'editField'})
		this._submitLow('EditField',this.gridId,this.ajaxURL,data);
		return false;
	},

	editFieldDV: function(field) {
		//var data = '';
		//var rowNumber = this._detailViewRowNumber;
		//var keys = this._getRowKey(rowNumber);
		//data = '_rowNumber='+rowNumber +'&_FieldName='+field +'&' + keys + $if(data != '','&' + data, '');
		//data = $u.s.tran(data,'\n','%0D%0A');
		//this._submitLow('EditField',this.gridId,this.ajaxURL,data);
		this.editDetailViewRecord(field);
		return false;
	},

	deleteRow: function(rowNumber) {
		if(!this._executeEvent('canRowDelete',{rowNumber: rowNumber})) return false;
		var classInst = this;
		A5.msgBox.show(this.messages.t_deleteRow,this.messages.deleteRow,'OC',function(action) {
			if(action=='ok') {classInst._deleteRowWithoutConfirmation(rowNumber) };
		} );
	},

	_deleteRowLow: function(rowNumber) {
		//used to delete a row in a Grid with a Detail View, when Detail View is not currently shown.
		if(!this._executeEvent('canRowDelete',{rowNumber: rowNumber})) return false;
		var classInst = this;
		A5.msgBox.show(this.messages.t_deleteRow,this.messages.deleteRow,'OC',function(action) {
			if(action=='ok') {classInst._deleteRowWithoutConfirmationLow(rowNumber) };
		} );
	},

	_deleteRowWithoutConfirmationLow: function(rowNumber) {
		//handler for _deleteRowLow()
		var data = '_actualRowsOnPage=' + this.actualRowsOnPage;
		var h = [];
		var ele = 0;
		for(var i = 1;i<=this._rowsInGrid;i++) {
			ele = $(this.gridId + '.R' + i);
			if(ele.style.display == 'none') h.push(i);
		}
		var data2 = h.join(',');
		alert('hidden rows:' + data2);
		data = data + '&_rowsAlreadyHidden=' + data2 + '&_rowsInGrid=' + this._rowsInGrid;
		this.ajaxCallback('G','all','__A5SystemDeleteRowLow','',data);
	},

	_deleteRowWithoutConfirmation: function(rowNum) {
			var data = '';
			//var regionIds = new Array();
			var regionKeys = new Array();
			//$sa(this.gridId + '.R' + (rowNum),'A5IsDirty','true');
			//regionIds.push(this.gridId + '.R' + (rowNum));
			regionKeys.push(this._getRowKey((rowNum)));
			//data = this._harvestGrid(regionIds);
			var dataArr = new Array();
			if(typeof this._originalValues[rowNum-1] != 'undefined') {
				for(var i = 0; i < this.gridColumnInfo.length; i++) {
					dataArr.push(A5.ajax.buildURLParam('old.V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowNum-1][i]) );
				}
			}
			data = dataArr.join('&');
			var stateInfo = $(this.gridId +'.STATEINFO').value;
			if(stateInfo!='') data=data +'&' + stateInfo;
			regionKeys = regionKeys.join('&');
			if(regionKeys!='') data=data +'&' + regionKeys;
			data = '_rowSubmitted='+rowNum+'&__FormAction=DeleteRow&_rowNumber='+rowNum+'&__FormID=' + this.gridId + '&' + data;
			data = $u.s.tran(data,'\n','%0D%0A');
			this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'deleteRecord'})
			A5.ajax.callback(this.ajaxURL,data);
			return false;
	},

	cancelEditDetailViewRecord: function() {
		if(this._detailViewRow < 0) return false;
		if(!this._executeEvent('canDetailViewSwitchFromEditable',{'rowNumber' : this._detailViewRow})) return false;
		if(this._detailViewIsDirty) {
				if(!this._executeEvent('canDetailViewCancelEdits',{'rowNumber' : this._detailViewRow})) return false;
				var classInst = this;
				A5.msgBox.show(this.messages.t_cancelEditRow,this.messages.cancelEditRow,'OC',function(action) {
							if(action=='ok') {classInst._cancelEditDetailViewRecordWithoutConfirmation(true) };
				} );
			} else {
				this._cancelEditDetailViewRecordWithoutConfirmation(false);
		}
	},


	cancelEditRow: function(rowNumber) {
		if(!this._executeEvent('canRowSwitchFromEditable',{'rowNumber' : rowNumber})) return false;
		if(this._dirtyRows[rowNumber-1]) {
			if(!this._executeEvent('canRowCancelEdits',{'rowNumber' : rowNumber})) return false;
			var classInst = this;
			A5.msgBox.show(this.messages.t_cancelEditRow,this.messages.cancelEditRow,'OC',function(action) {
						if(action=='ok') {classInst._cancelEditRowWithoutConfirmation(rowNumber, true) };
			} );
		} else {
			this._cancelEditRowWithoutConfirmation(rowNumber, false);
		}
	},

	_cancelEditRowWithoutConfirmation: function(rowNum, isDirty) {
		/*Do cancel edit row without confirmation*/
		//var keys = this._getRowKey(rowNumber);
		//var data = '_rowNumber='+rowNumber +'&' + keys;


		var data = '';
		//var regionIds = new Array();
		var regionKeys = new Array();
		//$sa(this.gridId + '.R' + (rowNum),'A5IsDirty','true');
		//regionIds.push(this.gridId + '.R' + (rowNum));
		regionKeys.push(this._getRowKey((rowNum)));
		//data = this._harvestGrid(regionIds);
		var dataArr = new Array();
		for(var i = 0; i < this.gridColumnInfo.length; i++) {
			dataArr.push(A5.ajax.buildURLParam('V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowNum-1][i]) );
		}
		data = dataArr.join('&');
		var stateInfo = $(this.gridId +'.STATEINFO').value;
		if(stateInfo!='') data=data +'&' + stateInfo;
		regionKeys = regionKeys.join('&');
		if(regionKeys!='') data=data +'&' + regionKeys;
		data = '_rowIsDirty='+isDirty + '&_rowSubmitted='+rowNum+'&__FormAction=DeleteRow&_rowNumber='+rowNum+'&__FormID=' + this.gridId + '&' + data;
		data = $u.s.tran(data,'\n','%0D%0A');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'cancelEditRow'})
		this._submitLow('CancelEditRow',this.gridId,this.ajaxURL,data);

		return false;
	},


	_cancelEditDetailViewRecordWithoutConfirmation: function(isDirty) {
		var rowNum = this._detailViewRow
		var data = '';
		var regionKeys = new Array();
		regionKeys.push(this._getRowKey((rowNum)));
		var dataArr = new Array();
		var rowData = new Array();
		if(this.detailViewDataPreFetch) rowData = this._originalDVValues[rowNum-1];
		else rowData = this._originalDVValues[0];

		for(var i = 0; i < this.detailViewColumnInfo.length; i++) {
			dataArr.push(A5.ajax.buildURLParam('V.R' + rowNum + '.' + this.detailViewColumnInfo[i].name ,rowData[i]) );
		}
		data = dataArr.join('&');
		var stateInfo = $(this.gridId +'.STATEINFO').value;
		if(stateInfo!='') data=data +'&' + stateInfo;
		regionKeys = regionKeys.join('&');
		if(regionKeys!='') data=data +'&' + regionKeys;
		data = '_rowIsDirty='+isDirty + '&_rowSubmitted='+rowNum+'&_rowNumber='+rowNum+'&__FormID=' + this.gridId + '&' + data;
		data = $u.s.tran(data,'\n','%0D%0A');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'cancelEditDetailViewRecord'})
		this._submitLow('CancelEditDetailViewRecord',this.gridId,this.ajaxURL,data);
		//this is wrong because it was causing this bug: edit detail view, cancel. undo changes button had not gone disabled.
		//this._detailViewIsDirty = false;
		return false;
	},

	editDetailViewRecord: function() {
		var fieldName = '';
		if(this._detailViewRow < 0) return false;
		if(typeof arguments[0] != 'undefined') fieldName = arguments[0];
		if(!this._executeEvent('canDetailViewSwitchToEditable',{'rowNumber': this._detailViewRow, 'field': fieldName})) return false;

		var keys = this._getRowKey(this._detailViewRow);
		var data = '';
		data = '_fieldName=' + fieldName+'&_rowNumber='+this._detailViewRow +'&' + keys + $if(data != '','&' + data, '');
		data = $u.s.tran(data,'\n','%0D%0A');
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'editDetailViewRecord'})
		this._submitLow('EditDetailViewRecord',this.gridId,this.ajaxURL,data);
		return false;
	},

	clientSideValidateField: function(part,colName,rowNum) {

		var prefix = '';
		if(part=='G') {
			var colInfo = this.gridColumnInfo;
			var colNum = this._colNumFromName(this._gridColNames,colName);
			if(rowNum < 0) {
				if(!this._dirtyNewRows[Math.abs(rowNum)-1]) return false;
			} else if(!this._dirtyRows[rowNum-1]) return false;

		} else {
			var colInfo = this.detailViewColumnInfo;
			var colNum = this._colNumFromName(this._detailViewColNames,colName);
			var prefix = '.D';
		}
		if(typeof colInfo[colNum] != 'undefined') {

			if(typeof colInfo[colNum].validate != 'undefined') {
				var curValue = this.getValue(part,colName,rowNum);
				var result = colInfo[colNum].validate.call(this,curValue,colName,rowNum);
				if(typeof result == 'string') {
					this.setErrors([{id: this.gridId + prefix +'.V.R' + rowNum + '.' + colName, message: result}]);
				} else {
					this.clearErrors([this.gridId + prefix + '.V.R' + rowNum + '.' + colName]);
				}
			}
		}

	},

	_testAlreadySubmitting: function() {

		//prevent user from clicking submit while an existing submit is executing
		if(typeof this._currentSubmitTimeStamp == 'object') {
			var cTime = new Date();
			if(cTime.getTime() - this._currentSubmitTimeStamp.getTime() < this._submitTestInterval) return true;
		}
		this._currentSubmitTimeStamp = new Date();
		return false;

	},


	validateGridRow: function(rowNum) {
		this.submitGridPartRow(rowNum,true);
	},

	validateGridField: function(rowNum,fieldName) {
		this.submitGridPartRow(rowNum,true,fieldName);
	},

	submitGridPartRow: function(rowNum) {
		/*
		Submits a single dirty row. Contrast with .submitGridPart() which submits all dirty rows at once.
		*/

		var fieldToValidate = '';
		var validateMode = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		fieldToValidate = typeof arguments[2] != 'undefined' ? arguments[2] : '';

		//if we are in validateMode, don't care if ajaxcallbacks pile up
		if(!validateMode) {
			if(this._testAlreadySubmitting()) return false;
		}

		if(validateMode != true) {
			if(!this._executeEvent('canRowSubmit',{rowNumber: rowNum})) return false;
		}

		if(rowNum < 0) {
			if(this._dirtyNewRows[Math.abs(rowNum)-1]) {
				var data = '';
				var regionIds = new Array();
				$sa(this.gridId + '.R' + (rowNum),'A5IsDirty','true');
				regionIds.push(this.gridId + '.R' + (rowNum));
				data = this._harvestGrid(regionIds);

				var stateInfo = $(this.gridId +'.STATEINFO').value;
				if(stateInfo!='') data=data +'&' + stateInfo;

				var stateInfo2 = this.getStateInfo();
				if(stateInfo2 != '') data = data + '&' + stateInfo2;


				var eventName = 'saveGridDataNewRow';
				if(validateMode) {
					eventName = 'validateGridDataNewRow';
					if(fieldToValidate != '') {
						eventName = 'validateGridDataNewRowField&__fieldToValidate=' + fieldToValidate;
					}
				}

				data = '_rowsInGrid='+this._rowsInGrid+'&_rowSubmitted='+rowNum+'&__FormAction='+eventName+'&__FormID=' + this.gridId + '&' + data;
				data = $u.s.tran(data,'\n','%0D%0A');

				var eventName2 = 'submitGridNewRow';
				if(validateMode) {
					eventName2 = 'validateGridNewRow';
					if(fieldToValidate != '') {
						eventName2 = 'validateNewGridField_'+fieldToValidate;
					}
				}

				this._executeEvent('beforeAjaxCallback',{ajaxEvent: eventName2});
				A5.ajax.callback(this.ajaxURL,data);
				return false;
			}
		} else {
			if(this._dirtyRows[rowNum-1]) {
				var data = '';
				var regionIds = new Array();
				var regionKeys = new Array();
				$sa(this.gridId + '.R' + (rowNum),'A5IsDirty','true');
				regionIds.push(this.gridId + '.R' + (rowNum));
				regionKeys.push(this._getRowKey((rowNum)));
				data = this._harvestGrid(regionIds);
				var stateInfo = $(this.gridId +'.STATEINFO').value;
				if(stateInfo!='') data=data +'&' + stateInfo;
				regionKeys = regionKeys.join('&');
				if(regionKeys!='') data=data +'&' + regionKeys;
				var eventName = 'saveGridDataRow';
				if(validateMode) {
					eventName = 'validateGridDataRow';
					if(fieldToValidate != '') {
						eventName = 'validateGridDataRowField&__fieldToValidate='+fieldToValidate;
					}
				}

				data = '_rowSubmitted='+rowNum+'&__FormAction='+eventName+'&__FormID=' + this.gridId + '&' + data;

				var stateInfo = $(this.gridId +'.STATEINFO').value;
				if(stateInfo!='') data=data +'&' + stateInfo;
				var stateInfo2 = this.getStateInfo();
				if(stateInfo2 != '') data = data + '&' + stateInfo2;
				data = $u.s.tran(data,'\n','%0D%0A');
				var eventName2 = 'submitGridRow';
				if(validateMode) {
					eventName2 = 'validateGridRow';
					if(fieldToValidate != '') {
						eventName2 = 'validateGridField_'+fieldToValidate;
					}
				}

				this._executeEvent('beforeAjaxCallback',{ajaxEvent: eventName2})
				A5.ajax.callback(this.ajaxURL,data);
				return false;
			}
		}
	},

	validateGrid: function() {
		this.submitGridPart(false,'', true);
	},

	submitGridPart: function() {
		if($u.a.find(this._dirtyRows,true) == -1 && $u.a.find(this._dirtyNewRows,true) == -1) return false;
		/*currently if the user wants to confirm before submit, the function is called with arguments
		e.g. GRID1_GridObj.submitGridPart(true,'Are you sure you want to save');
		This information should be put in the GridHelper object at some point.
		*/
		if(this._testAlreadySubmitting()) return false;
		var validateMode = typeof arguments[2] != 'undefined' ? arguments[2] : false;
		if(validateMode != true) {
				if(!this._executeEvent('canGridSubmit',{})) return false;
		}


		if(typeof arguments[0] != 'undefined') {
			if(arguments[0] == true) {
				var message = typeof arguments[1] != 'undefined' ? arguments[1] : '';
				if(message == '') message = 'Submit changes?';
				var result = confirm(message);
				if(!result) return false;
			}
		}

		var data = '';
		var regionIds = new Array();
		var regionKeys = new Array();
		for(var i=1;i<=this._rowsInGrid;i++) {
			if(this._dirtyRows[i-1]) {
				$sa(this.gridId + '.R' + i,'A5IsDirty','true');
				regionIds.push(this.gridId + '.R' + i);
				regionKeys.push(this._getRowKey(i));
			}
		}

		for(var i=1;i<=this._newRowsInGrid;i++) {
			if(this._dirtyNewRows[i-1]) {
				$sa(this.gridId + '.R-' + i,'A5IsDirty','true');
				regionIds.push(this.gridId + '.R-' + i);
			}
		}



		data = this._harvestGrid(regionIds);
		var stateInfo = $(this.gridId +'.STATEINFO').value;
		if(stateInfo!='') data=data +'&' + stateInfo;

		var stateInfo2 = this.getStateInfo();
		if(stateInfo2 != '') data = data + '&' + stateInfo2;

		regionKeys = regionKeys.join('&');
		if(regionKeys!='') data=data +'&' + regionKeys;
		var actionName = 'saveGridData';
		if(validateMode) actionName = 'validateGridData';
		data = '_rowsInGrid='+this._rowsInGrid + '&__FormAction='+actionName+'&__FormID=' + this.gridId + '&' + data;

		data = $u.s.tran(data,'\n','%0D%0A');

		var eventName = 'submitGrid';
		if(validateMode) eventName = 'validateGrid';
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: eventName})
		A5.ajax.callback(this.ajaxURL,data);
		return false;
	},


	_currentGridQuery: function() {
		var data = new Array();
		data.push(A5.ajax.buildURLParam('_gridCurrentFilter',this._gridFilter));
		data.push(A5.ajax.buildURLParam('_gridCurrentOrder',this._gridOrder));
		data.push(A5.ajax.buildURLParam('_gridCurrentArguments',this._gridArguments ));
		data.push(A5.ajax.buildURLParam('_gridCurrentDBType',this._gridDBType));
		return data.join('&');
	},

	exportData: function() {
		var exportFormat = typeof arguments[0] != 'undefined' ? arguments[0] : 'Excel';
		var maxRecords = typeof arguments[1] != 'undefined' ? arguments[1] : '10000';
		var exportHiddenFields = typeof arguments[2] != 'undefined' ? arguments[2] : 'Y';
		var useColumnHeadings = typeof arguments[3] != 'undefined' ? arguments[3] : 'Y';
		var moreData = '&_exportHiddenFields=' + exportHiddenFields + '&_useColHeadings=' + useColumnHeadings;
		var callbackData = '_csfilename=_Default_&_exportDataType='+exportFormat+'&_recordSelection=Records%20in%20current%20query&_exportSource=1&_maxRecords='+maxRecords+'&_zip=N' + moreData;
		this.ajaxCallback('G',1,'__a5systemfileExport','',callbackData);
	},

	filterCheckedRows: function() {
		flagUnchecked = false;
		if(typeof arguments[0] != 'undefined') flagUnchecked = arguments[0];
		var data = '__flagUnchecked=' + flagUnchecked;
		this.ajaxCallback('G',1,'__a5systemFilterCheckedRows','',data);
	},

	_executeAjaxCallbackCompleteCode: function(id) {
		var code = this._ajaxCallbackCompleteCode[id];
		if(typeof code != 'undefined') {
			code.call();
			delete this._ajaxCallbackCompleteCode[id];
		}
	},

	ajaxCallback: function(part,rowNum,xbasicFunction) {

		part = part.toUpperCase().substring(0,1);
		var callbackURL = typeof arguments[3] != 'undefined' ? arguments[3] : '';
		var otherData = typeof arguments[4] != 'undefined' ? arguments[4] : '';

		var ops = typeof arguments[5] != 'undefined' ? arguments[5] : {};
		var onCompleteCode = '';
		var callbackId = A5.UUID()
		if(typeof ops.onComplete != 'undefined') {
			onCompleteCode = ops.onComplete;
			var objx = this._ajaxCallbackCompleteCode;
			objx[callbackId] = onCompleteCode;
		}


		//rowNum can be 1, 2, 3, etc. or 1:none, 3:all etc

		//we want tempRowNum to be 1, 2, none, all so we can pass that into _getData(), and currentRowNum to be the actual current row number
		//if you pass in say 3, then tempRowNum and currentRowNum are both 3
		//but if you pass in 3:all, then tempRowNum = 'all' and currentRowNum = 3
		if(isNaN(rowNum)) {
			if(rowNum.toLowerCase() == 'all' || rowNum.toLowerCase() == 'all:all' ) {
				var tempRowNum = 'all';
				var currentRowNum = this._selectedRow;

			} else if (rowNum.toLowerCase() == 'none' || rowNum.toLowerCase() == 'none:none' ) {
				var tempRowNum = 'none';
				var currentRowNum = this._selectedRow;
			} else {
				if(rowNum.indexOf(':') == -1 ) {
				    var tempRowNum = 'all';
				    var currentRowNum = this._selectedRow;
				} else {
				    var rowNumC = new String(rowNum);
				    var currentRowNum = rowNumC.split(':')[0];
				var	tempRowNum = rowNumC.split(':')[1];
				};
			}
		} else {
			var tempRowNum = rowNum;
			var currentRowNum = rowNum;
		}

		var data = this._getData(part,tempRowNum);
		data = data + '&_part=' + part;
		data = data + '&'+this._currentGridQuery();
		data = data + '&_selectedGridPartRow=' + this._selectedRow;

		data = data + '&__callbackId=' + callbackId ;


		if(callbackURL == '') {
			data = '_XbasicFunction='+xbasicFunction+'&_currentRow='+currentRowNum+'&__FormAction=GenericAjaxCallback&__FormID=' + this.gridId+data;
			callbackURL = this.ajaxURL;
		} else {
			data = '_Action='+xbasicFunction+'&_currentRow='+currentRowNum+'&__FormAction=GenericAjaxCallback&__FormID=' + this.gridId+data;
		}
		if(otherData!='') data=data + '&' + otherData;

		var browserData = $u.o.toJSON(A5.flags);
		data = data + '&' + A5.ajax.buildURLParam('__a5browserflags',browserData);


		A5.ajax.callback(callbackURL,data);
		return false;
	},

	isDirty: function() {
		if(this._detailViewIsDirty) return true;
		if(this._isDirty) return true;
		return false;
	},


	_getData: function(part,rowNum) {

		var flagIncludeStateInfo = typeof arguments[2] != 'undefined' ? arguments[2] : true;
		part = part.toUpperCase().substring(0,1);
		var data = '';
		var gridData = '';
		var regionKeys = new Array();
		if(part=='D') {
			rowNum = this._detailViewRow;
			regionKeys.push(this._getRowKey((rowNum)));

			if(this.detailViewEditMode == '') {
				//detailview is not editable
			} else {
				//detailview is editable
				if(this._detailViewIsDirty) {
					//if detailview is dirty
					gridData = A5.form.harvest(this.gridId +'.DETAILVIEW_PART.FORM',true,true);

					//harvest labels as well
					var lblArr = [];
					var rowi = '1';
					var val = '';
					var j = '1'
					for(var k = 0; k < this.detailViewColumnInfo.length; k++) {
						if(this.detailViewColumnInfo[k].type == 'label,label') {
							val = this.getValue('D',this.detailViewColumnInfo[k].name,rowi);
							lblArr.push(A5.ajax.buildURLParam('V.R' + rowi + '.' + this.detailViewColumnInfo[k].name ,val) )
						}
					}
					gridData = gridData +'&' + lblArr.join('&');



				} else {
					//if detailview is clean
					var dataArr = new Array();
					if(rowNum < 0) {
						for(var i = 0; i < this.detailViewColumnInfo.length; i++) {
							if(typeof this._newDVValues != 'undefined') {
								dataArr.push(A5.ajax.buildURLParam('old.V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._newDVValues[i]) );
								dataArr.push(A5.ajax.buildURLParam('V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._newDVValues[i]) );
							}
						}

					} else {
						if(this.detailViewDataPreFetch) {
							for(var i = 0; i < this.detailViewColumnInfo.length; i++) {
								dataArr.push(A5.ajax.buildURLParam('old.V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._originalDVValues[rowNum-1][i]) );
								dataArr.push(A5.ajax.buildURLParam('V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._originalDVValues[rowNum-1][i]) );
							}
						} else {
							for(var i = 0; i < this.detailViewColumnInfo.length; i++) {
								dataArr.push(A5.ajax.buildURLParam('old.V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._originalDVValues[0][i]) );
								dataArr.push(A5.ajax.buildURLParam('V.R' + '1' + '.' + this.detailViewColumnInfo[i].name ,this._originalDVValues[0][i]) );
							}
						}
					}
					gridData = dataArr.join('&');
					gridData = gridData +'&_selectedGridRow=' + this._selectedRow;
				}
			}
		} else if (part == 'S') {
			gridData = A5.form.harvest(this.gridId +'.SEARCH_PART.FORM',true,true);

		} else {
			//grid part
			if(typeof rowNum == 'string') {
				if(rowNum.toLowerCase()=='all') {
					var regionIds = new Array();
					var dataArr = new Array();
					for(var i = 1; i <= this._rowsInGrid; i++) {
						regionKeys.push(this._getRowKey(i));
						if(this.rowEditMode != '') {
							if(this._dirtyRows[i-1]) {
								//row is dirty
								regionIds.push(this.gridId + '.R' + (i));
							} else {
								//row is clean
								for(var j = 0; j < this.gridColumnInfo.length; j++) {
									dataArr.push(A5.ajax.buildURLParam('V.R' + i + '.' + this.gridColumnInfo[j].name ,this._originalValues[i-1][j]) );
									dataArr.push(A5.ajax.buildURLParam('old.V.R' + i + '.' + this.gridColumnInfo[j].name ,this._originalValues[i-1][j]) );
								}
							}
						}
					}
					if(this.rowEditMode != '') {
						for(var i = 1; i <= this._newRowsInGrid; i++) {
							if(this._dirtyNewRows[i-1]) {
								//new row is dirty
								regionIds.push(this.gridId + '.R' + (i*-1));
							} else {
								//new row is clean
								if(typeof this._newValues != 'undefined') {
									for(var j = 0; j < this._newValues.length; j++) {
										dataArr.push(A5.ajax.buildURLParam('V.R-' + i + '.' + this.gridColumnInfo[j].name ,this._newValues[j]) );
										dataArr.push(A5.ajax.buildURLParam('old.V.R-' + i + '.' + this.gridColumnInfo[j].name ,this._newValues[j]) );
									}
								}
							}
						}
					}
					if(regionIds.length > 0) gridData = this._harvestGrid(regionIds);
					if(dataArr.length > 0) gridData = gridData + $if(gridData != '', '&', '') + dataArr.join('&');
				}
			} else {
				var rowIsDirty = false;
				if(rowNum < 0) rowIsDirty = this._dirtyNewRows[Math.abs(rowNum) -1];
				else rowIsDirty = this._dirtyRows[rowNum-1];

				if(rowNum > 0 ) regionKeys.push(this._getRowKey((rowNum)));
				if(this.rowEditMode != '') {
					if(rowIsDirty) {
						//editable row is dirty
						var regionIds = new Array();
						regionIds.push(this.gridId + '.R' + (rowNum));
						gridData = this._harvestGrid(regionIds);
					} else {
						//editable row is clean
						var dataArr = new Array();
						if(rowNum > 0) {
							for(var i = 0; i < this.gridColumnInfo.length; i++) {
								dataArr.push(A5.ajax.buildURLParam('V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowNum-1][i]) );
								dataArr.push(A5.ajax.buildURLParam('old.V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._originalValues[rowNum-1][i]) );
							}
						} else {
							//new row is clean
							if(typeof this._newValues != 'undefined') {
								for(var i = 0; i < this._newValues.length; i++) {
									dataArr.push(A5.ajax.buildURLParam('V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._newValues[i]) );
									dataArr.push(A5.ajax.buildURLParam('old.V.R' + rowNum + '.' + this.gridColumnInfo[i].name ,this._newValues[i]) );
								}
							}

						}
						gridData = dataArr.join('&');
					}
				}
			}
		}

		regionKeys = regionKeys.join('&');
		var stateInfo = '';
		if(flagIncludeStateInfo) stateInfo = $(this.gridId +'.STATEINFO').value;


		if(regionKeys!='') data=data +'&' + regionKeys;
		if(gridData!='') data=data +'&' + gridData;
		if(stateInfo!='') data=data +'&' + stateInfo;
		var stateInfo2 = this.getStateInfo();
		if(stateInfo2 != '') data = data + '&' + stateInfo2;

		data = data + '&' + this.getCheckedRows();
		data = $u.s.tran(data,'\n','%0D%0A');
		return data;

	},

	harvestColumn: function(colName) {
		var delim = typeof arguments[1] != 'undefined' ? arguments[1] : ',';
		colName = colName.toUpperCase();
		var dataArr = [];
		var rEle = '';
		for(var i = 1; i <= this._rowsInGrid; i++) {
			rEle = $(this.gridId + '.R' + i);
			if(rEle) {
				if(rEle.style.display == '') {
					dataArr.push(this.getValue('G',colName,i));
				}
			}
		};
		var data = dataArr.join(delim);
		return data;
	},

	_getArrayControls: function() {
		var obj = this.gridColumnInfo;
		if(this.detailViewColumnInfo.length > 0) obj = this.detailViewColumnInfo
		var a = [];
		for(var i = 0; i < obj.length; i++) {
		   	if(obj[i].name.split('[').length > 1) a.push(obj[i].name.split('[')[0]);
		}
		return a.join(',');
	},


	getValue: function(part,name,row) {
		return this._getValue(part,name,row);
	},

	_hideSnakingColumnFieldLabels: function() {
		var ele = '';
		var indx = 0;
		for(var i= 0; i < this.gridColumnInfo.length; i++) {
			for(j = 1; j <= this._rowsInGrid; j++) {
				indx = $u.a.find(this._snakingRowsInFirstColumn,''+j);
				if(indx == -1) {
					ele = $(this.gridId + '.LBL.R' + j + '.' + this.gridColumnInfo[i].name).parentNode;
					if(ele) ele.style.display = 'none';
				}
			}
		}
	},


	_colNumFromName: function(colNames, colName) {
		var colNum = $u.a.find(colNames,colName);
		if(colNum == -1) colNum = $u.a.find(colNames,colName+'[]');
		return colNum;
	},



	_getValue: function(part,name,row) {
		part = part.toUpperCase();
		name = name.toUpperCase();
		var colNum = 0;
		var colType = '';



		if(part=='D') {

			colNum = this._colNumFromName(this._detailViewColNames,name);
			if(colNum == -1) return false;

			var dataType = this.detailViewColumnInfo[colNum].dataType;
			dataType = dataType.toUpperCase();
			if(colNum > -1) {
				name = this._detailViewColNames[colNum];
				colType = this.detailViewColumnInfo[colNum].type.split(',')[0];
				var flagPretendDirty = false;
				if(this._detailViewRow < 0) {
					if(typeof this._newDVValues == 'undefined') {
						//should never be true
						flagPretendDirty = true;
						return '';
					}
				} else {
					if(typeof this._originalDVValues == 'undefined') flagPretendDirty = true;
				}
				if(this._detailViewIsDirty || flagPretendDirty) {
					if(colType != 'label' && colType != 'label-html'  && colType != 'link'  && colType != 'img' ) 	{
						//search by name
						var val = $gvs('V.R' + '1' + '.' + name, $(this.gridId + '.DETAILVIEW_PART.FORM'));
						if(val == $ga('V.R' + '1' + '.' + name, 'A5WatermarkText', $(this.gridId + '.DETAILVIEW_PART.FORM'))[0]) val = '';
						if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}

						return val;
					}
				}

				//colNum was found but DV is not dirty, OR control is a RO control - so use orig val array
				if(this._detailViewRow < 0) {
					if(colType == 'link') {
						return this._newDVValues[colNum][0];
					} else {
						var val = this._newDVValues[colNum];
						if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}
						return val;
					}
				} else {
					if(this.detailViewDataPreFetch) {
						if(colType == 'link') return this._originalDVValues[this._detailViewRow -1][colNum][0];
						else {
							var val = this._originalDVValues[this._detailViewRow -1][colNum];
							if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}
							return val;
						}
					} else {
						if(this._originalDVValues[0]) {
							if(colType == 'link') return this._originalDVValues[0][colNum][0];
							else {
								var val = this._originalDVValues[0][colNum];
								if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}
								return val;
							}
						} else {
							var val =$gvs(this.gridId + '.D.V.R' + '1' + '.' + name);
							if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}
							if(A5.isBlank(val)) val = '';
							return val;
						}
					}
				}
			} else {
				//field not found in column info - search by id
				var val = $gvs(this.gridId + '.D.V.R' + '1' + '.' + name);
				if(val == $ga(this.gridId + '.D.V.R' + '1' + '.' + name, 'A5WatermarkText')) val = '';
				if(typeof dataType != 'undefined') { if(dataType == 'L') val = $u.s.toBool(val);}
				return val;
			}
		} else if(part=='G') {
			if(row == 0) return '';

			colNum = this._colNumFromName(this._gridColNames,name);
			if(colNum == -1) return false;
			var dataType = this.gridColumnInfo[colNum].dataType;
			dataType = dataType.toUpperCase();
			if(colNum > -1) {
				name = this._gridColNames[colNum];
				colType = this.gridColumnInfo[colNum].type.split(',')[0];
				var isDirty = false;
				if(row <0) {
					if(this._dirtyNewRows[Math.abs(row)-1]) isDirty = this._dirtyNewRows[Math.abs(row)-1];
				} else {
					if(this._dirtyRows[(row)-1]) isDirty = this._dirtyRows[(row)-1];
				}
				if(isDirty) {
					if(colType != 'label' && colType != 'label-html' && colType != 'link'  && colType != 'img' ){
						var val = $gvs('V.R' + row + '.' + name, $(this.gridId + '.R' + row));
						if(val == $ga('V.R' + row + '.' + name, 'A5WatermarkText', $(this.gridId + '.R' + row))[0]) val = '';
						if(typeof dataType != 'undefined') {
							if(dataType == 'L') val = $u.s.toBool(val);
						}
						return val;
					}
				}
				//colNum was found but grid is not dirty, OR control is a RO control - so use orig val array
				if(this._originalValues[row -1] && this.rowEditMode != ''  ) {
					if(colType == 'link') return this._originalValues[row -1][colNum][0];
					else {
						var val = this._originalValues[row -1][colNum];

						if(typeof dataType != 'undefined') {
							if(dataType == 'L') val = $u.s.toBool(val);
						}
						return val;

					}
				} else {
					var val = $gvs(this.gridId + '.V.R' + row + '.' + name);
					if(val.constructor != Array ) {
						if(val == $ga(this.gridId + '.V.R' + row + '.' + name, 'A5WatermarkText')) val = '';
						val = val.replace(/<span[^>]+A5HL="Y">([^<]+)<\/span>/gi,'$1');
						if(A5.isBlank(val)) val = '';
					}
					if(typeof dataType != 'undefined') {
						if(dataType == 'L') val = $u.s.toBool(val);
					}
					return val;
				}

			} else {
				var val = $gvs(this.gridId + '.V.R' + row + '.' + name);
				if(val == $ga(this.gridId + '.V.R' + row + '.' + name, 'A5WatermarkText')) val = '';
				if(typeof dataType != 'undefined') {
					if(dataType == 'L') val = $u.s.toBool(val);
				}
				return val;
			}

		} else if(part=='S') {

			var val = $gvs('S.' +  name,$(this.gridId + '.SEARCH_PART.FORM'));
			if(val == '') {
				//in case field is multi-select
				val = $gvs('S.' +  name + '[]',$(this.gridId + '.SEARCH_PART.FORM'));
			}
			if(val == $ga(this.gridId +'.S.' +  name, 'A5WatermarkText')) val = '';
			return val;
		}
	},


	_setCellStyles: function(rowNum,style) {
			var tbele = $(this.gridId + '.R' + rowNum);
			for(var i=0; i < tbele.rows.length; i++) {
				for(var j=0; j < tbele.rows[i].cells.length; j++) {
					var s = $gs(tbele.rows[i].cells[j]);
					s = $u.s.rTrim(s,';') + ';' + style;
					$ss(tbele.rows[i].cells[j],s);
				}
			}
	},


	_addCellClassNames: function(rowNum,className) {
		var tbele = $(this.gridId + '.R' + rowNum);
		for(var i=0; i < tbele.rows.length; i++) {
			for(var j=0; j < tbele.rows[i].cells.length; j++) {
				$acn(tbele.rows[i].cells[j],className);
			}
		}
	},

	_removeCellClassNames: function(rowNum,className) {
		var tbele = $(this.gridId + '.R' + rowNum);
		for(var i=0; i < tbele.rows.length; i++) {
			for(var j=0; j < tbele.rows[i].cells.length; j++) {
				$rcn(tbele.rows[i].cells[j],className);
			}
		}
	},

	setValue: function(part,name,row,value) {
		var honorChange = typeof arguments[4] == 'boolean' ? arguments[4] : true;
		this._setValue(part,name,row,value,honorChange);
	},

	_setValue: function(part,name,row,value) {
		if( value == null) value = '';
		name = name.toUpperCase();
		part = part.toUpperCase();
		var colNum = 0;
		var colType = '';
		var dataType = '';
		var ele = false;
		var honorChange = typeof arguments[4] == 'boolean' ? arguments[4] : true;
		var curValue = '';


		if(part=='D') {
			honorChange = typeof value == 'boolean' ? value : true;
			//this was an attempt to make 'D' syntax work even if a row was supplied - but it fails
			//if(typeof value == 'undefined') value = row;
			value = row;
			colNum = this._colNumFromName(this._detailViewColNames,name);
			//if(value == $gvs('V.R1.'+name,$(this.gridId+'.DETAILVIEW_PART.FORM'))) honorChange = false;
			if(colNum > -1) {
				name = this._detailViewColNames[colNum];
				colType = this.detailViewColumnInfo[colNum].type.split(',')[0];
				dataType = this.detailViewColumnInfo[colNum].dataType;
				//Make the value html safe
				if(colType == 'label' || colType == 'link') {
					if(value.constructor == Array) value[0] = String(value[0]).replace(/\&/g,'&amp;');
					else value = String(value).replace(/\&/g,'&amp;');
					if(colType == 'label'){
						if(this.detailViewColumnInfo[colNum].displayFormat == 'plain'){
							value = value.replace(/\</g,'&lt;');
							value = value.replace(/\>/g,'&gt;');
							value = value.replace(/\n/g,'<br/>');
						}
					}
				}
				if(typeof this._fieldHelpers_DV[name] != 'undefined'){
					this._fieldHelpers_DV[name].setValue(value,this.gridId+'.D.V.R1.'+name);
					ele = $(this.gridId+'.D.V.R1.'+name);
				} else if(colType == 'label' || colType == 'label-html'  || colType == 'link'  || colType == 'img'){
					$svs(this.gridId+'.D.V.R1.'+name,value);
					ele = $(this.gridId+'.D.V.R1.'+name);
				} else if(colType == 'popup-rte'){
					$svs('V.R1.'+name,value,$(this.gridId+'.DETAILVIEW_PART.FORM'));
					$(this.gridId+'.V.R'+row+'.'+name+'.DISPLAY').innerHTML = value;
				} else if(colType == 'rte'){
					$svs('V.R1.'+name,value,$(this.gridId+'.DETAILVIEW_PART.FORM'));
					var rteObj = window[this.gridId + '_' + name + '_RTEObj'];
					if(typeof rteObj._rteObj != 'undefined') rteObj._rteObj.setHTML(value);
					else rteObj.setHTML(value);
				} else{
					if(dataType == 'l') value = $u.s.toBool('' + value);
					$svs('V.R1.'+name,value,$(this.gridId+'.DETAILVIEW_PART.FORM'));
				}
			} else {
				$svs('V.R1.'+name,value,$(this.gridId+'.DETAILVIEW_PART.FORM'));
			}
			if(!ele && honorChange){
				ele = $n('V.R1.'+name);
				ele = $cetp(ele,$(this.gridId+'.DETAILVIEW_PART.FORM'));
				if(ele){
					for(var i=0;i<ele.length;i++) $e.execute(ele[i],'change');
				}
			} else if(honorChange) $e.execute(ele,'change');
		} else if(part=='G') {
			colNum = this._colNumFromName(this._gridColNames,name);
			//if(value == $gvs('V.R'+row+'.'+name,$(this.gridId+'.R'+row))) honorChange = false;

			if(colNum > -1) {
				name = this._gridColNames[colNum];
				colType = this.gridColumnInfo[colNum].type.split(',')[0];
				dataType = this.gridColumnInfo[colNum].dataType;
				//Make the value html safe
				if(colType == 'label' || colType == 'link') {
					if(value.constructor == Array) value[0] = String(value[0]).replace(/\&/g,'&amp;');
					else value = String(value).replace(/\&/g,'&amp;');
					if(colType == 'label'){
						if(this.gridColumnInfo[colNum].displayFormat == 'plain'){
							value = value.replace(/\</g,'&lt;');
							value = value.replace(/\>/g,'&gt;');
							value = value.replace(/\n/g,'<br/>');
						}
					}
				}

				if(typeof this._fieldHelpers_G[name] != 'undefined'){
					this._fieldHelpers_G[name].setValue(value,this.gridId+'.V.R'+row+'.'+name);
					ele = $(this.gridId+'.V.R'+row+'.'+name);
				} else if(colType == 'label' || colType == 'label-html' || colType == 'link'  || colType == 'img'){
					$svs(this.gridId+'.V.R'+row+'.'+name,value);
					ele = $(this.gridId+'.V.R'+row+'.'+name);
				} else if(colType == 'popup-rte'){
					$svs('V.R'+row+'.'+name,value,$(this.gridId+'.R'+row));
					$(this.gridId+'.V.R'+row+'.'+name+'.DISPLAY').innerHTML = value;
				} else{
					if(dataType == 'l') value = $u.s.toBool('' + value);
					$svs('V.R'+row+'.'+name,value,$(this.gridId+'.R'+row));
				}
			} else {
				$svs('V.R'+row+'.'+name,value,$(this.gridId+'.R'+row));
			}
			if(!ele && honorChange){
				ele = $n('V.R'+row+'.'+name);
				ele = $cetp(ele,$(this.gridId+'.R'+row));
				if(ele){
					for(var i=0;i<ele.length;i++) $e.execute(ele[i],'change');
				}
			} else if(honorChange) {
				$e.execute(ele,'change');
			}
		} else if(part=='S') {
			honorChange = typeof value == 'boolean' ? value : true;
			value = row;
			//if(value == $gvs('S.'+name,$(this.gridId+'.SEARCH_PART.FORM'))) honorChange = false;
			ele = $n('S.'+name);
			if(ele == false) {
				ele = $n('S.'+name + '[]');
			}

			ele = $cetp(ele,$(this.gridId+'.SEARCH_PART.FORM'));
			$svs(ele,value,$(this.gridId+'.SEARCH_PART.FORM'));

			if(ele && honorChange){
				for(var i=0;i<ele.length;i++) $e.execute(ele[i],'change');
			}
		}
	},

	_harvestGrid: function(regionID){
		var nameSpace = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		if (nameSpace != '') nameSpace = nameSpace + '.';
		var rObj = new Array();
		if(typeof regionID == 'object' && regionID.length){
			for(var i=0;i<regionID.length;i++) rObj[rObj.length] = $(regionID[i]);
		} else{
			rObj = [$(regionID)];
		}

		var val = '';
		var rowNum = 0;
		var colNum = 0;
		var eles = new Object();
		var valArr = new Array();
		var curVal = new Array();
		var usedNames = new Array();
		var dirtyRegions = new Array();
		var dirtyValues = new Array();
		var isDirty = false;
		var curOriginalVals = 0;
		if(this.rowEditMode != '') {
			for(var i=0;i<rObj.length;i++){
				dirtyRegions[dirtyRegions.length] = rObj[i].id;
				rowNum = Number(rObj[i].id.split('.')[1].substr(1));
				if(rowNum < 0) {
					curOriginalVals = this._newValues;
				} else {
					rowNum = rowNum -1;
					if(this._originalNullValues.length > 0) valArr.push(A5.ajax.buildURLParam('__Nulls_'+(rowNum+1),this._originalNullValues[rowNum].toString()));
					curOriginalVals = this._originalValues[rowNum];
				}
				eles = rObj[i].getElementsByTagName('input');
				//if grid has arguments that were prompted for at runtime curOriginalVals could be undefined
				if(typeof curOriginalVals == 'undefined') return false;

				for(var j=0;j<eles.length;j++){
					if(eles[j].getAttribute('A5HarvestIgnore') != 'true' && eles[j].id.split('.')[0] == this.gridId){
						colNum = this._colNumFromName(this._gridColNames,eles[j].name.split('.')[2]);
						if(eles[j].type.toLowerCase() == 'radio'){
							if($u.a.find(usedNames,eles[j].name) == -1){
								usedNames[usedNames.length] = eles[j].name;
								if(colNum > -1) valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,curOriginalVals[colNum]);
								isDirty = eles[j].getAttribute('A5IsDirty') == 'true' ? true : false;
								if(isDirty) dirtyValues[dirtyValues.length] = eles[j].name;
								valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs($n(eles[j].name),rObj[i]  ));
							}
						} else if(eles[j].type.toLowerCase() == 'checkbox'){
							if($u.a.find(usedNames,eles[j].name) == -1){
								usedNames[usedNames.length] = eles[j].name;
								if(colNum > -1) valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,curOriginalVals[colNum]);
								isDirty = eles[j].getAttribute('A5IsDirty') == 'true' ? true : false;
								if(isDirty) dirtyValues[dirtyValues.length] = eles[j].name;
								valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs($n(eles[j].name),rObj[i] ));
							}

						//} else if(eles[j].type.toLowerCase() == 'text' || eles[j].type == 'hidden' || eles[j].type == 'password'  || eles[j].type == ''){
						} else if(eles[j].type.toLowerCase() != 'submit' && eles[j].type != 'reset' && eles[j].type != 'button'  && eles[j].type != 'image' && eles[j].type != 'file'){
							if(colNum > -1) valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,curOriginalVals[colNum]);
							isDirty = eles[j].getAttribute('A5IsDirty') == 'true' ? true : false;
							if(isDirty) dirtyValues[dirtyValues.length] = eles[j].name;
							val = $gvs(eles[j]);
							if(val == eles[j].getAttribute('A5WatermarkText')) val = '';
							valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,val);

						}
					}
				}
				eles = rObj[i].getElementsByTagName('select');
				for(var j=0;j<eles.length;j++){
					if(eles[j].getAttribute('A5HarvestIgnore') != 'true' && eles[j].id.split('.')[0] == this.gridId){
						colNum = this._colNumFromName(this._gridColNames,eles[j].name.split('.')[2]);
						if(colNum > -1) valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,curOriginalVals[colNum]);
						isDirty = eles[j].getAttribute('A5IsDirty') == 'true' ? true : false;
						if(isDirty) dirtyValues[dirtyValues.length] = eles[j].name;
						valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name,$gvs(eles[j]));
					}
				}
				eles = rObj[i].getElementsByTagName('textarea');
				for(var j=0;j<eles.length;j++){
					if(eles[j].getAttribute('A5HarvestIgnore') != 'true' && eles[j].id.split('.')[0] == this.gridId){
						colNum = this._colNumFromName(this._gridColNames,eles[j].name.split('.')[2]);
						if(colNum > -1) valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+'old.'+eles[j].name,curOriginalVals[colNum]);
						isDirty = eles[j].getAttribute('A5IsDirty') == 'true' ? true : false;
						if(isDirty) dirtyValues[dirtyValues.length] = eles[j].name;
						val = $gvs(eles[j]);
						if(val == eles[j].getAttribute('A5WatermarkText')) val = '';
						valArr[valArr.length] = a5_AJAX_Form_SubmitValueParam(nameSpace+eles[j].name, val);
					}
				}
			}
		}
		//harvest label values as well
		var lblArr = [];
		var rowi = '';
		var val = '';
		for(var j = 0; j < regionID.length; j++) {
			rowi = regionID[j].split('.R')[1];
			for(var k = 0; k < this.gridColumnInfo.length; k++) {
				if(this.gridColumnInfo[k].type == 'label,label') {
					 val = this.getValue('G',this.gridColumnInfo[k].name,rowi);
					lblArr.push(A5.ajax.buildURLParam('V.R' + rowi + '.' + this.gridColumnInfo[k].name ,val) )
				}
			}
		}


		return 'a5DirtyRegions='+dirtyRegions.join('\n')+'&'+'a5RegionsDirtyValues='+dirtyValues.join('\n')+'&'+valArr.join('&')+'&' + lblArr.join('&');
	},




	_populateRowViewMode: function(rowNum,data,ids) {
		//Used when row is in view mode (i.e. controls are all lables, and in the future, some radio buttons, and checkboxes)
		this._populateRow(rowNum,data,ids,false,[],true);
	},

	_populateRow: function(rowNum,data,ids) {
		//takes a row number, array of data and an array of control Names (without 'V.R5' prefix) and populates the controls.
		//marks each populated cell as 'clean'
		//marks the row as 'clean'
		//check to see if all rows are clean and if so, disabled 'submit' and 'cancel'.

		//if the optional parameter is set to true, then we don't try to set the row's 'clean' flag.
		//(reason is if the user clicks the deleteCheckbox in a row, the row is to be considered dirty, even though
		//all of the individual values are clean.

		var leaveRowStateUnchanged = typeof arguments[3] != 'undefined' ? arguments[3] : false;
		var ignoreColumns = typeof arguments[4] != 'undefined' ? arguments[4] : new Array();

		var typeIndex = 0;
		//_populateRow() can be used to populate the readonly version of each control.
		if(typeof arguments[5] != 'undefined') {
			if(arguments[5]) typeIndex = 1;
		}

		if(this.rowEditMode == 'rod-s' || this.rowEditMode == 'rod') {
			if(this._editModeRows[rowNum-1] == false) typeIndex = 1;
		}




		var refreshOnEditMode = typeof arguments[6] != 'undefined' ? arguments[6] : false;

		var colNum = 0;
		var ele = 0;
		var colType = '';

		for(var i = 0; i < ids.length; i++) {
			if($u.a.find(ignoreColumns,ids[i]) == -1 ) {

				colNum = this._colNumFromName(this._gridColNames,ids[i]);
				colType = '';
				if(colNum > -1) {
					ids[i] = this._gridColNames[colNum];
					if(rowNum > 0) {
						if(!this._originalValues[rowNum-1]) this._originalValues[rowNum-1] = new Array();
						this._originalValues[rowNum-1][colNum] = data[i];
					}
					colType = this.gridColumnInfo[colNum].type.split(',')[typeIndex];
					//Make the value html safe

					if(colType == 'label' || colType == 'link') {
						if(data[i].constructor == Array) data[i][0] = data[i][0].replace(/\&/g,'&amp;');
						else data[i] = data[i].replace(/\&/g,'&amp;');
						if(colType == 'label'){
							if(this.gridColumnInfo[colNum].displayFormat == 'plain') data[i] = data[i].replace(/\</g,'&lt;').replace(/\>/g,'&gt;').replace(/\n/g,'<br/>');
						}
					}
					if(colType  == 'label' || colType == 'label-html' || colType  == 'link' || colType  == 'img' ) {
						ele = $n(this.gridId + '.V.R' + rowNum + '.' + ids[i]);
					} else	{
						ele = $n('V.R' + rowNum + '.' + ids[i]);
					}
				} else {
					ele = $n('V.R' + rowNum + '.' + ids[i]);
				}

				ele = $cetp(ele,$(this.gridId + '.R' + rowNum));
				if(!ele.tagName){
					var ele2 = new Array();
					for(var j=0;j<ele.length;j++) if(ele[j].id.split('.')[0] == this.gridId) ele2.push(ele[j]);
					if(ele2.length != 0) ele = ele2;
					else ele = false;
				}
				if(ele) {
					if(!(refreshOnEditMode == true && $ga(ele[0],'A5IsDirty') == 'true' )) {
						if(typeof this._fieldHelpers_G[ids[i]] != 'undefined' ) {
							this._fieldHelpers_G[ids[i]].setValue(data[i],ele[0]);
						} else {
							//false will change /n into <br>
							$svs(ele , data[i],false, false);
							if(colType == 'popup-rte') $(this.gridId + '.V.R' + rowNum + '.' + ids[i]+'.DISPLAY').innerHTML = data[i];
						}
						$sa(ele ,'A5IsDirty','false');
					}
				}
			}

		}
		if(!leaveRowStateUnchanged) {
			this._setRowState(rowNum,false);
		}


		this._fireWatches('G',rowNum);
		this._executeEvent('afterRowPopulate',{rowNumber: rowNum});


	},


	_populateDirtyRow: function(rowNum,data,ids) {
		//takes a row number, array of data and an array of control Names (without 'V.R5' prefix) and populates the controls.
		//marks the row as 'clean' or 'dirty' as appropriate
		//check to see if any rows is dirty, and if so, enables 'submit' and 'cancel'.
		//used after as submit if any rows in the submitted data had errors
		// - after the submit, all rows are refreshed, and then the row with errors is repopulated with the edited value
		// so that the user has another shot as submitting the changes.
		var typeIndex = 0;
		var colNum = 0;
		var colType = '';
		var isDirty = false;
		var ele = 0;
		this._batchChange = true;
		for(var i = 0; i < ids.length; i++) {
			colNum = this._colNumFromName(this._gridColNames,ids[i]);
			if(colNum > -1) {
				ids[i] = this._gridColNames[colNum];
				colType = this.gridColumnInfo[colNum].type.split(',')[typeIndex];

				//Make the value html safe
				if(colType == 'label' || colType == 'link') {
					if(data[i].constructor == Array) data[i][0] = data[i][0].replace(/\&/g,'&amp;');
					else data[i] = data[i].replace(/\&/g,'&amp;');
					if(colType == 'label'){
						if(this.gridColumnInfo[colNum].displayFormat == 'plain') data[i] = data[i].replace(/\</g,'&lt;').replace(/\>/g,'&gt;').replace(/\n/g,'<br/>');
					}

				}

				if(colType == 'label' || colType == 'label-html' || colType == 'link' || colType == 'img') {
					ele = $n(this.gridId + '.V.R' + rowNum + '.' + ids[i]);
				} else if(colType == 'popup-rte') {
					ele = $n('V.R' + rowNum + '.' + ids[i]);
					$(this.gridId + '.V.R' + rowNum + '.' + ids[i]+'.DISPLAY').innerHTML = data[i];
				} else {
					ele = $n('V.R' + rowNum + '.' + ids[i]);
				}
				ele = $cetp(ele,$(this.gridId + '.R' + rowNum));
				if(rowNum < 0 ) {
					if(this._newValues[colNum] != data[i]) {
						$sa(ele ,'A5IsDirty','true', $(this.gridId + '.R' + rowNum));
						isDirty = true;
						$e.execute(ele[0],'change');
					}
				} else {
					if(this._originalValues[rowNum-1][colNum] != data[i]) {
						$sa(ele ,'A5IsDirty','true', $(this.gridId + '.R' + rowNum));
						isDirty = true;
						$e.execute(ele[0],'change');
					}
				}
			} else {
				ele = $n('V.R' + rowNum + '.' + ids[i]);
				ele = $cetp(ele,$(this.gridId + '.R' + rowNum));
				$sa(ele ,'A5IsDirty','true', $(this.gridId + '.R' + rowNum));
				isDirty = true;
				$e.execute(ele[0],'change');
			}
			//ele = $cetp(ele,$(this.gridId + '.R' + rowNum));


			if(!ele.tagName){
				var ele2 = new Array();
				for(var j=0;j<ele.length;j++) if(ele[j].id.split('.')[0] == this.gridId) ele2.push(ele[j]);
				if(ele2.length != 0) ele = ele2;
				else ele = false;
			}


			if(ele) {
				if(typeof this._fieldHelpers_G[ids[i]] != 'undefined' ) {
					this._fieldHelpers_G[ids[i]].setValue(data[i],ele[0]);
				} else {
					//false will change /n into <br>
					$svs(ele , data[i],false, false);
				}
			}
		}
		this._batchChange = false;

		this._setRowState(rowNum,isDirty);
		this._fireWatches('G',rowNum);

		this._executeEvent('afterRowPopulate',{rowNumber: rowNum});

	},

	_populateDetailView: function(rowNum,data,ids) {
		var leaveRowStateUnchanged = typeof arguments[3] != 'undefined' ? arguments[3] : false;
		var ignoreColumns = typeof arguments[4] != 'undefined' ? arguments[4] : new Array();
		var typeIndex = 0;
		//_populateRow() can be used to populate the readonly version of each control.
		if(typeof arguments[5] != 'undefined') {
			//if(arguments[5]) typeIndex = 1;
			//12/17/10 - A number was being passed in, not a t/f value
			typeIndex = arguments[5];

		}
		var executeOnDetailViewRender = typeof arguments[6] != 'undefined' ? arguments[6] : true;
		if(!leaveRowStateUnchanged) {

					//A5.form.reset(this.gridId +'.DETAILVIEW_PART.FORM');
					this._resetDetailViewForm();
					this._setDetailViewState(false);
		}
		var colNum = 0;
		var ele = 0;
		var colType = '';
		for(var i = 0; i < ids.length; i++) {
			if($u.a.find(ignoreColumns,ids[i]) == -1 ) {
				colNum = this._colNumFromName(this._detailViewColNames,ids[i]);
				if(colNum > -1) {
					ids[i] = this._detailViewColNames[colNum];
					if(rowNum > 0) {
						if(!this._originalDVValues[rowNum-1]) this._originalDVValues[rowNum-1] = new Array();
						this._originalDVValues[rowNum-1][colNum] = data[i];
					}

					colType = this.detailViewColumnInfo[colNum].type.split(',')[typeIndex];
					//Make the value html safe
					if(colType == 'label' || colType == 'link') {
						if(data[i].constructor == Array) data[i][0] = data[i][0].replace(/\&/g,'&amp;');
						else data[i] = data[i].replace(/\&/g,'&amp;');
						if(colType == 'label'){
							if(this.detailViewColumnInfo[colNum].displayFormat == 'plain') data[i] = data[i].replace(/\</g,'&lt;').replace(/\>/g,'&gt;').replace(/\n/g,'<br/>');
						}
					}
					if(colType == 'label' || colType == 'label-html' || colType == 'link'  || colType == 'img' ) {
						ele = $n(this.gridId + '.D.V.R' + '1' + '.' + ids[i]);
					} else if(colType == 'popup-rte') {
						ele = $n('V.R' + '1' + '.' + ids[i]);
						$(this.gridId + '.D.V.R' + '1' + '.' + ids[i]+'.DISPLAY').innerHTML = data[i];
					} else if(colType == 'rte') {
						ele = $n('V.R' + '1' + '.' + ids[i]);
						var rteObj = window[this.gridId + '_' + ids[i] + '_RTEObj'];
						if(typeof rteObj._rteObj != 'undefined') rteObj._rteObj.setHTML(data[i]);
						else rteObj.setHTML(data[i]);

					} else	{
						ele = $n('V.R' + '1' + '.' + ids[i]);
					}
				} else {
					ele = $n('V.R' + '1' + '.' + ids[i]);
				}
				ele = $cetp(ele,$(this.gridId + '.DETAILVIEW_PART.FORM' ));
				if(ele) {
					if(typeof this._fieldHelpers_DV[ids[i]] != 'undefined' ) {
						this._fieldHelpers_DV[ids[i]].setValue(data[i],ele[0]);
					} else {
						//false will change /n into <br>
						$svs(ele , data[i],false, false);
					}
					$sa(ele ,'A5IsDirty','false');
					if(typeof data[i] == 'object') {
						$sa(ele,'A5OriginalValue',data[i].join('||A5ARRAYSEP||'));
					} else {
						$sa(ele,'A5OriginalValue',data[i]);
					}
				}
			}
		}
		this._fireWatches('D',1);
		if(executeOnDetailViewRender) this._executeEvent('onDetailViewRender',{rowNumber: this._detailViewRow});
	},


	_fireWatches: function(part,rowNum) {

		if(part=='G' || part == 'all') {
			if(typeof rowNum == 'number') {
				for(var gridWatch in this._gridWatches) {
					A5.Watch.fire(this.gridId+'.'+gridWatch);
				}

				for(var gridRowWatch in this._gridRowWatches) {
					A5.Watch.fire(this.gridId+'.R' + rowNum + '.'+gridRowWatch);
				}
			} else {

				for(var gridWatch in this._gridWatches) {
					A5.Watch.fire(this.gridId+'.'+gridWatch);
				}
				if(this.pagesInGrid != 0) {

					for(var gridRowWatch in this._gridRowWatches) {
						for(var i = 1; i <= this._rowsInGrid; i++) {
							A5.Watch.fire(this.gridId+'.R' + i + '.'+gridRowWatch);
						}
					}
				}
				for(var gridRowWatch in this._gridRowWatches) {
					for(var i = 1; i <= this._newRowsInGrid; i++) {
						A5.Watch.fire(this.gridId+'.R-' + i + '.'+gridRowWatch);
					}
				}
			}
		}
		if( (part=='D'|| part == 'all') && this._detailViewRow != 0) {
			for(var detailViewWatch in this._detailViewWatches) {
				A5.Watch.fire(this.gridId+'.DV.'+detailViewWatch);
			}
		}
		if(part=='S' || part == 'all') {
			for(var searchWatch in this._searchWatches) {
				A5.Watch.fire(this.gridId+'.S.'+searchWatch);
			}
		}
	},

	_resetDetailViewForm: function() {
		var ele = 0;
		var pele = $(this.gridId +'.DETAILVIEW_PART.FORM');
		var val = '';
		var isDirty = false;
		for(var i=0; i < this.detailViewColumnInfo.length; i++) {
			ele = $n('V.R1.' + this.detailViewColumnInfo[i].name);
			delete ele2;
			var ele2 = new Array();
			isDirty = false;
			for(var j=0;j<ele.length;j++) {
				if($isChild(ele[j],pele)) {
					ele2.push(ele[j]);
					if($ga(ele[j],'A5IsDirty') == 'true') isDirty = true;
				}
			}

			if(isDirty) {
				val = $ga(ele2[0],'A5OriginalValue');
				val = val.split('||A5ARRAYSEP||');

				if(val.length == 1) val = val[0];
				if(typeof this._fieldHelpers_S[this.detailViewColumnInfo[i].name] == 'object') {
					this._fieldHelpers_S[this.detailViewColumnInfo[i].name].setValue(val,ele2);
				} else {
					$svs(ele2,val);
				}
				$sa(ele2,'A5IsDirty','false');
			}
		}
		$sa(pele,'A5IsDirty','false');
	},


	_populateDirtyDetailView: function(rowNum,data,ids) {

		var typeIndex = 0;
		var colNum = 0;
		var colType = '';
		var isDirty = false;
		var ele = 0;
		var val = '';
		var oVal = '';
		this._batchChange = true;
		for(var i = 0; i < ids.length; i++) {
			colNum = this._colNumFromName(this._detailViewColNames,ids[i]);
			if(colNum > -1) {
				ids[i] = this._detailViewColNames[colNum];
				colType = this.detailViewColumnInfo[colNum].type.split(',')[typeIndex];
				//Make the value html safe
				if(colType == 'label' || colType == 'link') {
					if(data[i].constructor == Array) data[i][0] = data[i][0].replace(/\&/g,'&amp;');
					else data[i] = data[i].replace(/\&/g,'&amp;');
					if(colType == 'label'){
						if(this.detailViewColumnInfo[colNum].displayFormat == 'plain') data[i] = data[i].replace(/\</g,'&lt;').replace(/\>/g,'&gt;').replace(/\n/g,'<br/>');
					}

				}
				if(colType == 'label' || colType == 'label-html' || colType == 'link' || colType == 'img') {
					ele = $n(this.gridId + '.D.V.R1.' + ids[i]);
				} else if(colType == 'popup-rte') {
					ele = $n('V.R1.' + ids[i]);
					$(this.gridId + '.D.V.R1.' + ids[i]+'.DISPLAY').innerHTML = data[i];
				} else if(colType == 'rte') {
					ele = $n('V.R' + '1' + '.' + ids[i]);
					window[this.gridId + '_' + ids[i] + '_RTEObj']._rteObj.setHTML(data[i]);
				} else {
					ele = $n('V.R1.' + ids[i]);
				}
				ele = $cetp(ele,$(this.gridId + '.DETAILVIEW_PART.FORM' ));
				if(ele) {
					if(ele.constructor == Array || typeof ele.tagName != 'undefined') {
						if(ele.tagName) {
							val = ele.getAttribute('A5OriginalValue').split('||A5ARRAYSEP||');
						} else {
							//protect against error if field is a label
							var oVal = ele[0].getAttribute('A5OriginalValue');
							val = '';
							if(oVal) val = oVal.split('||A5ARRAYSEP||');
							//val = ele[0].getAttribute('A5OriginalValue').split('||A5ARRAYSEP||');
						}
						if(val.toString() != data[i].toString()) {
							$sa(ele ,'A5IsDirty','true', $(this.gridId + '.DETAILVIEW_PART.FORM'));
							isDirty = true;
							$e.execute(ele[0],'change');
							//selwyn 7/9/11 - executing the the 'change' event set A5IsDirty back to false, so reset it to true
							$sa(ele ,'A5IsDirty','true', $(this.gridId + '.DETAILVIEW_PART.FORM'));
						}
					}
				}
			} else {
				ele = $n('V.R1.' + ids[i]);
				ele = $cetp(ele,$(this.gridId + '.DETAILVIEW_PART.FORM' ));
				if(ele) {
					$sa(ele ,'A5IsDirty','true', $(this.gridId + '.DETAILVIEW_PART.FORM'));
					isDirty = true;
					$e.execute(ele[0],'change');
				}
			}

			if(ele) {
				if(typeof this._fieldHelpers_DV[ids[i]] != 'undefined' ) {
					this._fieldHelpers_DV[ids[i]].setValue(data[i],ele[0]);
				} else {
					//false will change /n into <br>
					$svs(ele , data[i],$(this.gridId + '.D.R' + '1'), false);
				}
			}
		}

		this._batchChange = false;

		if(isDirty) this._setDetailViewState(isDirty);
		this._fireWatches('D',1);
		//if(isDirty) this._setDVControlDirty();

	},



	_deleteRow: function(rowNum) {
		$(this.gridId + '.R' + rowNum).style.display = 'none';
		$sa(this.gridId + '.R' + rowNum,'A5DeletedRow','true');
		this._setRowState(rowNum,false);
		var focusRowNum = 0;
		for(var i = rowNum +1; i <= this._rowsInGrid; i++) {
			if($(this.gridId + '.R' + i).style.display != 'none') {
				focusRowNum = i;
				break;
			}
		}

		if(focusRowNum == 0) {
			for(var i = rowNum - 1; i > 0; i--) {
				if($(this.gridId + '.R' + i).style.display != 'none') {
					focusRowNum = i;
					break;
				}
			}
		}

		if(focusRowNum != 0) {
			this.setFocus(focusRowNum);
		} else {
			this._focusRow = 0;
		}
	},

	_setRowState: function(rowNum,isDirty) {

		var stateChange = false;
		if(rowNum < 0) {
			if(this._editPermissions.allowInsert == false) return false;
			if(this._dirtyNewRows[Math.abs(rowNum)-1] != isDirty) {
				stateChange = true;
				this._dirtyNewRows[Math.abs(rowNum)-1] = isDirty;
			}
		} else {
			if(this._editPermissions.allowUpdate == false && this._editPermissions.allowDelete == false) return false;
			if(this._dirtyRows[rowNum-1] != isDirty) {
				stateChange = true;
				this._dirtyRows[rowNum-1] = isDirty;
			}
		}
		if(stateChange) {

			var mode = 'view';

			if(isDirty) {
				if(rowNum < 0) mode = 'enter';
				else mode = 'change';
				$acn(this.gridId +'.TD.R'+(rowNum)+'.__SYSTEM_STATUSCOLUMN','A5GridRowIsDirty');
				this._gridRowState = mode;
				this._executeEvent('onRowStateChange',{'mode': mode, 'isDirty': true, 'rowNumber': rowNum});
			} else {
				$rcn(this.gridId +'.TD.R'+(rowNum)+'.__SYSTEM_STATUSCOLUMN','A5GridRowIsDirty');
				this._gridRowState = mode;
				this._executeEvent('onRowStateChange',{'mode': mode, 'isDirty': false, 'rowNumber': rowNum});
			}



			if(isDirty){
				if(($u.a.find(this._dirtyRows,true) != -1 || $u.a.find(this._dirtyNewRows,true) != -1) && !this._isDirty) {
					this._isDirty = true;

					this._enable(this.gridId + '.GRID_PART.SUBMITBUTTON_BOTTOM',true);
					this._enable(this.gridId + '.GRID_PART.CANCELBUTTON_BOTTOM',true);

					this._enable(this.gridId + '.GRID_PART.SUBMITBUTTON_TOP',true);
					this._enable(this.gridId + '.GRID_PART.CANCELBUTTON_TOP',true);
					this._executeEvent('onGridStateChange',{'isDirty': true});
					//if a row client-side expression references grid.isDirty, only the row with focus will get updated when the
					//grid state changes. If you want to update all rows, then uncomment this code:
					//this._fireWatches('G','all');


				}
			} else{
				if(($u.a.find(this._dirtyRows,true) == -1 && $u.a.find(this._dirtyNewRows,true) == -1) && this._isDirty) {
					this._isDirty = false;

					this._enable(this.gridId + '.GRID_PART.SUBMITBUTTON_BOTTOM',false);
					this._enable(this.gridId + '.GRID_PART.CANCELBUTTON_BOTTOM',false);

					this._enable(this.gridId + '.GRID_PART.SUBMITBUTTON_TOP',false);
					this._enable(this.gridId + '.GRID_PART.CANCELBUTTON_TOP',false);
					this._executeEvent('onGridStateChange',{'isDirty': false});
					//see comment in the true block
				}
			}
		}

	},

	_setDetailViewImages: function(mode) {
		if(typeof mode == 'undefined') mode = 'view';
		var ele_cancelEdits = $(this.gridId + '.D.IMG.CANCELEDIT');
		var ele_save = $(this.gridId + '.D.IMG.SAVE');
		var ele_saveEnter = $(this.gridId + '.D.IMG.SAVEANDENTER');

		var nrEle =  $(this.gridId +'.DETAILVIEW_PART.NEWRECORDBUTTON');
		var cnrEle =  $(this.gridId +'.DETAILVIEW_PART.CANCELNEWRECORDBUTTON');

		if(mode == 'change') {
			if(ele_cancelEdits) ele_cancelEdits.src	= this._dVImages['cancelEdits'];
			if(ele_save) ele_save.src = this._dVImages['saveRecord'];
			if(ele_saveEnter) ele_saveEnter.src = this._dVImages['saveAndEnter'];
		} else if(mode == 'enter') {
			if(ele_cancelEdits) ele_cancelEdits.src = this._dVImages['cancelEdits'];
			if(ele_save) ele_save.src = this._dVImages['saveRecord'];
			if(ele_saveEnter) ele_saveEnter.src = this._dVImages['saveAndEnter'];
		} else if(mode == 'view') {
			if(ele_cancelEdits) ele_cancelEdits.src	= this._dVImages['d_cancelEdits'];
			if(ele_save) ele_save.src = this._dVImages['d_saveRecord'];
			if(ele_saveEnter) ele_saveEnter.src = this._dVImages['d_saveAndEnter'];
			if(nrEle) nrEle.style.display = '';
			if(cnrEle) cnrEle.style.display = 'none';
		}
	},


	_setDetailViewState: function(isDirty) {
		var mode = this._detailViewState;
		if(this._detailViewIsDirty != isDirty) {
			mode = 'view';
			if(this._detailViewRow < 0) mode = 'enter';

			if(mode=='enter') {
				if(this._editPermissions.allowInsert == false && isDirty) return false;
			} else if(mode == 'view') {
				if(this._editPermissions.allowUpdate == false && isDirty) return false;
			}

			if(isDirty){
				this._detailViewIsDirty = true;
				this._enable(this.gridId + '.DETAILVIEW_PART.SUBMITBUTTON',true);
				this._enable(this.gridId + '.DETAILVIEW_PART.CANCELEDITSBUTTON',true);
				this._enable(this.gridId + '.DETAILVIEW_PART.SAVEANDENTERBUTTON',true);
				if($(this.gridId+'.DVTOOLBAR_VIEWMODE')) $(this.gridId+'.DVTOOLBAR_VIEWMODE').style.display = 'none';
				if(this._detailViewRow == -1) {
					//enter mode
					if($(this.gridId+'.DVTOOLBAR_CHANGEMODE')) $(this.gridId+'.DVTOOLBAR_CHANGEMODE').style.display = 'none';
					if($(this.gridId+'.DVTOOLBAR_ENTERMODE')) $(this.gridId+'.DVTOOLBAR_ENTERMODE').style.display = '';
				} else {
					//change mode
					if($(this.gridId+'.DVTOOLBAR_CHANGEMODE')) $(this.gridId+'.DVTOOLBAR_CHANGEMODE').style.display = '';
					if($(this.gridId+'.DVTOOLBAR_ENTERMODE')) $(this.gridId+'.DVTOOLBAR_ENTERMODE').style.display = 'none';
				}
				if(this._detailViewRow < 0) mode = 'enter';
				else mode = 'change';
				this._detailViewState = mode;
				this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': true, 'rowNumber': this._detailViewRow});
			} else{
				this._detailViewIsDirty = false;
				this._enable(this.gridId + '.DETAILVIEW_PART.SUBMITBUTTON',false);
				this._enable(this.gridId + '.DETAILVIEW_PART.CANCELEDITSBUTTON',false);
				this._enable(this.gridId + '.DETAILVIEW_PART.SAVEANDENTERBUTTON',false);
				if($(this.gridId+'.DVTOOLBAR_VIEWMODE')) $(this.gridId+'.DVTOOLBAR_VIEWMODE').style.display = '';
				if($(this.gridId+'.DVTOOLBAR_CHANGEMODE')) $(this.gridId+'.DVTOOLBAR_CHANGEMODE').style.display = 'none';
				if($(this.gridId+'.DVTOOLBAR_ENTERMODE')) $(this.gridId+'.DVTOOLBAR_ENTERMODE').style.display = 'none';
				this._detailViewState = mode;
				this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': false, 'rowNumber': this._detailViewRow});
			}
		} else {
			if(this._detailViewRow < 0 && mode == 'view') {
				mode = 'enter';
				this._detailViewState = mode;
				this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': isDirty, 'rowNumber': this._detailViewRow});
			} else if(this._detailViewRow > 0 && mode == 'enter') {
				mode = 'view';
				this._detailViewState = mode;
				this._executeEvent('onDetailViewStateChange',{'mode': mode, 'isDirty': isDirty, 'rowNumber': this._detailViewRow});
			}
		}
		this._setDetailViewImages(mode);
		ele_delete = $(this.gridId + '.D.IMG.DELETE');
		if(this._detailViewRow == -1) {
			this._enable(this.gridId + '.DETAILVIEW_PART.DELETERECORDBUTTON',false);
			if(ele_delete) ele_delete.src = this._dVImages['d_deleteRecord'];
		} else {
			this._enable(this.gridId + '.DETAILVIEW_PART.DELETERECORDBUTTON',true);
			if(ele_delete) ele_delete.src = this._dVImages['deleteRecord'];
		}
	},

	_internalRefreshLinkedContent: function() {
		clearTimeout(this._refreshLinkedContentTO);
		var classInst = this;
		this._refreshLinkedContentTO = setTimeout(function() {
			classInst.refreshLinkedContent();
			delete classInst;
		},200);
	},


	refreshLinkedContent: function() {
			if(typeof this.linkedObjects !== 'undefined') {
				for(var i = 0; i < this.linkedObjects.length; i++) {
					if(window[this.linkedObjects[i]]) window[this.linkedObjects[i]].reset();
				}
			}
	},

	_resetRow: function(rowNum) {
		if(!this._executeEvent('canRowCancelEdits',{rowNumber: rowNum})) return false;
		var classInst = this;
		A5.msgBox.show(this.messages.t_undoEditsWarning,this.messages.undoEditsWarning,'OC',function(action) {
			if(action=='ok') classInst._resetRowWithoutConfirmation(rowNum);
		});
	},

	_resetImage: function(part,rowNum,name) {

		var colInfo  = '';
		var _d = '';
		if(part.toLowerCase() == 'd') {
			colInfo = this.detailViewColumnInfo;
			_d = this._originalDVValues[0];
		} else {
			colInfo = this.gridColumnInfo;
			_d = this._originalValues[rowNum -1];
		}
		var ix = -1;
		for(var i = 0; i < colInfo.length; i++) {
			if(colInfo[i]['name'].toLowerCase() == name.toLowerCase()) {
				ix = i;
				break;
			}
		}
		if(ix == -1) return false;



		var val = '';
		if(typeof _d != 'undefined') val = _d[ix][0];
		if(typeof this.__oldImage != 'undefined') {
			val = this.__oldImage;
			delete this.__oldImage;
		}


		if(part.toLowerCase() == 'd') {
			this.setValue('d',name,val,false);
		} else {
			this.setValue('g',name,rowNum,val,false);
		}





	},

	_resetRowWithoutConfirmation: function(rowNum) {
		if(rowNum < 0) {

			var ele = '';
			ele = $(this.gridId + '._HIDDENA5DATA.R' + rowNum);
			if(ele) ele.value = '';

			this._populateRow(rowNum,this._newValues,this._gridColNames);
			var ele = '';
			var ctl = this.gridColumnInfo;
			for(var i = 0; i < ctl.length; i++) {
				if(ctl[i].type.substr(0,3) == 'img') {
					ele = $(this.gridId + '.V.R' + rowNum + '.' + ctl[i].name + '_HIDDENA5FN');
					if(ele) {
						ele.value = '';
						$sa(ele,'a5isdirty',false);
					}
				}
			}

		} else {
			//existing row
			this._populateRow(rowNum,this._originalValues[rowNum-1],this._gridColNames);
			if($(this.gridId +'.TD.R'+rowNum+'.__SYSTEM_ERRORCOLUMN').className.search('A5GridHasRowError') != -1) this.refreshRow(rowNum);
			var ele = '';
			var ctl = this.gridColumnInfo;
			for(var i = 0; i < ctl.length; i++) {
				if(ctl[i].type.substr(0,3) == 'img') {
					ele = $(this.gridId + '.V.R' + rowNum + '.' + ctl[i].name + '_HIDDENA5FN');
					if(ele) {
						ele.value = '';
						$sa(ele,'a5isdirty',false);
					}
				}
			}

		}
		var rowArray = new Array();
		rowArray.push(rowNum);
		this.clearRowErrors(rowArray);
		this.clearErrors([rowNum]);

		var data = '';
		for(var i=0;i<this.gridColumnInfo.length;i++) {
			if(this.gridColumnInfo[i].type == 'select,label') {
				data = this._cascadingSelectChoices[this.gridId + '.V.R' + rowNum + '.' + this.gridColumnInfo[i].name];
				if(data) {
					A5.form.populateSelect(	this.gridId + '.V.R' + rowNum + '.' + this.gridColumnInfo[i].name, data.value, data.data, true);
				}
			}

		}
		this._executeEvent('afterRowCancelEdits',{rowNumber: rowNum});
		this._executeEvent('afterCancelEdits',{rowNumber: rowNum});
	},

	resetGridPart: function() {
		if(!this._executeEvent('canGridCancelEdits',{})) return false;

		var classInst = this;

		A5.msgBox.show(this.messages.t_undoAllEditsWarning,this.messages.undoAllEditsWarning,'OC',function(action) {
			if(action=='ok') classInst._resetGridPartWithoutConfirmation();
		});
	},

	_resetGridPartWithoutConfirmation: function() {
		//Takes two optional arguments. true/false and the text of the confirmation message.
		if(typeof arguments[0] != 'undefined') {
			if(arguments[0] == true) {
				var message = typeof arguments[1] != 'undefined' ? arguments[1] : '';
				if(message == '') message = 'Cancel changes?';
				var result = confirm(message);
				if(!result) return false;
			}
		}

		for(var i=1;i<=this._rowsInGrid;i++) {
			if(this._dirtyRows[i-1]) this._resetRowWithoutConfirmation(i);
		}

		for(var i=1;i<=this._newRowsInGrid;i++) {
			if(this._dirtyNewRows[i-1]) this._resetRowWithoutConfirmation(i*-1);
		}

		this.clearErrors();
		this.clearRowErrors();
		this._executeEvent('afterGridCancelEdits',{});
	},



	populateDropdownBox: function(part,columnName,rowNum,data,clearExisting) {
		var ele = '';
		var curData = '';
		if(part=='G') {
			ele =  this.gridId + '.V.R'+rowNum+'.' + columnName;
			curData = this.getValue('G',columnName,rowNum);
		} else if(part == 'S') {
			var ele = $(this.gridId + '.S.' + columnName);
			curData = this.getValue('S',columnName);
			if (ele) {
		  		A5.form.populateSelect(ele,curData,data,clearExisting);
		  	}
			var ele = $(this.gridId + '.S._TO.' + columnName);

			if (ele) {
		  		A5.form.populateSelect(ele,curData,data,clearExisting);
		  	}
		} else {
			ele = this.gridId + '.D.V.R1.' + columnName;
			curData = this.getValue('D',columnName);
		}
		ele = $(ele);
		if(ele) {
			A5.form.populateSelect(ele,curData,data,clearExisting);
		}
	},




	prepareSearch: function() {

		if(this.embeddedSearchPart) {
			if(this.embedSearchPartStyle == 's') var e = $(this.gridId + '.EMBEDDED_FREEFORM_SEARCH');
			else var e = $(this.gridId + '.SEARCH_PART.FORM');

			if(typeof this._embeddedSearchIsOpen != 'undefined') {
				if(this._embeddedSearchIsOpen) e.style.display = '';
				else e.style.display = 'none';
			}
		}

		if($(this.gridId + '.SEARCH_PART.FORM')){
			A5.form.prepare(this.gridId + '.SEARCH_PART.FORM');
			if(this.embeddedSearchPart) {
				var ele = 0;
				for(var i=0; i<this.searchColumnInfo.length; i++) {
					ele = $(this.gridId + '.S.' + this.searchColumnInfo[i].name);
					$e.add(ele,'change',this._searchOnChange,this);
					if(this._searchValues[ele.id]) $svs(ele,this._searchValues[ele.id]);
					if(this.searchColumnInfo[i].isRange) {
						ele = $(this.gridId + '.S._TO.' + this.searchColumnInfo[i].name);
						$e.add(ele,'change',this._searchOnChange,this);
						if(this._searchValues[ele.id]) $svs(ele,this._searchValues[ele.id]);
					}
				}

				ele = $(this.gridId + '_SORTCOLUMN');
				if(ele) {
					$e.add(ele,'change',this._searchOnChange,this);
					if(this._searchValues[ele.id]) $svs(ele,this._searchValues[ele.id]);
				}
				ele = $(this.gridId + '_SORTDIR');
				if(ele) {
					$e.add(ele,'change',this._searchOnChange,this);
					if(this._searchValues[ele.id]) $svs(ele,this._searchValues[ele.id]);
				}
				ele = $(this.gridId + '_ROWCOUNT');
				if(ele) {
					$e.add(ele,'change',this._searchOnChange,this);
					if(this._searchValues[ele.id]) $svs(ele,this._searchValues[ele.id]);
				}
				//SORTCOLUMN, SORTDIR, ROWCOUNT

			}

			var sIndex = -1;
			for(var fHelper in this._fieldHelpers_S) {
				sIndex = $u.a.find(this._searchColNames,fHelper);
				this._fieldHelpers_S[fHelper].bind(this.gridId +'.S.' + fHelper);
				if(this.searchColumnInfo[sIndex].isRange) {
					this._fieldHelpers_S[fHelper].bind(this.gridId +'.S._TO.' + fHelper);
				}
			}



			for(var searchWatch in this._searchWatches) {
				var watchIds = new Array();

				//for(var i = 0;i<this._searchWatches[searchWatch].watch.length; i++) watchIds.push(this.gridId + '.S.' + this._searchWatches[searchWatch].watch[i]);
				var eleTagName = '';
				var eles = 0;
				for(var i = 0;i<this._searchWatches[searchWatch].watch.length; i++){
					if(this._searchWatches[searchWatch].watch[i] == this.gridId + '.STATEINFO') watchIds.push(this.gridId + '.STATEINFO');
					else {
						eleTagName = $(this.gridId + '.S.' + this._searchWatches[searchWatch].watch[i]).tagName.toLowerCase();
						if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
							eles = $n('S.' + this._searchWatches[searchWatch].watch[i]);
							eles = $cetp(eles,$(this.gridId + '.SEARCH_PART.FORM'));
							for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
						} else watchIds.push(this.gridId + '.S.' + this._searchWatches[searchWatch].watch[i]);
					}
				}


				A5.Watch.add(this.gridId+'.S.'+searchWatch,watchIds,{
					data: {rowNumber: 1},
					onChange: this._searchWatches[searchWatch].onChange
				});
			}
		}

		this._executeEvent('onSearchRender',{});
	},

	_searchOnChange: function(e,classInst) {
		classInst._searchValues[this.id] = $gvs(this);
	},

	prepareGrid: function() {
		if(this._namedLayout) {
			if(!this._namedLayout=='') {
				var ele = $(this.gridId + '.NAMEDLAYOUTSELECTOR');
				if(ele) $svs(ele,this._namedLayout);
			}
		}
		this._dirtyRows =  new Array();
		this._dirtyNewRows =  new Array();
		this._editModeRows =  new Array();
		this._isDirty = false;
		if(this.pagesInGrid != 0) {
			for(var i=1;i<=this._rowsInGrid;i++) {
				this._prepareRow(i);
				}
		}
		for(var i=0;i<this.gridColumnInfo.length; i++) {
			$e.add(this.gridId+'.QBE.I.' + this.gridColumnInfo[i].name,'click',this._gridQBEMenu,this,false,this.gridId+'.GRID');
		}

		for(var i=1;i<=this._newRowsInGrid;i++) {
			this._prepareNewRow(i);
			}
		if(this.checkBoxSelector == 'multiplePage') {
			var keystr = '';
			for(var i = 0; i < this._keys.length; i++) {
				keystr = this._keys[i].toString();
				for(var j = 0; j < this._checkedRowKeys.length; j++) {
					if(keystr == this._checkedRowKeys[j].toString()) {
						$svs(this.gridId + '.V.R' + (i + 1 ) +'.__ROWCHECKBOX',true);
						break;
					}
				}
			}
		}
		$e.add(this.gridId+'.QBE.MENUFORM','click',function(e) {$e.stopPropagation(e);  },null,false,this.gridId+'.GRID');
		for(var i = 0; i < this._hiddenCols.length; i++) {
			this._showGridColumn(this._hiddenCols[i],false);
		}
		this._executeEvent('onGridRender',{});
		if(this.LCSName != '') this._LCS_clearLocks(this.LCSName);


		for(var gridWatch in this._gridWatches) {
			var watchIds = new Array();
			var eleTagName = '';
			var eles = 0;
			var tempEle = 0;
			var tempRowNum = 0;

			for(var i = 0;i<this._gridWatches[gridWatch].watch.length; i++){
				if(this._gridWatches[gridWatch].watch[i] == this.gridId + '.STATEINFO') watchIds.push(this.gridId + '.STATEINFO');
				else {
					if(this._gridWatches[gridWatch].target  == 'new' || this.pagesInGrid != 0) tempRowNum = -1;
					else tempRowNum = 1;
					tempEle = $(this.gridId + '.V.R'+tempRowNum+'.' + this._gridWatches[gridWatch].watch[i]);
					eleTagName = '';
					if(tempEle) eleTagName = tempEle.tagName.toLowerCase();
					if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
						if(this._gridWatches[gridWatch].target != 'new'){
							if(this.pagesInGrid != 0) {
								for(var j=1;j<=this._rowsInGrid;j++){
									eles = $n('V.R' + j + '.' + this._gridWatches[gridWatch].watch[i]);
									eles = $cetp(eles,$(this.gridId + '.R' + j));
									for(var k=0;k<eles.length;k++) watchIds.push(eles[k].id);
								}
							}
						}
						if(this._gridWatches[gridWatch].target == 'new' || this._gridWatches[gridWatch].target == 'all'){
							for(var j=1;j<=this._newRowsInGrid;j++){
								eles = $n('V.R-' + j + '.' + this._gridWatches[gridWatch].watch[i]);
								eles = $cetp(eles,$(this.gridId + '.R-' + j));
								for(var k=0;k<eles.length;k++) watchIds.push(eles[k].id);
							}
						}
					} else {
						if(this._gridWatches[gridWatch].target != 'new'){
							if(this.pagesInGrid != 0) {
								for(var j=1;j<=this._rowsInGrid;j++) watchIds.push(this.gridId + '.V.R' + j + '.' + this._gridWatches[gridWatch].watch[i]);
							}
						}
						if(this._gridWatches[gridWatch].target == 'new' || this._gridWatches[gridWatch].target == 'all'){
							for(var j=1;j<=this._newRowsInGrid;j++) watchIds.push(this.gridId + '.V.R-' + j + '.' + this._gridWatches[gridWatch].watch[i]);
						}
					}
				}
			}

			A5.Watch.add(this.gridId+'.'+gridWatch,watchIds,{
				onChange: this._gridWatches[gridWatch].onChange
			});

		}

		/*
		if($(this.gridId + '.GRIDSCROLLTABLE')) {
			var classInst = this;
			setTimeout(function() {
				if($(classInst.gridId + '.GRIDHEADERSCROLLTABLE')) $(classInst.gridId + '.GRIDHEADERSCROLLTABLE').style.width = $(classInst.gridId +'.GRIDSCROLLTABLE').offsetWidth + 'px';
				if($(classInst.gridId + '.GRIDFOOTERSCROLLTABLE')) $(classInst.gridId + '.GRIDFOOTERSCROLLTABLE').style.width = $(classInst.gridId +'.GRIDSCROLLTABLE').offsetWidth + 'px';
				classInst = null;
			},10);
		}
		*/


	},

	_LCS_clearLocks: function(name) {
		AUI.WaitDialog.clearLocal(this.parentGridAlias + '_LCS_' + name);
	},

	selectNamedLayout: function(name) {
		if(!this._executeEvent('canNamedLayoutSelect',{layoutName: name})) return false;
		this.ajaxCallback('G','none','__systemChangeLayoutName','','__selectedLayoutName='+name);
	},

	_setDetailViewControlsDisabledState: function() {
		var rele = $(this.gridId + '.DETAILVIEW_PART.FORM');
		if(this.detailViewEditMode == 'dvod' &&  this._editModeRows[0] != true && this._detailViewRow > 0 ) {
			eles = rele.getElementsByTagName('input');
			for(var i = 0; i < eles.length; i++) eles[i].disabled = true;
			eles = rele.getElementsByTagName('select');
			for(var i = 0; i < eles.length; i++) eles[i].disabled = true;
			eles = rele.getElementsByTagName('textarea');
			for(var i = 0; i < eles.length; i++) eles[i].disabled = true;
		}
	},

	prepareDetailView: function() {
		if(this._detailViewRow == 0) {
			this._detailViewWindowState = '';
		} else {
			this._detailViewWindowState = 'open';
		}
		$e.removeGroup(this.gridId+'.DETAILVIEW_PART.FORMEvents2');

		A5.form.prepare(this.gridId + '.DETAILVIEW_PART.FORM');
		var rele = $(this.gridId + '.DETAILVIEW_PART.FORM');
		$sa(rele,'A5OnDirty',this.gridId +'_GridObj._setDVControlDirty()');
		var eles = rele.getElementsByTagName('input');
		$e.add(eles,'focus',this._setDVControlFocus,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');
		$e.add(eles,'blur',this._setDVControlBlur,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');

		for(var i = 0; i < eles.length; i++) {
			if($u.a.find(this._disabledBySecurityDV,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
		}

		eles = rele.getElementsByTagName('select');
		$e.add(eles,'focus',this._setDVControlFocus,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');
		$e.add(eles,'blur',this._setDVControlBlur,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');

		for(var i=0;i<eles.length;i++) {
			if($ga(eles[i],'A5CascadingSelect') == 'true') {
				delete selectData;
				var selectData = new Object();
				selectData.value = eles[i].value;
				selectData.data = new Array();
				for(var j=0;j<eles[i].options.length;j++) {
					selectData.data.push([eles[i].options[j].text,eles[i].options[j].value]);
				}
				this._cascadingSelectChoices[eles[i].id] = selectData;
			}
			if($u.a.find(this._disabledBySecurityDV,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
		}

		eles = rele.getElementsByTagName('textarea');
		$e.add(eles,'focus',this._setDVControlFocus,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');
		$e.add(eles,'blur',this._setDVControlBlur,this,false,this.gridId+'.DETAILVIEW_PART.FORMEvents2');

		for(var i = 0; i < eles.length; i++) {
			if($u.a.find(this._disabledBySecurityDV,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
		}


		this._dvkw.off();

		this._setDetailViewState(false);
		this._setDetailViewControlsDisabledState();


		if(this._getEditState('D',1) != 'view') {
			for(var fHelper in this._fieldHelpers_DV) {
				this._fieldHelpers_DV[fHelper].bind(this.gridId +'.D.V.R1.' + fHelper);
			}
		}

		var fireWatchInitial = true;
		if(this._detailViewRow == 0) fireWatchInitial = false;

		for(var detailViewWatch in this._detailViewWatches) {
			var watchIds = new Array();
			//for(var i = 0;i<this._detailViewWatches[detailViewWatch].watch.length; i++) watchIds.push(this.gridId + '.D.V.R1.' + this._detailViewWatches[detailViewWatch].watch[i]);

			var eleTagName = '';
			var eles = 0;
			for(var i = 0;i<this._detailViewWatches[detailViewWatch].watch.length; i++){
				if(this._detailViewWatches[detailViewWatch].watch[i] == this.gridId + '.STATEINFO') watchIds.push(this.gridId + '.STATEINFO');
				else {
					tempEle = $(this.gridId + '.D.V.R1.' + this._detailViewWatches[detailViewWatch].watch[i]);
					eleTagName = '';
					if(tempEle) eleTagName = tempEle.tagName.toLowerCase();

					if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
						eles = $n('V.R1.' + this._detailViewWatches[detailViewWatch].watch[i]);
						eles = $cetp(eles,$(this.gridId + '.DETAILVIEW_PART.FORM_CONTAINER_DIV'));
						for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
					} else watchIds.push(this.gridId + '.D.V.R1.' + this._detailViewWatches[detailViewWatch].watch[i]);
				}
			}


			A5.Watch.add(this.gridId+'.DV.'+detailViewWatch,watchIds,{
				fireInitial: fireWatchInitial,
				data: {rowNumber: this._detailViewRow},
				onChange: this._detailViewWatches[detailViewWatch].onChange
			});
		}

		if(this._detailViewRow > 0) this._executeEvent('onDetailViewRender',{rowNumber: this._detailViewRow});


		//ruud luiten
		//this solves problem: DV set to hide Grid when DV is open. DV set to show new record when no records in query. When user clears search, Grid, not DV should be shown
		if(this.detailViewPosition == 'page') {
			if(this.hideGridWhenDetailViewIsShown == true) {
				if(this._detailViewWindowState == 'open') {
					var ele = $(this.gridId + '.GRID_PART.FORM_CONTAINER_DIV');
					ele.style.display = 'none';
				}
			}
		}



	},

	runAction: function(name) {
		var objEle = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		var actObj = this._actions;
		if(typeof actObj == 'undefined') return false;
		var js = actObj[name];
		if(typeof js == 'undefined') return false;
		//js = js.replace('(this)','(objEle)');
		//js = js.replace(',this)',',objEle)');
		//if(js != '') eval(js);
		if(js != '') {
			var func = Function(js);
			func.call(objEle);
		}



	},

	animateToggle: function(ele) {
		var animateObj = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		if(typeof animateObj == 'boolean') animateObj = {type: 'slide', duration: 600};
		var pE = '';
		if(typeof ele == 'string') pE = $(ele);
		else pE = ele;
		if(!pE) return false;
		A5.u.element.toggle(pE,animateObj);
	},

	animateShow: function(ele) {
		var pE = '';
		if(typeof ele == 'string') pE = $(ele);
		else pE = ele;
		if(!pE) return false;
		if(pE.style.display == '') return false;
		this.animateToggle(ele,arguments[1]);
	},

	animateHide: function(ele) {
		var pE = '';
		if(typeof ele == 'string') pE = $(ele);
		else pE = ele;
		if(!pE) return false;
		if(pE.style.display == 'none') return false;
		this.animateToggle(ele,arguments[1]);
	},


	_showInlineDetailView: function() {

		if(this.detailViewPosition == 'inline') {
			var ele = $(this.gridId + '.RDV');
			if(this._detailViewRow == -1) {
				var pele = $(this.gridId + '.R' + this._rowsInGrid).nextSibling;
			} else {
				var pele = $(this.gridId + '.R' + this._detailViewRow).nextSibling;
				if (!pele) {
					$(this.gridId + '.R' + this._detailViewRow).parentNode.appendChild(ele);
				}
			}


			if(pele) pele.parentNode.insertBefore(ele,pele);

			if($(this.gridId + '.DETAILVIEW_PART.COMPLETE').style.display == 'none') ele.style.display = 'none';
			else ele.style.display = '';
		}
	},



	_prepareRow: function(rowNum) {
		this._executeEvent('onRowRender',{rowNumber: rowNum});
		var rele = $(this.gridId + '.R' + rowNum);
		if(this.rowEditMode != '') {
			this._dirtyRows[rowNum-1] = false;
			if(this.rowEditMode == 'all' || this._editModeRows[rowNum-1]) {
				this._editModeRows[rowNum-1] = true;
			} else {
				this._editModeRows[rowNum-1] = false;
			}
			if(rele) {
				var eles = rele.getElementsByTagName('input');
				for(var i=0;i < eles.length; i++) {
					if($ga(eles[i],'A5HarvestIgnore') != 'true') {
						$e.add(eles[i],'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
						$e.add(eles[i],'change',this._setControlDirty,this,false,this.gridId+'.GRID');
						if(eles[i].type == 'checkbox' || eles[i].type == 'radio') $e.add(eles[i],'click',this._setControlDirty,this,false,this.gridId+'.GRID');
						if(!this._editModeRows[rowNum-1] || $u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;

					}
				}
				$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
				$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');
				eles = rele.getElementsByTagName('select');
				$e.add(eles,'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
				$e.add(eles,'change',this._setControlDirty,this,false,this.gridId+'.GRID');
				$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
				$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');


				for(var i=0;i<eles.length;i++) {
					if($ga(eles[i],'A5CascadingSelect') == 'true') {
						delete selectData;
						var selectData = new Object();
						selectData.value = eles[i].value;
						selectData.data = new Array();
						for(var j=0;j<eles[i].options.length;j++) {
							selectData.data.push([eles[i].options[j].text,eles[i].options[j].value]);
						}
						this._cascadingSelectChoices[eles[i].id] = selectData;
					}
					if($ga(eles[i],'A5HarvestIgnore') != 'true') {
						if(!this._editModeRows[rowNum-1]  || $u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1  ) eles[i].disabled = true;
					}
				}


				eles = rele.getElementsByTagName('textarea');
				for(var i=0;i < eles.length; i++) {
					if($ga(eles[i],'A5HarvestIgnore') != 'true') {
						if(!this._editModeRows[rowNum-1]  || $u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1  ) eles[i].disabled = true;
					}
				}
				$e.add(eles,'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
				$e.add(eles,'change',this._setControlDirty,this,false,this.gridId+'.GRID');
				$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
				$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');
				rele.setAttribute('A5DataRegion','A5DataRegion');
				if(this._editModeRows[rowNum-1]) {
					for(var fHelper in this._fieldHelpers_G) {
						this._fieldHelpers_G[fHelper].bind(this.gridId +'.V.R' + rowNum + '.' + fHelper);
					}
				}
			}
		}

		if(rele) {
			if(this.rowHoverClassName != '') {
				$e.add(rele,'mouseover',function (e,classInst){classInst._addRowClassName(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
				$e.add(rele,'mouseout',function (e,classInst){classInst._removeRowClassName(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
			}
			$e.add(rele,'click',this._focusRowClick,this,false,this.gridId+'.GRID');
			if(this.rowOnDblClick != '') {
				$e.add(rele,'dblclick',this._rowDblClick,this,false,this.gridId+'.GRID');
			}

			for(var gridRowWatch in this._gridRowWatches) {
				var watchIds = new Array();
				//for(var i = 0;i<this._gridRowWatches[gridRowWatch].watch.length; i++) watchIds.push(this.gridId + '.V.R' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
				var eleTagName = '';
				var eles = 0;
				var tempEle = 0;
				for(var i = 0;i<this._gridRowWatches[gridRowWatch].watch.length; i++){
					if(this._gridRowWatches[gridRowWatch].watch[i] == this.gridId + '.STATEINFO') watchIds.push(this.gridId + '.STATEINFO');
					else {
						tempEle = $(this.gridId + '.V.R' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
						eleTagName = '';
						if(tempEle) eleTagName = tempEle.tagName.toLowerCase();
						if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
							eles = $n('V.R' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
							eles = $cetp(eles,$(this.gridId + '.R' + rowNum));
							for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
						} else watchIds.push(this.gridId + '.V.R' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
					}
				}
				A5.Watch.add(this.gridId+'.R' + rowNum + '.'+gridRowWatch,watchIds,{
					data: {rowNumber: rowNum},
					onChange: this._gridRowWatches[gridRowWatch].onChange
				});
			}
		}
	},

	_prepareNewRow: function(rowNum) {
		this._executeEvent('onRowRender',{rowNumber: rowNum*-1 });
		var rele = $(this.gridId + '.R-' + rowNum);
		if(rele) {
			$e.add(rele,'mouseover',function (e,classInst){classInst._addRowClassName(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
			$e.add(rele,'mouseout',function (e,classInst){classInst._removeRowClassName(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
		}
		this._dirtyNewRows[rowNum-1] = false;
		if(rele) {
			var eles = rele.getElementsByTagName('input');

			for(var i=0;i < eles.length; i++) {
				if($ga(eles[i],'A5HarvestIgnore') != 'true') {
					$e.add(eles[i],'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
					$e.add(eles[i],'change',this._setControlDirty,this,false,this.gridId+'.GRID');
					if(eles[i].type == 'checkbox' || eles[i].type == 'radio') $e.add(eles[i],'click',this._setControlDirty,this,false,this.gridId+'.GRID');
					if($u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
				}
			}

			$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
			$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');
			eles = rele.getElementsByTagName('select');
			$e.add(eles,'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
			$e.add(eles,'change',this._setControlDirty,this,false,this.gridId+'.GRID');
			$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
			$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');

			for(var i=0;i<eles.length;i++) {
				if($ga(eles[i],'A5CascadingSelect') == 'true') {
					delete selectData;
					var selectData = new Object();
					selectData.value = eles[i].value;
					selectData.data = new Array();
					for(var j=0;j<eles[i].options.length;j++) {
						selectData.data.push([eles[i].options[j].text,eles[i].options[j].value]);
					}
					this._cascadingSelectChoices[eles[i].id] = selectData;
				}
				if($u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
			}


			eles = rele.getElementsByTagName('textarea');
			$e.add(eles,'keyup',this._setControlDirty,this,false,this.gridId+'.GRID');
			$e.add(eles,'change',this._setControlDirty,this,false,this.gridId+'.GRID');
			$e.add(eles,'focus',this._setControlFocus,this,false,this.gridId+'.GRID');
			$e.add(eles,'blur',this._setControlBlur,this,false,this.gridId+'.GRID');
			for(var i = 0; i < eles.length; i++) {
				if($u.a.find(this._disabledBySecurity,eles[i].name.split('.').pop()) != -1 ) eles[i].disabled = true;
			}
			rele.setAttribute('A5DataRegion','A5DataRegion');


			for(var fHelper in this._fieldHelpers_G) {
				this._fieldHelpers_G[fHelper].bind(this.gridId +'.V.R-' + rowNum + '.' + fHelper);
			}

			for(var gridRowWatch in this._gridRowWatches) {
				var watchIds = new Array();
				//for(var i = 0;i<this._gridRowWatches[gridRowWatch].watch.length; i++) watchIds.push(this.gridId + '.V.R-' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);

				var eleTagName = '';
				var eles = 0;
				var tempEle = 0;
				for(var i = 0;i<this._gridRowWatches[gridRowWatch].watch.length; i++){
					if(this._gridRowWatches[gridRowWatch].watch[i] == this.gridId + '.STATEINFO') watchIds.push(this.gridId + '.STATEINFO');
					else {
						tempEle = $(this.gridId + '.V.R-' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
						eleTagName = '';
						if(tempEle) eleTagName = tempEle.tagName.toLowerCase();


						if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
							eles = $n('V.R-' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
							eles = $cetp(eles,$(this.gridId + '.R-' + rowNum));
							for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
						} else watchIds.push(this.gridId + '.V.R-' + rowNum + '.' + this._gridRowWatches[gridRowWatch].watch[i]);
					}
				}


				A5.Watch.add(this.gridId+'.R-' + rowNum + '.'+gridRowWatch,watchIds,{
					data: {rowNumber: (rowNum*-1)},
					onChange: this._gridRowWatches[gridRowWatch].onChange
				});
			}
		}

	},

	_prepareRowEvents: function() {
		/*THIS IS OBSOLETE. SEE prepareGrid()
		if(this._rowsInGrid == 0) return false;
		var rowIds = new Array();
		for(var i=1;i<=this._rowsInGrid;i++) {
			rowIds.push(this.gridId + '.R' + i);
		}
		$e.add(rowIds,'mouseover',function (e,classInst){$acn(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
		$e.add(rowIds,'mouseout',function (e,classInst){$rcn(this,classInst.rowHoverClassName);},this,false,this.gridId+'.GRID');
		$e.add(rowIds,'click',this._focusRowClick,this,false,this.gridId+'.GRID');
		if(this.rowOnDblClick != '') {
			$e.add(rowIds,'dblclick',this._rowDblClick,this,false,this.gridId+'.GRID');
		}
		*/
	},

	_rowDblClick: function(e, classInst) {
		var rowNum = Number(this.id.split('.')[1].substr(1));
		if(classInst.rowOnDblClick.constructor == Function) {
			classInst.rowOnDblClick(rowNum);
		} else if(classInst.rowOnDblClick != '') {
			if(classInst[classInst.rowOnDblClick]) classInst[classInst.rowOnDblClick](rowNum);
		}

	},

	_setControlDirty: function(e,classInst) {
		classInst.setControlDirty(this,true);
	},


	_constrainElementsToParent: function(eles, pEle) {
		var eles2 = new Array();
		for(var i=0;i<eles.length;i++){
			if($isChild(eles[i],pEle)){
				eles2.push(eles[i]);
			}
		}
		return eles2;
	},

	setControlDirty: function(ele) {

		var setRowState = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		if(this._batchChange) setRowState = false;
		var name2 = ele.name.split('.');
		if(typeof name2[1] == 'undefined') return false;
		var rowNum = Number(ele.name.split('.')[1].substr(1));
		var columnNum = this._colNumFromName(this._gridColNames,ele.name.split('.')[2]);
		var eles = this._constrainElementsToParent($n(ele.name),$(this.gridId+'.R'+rowNum));
		if(rowNum < 0) {
			//new record row
			if(!$u.compare($gvs(eles),this._newValues[columnNum])) {
				$sa(eles,'A5IsDirty','true');
				if(setRowState) this._setRowState(rowNum,true);
			}
		} else {
			if(this._originalValues[rowNum-1]) {
				if(!$u.compare($gvs(eles),this._originalValues[rowNum-1][columnNum])) {
					$sa(eles,'A5IsDirty','true');
					if(setRowState) {
						if(this.rowRefreshOnDirty && !this._dirtyRows[rowNum-1])  this.refreshRow(rowNum,true);
						this._setRowState(rowNum,true);
					}
				}
			}
		}

	},


	_focusRowClick: function(e,classInst){
		if(classInst._focusRow != 0 && classInst._focusRow != Number(this.id.split('.')[1].substr(1))) $rcn(classInst.gridId+'.R'+classInst._focusRow,classInst.rowSelectedClassName);
		//else classInst._kw.on();
		classInst._kw.on(); //do it always
		classInst._focusRow = Number(this.id.split('.')[1].substr(1));
		if(classInst._focusControl == '') classInst._focusControl = classInst._gridColNames[0];
		if(!classInst._editModeRows[classInst._focusRow-1]) {
			var ele = $(classInst.gridId+'.FOCUSCATCHER');
			//ele.style.top = $gpt($(classInst.gridId+'.R'+classInst._focusRow))+'px';
			var sOff = 0;
			if($(classInst.gridId + '.GRIDSCROLLDIV')) {
				sOff = $(classInst.gridId + '.GRIDSCROLLDIV').scrollTop;

			}

			var rele = $(classInst.gridId+'.R'+classInst._focusRow);
			if(rele.offsetParent) ele.style.top = ($gpt(rele)-$gpt(rele.offsetParent) - sOff)+'px';
			if(ele) {
				ele.blur();
				$f(ele);
			}
		}
		//Until such time as we clarify focus and selected row behavior
		//when the user clicks on a row, make it the selected row
		classInst.setSelectedRow(classInst._focusRow,true);
	},


	closeContainerWindow: function(ele) {
		//if grid is opened in a window, closes the container window
	    var cw = A5.windows.getFromElement(ele);
	    if(cw) cw.hide();
	},


	activateControlContainer: function(name,part,rowNum) {
		name = name.toUpperCase();
		part = part.toUpperCase();
		if(part == 'G') {
			if(typeof this._controlContainers_G != 'undefined') {
				var obj = this._controlContainers_G[name];
			}
		}
		if(part == 'D') {
			if(typeof this._controlContainers_D != 'undefined') {
				var obj = this._controlContainers_D[name];
			}
		}
		if(part == 'S') {
			if(typeof this._controlContainers_S != 'undefined') {
				var obj = this._controlContainers_S[name];
			}
		}
		if(typeof obj != 'object') return false;
		var containerName = '';
		for(var i = 0; i < obj.length; i++) {
			containerName = this.gridId + '_' + obj[i].tab +'R_' + rowNum +'Obj';
			if(typeof window[containerName]._curBandIndx != 'undefined') {
				//in an accordion
				if(window[containerName]._curBandIndx != -1) {
					if(window[containerName]._curBandIndx +1 == obj[i].pane) {
						//you are already on the band. so bail. otherwise it will toggle the band
						return false;
					}
				}
			}
			window[containerName].select(''+obj[i].pane);
		}
	},

	_setControlFocus: function(e,classInst) {
		//check to see if the current control that has focus is the focus catcher ( a dummy control for rows that are not in edit mode)
		//also checks to see if there is no focus row.
		if(this.id == classInst.gridId+'.FOCUSCATCHER' && classInst._focusRow == 0){
			classInst._focusRow = 1;
			if(classInst._editModeRows[0]){
				classInst._focusControl = classInst._gridColNames[0];
				$f(classInst.gridId+'.R'+(classInst._focusRow)+'.'+classInst._focusControl);
				classInst._kw.on();
				return false;
			}
		}
		if(classInst._focusRow != 0){
			clearTimeout(classInst._focusRowTO);
			classInst._executeEvent('onRowBlur', {rowNumber: classInst._focusRow});
		} else classInst._kw.on();
		if(this.id != classInst.gridId+'.FOCUSCATCHER'){
			//protect against errors if user creates their own input control in a freeform section
			var nameSplit = this.name.split('.');
			if(nameSplit.length > 2) {
				if(Number(nameSplit[1]) != NaN) {
					classInst._focusRow = Number(nameSplit[1].substr(1));
					classInst._focusControl = nameSplit[2];
					classInst._focusControl2 = classInst._focusControl;
					classInst._executeEvent('onRowFocus', {rowNumber: classInst._focusRow});
				}
			}
		}
		classInst.setSelectedRow(classInst._focusRow, true);
	},

	_setControlBlur: function(e,classInst){

		if(classInst._focusRow != 0) classInst._focusRowTO = setTimeout(function(){classInst._completeControlBlur();},100);
		if(this.name != '') {
			var name2 = this.name.split('.');
			if(typeof name2[1] == 'undefined' ) { return false; };
			var rowNum = Number(this.name.split('.')[1].substr(1));
			var colName = this.name.split('.')[2];
			//classInst.clientSideValidateField('G',colName,rowNum);
			//if you make a selection from an edit-combo, the validation was firing when you clicked in the edit-combo
			var classInst2 = classInst;
			setTimeout(function() {classInst2.clientSideValidateField('G',colName,rowNum); delete classInst2; },400);
		}
	},

	_completeControlBlur: function(){
		$rcn(this.gridId+'.R'+this._focusRow,this.rowSelectedClassName);
		//allow users to turn this off - so that when the grid window looses focus and then focus returns, current row is not set back to 1.
		//sr 9/18/15 - not sure why we were setting _focusRow to 0 , but since it is causing problems (open grid dv and then close it, - focus row changed) am turning it off by default
		var flagResetFocusRow = this._resetFocusRowOnBlur;
		if(typeof flagResetFocusRow == 'undefined') flagResetFocusRow = false;
		if(flagResetFocusRow) this._focusRow = 0;
		this._kw.off();
	},

	_setDVControlFocus: function(e,classInst) {
		//$('GRID1.RECORDCOUNT.TOP').innerHTML = $('GRID1.RECORDCOUNT.TOP').innerHTML + 'focus: ' + this.id + '<br>';
		classInst.blur(); //keywatch gets stuck on the grid
		classInst._dvkw.on();
		//protect against errors if user creates their own input control in a freeform section
		if(this.name != '') {
			var nameSplit = this.name.split('.');
			if(nameSplit.length > 2) {
				classInst._dvFocusControl = nameSplit[2];
				classInst._dvFocusControl2 = classInst._dvFocusControl;
			}
		}

	},

	_setDVControlBlur: function(e,classInst){
		classInst._dvkw.off();
		classInst._dvFocusControl = '';
		if(this.name != '') {
			var rowNum = Number(this.name.split('.')[1].substr(1));
			var colName = this.name.split('.')[2];
			//classInst.clientSideValidateField('D',colName,rowNum);
			//if you make a selection from an edit-combo, the validation was firing when you clicked in the edit-combo

			setTimeout(function() {classInst.clientSideValidateField('D',colName,rowNum); delete classInst; },400);
		}
	},

	_setDVControlDirty: function(){
		if(!this._detailViewIsDirty && !this._batchChange) {
			if(this.detailViewRefreshOnDirty) this.detailViewRefresh() ;
			this._setDetailViewState(true);
		} else if(this._batchChange) $sa(this.gridId + '.DETAILVIEW_PART.FORM','A5IsDirty','false');
	},


	_enable: function(ele,flag) {
		if($(ele)) ele = $(ele);
		else return false;

		if(flag) {
			ele.disabled = false;
			ele.setAttribute('A5Disabled','false');
			ele.style.opacity = '';
			ele.style.filter = '';
			var eles = ele.getElementsByTagName('img');
			$ss(eles,{opacity: '', filter: ''});
		} else {
			ele.disabled = true;
			ele.setAttribute('A5Disabled','true');
			ele.style.opacity = '.5';
			ele.style.filter = 'alpha(opacity: 50)';
			ele.style.zoom = '1';
			var eles = ele.getElementsByTagName('img');
			$ss(eles,{opacity: '.5', filter: 'alpha(opacity: 50)', zoom: '1'});
		}
	},

	_setInitialData: function(data) {
		this._originalValues = data;
	},

	_setInitialNulls: function(data) {
			this._originalNullValues = data;
	},

	_setInitialDVData: function(data) {
			this._originalDVValues = data;
		},


	_populateCont: function(contId,htmlText) {
		if($(contId)) {
			$(contId).innerHTML = htmlText;
		}

	},

	_navInputOnKey: function(e,classInst) {
		var keyCode = e.charCode || e.keyCode;
		if(keyCode == 13) {
			classInst.pageNavigate(this.value);
		}
	},



	_refreshGridIfClean: function() {
		var grid = {};
		grid.hasDetailView = $if(this._detailViewColNames.length > 0, true,false);
		if(grid.hasDetailView==false) {
			grid.isDirty = this._isDirty;
		} else {
			grid.isDirty = this._detailViewIsDirty;
		}
		if(grid.isDirty == true) return false;
		var result = this._executeEvent('beforeAutoRefresh',{})
		if(result == true) this.refresh();
	},

	autoRefreshStop: function() {
		this._autoRefreshInterval = 0;
	},


	autoRefreshStart: function(interval) {
			this._autoRefreshInterval = interval;
			setTimeout('if( typeof ' + this.gridId + '_GridObj != \'undefined\')' + this.gridId + '_GridObj._autoRefreshLow();',interval);
	},

	_autoRefreshLow: function() {
		var d = 0;
		var ele = $(this.gridId + '.STATEINFO');
		if(!ele) {
			this._autoRefreshInterval = 0;
			return false;
		}
		if(typeof this._autoRefreshInterval == 'undefined') return false;
		d = this._autoRefreshInterval;
		if(d == 0) return false;
		this._refreshGridIfClean();
		setTimeout('if( typeof ' + this.gridId + '_GridObj != \'undefined\')' + this.gridId + '_GridObj._autoRefreshLow()',d);
	},

	_showGridErrorColumn: function(show) {
		//to support legacy grids before v10.5 that use a different method of show/hide on error column

		//if fixed scrolling with fixed column sizes are turned on, and the grid is editable, the row error column must always be shown or grid is messed up
		var flagAlwaysShown = false;
		if(typeof this._rowErrorColumnAlwaysVisible != 'undefined') flagAlwaysShown = this._rowErrorColumnAlwaysVisible;
		if(flagAlwaysShown) show = true;

		if(show) $rcn(this.gridId+'.GRID_PART.DATAREGION','A5GridHideErrorCol');
		else $acn(this.gridId+'.GRID_PART.DATAREGION','A5GridHideErrorCol');

		var ele = 0;
		var sdis = $if(show, '','none');

		for(var i = 1; i <= this._rowsInGrid; i++) {
			ele = $(this.gridId + '.TD.R' + i + '.__SYSTEM_ERRORCOLUMN');
			if(ele) ele.style.display = sdis;
			ele = $(this.gridId + '.TD.R' + i + '.__ROWEXPAND.__SYSTEM_ERRORCOLUMN');
			if(ele) ele.style.display = sdis;
		}
		for(var i = 1; i <= this._newRowsInGrid; i++) {
			ele = $(this.gridId + '.TD.R-' + i + '.__SYSTEM_ERRORCOLUMN');
			if(ele) ele.style.display = sdis;
			ele = $(this.gridId + '.TD.R-' + i + '.__ROWEXPAND.__SYSTEM_ERRORCOLUMN');
			if(ele) ele.style.display = sdis;
		}

		ele = $(this.gridId + '.COLUMNTITLES.TOP.__SYSTEM_ERRORCOLUMN');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.COLUMNTITLES.BOTTOM.__SYSTEM_ERRORCOLUMN');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.TD.R_QBE.__SYSTEM_ERRORCOLUMN');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.TD.R_EMBSRC.__SYSTEM_ERRORCOLUMN');
		if(ele) ele.style.display = sdis;


	},
	showGridColumn: function(colName,show) {
		if(show) {
			if( $u.a.find(this._hiddenCols,colName) != -1) {
				this._hiddenCols.splice($u.a.find(this._hiddenCols,colName),1);
				this._showGridColumn(colName,show);
			}
		} else {
			if( $u.a.find(this._hiddenCols,colName) == -1) {
				this._hiddenCols.push(colName);
				this._showGridColumn(colName,show);
			}
		}
	},

	_showGridColumn: function(colName,show) {

		var ele = 0;
		var sdis = $if(show, '','none');

		for(var i = 1; i <= this._rowsInGrid; i++) {
			ele = $(this.gridId + '.TD.R' + i + '.'+colName);
			if(ele) ele.style.display = sdis;
		}
		for(var i = 1; i <= this._newRowsInGrid; i++) {
			ele = $(this.gridId + '.TD.R-' + i + '.'+colName);
			if(ele) ele.style.display = sdis;
		}

		ele = $(this.gridId + '.COLUMNTITLES.TOP.'+colName);
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.COLUMNTITLES.BOTTOM.'+colName);
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.TD.R_QBE.'+colName);
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.TD.R_EMBSRC.'+colName);
		if(ele) ele.style.display = sdis;


		ele = $(this.gridId + '.SUMM.' + colName);
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.TOTAL');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.AVG');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName  + '.MIN');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.MAX');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.STDDEV');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.VAR');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.FIRST');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.LAST');
		if(ele) ele.style.display = sdis;

		ele = $(this.gridId + '.SUMM.' + colName + '.COUNT');
		if(ele) ele.style.display = sdis;



	},

	_addRowsFromTemplate: function(numberOfRows,data) {
		var cele = 0;
		var pele = 0;
		var ele = $(this.gridId + '.GRID.ROWTEMPLATE');
		if(typeof ele != 'object') return false;
		var dataIndex = 0;
		var funcData = '';
		this._rowsInGrid = this._rowsInGrid + 1 ;
		for(var i = this._rowsInGrid; i < this._rowsInGrid + numberOfRows; i++) {
			for(var prop in data[dataIndex]) {
				data[dataIndex][prop] = data[dataIndex][prop].replace(/\{grid\.rowNumber\}/ig,'' + this._rowsInGrid);
			}
			cele = ele.cloneNode(true);
			//this fixed the problem of {row: index} in the checkbox column not getting updated, but broke IE8
			//ultimate fix was to add code to the _parseTemplateRow() function to replace the 'value' attribue


			//var stringH = cele.innerHTML;
			//stringH = stringH.replace(/\{ROW: INDEX\}/ig,'' + this._rowsInGrid);
			//stringH = stringH.replace(/\{ROW:INDEX\}/ig,'' + this._rowsInGrid);
			//alert(stringH);
			//cele.innerHTML = stringH;

			pele = $(this.gridId + '.R' + (i-1) );
			pele.parentNode.insertBefore(cele,pele.nextSibling);
			cele.id = this.gridId + '.R' + i ;

			if(cele.onclick){
				funcData = cele.onclick.toString().split('{ROW:INDEX}').join(''+i);
				//Firefox 'fixed' {ROW:INDEX}' and makes it into '{ROW: INDEX}'
				funcData = funcData.split('{ROW: INDEX}').join('' + i );
				funcData = funcData.split('{');
				funcData.shift();
				funcData = funcData.join('{');
				funcData = funcData.split('}');
				funcData.pop();
				funcData = funcData.join('}');
				cele.onclick = Function(funcData);
			}
			if(cele.ondblclick){
				funcData = cele.ondblclick.toString().split('{ROW:INDEX}').join(''+i);
				//Firefox 'fixed' {ROW:INDEX}' and makes it into '{ROW: INDEX}'
				funcData = funcData.split('{ROW: INDEX}').join('' + i );
				funcData = funcData.split('{');
				funcData.shift();
				funcData = funcData.join('{');
				funcData = funcData.split('}');
				funcData.pop();
				funcData = funcData.join('}');
				cele.ondblclick = Function(funcData);
			}
			this._parseControlTemplateRow(cele, data[dataIndex]);
			this._parseTemplateRow(cele,i);
			this._prepareRow(i);
			var ele = 0;

			if(this._reh._e.length != 0) {
				ele = $(this.gridId + '.TD.R' + i + '.__SYSTEM_ERRORCOLUMN');
				if(ele) ele.style.display = '';
				ele = $(this.gridId + '.TD.R' + i + '.__ROWEXPAND.__SYSTEM_ERRORCOLUMN');
				if(ele) ele.style.display = '';
				}

			dataIndex++;
		}
		this._rowsInGrid = this._rowsInGrid + (numberOfRows -1);
		this._reband();
	},

	_parseControlTemplateRow: function(ele,data) {
		var sele = 0;
		var tdele = 0;
		var thtml = '';
		for(var i = 0; i < ele.childNodes.length; i++) {
			sele = ele.childNodes[i];
			if(sele.tagName) {
				for(var j = 0; j < sele.childNodes.length; j++) {
					tdele = sele.childNodes[j];
					if(tdele.innerHTML) {
						if(tdele.tagName != '!') {
							thtml = tdele.innerHTML;
							for(var prop in data) {

								thtml = thtml.split('{' + prop + '}').join(data[prop]);

							}
							tdele.innerHTML = thtml;
						}
					}
				}
			}
		}
	},

	_parseTemplateRow: function(ele,row) {
		for(var i = 0; i < ele.childNodes.length; i++) {
			if(typeof ele.childNodes[i].tagName != 'undefined') {
				if(ele.childNodes[i].id) ele.childNodes[i].id = ele.childNodes[i].id.split('{ROW:INDEX}').join(''+row);
				if(ele.childNodes[i].name) {
					ele.childNodes[i].name = ele.childNodes[i].name.split('{ROW:INDEX}').join(''+row);
				}
				if(ele.childNodes[i].value) ele.childNodes[i].value = ele.childNodes[i].value.split('{ROW:INDEX}').join(''+row);
				if(ele.childNodes[i].onclick){
					var data = ele.childNodes[i].onclick.toString().split('{ROW:INDEX}').join(''+row);

					//Firefox 'fixed' {ROW:INDEX}' and makes it into '{ROW: INDEX}'
					data = data.split('{ROW: INDEX}').join('' + row );
					data = data.split('{');
					data.shift();
					data = data.join('{');
					data = data.split('}');
					data.pop();
					data = data.join('}');
					if(data.constructor == Array) data = data.join('');
					ele.childNodes[i].onclick = Function(data);
				}
				if(ele.childNodes[i].childNodes.length > 0) this._parseTemplateRow(ele.childNodes[i],row);
			}
		}
	},


	_reband: function(){
		if(!this.banding.enabled) return false;
		var obj = new Object();
		var tdObj = new Object();
		var curOffset = 0;
		var curRows = this.banding.oddRowCount;
		var curClass = this.banding.oddRowClassName;
		var curType = 'o';
		for(var i=1;i<=(this._rowsInGrid + this._newRowsInGrid) ;i++){
			if(i <= this._rowsInGrid) obj = $(this.gridId+'.R'+i);
			else obj = $(this.gridId+'.R-'+(i - this._rowsInGrid));
			if(obj.style.display != 'none'){
				curOffset = curOffset+1;
				if(curOffset > curRows){
					if(curType == 'o'){
						curOffset = 1;
						curRows = this.banding.evenRowCount;
						curClass = this.banding.evenRowClassName;
						curType = 'e';
					} else{
						curOffset = 1;
						curRows = this.banding.oddRowCount;
						curClass = this.banding.oddRowClassName;
						curType = 'o';
					}
				}
				tdObj = obj.getElementsByTagName('td');
				for(var j=0;j<tdObj.length;j++) {
					if(tdObj[j].className.indexOf(curClass) == -1 && (tdObj[j].className.indexOf(this.banding.oddRowClassName) != -1 || tdObj[j].className.indexOf(this.banding.evenRowClassName) != -1)) {
						if(curType == 'o') $rcn(tdObj[j],this.banding.evenRowClassName);
						else $rcn(tdObj[j],this.banding.oddRowClassName);
						$acn(tdObj[j],curClass);
					}
				}
			}
		}
	},


	_gridQBEExecute: function(qbeType) {

		if(!this._executeEvent('canQBESearch',{qbeType: qbeType})) return false;
		var columnNum = this._colNumFromName(this._gridColNames,this._gridQBEColumn);
		var data = $(this.gridId +'.STATEINFO').value;
		var qbeValue = $gvs(this.gridId + '.QBE.V.' + $u.s.rTrim(this._gridQBEColumn,'[]'));
		data = data+'&'+A5.ajax.buildURLParam('_gridQBEValue',qbeValue);

		if(typeof this._qbeQueryMenu == 'undefined') {
			qbeValue = $gvs(this.gridId + '.QBE.EXCLUDEMATCHES');
			this.gridColumnInfo[columnNum].qbe.exclude = qbeValue;
		} else {
			qbeValue = this._qbeQueryMenu.getValue('ExcludeMatchingRecords');
			this.gridColumnInfo[columnNum].qbe.exclude = qbeValue;
		}
		if(typeof qbeValue == 'boolean') qbeValue = $if(qbeValue,'on','off');

		data = data+'&'+A5.ajax.buildURLParam('_gridQBEExcludeMatches',''+qbeValue);


		if(typeof this._qbeQueryMenu == 'undefined') {
			qbeValue = $gvs(this.gridId + '.QBE.ANDOR');
		} else {
			qbeValue = this._qbeQueryMenu.getValue('AndOr');
		}
		data = data+'&'+A5.ajax.buildURLParam('_gridQBEAndOr',qbeValue);
		this.gridColumnInfo[columnNum].qbe.andOr = qbeValue;
		this.gridColumnInfo[columnNum].qbe.operator = qbeType;

		data = data + '&__FormAction=QBE_Grid&__FormID=' + this.gridId+'&_gridQBEColumn='+this._gridQBEColumn + '&_gridQBEType='+qbeType;
		data = $u.s.tran(data,'\n','%0D%0A');
		data = data + '&__dvWindow=' + this._detailViewWindowState;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'QBESearch'})
		A5.ajax.callback(this.ajaxURL,data);
	},



	_gridQBEMenu: function(e,classInst) {
		if(typeof classInst._qbeQueryMenu == 'undefined') {
			var ele = $(classInst.gridId + '.QBE.MENU');
			ele.style.display = '';
			$po(ele,this,'dropdown');
			$e.add(document.body,'click',classInst._gridQBEMenuClear,classInst,true);
			classInst._gridQBEColumn = $u.s.word(this.id,-1,'.');

			var columnNum = classInst._colNumFromName(classInst._gridColNames,classInst._gridQBEColumn);
			$svs(classInst.gridId + '.QBE.EXCLUDEMATCHES',classInst.gridColumnInfo[columnNum].qbe.exclude);
			$svs(classInst.gridId + '.QBE.ANDOR',classInst.gridColumnInfo[columnNum].qbe.andOr);
			//take operator name (greater than or equal to) and remove spaces and then make uppercase, so it matches the menu item id.
			var searchVal = classInst.gridColumnInfo[columnNum].qbe.operator.replace(/ /g,'').toUpperCase();
			if(searchVal=='') searchVal = 'NOFILTER';
			var eles = ele.getElementsByTagName('img');
			for(var i=0;i<eles.length;i++){
				if($u.s.word(eles[i].id,3,'.') == 'CHECKICON') {
					if($u.s.word(eles[i].id,-1,'.') == searchVal) eles[i].style.visibility = '';
					else eles[i].style.visibility = 'hidden';
				}
			}

			var searchArray = classInst._qbeMenu[classInst.gridColumnInfo[columnNum].dataType];
			if(typeof searchArray == 'undefined') searchArray = classInst._qbeMenu.c;
			searchArray.push('NOFILTER');


			eles = ele.getElementsByTagName('li');
			for(var i=0;i<eles.length;i++){
				if($u.s.word(eles[i].id,3,'.') == 'ITEM') {
					if($u.a.find(searchArray,$u.s.word(eles[i].id,-1,'.')) != -1) eles[i].style.display = '';
					else eles[i].style.display = 'none';
				}
			}
		} else {
			classInst._gridQBEColumn = $u.s.word(this.id,-1,'.');
			var columnNum = classInst._colNumFromName(classInst._gridColNames,classInst._gridQBEColumn);
			classInst._qbeQueryMenu.setValue('ExcludeMatchingRecords',classInst.gridColumnInfo[columnNum].qbe.exclude);
			classInst._qbeQueryMenu.setValue('AndOr',classInst.gridColumnInfo[columnNum].qbe.andOr);
			var qbeval = classInst.gridColumnInfo[columnNum].qbe.operator;
			if(qbeval == '') qbeval = 'No filter';
			classInst._qbeQueryMenu.setValue('QBEValue',qbeval);

			var searchArray = classInst._qbeMenu[classInst.gridColumnInfo[columnNum].dataType];
			if(typeof searchArray == 'undefined') searchArray = classInst._qbeMenu.c;
			searchArray.push('NOFILTER');

			//number of items in the menu, not including the exclude and and/or items
			var item = 0;
			for(var i = 2; i < 17; i++) {
				item = classInst._qbeQueryMenu._data[i];
				if($u.a.find(searchArray,item.name.replace(/ /g,'').toUpperCase()) != -1) $(item._id).style.display = 'block';
				else $(item._id).style.display = 'none';

			}

			classInst._qbeQueryMenu.show('dropdown',this);


		}
		$e.stopEvent(e);
		return false;

	},

	_gridQBEMenuClear: function() {
		var ele = $(this.gridId + '.QBE.MENU');
		if(ele) {
			ele.style.display = 'none';
			$e.remove(document.body,'click',this._gridQBEMenuClear);
		}
	},

	_gridQBEClearColumnInfo: function() {
		for(i=1;i<=this.gridColumnInfo.length;i++) {
			if(this.gridColumnInfo[i-1].qbe) {
				this.gridColumnInfo[i-1].qbe.operator = '';
				this.gridColumnInfo[i-1].qbe.exclude = '';
				this.gridColumnInfo[i-1].qbe.andOr = 'AND';
			}
		}

	},

	gridQBERowVisible: function(isVisible) {
		ele = $(this.gridId + '.QBE_ROW');
		if(isVisible == true) {
			if(!this._executeEvent('canQBEShow',{})) return false;
			ele.style.display = '';
			this._executeEvent('afterQBEShow',{})
		} else {
			if(!this._executeEvent('canQBEHide',{})) return false;
			ele.style.display = 'none';
			this._executeEvent('afterQBEHide',{})
		}

		var data = $(this.gridId +'.STATEINFO').value;
		var arr = new Array();
		arr = data.split('&');
		var indx = $u.a.find(arr,'__si.QBEState',false,false);
		var QBEState = '__si.QBEState=' + isVisible
		if(indx == -1) {
			if(data == '') data = QBEState;
			else data = data + '&' + QBEState;
		} else {
			arr[indx] = QBEState;
			data = arr.join('&');
		}
		$(this.gridId +'.STATEINFO').value = data;

	},

	_findControlNumber: function(part,name) {
		var arr = '';
		if(part == 'G') arr = this.gridColumnInfo;
		else alert('fix for dv');
		var i2 = -1;
		for(var i = 0; i < arr.length; i++) {
			if(arr[i].name == name) {
				i2 = i;
				break;
			}
		}
		return i2;
	},

	_setOriginalValues: function(part,rowNum,obj) {
		//this is not currently used
		var id = -1;
		var arr = '';
		if(part == 'G') arr = this._originalValues;
		else alert('fix for dv');
		for(var key in obj){
			id = this._findControlNumber(part,key);
		    arr[rowNum-1][id] = obj[key];
		   }
	},

	gridQBERowToggle: function() {
		ele = $(this.gridId + '.QBE_ROW');
		if(ele.style.display == 'none') this.gridQBERowVisible(true);
		else this.gridQBERowVisible(false);
	},


	loadJavascript: function(txt) {
		A5.loadJavascript(txt);
	},

	loadJavascriptFile: function(filename) {
		A5.loadJavascriptFile(filename,arguments[1]);
	},

	loadMetaTag: function(name,txt) {
			var e = document.createElement('meta');
			e.name = name;
			e.content = txt;
			document.getElementsByTagName('head')[0].appendChild(e);
	},

	loadCSSFile: function(filename) {
			var forceLoad = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			var sEle = document.getElementsByTagName('link');
			var cancelAdd = false;
			if(forceLoad == false) {
				for(var i=0; i < sEle.length; i++) {
					if(sEle[i].href.indexOf(filename) > 0) {
						cancelAdd = true;
						break;
					}
				}
			}
			if(cancelAdd == false) {
				var e = document.createElement('link');
				e.href = filename;
				e.rel = 'stylesheet';
				e.type = 'text/css';
				document.getElementsByTagName('head')[0].appendChild(e);
			}
	},

	loadXbasic: function(txt) {
			//return true;
			var versionNum = typeof arguments[1] != 'undefined' ? arguments[1] : '';

			if(this._embeddedMode == false) return false;
			var sEle = document.getElementsByTagName('script');
			var cancelAdd = false;
			for(var i=0; i < sEle.length; i++) {
				if(typeof sEle[i].language != 'undefined') {
					if(sEle[i].language.toLowerCase() == 'xbasic' + versionNum) {
						if(sEle[i].text.toLowerCase()  == txt.toLowerCase()) {
							cancelAdd = true;
							break;
						}
					}
				}
			}
			if(cancelAdd == false) {
				var e = document.createElement('script');
				e.text = txt;
				e.language = 'Xbasic' + versionNum;
				try {
					document.getElementsByTagName('head')[0].appendChild(e);
				} catch(err) {

				}
			}
	},




	a5AjaxGridMozFixRowPost: function(rowId) {
			var ele = $(rowId);
			if(ele.style.height == ele.offsetHeight+'px') ele.style.height = '';
			var eles = ele.getElementsByTagName('input');
			for(var i=0;i<eles.length;i++){
				if(eles[i].style.height == eles[i].offsetHeight+'px') eles[i].style.height = '';
			}
			eles = ele.getElementsByTagName('select');
			for(var i=0;i<eles.length;i++){
				if(eles[i].style.height == eles[i].offsetHeight+'px') eles[i].style.height = '';
			}
			eles = ele.getElementsByTagName('textarea');
			for(var i=0;i<eles.length;i++){
				if(eles[i].style.height == eles[i].offsetHeight+'px') eles[i].style.height = '';
			}
	},


	createWindow: function(name,settings) {
		if(!this.getWindow(name)) {
			if(typeof settings == 'string') {
				var parts = settings.split('-');
				settings = new Object();
				$u.o.assign(settings , this._defaultWindowSettings[parts.shift()]);
				for(var i=0;i<parts.length;i++){
					if(parts[i] == 'url'){
						settings.body.content.type = 'url';
						settings.body.content.url = 'about:blank';
					} else if(parts[i] == 'resizable'){
						settings.resize = 'both';
					}
				}
			}
			if(typeof arguments[2] == 'object') $u.o.assign(settings,arguments[2]);
			this._genericWindow[name] = new A5.Window(settings);
		}
		return this._genericWindow[name];
	},

	getWindow: function(name) {
		if(typeof this._genericWindow[name] != 'undefined' ) return this._genericWindow[name];
		return false;
	},

	setVariables: function(vars) {
		if($u.compare(this._vars,vars) == false ) {
			$u.o.assign(this._vars,vars);
			$e.execute(this.gridId + '.STATEINFO','change');
		}
	},


	/*Keywatch Events*/

	_keyOpenLookupWindow: function() {
		if(typeof this._floatingLookupWindow[this._focusControl] != 'undefined') {
			this.openLookup('G',this._focusRow,this._focusControl);
		}
		return true;
	},




	_keyPageUp: function(){
		clearTimeout(this._keyPageNavigateTO);
		var classInst = this;
		this._keyPageNavigateTO = setTimeout(function() {
			classInst.pageNavigate('prev');
			delete classInst;
		},200);
		return true;
	},

	_keyPageDown: function(){
		clearTimeout(this._keyPageNavigateTO);
		var classInst = this;
		this._keyPageNavigateTO = setTimeout(function() {
			classInst.pageNavigate('next');
			delete classInst;
		},200);
		return true;
	},

	_keyPrevRow: function(){
		if(this._editModeRows[this._focusRow-1] || this._focusRow < 0){
			if($n(this.gridId+'.V.R'+(this._focusRow)+'.'+this._focusControl)[0].tagName.toLowerCase() != 'input') return false;
		}
		if(this._focusRow == 1){
			if(this.pageNumber != 1) {
				clearTimeout(this._keyPageNavigateTO);
				var classInst = this;
				this._keyPageNavigateTO = setTimeout(function() {
					classInst.pageNavigate('prev');
					delete classInst;
				},200);
			}
		} else if(this._focusRow < 0) {
			if(this._focusRow == -1) {
				if(!this._editModeRows[this._rowsInGrid-1]){
					this._focusRowClick.call($(this.gridId+'.R'+(this._rowsInGrid)),null,this);
					$f(this.gridId+'.FOCUSCATCHER');
				} else $f(this.gridId+'.V.R'+(this._rowsInGrid)+'.'+this._focusControl);
			} else {
				$f(this.gridId+'.V.R'+(this._focusRow+1)+'.'+this._focusControl);
			}
		} else{
			if(!this._editModeRows[this._focusRow-2]){
				this._focusRowClick.call($(this.gridId+'.R'+(this._focusRow-1)),null,this);
				$f(this.gridId+'.FOCUSCATCHER');
			} else $f(this.gridId+'.V.R'+(this._focusRow-1)+'.'+this._focusControl);
			//this.setSelectedRow(this._focusRow - 1,true);
		}
		return true;
	},
	_keyNextRow: function(e){
		if(this._editModeRows[this._focusRow-1] || this._focusRow < 0 ){
			if($n(this.gridId+'.V.R'+(this._focusRow)+'.'+this._focusControl)[0].tagName.toLowerCase() != 'input') return false;
		}
		if(this._focusRow == this._rowsInGrid){
			if(this._newRowsInGrid == 0) {
				if(this.pageNumber < this.pagesInGrid) {
					clearTimeout(this._keyPageNavigateTO);
					var classInst = this;
					this._keyPageNavigateTO = setTimeout(function() {
						classInst.pageNavigate('next');
						delete classInst;
					},200);
				}
			} else $f(this.gridId+'.V.R-1.'+this._focusControl);
		} else if(this._focusRow < 0) {
			if(Math.abs(this._focusRow) == this._newRowsInGrid) {
				if(this.pageNumber < this.pagesInGrid) 	{
					clearTimeout(this._keyPageNavigateTO);
					var classInst = this;
					this._keyPageNavigateTO = setTimeout(function() {
						classInst.pageNavigate('next');
						delete classInst;
					},200);
				}
			} else $f(this.gridId+'.V.R'+(this._focusRow-1)+'.'+this._focusControl);
		} else{
			if(!this._editModeRows[this._focusRow]){
				this._focusRowClick.call($(this.gridId+'.R'+(this._focusRow+1)),null,this);
				$f(this.gridId+'.FOCUSCATCHER');
			} else $f(this.gridId+'.V.R'+(this._focusRow+1)+'.'+this._focusControl);
			//this.setSelectedRow(this._focusRow + 1,true);
		}
		return true;
	},

	helpWindow: function(txt,title) {

		var windowName = '_HelpWindow';
		var currWindow = this.getWindow(windowName);
		var windowHeight = typeof arguments[3] != 'undefined' ? arguments[3]: '3in';
		var windowWidth = typeof arguments[2] != 'undefined' ? arguments[2]: '4in';
		var windowType = typeof arguments[4] != 'undefined' ? arguments[4]: 'modal-resizable';
		var relativeTo = typeof arguments[5] != 'undefined' ? arguments[5]: '';
		var flagDropdown = false;


		if(windowType.split('-')[0] == 'dropdown') {
			flagDropdown = true;
			var rEle = $(relativeTo);
		}
		if(!currWindow) {
			currWindow = this.createWindow(windowName,windowType,
			{

			body: {
				content: {
					type: 'blank',
					elementId: '~'
				}
			},

			height: windowHeight,
			width: windowWidth,
			title: {
				html: 'Help Window',
				location: 'top',
				show: true
			},
			disableMove: false
		}
			);
		}
		var windowDiv = currWindow.getWindowId('body');
		$(windowDiv).innerHTML = txt;
		currWindow.setTitle(title);
		currWindow.setSize(windowWidth,windowHeight);
		if(!flagDropdown) {
			currWindow.show();
		} else {
			currWindow.show('dropdown',rEle);
		}
	},

	showGridHelp: function(id) {
		var data = '__helpId=' + id;
		this.ajaxCallback('G','1','__a5ShowGridHelp','',data);
	},

	showFieldHelp: function(part,fieldName) {
		var rowNum = typeof arguments[2] != 'undefined' ? arguments[2] : this._selectedRow;
		if(part=='G') {
			var colNum = this._colNumFromName(this._gridColNames,fieldName);
			if(colNum > -1) {
				if(this.gridColumnInfo[colNum].hlp != '') {
					var data = '__part=G&__field=' + this.gridColumnInfo[colNum].name + '&__helpId=' + this.gridColumnInfo[colNum].hlp;
					this.ajaxCallback('G',rowNum + ':all','__a5ShowHelp','',data);
				}
			}
		} else {
			var colNum = this._colNumFromName(this._detailViewColNames,fieldName);
			if(colNum > -1) {
				if(this.detailViewColumnInfo[colNum].hlp != '') {
					var data = '__part='+part+'&__field=' + this.detailViewColumnInfo[colNum].name + '&__helpId=' + this.detailViewColumnInfo[colNum].hlp;
					this.ajaxCallback('D','1:all','__a5ShowHelp','',data);
				}
			}
		}
	},

	_keyF1: function(){
		if(this._focusControl != '') {
			this.showFieldHelp('G',this._focusControl);
		}
		return true;
	},

	_dvKeyF1: function(){
		if(this._dvFocusControl != '') {
			this.showFieldHelp('G',this._dvFocusControl);
		}
		return true;
	},


	_keySave: function(){
		if(this.rowEditMode != '' && ((this._focusRow > 0 && this._dirtyRows[this._focusRow-1]) || (this._focusRow < 0 && this._dirtyNewRows[Math.abs(this._focusRow)-1]))) {
			this.submitGridPartRow(this._focusRow);
		}
	},

	_keySaveAll: function(){
		if(this.rowEditMode != '' && this._isDirty) {
			this.submitGridPart();
		}
	},

	_keyEnter: function(){
		if(this._focusRow > 0 && !this._editModeRows[this._focusRow-1] && (this.rowEditMode == 'rod'  || this.rowEditMode == 'rod-s')) {
			if(this._focusControl != '') this.editField(this._focusRow,this._focusControl);
			else this.editRow([this._focusRow])
		}
	},

	_keyDeleteRecord: function(){
		if(this.rowEditMode != '') {
			this.deleteRow(this._focusRow);
		}
		return true;

	},
	_keyEscape: function(){
		if(this.rowEditMode != '' && ((this._focusRow > 0 && this._dirtyRows[this._focusRow-1]) || (this._focusRow < 0 && this._dirtyNewRows[Math.abs(this._focusRow)-1]))) {
			this._resetRow(this._focusRow);
		}
	},

	_dvKeyDeleteRecord: function(){
		if(this.detailViewEditMode != '' ) {
			this.deleteDetailViewRecord();
		}
		return true;
	},

	_dvKeySave: function() {
		if(this.detailViewEditMode != '' && this._detailViewIsDirty) {
			this.submitDetailView();
		}
	},

	_dvKeySaveAndEnter: function() {
		if(this.detailViewEditMode != '' && this._detailViewIsDirty) {
			this.submitDetailView(true);
		}
	},

	_dvKeyOpenLookupWindow: function() {
		if(typeof this._floatingLookupWindow[this._dvFocusControl] != 'undefined') {
			this.openLookup('DV',1,this._dvFocusControl);
		}
		return true;
	},


	_dvKeyEscape: function() {
		if(this.detailViewEditMode != '' && this._detailViewIsDirty) this.resetDetailView();

	},

	getStateInfo: function() {
		stateData = $u.o.toParams(this.stateInfo,'__si2');
		return stateData;
	},

	setStateInfo: function(obj) {
			$u.o.assign(this.stateInfo,obj);
	},

	_runJSOnLoad: function() {
		var e = A5.eleByClass('__A5Component_jsRunOnLoad');
		for(var i = 1; i <= e.length; i++) {
			eval(e[i-1].value);
			e[i-1].value = '';
		}
	},


	_submitLow: function(action,formID,url){

		var ele = $(this.gridId + '.STATEINFO');
		if(!ele) {
			return false;
		}

		var optionalData = typeof arguments[3] != 'undefined' ? arguments[3] : '';
		var flagSubmitData = typeof arguments[4] != 'undefined' ? arguments[4] : false;
		if (typeof arguments[5] == 'undefined') stateID = formID + '.STATEINFO';
		else var stateID = arguments[5];
		var nameSpace = typeof arguments[6] != 'undefined' ? arguments[6] : '';
		var removeEvents = typeof arguments[7] != 'undefined' ? arguments[7] : true;


		var data = '';
		var stateInfo = $(stateID).value ? $(stateID).value : '' ;
		var stateInfoArray = stateInfo.split('&');
		var finalStateInfoArray = new Array();
		// prepare if needed
		if($(formID) && $ga(formID,'A5DataRegion') != 'A5DataRegion') a5_AJAX_FormPrepare(formID);
		if (action=='submit:dirty') {
			//submit all 'old' values and only edited fields as the 'new' values.
			data = a5_AJAX_Form_RegionHarvest(formID,false,true,nameSpace,removeEvents);
			data = $u.s.rTrim(data,' &') + '&' + '__FormID='+formID +'&__FormAction=submit';
		} else if (action=='submit:all' || action=='submit') {
			//submit all 'old' values and all 'new' values
			data = a5_AJAX_Form_RegionHarvest(formID,true,true,nameSpace,removeEvents);
			data = $u.s.rTrim(data,' &') + '&' + '__FormID='+formID +'&__FormAction=submit';
		} else if (action=='submit:new' || flagSubmitData) {
			//submit all 'old' values and all 'new' values
			data = a5_AJAX_Form_RegionHarvest(formID,true,false,nameSpace,removeEvents);
			var actionName = $if(action=='submit:new','submit',action);
			data = $u.s.rTrim(data,' &') + '&' + '__FormID='+formID +'&__FormAction='+actionName;
		} else data = '__FormAction=' +action +'&' +  '__FormID=' + formID;
		var URLInfo = document.URL;
		URLInfo=URLInfo.split('?').slice(1).join('?');
		URLInfo=URLInfo.replace(/\%22/g,'"');
		URLInfo=URLInfo.replace(/\%3C/g,'<');
		URLInfo=URLInfo.replace(/\%3E/g,'>');
		URLInfo=URLInfo.replace(/\%20/g,' ');
		URLInfo = URLInfo.split('&');
		var tempArg = '';
		for (var i=0;i<URLInfo.length;i++) {
			tempArg = URLInfo[i].split('=');
			URLInfo[i] = tempArg[0] + '=' + urlencode(tempArg.slice(1).join('='));
		}
		URLInfo = URLInfo.join('&');
		if(URLInfo != '') URLInfo = URLInfo+'&';
		if(stateInfo != '') stateInfo = stateInfo+'&';
		var stateInfo2 = this.getStateInfo();
		if(stateInfo2 != '') stateInfo = stateInfo2 + '&' + stateInfo;

		if(optionalData != '') optionalData = optionalData+'&';
		data = URLInfo + stateInfo+optionalData + data;
		if(data != ''){
			data = data + '&__Ajax=true';
		} else{
			data = '__Ajax=true';
		}
		data = $u.s.tran(data,'\n','%0D%0A');
		data = A5.ajax.addParamRequiredData(data);
		new $a.simple(url,{data: data, handleGeneric: true, method: 'post'});
	}

}







function $f(ele){
	var ele = $n(ele);


	if(typeof ele.length == 'undefined') ele = [ele];
	var select = typeof arguments[1] != 'undefined' ? arguments[1] : false;

	if(ele[0]){
		var tag = ele[0].tagName.toLowerCase();
		if(tag != 'input' && tag != 'select' && tag != 'textarea' && tag != 'button') {
			var ele2 = ele[0].getElementsByTagName('input');
			if(ele2.length == 0 ) return false;
			ele = ele2;
			tag = 'input';
		}
		var type = ele[0].type.toLowerCase();
		if(tag == 'input' && type == 'radio'){
			for(var i=0;i<ele.length;i++){
				if(ele[i].checked == true){
					var pele = ele[i];
					var cancelFocus = false;
					while(pele.tagName.toLowerCase() != 'body') {
						if(pele.style.display == 'none' || pele.style.visibility == 'hidden' )  {
							cancelFocus = true;
							break;
						}
						pele = pele.parentNode;
					}
					if(!cancelFocus) ele[i].focus();
					return false;
				}
			}
		}
		var pele = ele[0];
		var cancelFocus = false;
		if(tag == 'input' && type == 'hidden') cancelFocus = true;
		while(pele.tagName.toLowerCase() != 'body') {
			if(pele.style.display == 'none' || pele.style.visibility == 'hidden' )  {
				cancelFocus = true;
				break;
			}
			pele = pele.parentNode;
		}
		if(!cancelFocus) {
			ele[0].focus();
			if(select && ele[0].select) ele[0].select();
		}

	}
}





/*Generic Run Grid and Run Report Functions
*/

if(typeof A5.component == 'undefined') A5.component =  new Object();


A5.ajax.guid = function() {
	return (A5.ajax._s4()+A5.ajax._s4()+"-"+A5.ajax._s4()+"-"+A5.ajax._s4()+"-"+A5.ajax._s4()+"-"+A5.ajax._s4()+A5.ajax._s4()+A5.ajax._s4());
}

A5.ajax._s4 = function() {
   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
}

A5.fadeOutMessage = function(id,message,duration,flagStyle,style) {
	var msg = '';
	if(flagStyle) {
		msg = '<div class="'+style+'Win"><div class="'+style+'WinInner '+style+'WinTitle">'+message+'</div></div>';
	} else {
		msg = message;
	}
	var ele = $(id);
	if(!ele) return false;
	ele.innerHTML  = msg;
	ele.style.display = '';
	A5.u.element.hide(ele,{type: 'fade',duration: duration} );
}
A5.component.fixupPageAjaxUrl = (function() {
	var re = re = /^(http.*)\/.+\.a5w.*/i
	var getBaseUrl = function(url) {
		var matches = re.exec(url);
		var baseUrl; // intentionally leaving undefined
		if (matches && matches.length > 1) {
			baseUrl = matches[1] + "/";
		}
		return baseUrl;
	};

	return function(ajaxUrl, req) {
		var pagePrefixAddress;
		if (ajaxUrl !== undefined && ajaxUrl.split(':')[0] != 'a5res') {
			pagePrefixAddress = getBaseUrl(ajaxUrl);
			if (pagePrefixAddress !== undefined) {
				req.page = pagePrefixAddress + req.page;
				req.data = req.data + '&' + A5.ajax.buildURLParam('__ajaxURL', pagePrefixAddress);
			}
		}
	};
})();


A5.getStateInfo = function(go) {
	var data = '';
	var objId = go._thisGridAlias;
	if(typeof objId == 'undefined') objId = go.gridId;
	var obj = window[objId + '_DlgObj'];
	if(!obj) window[objId + '_GridObj'];
	if(obj) {
		data = obj.getStateInfo();
		if(data !='') data = '&' + data;
	}
	return data;
}

A5.component.runGenericComponent = function(go) {
	var arr = new Array();
	var pagePrefix = '';
	var pageNoPrefix = '';
	if(typeof go._applicationRoot == 'undefined') go._applicationRoot = '';

	//4.11.2014 no longer needed for web2cal now that we are using IIS style syntax everywhere.
	//pagePrefix = go._applicationRoot //used in web2cal

	if(typeof go._parentComponentHasPanels == 'undefined') go._parentComponentHasPanels = false;
	arr.push(A5.ajax.buildURLParam('__parentComponentHasPanels','' + go._parentComponentHasPanels));

	if(typeof go.dynamicPanel == 'undefined') go.dynamicPanel = false;
	if(typeof go.parentPanelNavigator == 'undefined') go.parentPanelNavigator = '';
	if(typeof go.dynamicPanelTitle == 'undefined') go.dynamicPanelTitle = '';
	if(typeof go.canCloseDynamicPanel == 'undefined') go.canCloseDynamicPanel = false;

	if(typeof go.waitMessageTarget == 'undefined') go.waitMessageTarget = '';
	arr.push(A5.ajax.buildURLParam('__dynamicPanel','' + go.dynamicPanel));
	arr.push(A5.ajax.buildURLParam('__parentPanelNavigator','' + go.parentPanelNavigator));
	arr.push(A5.ajax.buildURLParam('__dynamicPanelTitle','' + go.dynamicPanelTitle));
	arr.push(A5.ajax.buildURLParam('__canCloseDynamicPanel','' + go.canCloseDynamicPanel));
	arr.push(A5.ajax.buildURLParam('__waitMessageTarget','' + go.waitMessageTarget));
	var flagInWindow = 'yes';
	if(typeof go.windowName == 'undefined') flagInWindow = 'no';
	arr.push(A5.ajax.buildURLParam('__openInWindow','' + flagInWindow));

	var __componentName = '';
	var componentObject = '';

	if(go.type == 'dialog2') {
		if(typeof go.dialog2Div == 'undefined') go.dialog2Div = '';
		if(typeof go.dialog2Name == 'undefined') go.dialog2Name = '';
		if(typeof go.alias == 'undefined') go.alias = go.dialog2Name;
		if(typeof go._thisGridAlias == 'undefined') go._thisGridAlias = '';
		componentObject = window[go._thisGridAlias + '_DlgObj'];
		if(typeof go.onLoadCompleteJavascript == 'undefined') go.onLoadCompleteJavascript = '';
		__componentName = go.dialog2Name;
		arr.push('__dialogDiv=' + go.dialog2Div);
		arr.push(A5.ajax.buildURLParam('__dialogFilename',go.dialog2Name));
		arr.push(A5.ajax.buildURLParam('__onLoadCompleteJavascript',go.onLoadCompleteJavascript));
		arr.push(A5.ajax.buildURLParam('__parentComponentAlias',go._thisGridAlias));
		var page = '__a5RunDialog.a5w';
		pageNoPrefix = page;
		//$(go.dialog2Div).innerHTML = go.workingMessage;
		A5.u.element.setContent(go.dialog2Div,go.workingMessage);
		//special mode - edit grid row using dialog
		if(typeof go.specialDialogMode != 'undefined') {
			if(go.specialDialogMode == 'openDialogShowMappedControls') {
				arr.push(A5.ajax.buildURLParam('__controlMap','' + go.controlMap));
				arr.push(A5.ajax.buildURLParam('__controlSourceData','' + go.controlSourceData));
				arr.push(A5.ajax.buildURLParam('__parentComponentType','' + go.parentComponentType));
				if(go.parentComponentType == 'O') arr.push(A5.ajax.buildURLParam('__parentDialogId','' + go.parentDialogId));
				arr.push(A5.ajax.buildURLParam('__commitParent','' + go.commitParentOnDialogClose));
			}
			if(go.specialDialogMode == 'populateDialog') {
				arr.push(A5.ajax.buildURLParam('__getPKFrom','' + go.getPKFrom));
				arr.push(A5.ajax.buildURLParam('__PKValue','' + go.pkValue));
			}

			if(go.specialDialogMode == 'editListRow' || go.specialDialogMode == 'newListRow') {
				arr.push(A5.ajax.buildURLParam('__dialogSpecialMode',go.specialDialogMode + ':' + go.recordPrimaryKey +'::::' + go.listControlId));
			} else {
				arr.push(A5.ajax.buildURLParam('__dialogSpecialMode',go.specialDialogMode + ':' + go.recordPrimaryKey));
			}

			arr.push(A5.ajax.buildURLParam('__parentGridAlias',go._thisGridAlias));
			arr.push(A5.ajax.buildURLParam('__parentRow','' + go.sourceGridRowNumber));
			arr.push(A5.ajax.buildURLParam('__closeDialogAfterSubmit','' + go.closeDialogAfterSubmit));
			if(typeof go.windowName == 'undefined') go.windowName = '____none____';
			arr.push(A5.ajax.buildURLParam('__windowName','' + go.windowName));
		}
	} else {
		if(typeof go._thisGridAlias == 'undefined') go._thisGridAlias = '';
		arr.push(A5.ajax.buildURLParam('__parentComponentAlias',go._thisGridAlias));
		componentObject = window[go._thisGridAlias + '_DlgObj'];
		if(typeof go.customComponentDiv == 'undefined') go.customComponentDiv = '';
		if(typeof go.customComponentName == 'undefined') go.customComponentName = '';
		__componentName = go.customComponentName;
		if(typeof go.alias == 'undefined') go.alias = go.customComponentName;
		arr.push('__customComponentDiv=' + go.customComponentDiv);
		arr.push(A5.ajax.buildURLParam('__customComponentFilename',go.customComponentName));
		var page = '__a5RunCustomComponent.a5w';
		pageNoPrefix = page;
		//$(go.customComponentDiv).innerHTML = go.workingMessage;
		A5.u.element.setContent(go.customComponentDiv,go.workingMessage);
	}

	page = pagePrefix + page;

	if(go.localArguments == undefined) go.localArguments = '';
	if(go.parameterBucket == undefined) go.parameterBucket = '';
	if(go.argumentValueBucket == undefined) go.argumentValueBucket = '';
	if(go.overrideSettings == undefined) go.overrideSettings = '';

	if(typeof go.placeholderValues == 'undefined') go.placeholderValues = '';
	if(typeof go.argumentBinding == 'undefined') go.argumentBinding = '';
	if(typeof go.a5_default_path == 'undefined') go.a5_default_path = '';
	if(typeof go.arguments == 'undefined') go.arguments = '';
	if(go.workingMessage == undefined) go.workingMessage = '<img src="CSS/A5System/Images/wait.gif" /> Working...';

	arr.push(A5.ajax.buildURLParam('__placeholderValues',go.placeholderValues));
	arr.push(A5.ajax.buildURLParam('__argumentBinding',go.argumentBinding));
	arr.push(A5.ajax.buildURLParam('__componentType',go.type));

	arr.push(A5.ajax.buildURLParam('__overrideSettings',go.overrideSettings));
	arr.push(A5.ajax.buildURLParam('__arguments',go.arguments));
	arr.push(A5.ajax.buildURLParam('__localArguments',go.localArguments));
	arr.push(A5.ajax.buildURLParam('__parameterBucket',go.parameterBucket));
	arr.push(A5.ajax.buildURLParam('__argumentValueBucket',go.argumentValueBucket));

	arr.push(A5.ajax.buildURLParam('__applicationRoot',go._applicationRoot));

	arr.push('__path=' + go.a5_default_path);
	arr.push('__guid=' + A5.ajax.guid() );
	arr.push('__alias=' + go.alias);
	arr.push('__initialLoadIsAjax=true');

	arr.push(A5.ajax.buildURLParam('__a5browserflags',$u.o.toJSON(A5.flags)  ) );



	var params = arr.join('&');
	params = $u.s.tran(params,'\n','%0D%0A');

	var fakeData = params

	var pageVars = String(window.location);
	pageVars = pageVars.split('?');
	pageVars.shift();
	pageVars=pageVars.join('?');
	var data = pageVars;
	data = data + '&' + fakeData + '&__unsaved=no';

	data = data +  A5.getStateInfo(go);

	go.guid = "NotNeeded"
	data = A5.ajax.addParamRequiredData(data);



	var flagIIS = false;
	var flagWorkingPreview = false;
	var flagSimulateIIS = false;
	if(typeof A5.__flagIIS != 'undefined') flagIIS = A5.__flagIIS;
	if(typeof A5.__flagWorkingPreview != 'undefined') flagWorkingPreview = A5.__flagWorkingPreview;
	if(typeof A5.__flagSimulateIIS != 'undefined') flagSimulateIIS = A5.__flagSimulateIIS;

	if(flagIIS) {
		//rewrite the url for IIS
		data = '__virtualPage='+page+'&' + data;
		page = __componentName + '.a5wcmp';
	}

	if(flagSimulateIIS && !flagWorkingPreview) {
		page = __componentName + '.a5wcmp?__virtualPage=' + page;
	}


	//if the initial page was loaded from the local filesystem on a device (e.g. phoneGap), need to determine the address
	//of the callback page
	//pagePrefix is used only in web2cal (as of 4.11.2014 we no longer use this for web2cal either - see top of function)
	if(pagePrefix == '') {
		if(typeof componentObject != 'undefined') {
			var req = {
				page: page,
				data: data
			};
			A5.component.fixupPageAjaxUrl(componentObject.ajaxURL, req);
			page = req.page;
			data = req.data;
		}
	}


	var sObj = {}
	sObj.data = data;
	sObj.method = 'post';
	sObj.handleGeneric = true;



	if(typeof go.ajaxFailedMessage == 'undefined') go.ajaxFailedMessage = '';
	if(typeof go.ajaxFailedMessage != 'undefined') {
		sObj.timeout = go.ajaxCallbackTimeout;
		sObj.errorHandle = function() {
			if(this.type == 'dialog2') {
				if(arguments[0].status == 401) {
					window[this.alias + '_DlgObj']._executeEvent('securityNotAuthenticated',{xbasicFunctionName: 'RunUX:' + this.targetComponent });
					return false;
				}
				if(arguments[0].status == 403) {
					window[this.alias + '_DlgObj']._executeEvent('securityPermissionDenied',{xbasicFunctionName: 'RunUX:' + this.targetComponent });
					return false;
				}
			}
			$(this.windowDiv).innerHTML = go.ajaxFailedMessage;
		}
		if(go.type == 'dialog2') {
			sObj.errorHandleContext = {windowDiv: go.dialog2Div, type: go.type, alias: go._thisGridAlias, targetComponent: go.dialog2Name }
		} else {
			sObj.errorHandleContext = {windowDiv: go.dialog2Div}
		}
	};

	new $a.simple(page,sObj);
	//new $a.simple(page,{data:data, method:'post', handleGeneric:true});
}




A5.component.runGrid = function(go) {



	if(typeof go.gridDiv == 'undefined') go.gridDiv = '';
	if(typeof go.gridName == 'undefined') go.gridName = '';
	if(typeof go.alias == 'undefined') go.alias = go.gridName;
	if(typeof go.a5_default_path == 'undefined') go.a5_default_path = '';


	if(go.gridName == '') {
		go.gridName = $(go.gridDiv).innerHTML = 'Fatal error: Grid to display was not specified.';
		return false;
		}

	if(go.alias == '') {
		$(go.reportDiv).innerHTML = 'Fatal error: Grid alias was not specified.';
		return false;
		}

	//solves problem of html editor in detail view not working when running in a tabbed UI if the tab is set to autorefresh.
	//if(typeof window[go.alias.toUpperCase() + '_GridObj'] != 'undefined') {
	//go.__useCachedGrid will only be defined if go was generated from a button in a grid or dialog. will not be defined in tabbed UI.
	if(typeof go.__useCachedGrid == 'undefined') {
		if(typeof window[go.alias.toUpperCase() + '_GridObj'] == 'object') {
			if( $(window[go.alias.toUpperCase() + '_GridObj'].gridId +'.FOCUSCATCHER') )  {
				window[go.alias.toUpperCase() + '_GridObj'].refresh();
				return true;
			}
		}
	}


	if(go.workingMessage == undefined) go.workingMessage = '<img src="CSS/A5System/Images/wait.gif" /> Working...';

	if(go.flagTimer == undefined) go.flagTimer = 'F';
	if(go.flagQueryEcho == undefined) go.flagQueryEcho = 'F';
	if(go.flagDebugMode == undefined) go.flagDebugMode = 'F';

	if(go.userFilter == undefined) go.userFilter = '';
	if(go.baseFilter == undefined) go.baseFilter = '';
	if(go.userOrder == undefined) go.userOrder = '';

	if(go.linkDefinition == undefined) go.linkDefinition = '';
	if(go.arguments == undefined) go.arguments = '';
	if(go.localArguments == undefined) go.localArguments = '';
	if(go.parameterBucket == undefined) go.parameterBucket = '';
	if(go.argumentValueBucket == undefined) go.argumentValueBucket = '';

	if(go.placeHolderValues == undefined) go.placeHolderValues = '';
	if(go.overrideSettings == undefined) go.overrideSettings = '';


	if(go._thisGridAlias == undefined) go._thisGridAlias = '';

	var __ajaxURL = '';
	if (typeof window[go._thisGridAlias + '_DlgObj'] != 'undefined') __ajaxURL = window[go._thisGridAlias + '_DlgObj'].ajaxURL;
	__ajaxURL = __ajaxURL.split('?')[0];



	if(go.linkedContentSectionName == undefined) go.linkedContentSectionName = '';

	if(typeof go.showWindowParameters == 'undefined') go.showWindowParameters = '';





	var flags = go.flagTimer + go.flagQueryEcho + go.flagDebugMode;

	var arr = new Array();


	if(typeof go.dynamicPanel == 'undefined') go.dynamicPanel = false;
	if(typeof go.parentPanelNavigator == 'undefined') go.parentPanelNavigator = '';
	if(typeof go.dynamicPanelTitle == 'undefined') go.dynamicPanelTitle = '';
	if(typeof go.waitMessageTarget == 'undefined') go.waitMessageTarget = '';
	if(typeof go.canCloseDynamicPanel == 'undefined') go.canCloseDynamicPanel = false;
	arr.push(A5.ajax.buildURLParam('__canCloseDynamicPanel','' + go.canCloseDynamicPanel));
	arr.push(A5.ajax.buildURLParam('__dynamicPanel','' + go.dynamicPanel));
	arr.push(A5.ajax.buildURLParam('__parentPanelNavigator','' + go.parentPanelNavigator));
	arr.push(A5.ajax.buildURLParam('__dynamicPanelTitle','' + go.dynamicPanelTitle));
	arr.push(A5.ajax.buildURLParam('__waitMessageTarget','' + go.waitMessageTarget));


	if(go.dynamicPanel == false) {
		if(go.gridDiv == '') {
			alert('Fatal Error. DIV to display Grid Component was not defined.');
			return false;
		}
	}




	arr.push('__vp__fn=GR');
	arr.push('__vp__div=' + go.gridDiv);
	arr.push(A5.ajax.buildURLParam('__vp__gridName',go.gridName));
	arr.push('__vp__path=' + go.a5_default_path);
	arr.push('__vp__guid=' + A5.ajax.guid() );
	arr.push('__vp__alias=' + go.alias);
	arr.push('__vp__flags=' + flags);

	arr.push(A5.ajax.buildURLParam('__vp__userFilter',go.userFilter));
	arr.push(A5.ajax.buildURLParam('__vp__userOrder',go.userOrder));
	arr.push(A5.ajax.buildURLParam('__vp__baseFilter',go.baseFilter));
	arr.push(A5.ajax.buildURLParam('__vp__override',go.overrideSettings));
	arr.push(A5.ajax.buildURLParam('__vp__linkDefinition',go.linkDefinition));
	arr.push(A5.ajax.buildURLParam('__vp__arguments',go.arguments));
	arr.push(A5.ajax.buildURLParam('__vp__localArguments',go.localArguments));
	arr.push(A5.ajax.buildURLParam('__vp__placeHolderValues',go.placeHolderValues));
	arr.push(A5.ajax.buildURLParam('__vp__parameterBucket',go.parameterBucket));
	arr.push(A5.ajax.buildURLParam('__vp__argumentValueBucket',go.argumentValueBucket));
	arr.push(A5.ajax.buildURLParam('__vp___thisGridAlias',go._thisGridAlias));
	arr.push(A5.ajax.buildURLParam('__vp___LCSName',go.linkedContentSectionName));
	arr.push(A5.ajax.buildURLParam('__vp___showWindowParameters',go.showWindowParameters));


	//Lookups
	if(go.isLookupGrid == undefined) go.isLookupGrid = false;

	if(go.isLookupGrid) {
		arr.push(A5.ajax.buildURLParam('__vp__isLookupGrid','true'));
		arr.push(A5.ajax.buildURLParam('__vp__lookupFieldName',go.lookupFieldName));
		arr.push(A5.ajax.buildURLParam('__vp__lookupFieldSection',go.lookupFieldSection));
		arr.push(A5.ajax.buildURLParam('__vp__lookupFieldName',go.lookupFieldName));
		arr.push(A5.ajax.buildURLParam('__vp__lookupReturnFields',go.lookupReturnFields));
		arr.push(A5.ajax.buildURLParam('__vp__lookupGridLinkLabel',go.lookupGridLinkLabel));
		arr.push(A5.ajax.buildURLParam('__vp__lookupGridLinkLabelStyle',go.lookupGridLinkLabelStyle));
		arr.push(A5.ajax.buildURLParam('__vp__lookupParentAlias',go._parentAlias));

	}

	arr.push(A5.ajax.buildURLParam('__a5browserflags',$u.o.toJSON(A5.flags)  ) );

	var params = arr.join('&');
	params = $u.s.tran(params,'\n','%0D%0A');

	var fakeData = params

	var page = '&' + params + '._a5_ajax';


	var pageVars = String(window.location);
	pageVars = pageVars.split('?');
	pageVars.shift();
	pageVars=pageVars.join('?');


	//var data = '';
	var data = pageVars;

	data = data + A5.getStateInfo(go);


	data = data + '&' + fakeData;
	var page = '_dummyPage._a5_ajax';
	//tell the virtual page what the page type is - gr
	go.guid = "NotNeeded"
	//var page = '&__guid=' + go.guid +  '&__fn=gr' +  '._a5_ajax';
	var page = '&__fn=gr' +  '._a5_ajax';

	page = '__a5runGrid.a5w';


	$(go.gridDiv).innerHTML = go.workingMessage;
	data = A5.ajax.addParamRequiredData(data);

	data = data + '&__preprocessInternal=true';


	var flagIIS = false;
	var flagWorkingPreview = false;
	var flagSimulateIIS = false;
	if(typeof A5.__flagIIS != 'undefined') flagIIS = A5.__flagIIS;
	if(typeof A5.__flagWorkingPreview != 'undefined') flagWorkingPreview = A5.__flagWorkingPreview;
	if(typeof A5.__flagSimulateIIS != 'undefined') flagSimulateIIS = A5.__flagSimulateIIS;

	if(flagIIS) {
		//rewrite the url for IIS
		page = go.gridName + '.a5wcmp';
		data = '__virtualPage=__a5RunGrid.a5w&' + data;
	}

	if(flagSimulateIIS && !flagWorkingPreview) {
		page = go.gridName + '.a5wcmp?__virtualPage=' + page;
	}



	//if the initial page was loaded from the local filesystem on a device (e.g. phoneGap), need to determine the address
	//of the callback page
	var req = {
		page: page,
		data: data
	};
	A5.component.fixupPageAjaxUrl(__ajaxURL, req);
	page = req.page;
	data = req.data;

	var sObj = {}
	sObj.data = data;
	sObj.method = 'post';
	sObj.handleGeneric = true;


	if(typeof go.ajaxFailedMessage != 'undefined') {
		sObj.timeout = go.ajaxCallbackTimeout;
		sObj.errorHandle = function() { $(this.windowDiv).innerHTML = go.ajaxFailedMessage; }
		sObj.errorHandleContext = {windowDiv: go.gridDiv}
	};

	new $a.simple(page,sObj);

}


A5.component.makeReportPageName = (function() {
	var projectExtensions = {
		'report':'.a5rpt',
		'letter':'.a5ltr',
		'label':'.a5lab'
	};
	var workspaceExtensions = {
		'report':'.a5wkrpt',
		'letter':'.a5wkltr',
		'label':'.a5wklab'
	};
	var projectRe = /@Project(Report|Letter|Label)/i;
	//var wkspRe =  /(.+)@(.+)(\.ddd|\.alb)/i;
	//sr 3/21/14 - need to test for .set also
	var wkspRe =  /(.+)@(.+)(\.ddd|\.alb|\.set)/i;

	return function(ro) {
		var matches = ro.reportName.match(projectRe);
		if (matches != null) {
			return ro.reportName.replace(matches[0], projectExtensions[(matches[1]).toLowerCase()]);
		} else {
			matches = ro.reportName.match(wkspRe);
			if (matches != null) {
				var pathParts = matches[2].split("\\");
				return matches[1] + "@" + pathParts[pathParts.length -1] + workspaceExtensions[ro.reportType.toLowerCase()];
			}
		}
		return ro.reportName;
	};
})();



A5.component.runReport = function(ro) {

	var __ajaxURL = '';
	if (typeof window[ro.gridId + '_DlgObj'] != 'undefined') __ajaxURL = window[ro.gridId + '_DlgObj'].ajaxURL;


	var flagDownload = false;
	if(typeof ro.download != 'undefined') {
		if(ro.download == 'Y' || ro.download == 'X') flagDownload = true;
	}

	if(!flagDownload) {
		if(typeof ro.reportIFrame == 'undefined' && typeof ro.reportDiv == 'undefined') {
			alert('Fatal Error. DIV or IFRAME to display report was not defined.');
			return false;
		}
	} else {
		ro.reportIFrame = '';
	}

	var __mode = '';
	if(typeof ro.reportIFrame != 'undefined') __mode = 'iframe';
	else __mode = 'div';

	if(typeof ro.workingMessage == 'undefined') {
		ro.workingMessage = 'Generating report. Please wait.....';
	}

	if(typeof ro.reportName == 'undefined') {
		$(ro.reportIFrame).innerHTML = 'Fatal error: Report to print was not specified.';
		return false;
	}

	if(typeof ro.controlReferences == 'undefined') ro.controlReferences = [];
	if(typeof ro.arrayControls == 'undefined') ro.arrayControls = '';
	if(typeof ro.rawArgumentMapping == 'undefined') ro.rawArgumentMapping = '';
	if(typeof ro.htmlReporting == 'object') {
		ro.htmlReporting = $u.o.toJSON(ro.htmlReporting);
	} else ro.htmlReporting = '';
	if(ro.hostComponentType == undefined) ro.hostComponentType = 'Grid';
	if(ro.filter == undefined) ro.filter = '';
	if(ro.filter_incremental == undefined) ro.filter_incremental = '';
	if(ro.order == undefined) ro.order = '';
	if(ro.sqlFilter == undefined) ro.sqlFilter = '';
	if(ro.sqlFilter_incremental == undefined) ro.sqlFilter_incremental = '';
	if(ro.sqlOrder == undefined) ro.sqlOrder = '';
	if(ro.arguments == undefined) ro.arguments = '';
	if(ro.arguments_incremental == undefined) ro.arguments_incremental = '';
	if(ro.localArguments == undefined) ro.localArguments = '';
	if(ro.parameterBucket == undefined) ro.parameterBucket = '';
	if(ro.argumentValueBucket == undefined) ro.argumentValueBucket = '';
	if(ro.gridId == undefined) ro.gridId = '';
	if(ro.download == undefined) ro.download = 'N';
	if(ro.clientSideFilename == undefined) ro.clientSideFilename = '';
	if(ro.xbasicFunction == undefined) ro.xbasicFunction = '';
	if(ro.reportMessagesDivId == undefined) ro.reportMessagesDivId = '';
	if(ro.width == undefined) ro.width = '9in';
	if(ro.height == undefined) ro.height = '11.5in';
	if(ro.displayMode == undefined) ro.displayMode = '';
	if(ro.pdfoptions == undefined) ro.pdfoptions = '';
	if(ro.saveAs == undefined) ro.saveAs = 'pdf';
	if(ro.reportType == undefined) ro.reportType = 'report';
	if(ro.pdfOpenParameters == undefined) ro.pdfOpenParameters = '';
	if(ro.afterExecuteJavascript == undefined) ro.afterExecuteJavascript  = '';
	if(ro.__dtfmt == undefined) ro.__dtfmt = 'mm/dd/yy';

	if(ro._rowNumber == undefined) ro._rowNumber = 1;

	if(ro._gridCurrentFilter == undefined) ro._gridCurrentFilter = '';
	if(ro._gridCurrentOrder == undefined) ro._gridCurrentOrder = '';
	if(ro._gridCurrentArguments == undefined) ro._gridCurrentArguments = '';
	if(ro._gridCurrentDBType == undefined) ro._gridCurrentDBType = '';

	var data = new Array();
	data.push(A5.ajax.buildURLParam('reportName',ro.reportName));

	if(__mode == 'iframe') {
			data.push(A5.ajax.buildURLParam('reportIFrame',ro.reportIFrame));
		    var $iFrame = $(ro.reportIFrame);
			if (typeof $iFrame =="object" && $iFrame.contentWindow != null) {
				var html = "<html><head></head><body>";
				if (ro.workingMessage.search("<") !== -1) {
					html = ro.workingMessage;
				} else {
					var icon = ro.workingMessageIcon == undefined ? "CSS/A5System/Images/wait.gif" : ro.workingMessageIcon;
					html = html + "<img src='" + icon + "'><span style='font-family: Tahoma; font-size: 10pt;'>" + ro.workingMessage + "</span>";
				}
				html = html + "</body></html>";
				try {
	 				var iframeDoc = $iFrame.contentWindow.document;
					iframeDoc.open();
					iframeDoc.write(html);
					iframeDoc.close();
				} catch (e) {
	               if (typeof icon== 'undefined') {
	                    $($iFrame).src= '';
	                } else {
	                    $($iFrame).src= icon;
	                }
				}
			}
	}
	else data.push(A5.ajax.buildURLParam('reportDiv',ro.reportDiv));
	data.push(A5.ajax.buildURLParam('_htmlReporting',ro.htmlReporting));
	data.push(A5.ajax.buildURLParam('filter',ro.filter));
	data.push(A5.ajax.buildURLParam('filter_incremental',ro.filter_incremental));
	data.push(A5.ajax.buildURLParam('order',ro.order));
	data.push(A5.ajax.buildURLParam('sqlFilter',ro.sqlFilter));
	data.push(A5.ajax.buildURLParam('sqlFilter_incremental',ro.sqlFilter_incremental));
	data.push(A5.ajax.buildURLParam('sqlOrder',ro.sqlOrder));
	data.push(A5.ajax.buildURLParam('arguments',ro.arguments));
	data.push(A5.ajax.buildURLParam('arguments_incremental',ro.arguments_incremental));
	data.push(A5.ajax.buildURLParam('localArguments',ro.localArguments));
	data.push(A5.ajax.buildURLParam('parameterBucket',ro.parameterBucket));
	data.push(A5.ajax.buildURLParam('argumentValueBucket',ro.argumentValueBucket));
	data.push(A5.ajax.buildURLParam('pdfoptions',ro.pdfoptions));
	data.push(A5.ajax.buildURLParam('pdfoptions',ro.pdfoptions));
	data.push(A5.ajax.buildURLParam('_hostComponent',ro.hostComponentType));
	data.push(A5.ajax.buildURLParam('__dtfmt',ro.__dtfmt));
	data.push(A5.ajax.buildURLParam('width',ro.width));
	data.push(A5.ajax.buildURLParam('height',ro.height));
	data.push(A5.ajax.buildURLParam('displayMode',ro.displayMode));
	data.push(A5.ajax.buildURLParam('saveAs',ro.saveAs));
	data.push(A5.ajax.buildURLParam('reportType',ro.reportType));
	data.push(A5.ajax.buildURLParam('_pdfOpenParameters',ro.pdfOpenParameters));
	data.push(A5.ajax.buildURLParam('_gridCurrentFilter',ro._gridCurrentFilter));
	data.push(A5.ajax.buildURLParam('_gridCurrentOrder',ro._gridCurrentOrder));
	data.push(A5.ajax.buildURLParam('_gridCurrentArguments',ro._gridCurrentArguments));
	data.push(A5.ajax.buildURLParam('_gridCurrentDBType',ro._gridCurrentDBType));
	data.push(A5.ajax.buildURLParam('_gridId',ro.gridId));
	data.push(A5.ajax.buildURLParam('_download',ro.download));
	data.push(A5.ajax.buildURLParam('_clientSideFilename',ro.clientSideFilename));
	data.push(A5.ajax.buildURLParam('_xbasicFunction',ro.xbasicFunction));
	data.push(A5.ajax.buildURLParam('_reportMessagesDivId',ro.reportMessagesDivId));
	data.push(A5.ajax.buildURLParam('_afterExecuteJavascript',ro.afterExecuteJavascript));
	data.push(A5.ajax.buildURLParam('__a5browserflags',$u.o.toJSON(A5.flags)  ) );
	if(typeof ro.dynamicPanel == 'undefined') ro.dynamicPanel = false;
	if(typeof ro.parentPanelNavigator == 'undefined') ro.parentPanelNavigator = '';
	if(typeof ro.dynamicPanelTitle == 'undefined') ro.dynamicPanelTitle = '';
	if(typeof ro.waitMessageTarget == 'undefined') ro.waitMessageTarget = '';
	if(typeof ro.canCloseDynamicPanel == 'undefined') ro.canCloseDynamicPanel = false;
	data.push(A5.ajax.buildURLParam('__canCloseDynamicPanel','' + ro.canCloseDynamicPanel));
	data.push(A5.ajax.buildURLParam('__dynamicPanel','' + ro.dynamicPanel));
	data.push(A5.ajax.buildURLParam('__parentPanelNavigator','' + ro.parentPanelNavigator));
	data.push(A5.ajax.buildURLParam('__dynamicPanelTitle','' + ro.dynamicPanelTitle));
	data.push(A5.ajax.buildURLParam('__waitMessageTarget','' + ro.waitMessageTarget));
	data.push(A5.ajax.buildURLParam('_rowNumber',ro._rowNumber));

	var dataPageVars = ''
	if(typeof ro.pageVars != 'undefined') {
		dataPageVars = ro.pageVars.join('&');
		dataPageVars = '&' + dataPageVars
	}
	var URLpageVars = String(window.location);
	URLpageVars = URLpageVars.split('?');
	URLpageVars.shift();
	URLpageVars=URLpageVars.join('?');
	if(URLpageVars != '') URLpageVars =  '&' + URLpageVars;
	data = data.join('&');
	data = data + dataPageVars + URLpageVars;

	data = data + A5.getStateInfo(ro);

	data = $u.s.tran(data,'\n','%0D%0A');
	data = A5.ajax.addParamRequiredData(data);
	var page = '__a5RunReport.a5w';


	var flagIIS = false;
	var flagWorkingPreview = false;
	var flagSimulateIIS = false;
	if(typeof A5.__flagIIS != 'undefined') flagIIS = A5.__flagIIS;
	if(typeof A5.__flagWorkingPreview != 'undefined') flagWorkingPreview = A5.__flagWorkingPreview;
	if(typeof A5.__flagSimulateIIS != 'undefined') flagSimulateIIS = A5.__flagSimulateIIS;


	if(flagIIS) {
		//rewrite the url for IIS
		data = '__virtualPage='+page+'&' + data;
		page = A5.component.makeReportPageName(ro);
	}




	if(flagSimulateIIS && !flagWorkingPreview) {
		page = A5.component.makeReportPageName(ro) +'?__virtualPage=__a5RunReport.a5w';
	}

	//sr 3/21/14 - do not need this - just needed to make a5.component.makereportPageName() work with .set extension
	//added here so a5_transform_IIS_URL() will have enough info to decode the URL for the xbasic server
	//if(flagSimulateIIS) {
	//	page = page + '&__reportName=' + ro.reportName;
	//}




	var initialView = 'pdf';
	if(typeof ro.htmlReporting.initialView != 'undefined')  initialView = ro.htmlReporting.initialView.toLowerCase();
	flagSetWorkingMessage = false;
	if(ro.htmlReporting != '') {
		var html = '';
		if(ro.htmlReporting.indexOf('TabbedUI Pane') > -1) {
			if(typeof tbiObj != 'undefined') {
				flagSetWorkingMessage = true;
				//if the report prompts for parameters and the user reruns the report in the existing tabPane, we must not set the working message or else we will destroy the Panel
				if(typeof ro.reportIFrame != 'undefined') {
					var panelObjName = ro.reportIFrame.replace(/\./g,'') + 'Obj';
					if(window[panelObjName]) {
						if($(window[panelObjName].getPanelId()) != false ) flagSetWorkingMessage = false;
					}
				} else {
					//fix case where UX has embedded report. ux is shown in a tabbed UI. button to refresh embedded report on ux is pressed a second time
					flagSetWorkingMessage = false;
				}
			}
		}
		if (ro.workingMessage.search("<") !== -1) {
			html = ro.workingMessage;
		} else {
			var defaultWaitIcon = 'CSS/A5System/Images/wait.gif';
			defaultWaitIcon = defaultWaitIcon.replace('a5res:' + 'images','images'); //fix double encoding of 'a5res' in working preview
			var icon = ro.workingMessageIcon == undefined ? defaultWaitIcon : ro.workingMessageIcon;
			html = html + "<img src='" + icon + "'><span style='font-family: Tahoma; font-size: 10pt;'>" + ro.workingMessage + "</span>";
		}
		//only do this if in TabbedUI. if in a window you will destroy the PanelLayout so that 2nd instance of report will fail
		//for windows, the wait message is now hard coded into the window so no need to do this here.
		if(flagSetWorkingMessage) {
			var ele = $(ro.reportDiv);
			if(ele) {
				//ele.innerHTML = html;
				A5.u.element.setContent(ele,html);
			} else {
				ele = $(ro.reportIFrame);
				if(ele) {
					//ele.innerHTML = html;
					A5.u.element.setContent(ele,html);
				}
			}
		}

	}




	if(initialView != 'pdf') {
		//alert('working........');
		//var ele = $(ro.reportDiv);
		//if(ele) ele.innerHTML = 'busy working....';
	} else {
		if(typeof ro.reportDiv != 'undefined') {
			if(ro.reportDiv != '') {
				var _htmlReporting = ro.htmlReporting;
				if(typeof _htmlReporting == 'undefined')  _htmlReporting = '';
				if(_htmlReporting == '') {
					 var rDEle = $(ro.reportDiv)
					 if(rDEle) {
						rDEle.innerHTML = ro.workingMessage;
					}
				 } else {
				 	var panelObjName = String(ro.reportDiv);
				 	panelObjName = panelObjName.replace(/_/g,'') + 'Obj';
				 	if(typeof window[panelObjName] == 'undefined') {
				 		//panel object has not yet been shown, so show message
				 		var rDEle = $(ro.reportDiv)
						 if(rDEle) {
							rDEle.innerHTML = ro.workingMessage;
						}
				 	} else {
				 		//We have the panelObjName - need to get the panel body and write the message there
				 		var pObj = window[panelObjName].getPanel('report').src;
				 		var id = pObj.getPanelId('body');
				 		var ele = $(id);
				 		if(ele.firstChild) {
				 			if(ele.firstChild.id == id + '.SCROLLWRAPPER') ele = ele.firstChild;
				 		}
				 		ele.innerHTML = ro.workingMessage;
				 	}
				 }
			}
		}
	}

	//if the initial page was loaded from the local filesystem on a device (e.g. phoneGap), need to determine the address
	//of the callback page
	var req = {
		page: page,
		data: data
	};
	A5.component.fixupPageAjaxUrl(__ajaxURL, req);
	page = req.page;
	data = req.data;


	if(initialView == 'pdf') {
		new $a.simple(page,{data: data, method: 'post', handle: A5.component._handleReportResponse});
	} else {
		new $a.simple(page,{data: data, method: 'post'});
	}
}



A5.component._handleReportResponse = function(xmlObj){
	eval(xmlObj.responseText);
	if(typeof a5reportInfo != 'undefined') {

		if(a5reportInfo.reportFileName) {
			setTimeout(Function('$(\''+a5reportInfo.reportIFrame+'\').src = \''+A5.ajax.addURLRequiredData(a5reportInfo.reportFileName)+'\';'),250);
		}
		if(typeof a5reportInfo.afterExecuteJavascript != 'undefined') {
			if(a5reportInfo.afterExecuteJavascript != '') eval(a5reportInfo.afterExecuteJavascript);
		}
	}
}




A5.form.populateSelect = function(eleId,currValue,data,clearExistingEntries) {
	//call old function if clearExistingEntries is a string, not a boolean
	if(typeof clearExistingEntries == 'string') {
		a5_AJAX_Form_populateSelect(eleId,currValue,data,clearExistingEntries);
		return false;
	}
	var ele = $(eleId);
	var currIndex = 0;
	if(clearExistingEntries) {
		if(ele.options.length > 0) {
			for(var i = ele.options.length -1; i >= 0; i--) ele.options[i] = null;
			ele.options[0] = null;
		}
	} else currIndex = ele.options.length;
	for(var i =0; i < data.length; i++) {
		if(data[i].constructor == Array) {
			if(data[i].length > 1) {
				ele.options[currIndex] = new Option(data[i][0],data[i][1]);
			} else {
				ele.options[currIndex] = new Option(data[i][0],data[i][0]);
			}
		} else {
			ele.options[currIndex] = new Option(data[i],data[i]);
		}
		currIndex++;
	}
	var optionFound = false;
	if(ele.options.length > 0) {
		for(var i = 0; i < ele.options.length; i++) {
			if(ele.options[i].value == currValue) {
				optionFound = true;
				ele.options.selectedIndex = i;
				break;
			}
		}
		if(optionFound == false) {
			ele.options[ele.options.length] = new Option(currValue,currValue);
			ele.options.selectedIndex = ele.options.length -1;
		}
	}
}


A5.PageWindows = {
	styleName: '',
	_defaultWindowSettings: {
		'dropdown': {
			type: 'popup',
			title: {html: 'Null',show: false},
			body:  {content: {type: 'blank'}}
		},
		'modal': {
			type: 'modal', autoPosition: 'in-view',
			title: {html: 'Customer Grid',
				tools: {items: [{action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'}],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		},
		'modeless': {
			type: 'modeless', autoPosition: 'in-view',
			title: {html: 'Customer Grid',
				tools: {items: [{action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'}],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		}
	},

	createWindow: function(name,settings) {

		/*
		var closeButton = {action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'};
			if(typeof A5.themes != 'undefined') {
				if(typeof A5.themes._t[this.styleName] != 'undefined') closeButton = A5.themes._t[this.styleName].window.base._defaultTools.close;
		}
		*/

		if(!this.getWindow(name)) {
			if(typeof settings == 'string') {
				var closeButton = {action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'};
				if(typeof A5.themes != 'undefined') {
					if(typeof A5.themes._t[this.styleName] != 'undefined') closeButton = A5.themes._t[this.styleName].window.base._defaultTools.close;
				}
				var parts = settings.split('-');
				settings = this._defaultWindowSettings[parts.shift()];
				for(var i=0;i<parts.length;i++){
					if(parts[i] == 'url'){
						settings.body.content.type = 'url';
						settings.body.content.url = 'about:blank';
					} else if(parts[i] == 'resizable'){
						settings.resize = 'both';
					}
				}
				settings.theme = this.styleName;
				settings.title.tools.items = [closeButton];
			}
			if(typeof arguments[2] == 'object') $u.o.assign(settings,arguments[2]);
			this._genericWindow[name] = new A5.Window(settings);
		}
		return this._genericWindow[name];
	},

	getWindow: function(name) {
		if(typeof this._genericWindow[name] != 'undefined' ) return this._genericWindow[name];
		return false;
	},
	_genericWindow: []
}

function closeParentA5Window(ele) {
	var currWindow = A5.windows.getFromElement(ele);
	if(currWindow) currWindow.hide();
}

function closeLastOpenedA5Window() {
	var currWindow = A5.windows.getTop();
	if(currWindow) currWindow.hide();
}

function randId() {
	var d = new Date();
	str = d.getDate()+''+d.getHours()+''+d.getMinutes()+''+d.getSeconds();
	return str;
}

A5.eleByClass = function(cName) {
	if ( !document.getElementsByClassName ) {
		var elArray = [];
		var tmp = document.getElementsByTagName('*');
		var regex = new RegExp("(^|\s)" + cName + "(\s|$)");
		for(var i = 0; i < tmp.length; i++) {
			if(regex.test(tmp[i].className)) {
				elArray.push(tmp[i]);
			}
		}
		return elArray;
	} else {
		return document.getElementsByClassName(cName);
	}
}

function getTabbedUI() {
var curWin = window;
while(window.top != curWin) {
	curWin = curWin.parent;
	if(curWin.tbiObj) {
		return curWin.tbiObj;
	}

}
if(typeof tbiObj != 'undefined') return tbiObj;
return false;
}



//Animation library
A5.anim = {
	run: function(ele,settings){
		A5.anim.stop(ele);
		$u.o.assign(settings,{
			channel: [],
			steps: 10,
			delay: 25,
			onBefore: 0,
			onAfter: 0
		},true);
		if(settings.channel.constructor != Array) settings.channel = [settings.channel];
		for(var i=0;i<settings.channel.length;i++){
			$u.o.assign(settings.channel[i],{
				property: '',
				start: 0,
				end: 1,
				unit: '',
				power: .5,
				clear: false
			},true);
			if(settings.channel[i].property == 'font-size' && settings.channel[i].unit == '') settings.channel[i].unit = 'pt';
			else if(settings.channel[i].unit == '') settings.channel[i].unit = 'px';
			settings.channel[i]._type = 'style';
			if($u.s.word(settings.channel[i].property,-1,'-') == 'color'){
				// convert colors to array
				settings.channel[i]._type = 'style:color';
				settings.channel[i].start = A5.anim._colorToNumber(settings.channel[i].start);
				settings.channel[i].end = A5.anim._colorToNumber(settings.channel[i].end);
			} else if(settings.channel[i].property == 'opacity'){
				settings.channel[i]._type = 'style:opacity';
				ele.style.zoom = '1';
			}
			settings.channel[i].property = settings.channel[i].property.split('-');
			for(j=1;j<settings.channel[i].property.length;j++) settings.channel[i].property[j] = $u.s.changeCase(settings.channel[i].property[j],'fu');
			settings.channel[i].property = settings.channel[i].property.join('');
		}

		var curStep = 0;
		if(settings.onBefore.constructor == Function) settings.onBefore.call(ele);
		if(settings.onAfter.constructor == Function) $e.add(ele,'a5AnimateComplete',settings.onAfter,null,false,ele.id+ele.name+'A5ANIMATE');
		ele._a5anim = setInterval(function(){
			for(var i=0;i<settings.channel.length;i++){
				if(settings.channel[i]._type == 'style:color' || typeof settings.channel[i].start == 'number'){
					if(settings.channel[i]._type == 'style:color'){
						var color = new Array();
						color.push(Math.ceil(A5.anim._ease(settings.channel[i].start[0],settings.channel[i].end[0],settings.steps,curStep,settings.channel[i].power)));
						color.push(Math.ceil(A5.anim._ease(settings.channel[i].start[1],settings.channel[i].end[1],settings.steps,curStep,settings.channel[i].power)));
						color.push(Math.ceil(A5.anim._ease(settings.channel[i].start[2],settings.channel[i].end[2],settings.steps,curStep,settings.channel[i].power)));
						ele.style[settings.channel[i].property] = '#'+$u.s.pad(color[0].toString(16),2,'0')+$u.s.pad(color[1].toString(16),2,'0')+$u.s.pad(color[2].toString(16),2,'0');;
						delete color;
					} else if(settings.channel[i]._type == 'style:opacity'){
						var opacity = A5.anim._ease(settings.channel[i].start,settings.channel[i].end,settings.steps,curStep,settings.channel[i].power);
						ele.style.opacity = opacity;
						ele.style.filter = 'alpha(opacity = '+Math.ceil(opacity*100)+')';
					} else ele.style[settings.channel[i].property] = A5.anim._ease(settings.channel[i].start,settings.channel[i].end,settings.steps,curStep,settings.channel[i].power)+settings.channel[i].unit;
				} else{
					if(curStep == settings.steps){
						ele.style[settings.channel[i].property] = settings.channel[i].end;
					}
				}
			}
			curStep++;
			if(curStep > settings.steps) A5.anim.stop(ele);
		},settings.delay);
	},
	stop: function(ele){
		if(ele._a5anim){
			clearInterval(ele._a5anim);
			$e.execute(ele,'a5AnimateComplete');
			$e.removeGroup(ele.id+ele.name+'A5ANIMATE');
		}
	},
	toggle: function(ele){
		A5.anim.stop(ele);
		var type = typeof arguments[1] != 'undefined' ? arguments[1].toString().toLowerCase() : 'fade';
		var dir = typeof arguments[2] != 'undefined' ? arguments[2].toString().toLowerCase() : 'toggle';
		var delay = typeof arguments[3] != 'undefined' ? arguments[3] : 500;
		var steps = Math.round(delay/25);
		var hasFade = type.search('fade') != -1 ? true : false;
		var hasDrop = type.search('drop') != -1 ? true : false;
		var hasSlide = type.search('slide') != -1 ? true : false;
		if(!hasFade && !hasDrop && !hasSlide) return false;
		if(dir == 'toggle'){
			dir = 'hide';
			if(ele.style.display == 'none') dir = 'show';
		}
		if(dir == 'show'){
			if(ele.style.display != 'none') return false;
			ele.style.display = '';
			var chnls = new Array();
			var oldStyle = {};
			if(hasFade){
				oldStyle = {opacity: '', filter: '', zoom: ''};
				if(ele.style.opacity) oldStyle.opacity = ele.style.opacity;
				if(ele.style.filter) oldStyle.filter = ele.style.filter;
				if(ele.style.zoom) oldStyle.zoom = ele.style.zoom;
				ele.style.opacity = '0';
				ele.style.filter = 'alpha(opacity=0)';
				if(ele.style.zoom == '') ele.style.zoom = '1';
				chnls.push({property: 'opacity', start: 0, end: 1})
			}
			if(hasDrop){
				var targHeight = ele.offsetHeight;
				oldStyle.overflow = ele.style.overflow;
				oldStyle.height = ele.style.height;
				ele.style.height = '0px';
				ele.style.overflow = 'hidden';
				chnls.push({property: 'height', start: 0, end: targHeight, unit: 'px'})
			}
			if(hasSlide){
				var targWidth = ele.offsetWidth;
				if(!oldStyle.overflow) oldStyle.overflow = ele.style.overflow;
				if(!hasDrop && ele.style.height == ''){
					oldStyle.height = '';
					ele.style.height = ele.offsetHeight+'px';
				}
				oldStyle.width = ele.style.width;
				ele.style.width = '0px';
				ele.style.overflow = 'hidden';
				chnls.push({property: 'width', start: 0, end: targWidth, unit: 'px'})
			}
			A5.anim.run(ele,{
				onAfter: Function('$ss(this,'+$u.o.toJSON(oldStyle)+');'),
				channel: chnls,
				'steps': steps
			});
		} else if(dir == 'hide'){
			if(ele.style.display == 'none') return false;
			var chnls = new Array();
			var oldStyle = {};
			if(hasFade){
				oldStyle = {opacity: '', filter: '', zoom: ''};
				if(ele.style.opacity) oldStyle.opacity = ele.style.opacity;
				if(ele.style.filter) oldStyle.filter = ele.style.filter;
				if(ele.style.zoom) oldStyle.zoom = ele.style.zoom;
				ele.style.opacity = '1';
				ele.style.filter = 'alpha(opacity=100)';
				if(ele.style.zoom == '') ele.style.zoom = '1';
				chnls.push({property: 'opacity', start: 1, end: 0})
			}
			if(hasDrop){
				var targHeight = ele.offsetHeight;
				oldStyle.overflow = ele.style.overflow;
				oldStyle.height = ele.style.height;
				ele.style.overflow = 'hidden';
				chnls.push({property: 'height', start: targHeight, end: 0, unit: 'px'})
			}
			if(hasSlide){
				var targWidth = ele.offsetWidth;
				if(!oldStyle.overflow) oldStyle.overflow = ele.style.overflow;
				if(!hasDrop && ele.style.height == ''){
					oldStyle.height = '';
					ele.style.height = ele.offsetHeight+'px';
				}
				oldStyle.width = ele.style.width;
				ele.style.width = '0px';
				ele.style.overflow = 'hidden';
				chnls.push({property: 'width', start: targWidth, end: 0, unit: 'px'})
			}
			A5.anim.run(ele,{
				onAfter: Function('$ss(this,'+$u.o.toJSON(oldStyle)+'); this.style.display = \'none\';'),
				channel: chnls,
				'steps': steps
			});
		}
	},
	_ease: function(start,end,steps,curStep,power){
		var delta = end-start;
		var result = start+(Math.pow(((1/steps)*curStep),power)*delta);
		return result;
	},
	_colorToNumber: function(color){
		if(color.constructor == Array()) return color;
		color = color.toString();
		var rColor = new Array();
		if(color.substr(0,4) == 'rgb('){
			rColor.push($u.s.toNum($u.s.word(color,1,',')));
			rColor.push($u.s.toNum($u.s.word(color,2,',')));
			rColor.push($u.s.toNum($u.s.word(color,3,',')));
		} else{
			// replace named colors:
			var sc = ['aliceblue','antiquewhite','aqua','aquamarine','azure','beige','bisque','black','blanchedalmond','blue','blueviolet','brown','burlywood','cadetblue','chartreuse','chocolate','coral','cornflowerblue','cornsilk','crimson','cyan','darkblue','darkcyan','darkgoldenrod','darkgray','darkgreen','darkkhaki','darkmagenta','darkolivegreen','darkorange','darkorchid','darkred','darksalmon','darkseagreen','darkslateblue','darkslategray','darkturquoise','darkviolet','deeppink','deepskyblue','dimgray','dodgerblue','firebrick','floralwhite','forestgreen','fuchsia','gainsboro','ghostwhite','gold','goldenrod','gray','green','greenyellow','honeydew','hotpink','indianred','indigo','ivory','khaki','lavender','lavenderblush','lawngreen','lemonchiffon','lightblue','lightcoral','lightcyan','lightgoldenrodyellow','lightgrey','lightgreen','lightpink','lightsalmon','lightseagreen','lightskyblue','lightslategray','lightsteelblue','lightyellow','lime','limegreen','linen','magenta','maroon','mediumaquamarine','mediumblue','mediumorchid','mediumpurple','mediumseagreen','mediumslateblue','mediumspringgreen','mediumturquoise','mediumvioletred','midnightblue','mintcream','mistyrose','moccasin','navajowhite','navy','oldlace','olive','olivedrab','orange','orangered','orchid','palegoldenrod','palegreen','paleturquoise','palevioletred','papayawhip','peachpuff','peru','pink','plum','powderblue','purple','red','rosybrown','royalblue','saddlebrown','salmon','sandybrown','seagreen','seashell','sienna','silver','skyblue','slateblue','slategray','snow','springgreen','steelblue','tan','teal','thistle','tomato','turquoise','violet','wheat','white','whitesmoke','yellow','yellowgreen'];
			var rc = ['#F0F8FF','#FAEBD7','#00FFFF','#7FFFD4','#F0FFFF','#F5F5DC','#FFE4C4','#000000','#FFEBCD','#0000FF','#8A2BE2','#A52A2A','#DEB887','#5F9EA0','#7FFF00','#D2691E','#FF7F50','#6495ED','#FFF8DC','#DC143C','#00FFFF','#00008B','#008B8B','#B8860B','#A9A9A9','#006400','#BDB76B','#8B008B','#556B2F','#FF8C00','#9932CC','#8B0000','#E9967A','#8FBC8F','#483D8B','#2F4F4F','#00CED1','#9400D3','#FF1493','#00BFFF','#696969','#1E90FF','#B22222','#FFFAF0','#228B22','#FF00FF','#DCDCDC','#F8F8FF','#FFD700','#DAA520','#808080','#008000','#ADFF2F','#F0FFF0','#FF69B4','#CD5C5C','#4B0082','#FFFFF0','#F0E68C','#E6E6FA','#FFF0F5','#7CFC00','#FFFACD','#ADD8E6','#F08080','#E0FFFF','#FAFAD2','#D3D3D3','#90EE90','#FFB6C1','#FFA07A','#20B2AA','#87CEFA','#778899','#B0C4DE','#FFFFE0','#00FF00','#32CD32','#FAF0E6','#FF00FF','#800000','#66CDAA','#0000CD','#BA55D3','#9370D8','#3CB371','#7B68EE','#00FA9A','#48D1CC','#C71585','#191970','#F5FFFA','#FFE4E1','#FFE4B5','#FFDEAD','#000080','#FDF5E6','#808000','#6B8E23','#FFA500','#FF4500','#DA70D6','#EEE8AA','#98FB98','#AFEEEE','#D87093','#FFEFD5','#FFDAB9','#CD853F','#FFC0CB','#DDA0DD','#B0E0E6','#800080','#FF0000','#BC8F8F','#4169E1','#8B4513','#FA8072','#F4A460','#2E8B57','#FFF5EE','#A0522D','#C0C0C0','#87CEEB','#6A5ACD','#708090','#FFFAFA','#00FF7F','#4682B4','#D2B48C','#008080','#D8BFD8','#FF6347','#40E0D0','#EE82EE','#F5DEB3','#FFFFFF','#F5F5F5','#FFFF00','#9ACD32'];
			color = $u.s.lTrim($u.s.tran(color.toLowerCase(),sc,rc),'#');
			if(color.length == 3){
				rColor.push(parseInt('0x'+$u.s.replicate(color.substr(0,1),2)));
				rColor.push(parseInt('0x'+$u.s.replicate(color.substr(1,1),2)));
				rColor.push(parseInt('0x'+$u.s.replicate(color.substr(2,1),2)));
			} else{
				rColor.push(parseInt('0x'+color.substr(0,2)));
				rColor.push(parseInt('0x'+color.substr(2,2)));
				rColor.push(parseInt('0x'+color.substr(4,2)));
			}
		}
		return rColor;
	}
}


A5.executeThisThenThat = function() {
	var args = [];
	for(var i = 0; i < arguments.length; i++) args.push(arguments[i]);
	var thisCode = args.shift();
	var lc = $a.lastCallback;
	if(typeof thisCode == 'string') eval(thisCode);
	else thisCode();
	if(args.length == 1) {
		var thatCode = args[0];
		if(lc == $a.lastCallback) {
			if(typeof thatCode == 'string') eval(thatCode);
			else thatCode();
		} else {
			$a._def['' + $a.lastCallback] = typeof thatCode == 'string' ? Function(thatCode) : thatCode;
		}
	} else {
		if(lc == $a.lastCallback) {
			A5.executeThisThenThat.apply(this,args);
		} else {
			$a._def['' + $a.lastCallback] = function() {
				A5.executeThisThenThat.apply(this,args);
				delete args;
			}
		}
	}
}


A5.u.element.visibilityHide =function(ele) {
	ele.style.visibility = 'hidden';
}

A5.u.element.visibilityShow =function(ele) {
	ele.style.visibility = '';
}

A5.u.element.visibilityToggle =function(ele) {
	if(ele.style.visibility == 'hidden') ele.style.visibility = '';
	else ele.style.visibility = 'hidden';
}

A5._buttonAddTheme = function(ele,theme) {
	var settings = {};
	A5.themes.assign(settings,theme,'button');

	if(A5.flags.supportsMouse && settings.hoverClassName != '') {

		$e.add(ele,'mouseover',Function('$acn(this,\''+settings.hoverClassName+'\')') );
		$e.add(ele,'mouseout',Function('$rcn(this,\''+settings.hoverClassName+'\')') );
	}
	if(settings.pressedClassName != '') {
		$e.add(ele,A5.d.evnts.down,Function('$acn(this,\''+settings.pressedClassName+'\')') );
		$e.add(ele,A5.d.evnts.up,Function('$rcn(this,\''+settings.pressedClassName+'\')') );
	}
}
A5._btn = function(ele,mode,style) {

	if(typeof A5._btnHighlight != 'undefined') {
		if(A5._btnHighlight == false) return true;
	}
	//allows button hightlight effects to be disabled for mobile
	if(mode == 'onmouseover') $acn(ele, style + 'ButtonHover');
	if(mode == 'onmousedown') $acn(ele, style + 'ButtonPressed');
	if(mode == 'onmouseup') $rcn(ele, style + 'ButtonPressed');
	if(mode == 'onmouseout') {
		$rcn(ele, style + 'ButtonPressed');
		$rcn(ele, style + 'ButtonHover');
	}
}


A5.stringToDate = function(string) {
	string = $u.s.aTrim(string);
	if(string.length == 1 && string.charCodeAt(0) == 160) string = '';
	if(string == '') return '';
	if(string == null) return null;
	var systemFormat = A5.__dtfmt;
	if(typeof A5.__tfmt != 'undefined') systemFormat = systemFormat + '&&' + A5.__tfmt;
	var fmt = typeof arguments[1] != 'undefined' ? arguments[1]: systemFormat;
	var _d = new Date();
	_d.fromFormat(string,fmt);
	return  _d;

}

A5.isBlank = function(x) {
	if(x == null) return true;
	if(typeof x == 'undefined') return true;
	if(x.constructor == Array) x = x.join('');
	var flag = false;
	if(x == '' || x == '&nbsp;'  || (x.length == 1 && x.charCodeAt(0) == 160)) flag = true;
	return flag;

}


A5.loadJavascript = function(txt) {
	var sEle = document.getElementsByTagName('script');
	var cancelAdd = false;
	for(var i=0; i < sEle.length; i++) {
		if(sEle[i].text == txt) {
			cancelAdd = true;
			break;
		}
	}
	//in a phonegap app, running in a shell, functions defined in _functions NS were not relaoded
	if(typeof cordova != 'undefined') cancelAdd = false;

	if(cancelAdd == false) {
		var e = document.createElement('script');
		e.text = txt;
		document.getElementsByTagName('head')[0].appendChild(e);
	}
}

A5.loadJavascriptFile =  function(filename) {

	var onLoaded = typeof arguments[1] != 'undefined' ? arguments[1] : false;
	var sEle = document.getElementsByTagName('script');
	var cancelAdd = false;
	for(var i=0; i < sEle.length; i++) {
		if(sEle[i].src == filename) {
			cancelAdd = true;
			break;
		}
	}
	if(typeof cordova != 'undefined') cancelAdd = false;
	if(cancelAdd == false) {
		var e = document.createElement('script');
		e.src = filename;
		e.onload = function() {
			if(typeof jQuery != 'undefined') jQuery.noConflict();
			if(onLoaded.constructor == Function) onLoaded();
			if(onLoaded.constructor == String) {
				//ux passed in the onLoaded function as a string
				setTimeout(function() { if(window[onLoaded]) window[onLoaded]();},100); //give function time to load in case it is a global function
			}
		};
		e.onreadystatechange = function() {
			if(this.readyState == 'complete' || this.readyState == 'loaded') {
				if(typeof jQuery != 'undefined') jQuery.noConflict();
				if(onLoaded.constructor == Function) onLoaded();
				if(onLoaded.constructor == String) {
					//ux passed in the onLoaded function as a string
					setTimeout(function() { if(window[onLoaded]) window[onLoaded]();},100);
				}
			}
		};
		document.getElementsByTagName('head')[0].appendChild(e);
	}
}



/*
Copyright (c) 2001, 2013 Alpha Software Corporation
All Rights Reserved.

This Javascript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/

A5.CustomComponentHelper = Class.create();
A5.CustomComponentHelper.prototype = {
	initialize: function(settings){
		
		$u.o.assign(settings,{
			ajaxURL: ''
		},true);
		$u.o.assign(this,settings,true);
		this.stateInfo = {};
		
		this._functions = {};
		this._defaultWindowSettings = new Object();
		
		
		this._defaultWindowSettings['dropdown'] = {
			type: 'popup',
			theme: this.styleName,
			title: {html: 'Null',show: false},
			body:  {content: {type: 'blank'}}
		};		
		
		this._genericWindow = new Object();
		
		this._kw = new AUI.KeyWatcher([
			{key: 'F1', handle: this._keyF1}
			],this);		
		
		var closeButton = {action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'};
		if(typeof A5.themes != 'undefined') {
			if(typeof A5.themes._t[this.styleName] != 'undefined') closeButton = A5.themes._t[this.styleName].window.base._defaultTools.close;
		}

		this._defaultWindowSettings['modal'] = {
			type: 'modal', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', 
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};
		
		this._defaultWindowSettings['modeless'] = {
			type: 'modeless', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', 
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};		
		
		
		
		this._defaultWindowSettings['modalpopup'] = {
			type: 'modal-popup', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', 
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
				};

		this._defaultWindowSettings['modelesspopup'] = {
			type: 'popup', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', 
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};		
		
		
		
	},
	
	
	setStateInfo: function(obj) {
		$u.o.assign(this.stateInfo,obj);
	},

	getStateInfo: function() {
		stateData = $u.o.toParams(this.stateInfo,'_state');
		return stateData;
	},
	

	ajaxCallback: function(part,rowNum,xbasicFunction) {
		//part and rowNum are meaningless but are in the prototype so that the same syntax is used
		//as Grid and Dialog2 component
		if(!this._executeEvent('canAjaxCallback',{xbasicFunctionName: xbasicFunction, ajaxEvent: 'AjaxCallback'})) return false;
	
		var callbackURL = typeof arguments[3] != 'undefined' ? arguments[3] : '';	
		var otherData = typeof arguments[4] != 'undefined' ? arguments[4] : '';
		var data = this.getStateInfo();
		data = '_XbasicFunction='+xbasicFunction+'&__FormAction=GenericAjaxCallback&'+data;
		if(callbackURL == '') callbackURL = this.ajaxURL;
		if(otherData!='') data=data + '&' + otherData;
		
		var browserData = $u.o.toJSON(A5.flags);
		data = data + '&' + A5.ajax.buildURLParam('__a5browserflags',browserData);
		
		
		A5.ajax.callback(callbackURL,data);
		return false;
	},
	
	
	closeContainerWindow: function(ele) {
		//if grid is opened in a window, closes the container window
	    var cw = A5.windows.getFromElement(ele);
	    if(cw) cw.hide();
	},
	
	
	loadJavascript: function(txt) {
		var sEle = document.getElementsByTagName('script');
		var cancelAdd = false;
		for(var i=0; i < sEle.length; i++) {
			if(sEle[i].text == txt) { 
				cancelAdd = true;
				break;
			}
		}
		
		if(cancelAdd == false) {
			var e = document.createElement('script');
			e.text = txt;
			document.getElementsByTagName('head')[0].appendChild(e);
		}
	},
	
	loadJavascriptFile: function(filename) {
		var onLoaded = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var sEle = document.getElementsByTagName('script');
		var cancelAdd = false;
		for(var i=0; i < sEle.length; i++) {
			if(sEle[i].src == filename) { 
				cancelAdd = true;
				break;
			}
		}
		if(cancelAdd == false) {
			var e = document.createElement('script');
			e.src = filename;
			e.onload = function() {
				if(typeof jQuery != 'undefined') jQuery.noConflict();
				if(onLoaded.constructor == Function) onLoaded();
			};
			
			e.onreadystatechange = function() {
				if(this.readyState == 'complete' || this.readyState == 'loaded') {
					if(typeof jQuery != 'undefined') jQuery.noConflict();
					if(onLoaded.constructor == Function) onLoaded();
				}
			};
			document.getElementsByTagName('head')[0].appendChild(e);
			
		}
	},
	
	getParentObject: function() {
			if(this.parentComponentAlias !='') {
				if(typeof window[this.parentComponentAlias+'_GridObj'] != 'undefined') return window[this.parentComponentAlias+'_GridObj'];
				if(typeof window[this.parentComponentAlias+'_DlgObj'] != 'undefined') return window[this.parentComponentAlias+'_DlgObj'];
				return false
			} else return false;
	},
	
	loadCSSFile: function(filename) {
			var sEle = document.getElementsByTagName('link');
			var cancelAdd = false;
			for(var i=0; i < sEle.length; i++) {
				if(sEle[i].href.indexOf(filename) > 0) { 
					cancelAdd = true;
					break;
				}
			}
			if(cancelAdd == false) {
				var e = document.createElement('link');
				e.href = filename;
				e.rel = 'stylesheet';
				e.type = 'text/css';
				document.getElementsByTagName('head')[0].appendChild(e);
			}
	},
	
	loadXbasic: function(txt) {
			var versionNum = typeof arguments[1] != 'undefined' ? arguments[1] : '';
			if(this._embeddedMode == false) return false;
			var sEle = document.getElementsByTagName('script');
			var cancelAdd = false;
			for(var i=0; i < sEle.length; i++) {
				if(typeof sEle[i].language != 'undefined') {
					if(sEle[i].language.toLowerCase() == 'xbasic' + versionNum) {
						if(sEle[i].text.toLowerCase()  == txt.toLowerCase()) { 
							cancelAdd = true;
							break;
						}
					}
				}
			}
			if(cancelAdd == false) {
				var e = document.createElement('script');
				e.text = txt;
				e.language = 'Xbasic' + versionNum;
				document.getElementsByTagName('head')[0].appendChild(e);
			}
	},
	
	loadMetaTag: function(name,txt) {
			var e = document.createElement('meta');
			e.name = name;
			e.content = txt;
			document.getElementsByTagName('head')[0].appendChild(e);
	},
	
	
	_destroy: function() {
		var ele = 0;
		for(var winName in this._genericWindow){
			ele = $(this._genericWindow[winName].getWindowId('body'));
			if(ele.tagName.toLowerCase() == 'div') ele.innerHTML = '';
		}
	},
	
	createWindow: function(name,settings) {
			if(!this.getWindow(name)) {
				if(typeof settings == 'string') {
					var parts = settings.split('-');
					settings = new Object();
					$u.o.assign(settings , this._defaultWindowSettings[parts.shift()]);
					for(var i=0;i<parts.length;i++){
						if(parts[i] == 'url'){
							settings.body.content.type = 'url';
							settings.body.content.url = 'about:blank';
						} else if(parts[i] == 'resizable'){
							settings.resize = 'both';
						}
					}
				}
				if(typeof arguments[2] == 'object') $u.o.assign(settings,arguments[2]);
				this._genericWindow[name] = new A5.Window(settings);
			}
			return this._genericWindow[name];
		},
		
	getWindow: function(name) {
		if(typeof this._genericWindow[name] != 'undefined' ) return this._genericWindow[name];
		return false;
	},
	
	_executeEvent: function(eventName) {
		var result = true;
		var targs = new Array();
		for(var i = 1; i < arguments.length; i++) targs.push(arguments[i]);
		var tresult = false;
		if(typeof this[eventName] != 'undefined'  ) {

			if(this[eventName].constructor == Function) {
				tresult = this[eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = tresult;
			}
		}
		if(typeof this['_' +eventName] != 'undefined' ) {
			if(this['_'+eventName].constructor == Function) {
				tresult = this['_'+eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = result && tresult;
			}
			
		}
		return result;
	}
	
}


/*
Copyright (c) 2001, 2013 Alpha Software Corporation
All Rights Reserved.

This Javascript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/
A5.DialogComponentHelper = Class.create();
A5.DialogComponentHelper.prototype = {

	initialize: function(dialogId,settings){
		this.dialogId = dialogId;
		$u.o.assign(settings,{
			ajaxURL: '',
			columnInfo: {},
			fieldHelpers: {},
			dialogWatches: {},
			waitMessageAutoCloseDelay: 5000,
			fieldErrors: {
				type: '',
				className: '',
				inputClassName: '',
				icon: '',
				global: {
					contId: '',
					hoverClassName: '',
					hoverInputClassName: ''
				}
			}

		},true);
		$u.o.assign(this,settings,true);
		this._delayed = [] //delayed method calls to UX
		this._dirtyRows = [false];
		this._isDirty = false;
		this._isDataDirty = false;
		this._focusControl = '';
		this._focusRow = 1;
		this._blurTO = 0;
		this._fwTO = 0;
		this._onlineStatusMode = '';
		this._onlineStatus = 'online';
		this.flagRenderComplete = false;

		this._functionToConstrainElements = Function('var eles = arguments[0]; var dlgId = \''+this.dialogId+'.\'; var dlgIdLen = dlgId.length; var eles2 = []; for(var i = 0;i < eles.length; i++){ if(eles[i].id.substr(0,dlgIdLen) == dlgId) eles2.push(eles[i]);}; if(eles2.length == 0) return false; return eles2;');
		this._controls = {};
		if(typeof this.fieldErrors.global.contId == 'undefined' || this.fieldErrors.global.contId == '') {
			this.fieldErrors.global.contId = this.dialogId + '.GLOBALERRORS';
		}
		this._eh = new A5.ErrorHandler(this.fieldErrors);
		var tempFE = {type: 'tip'};
		$u.o.assign(tempFE,this.fieldErrors,true);
		this._rseh = new A5.ErrorHandler(tempFE);
		this.stateInfo = {};
		this.rowStateInfo = [];
		this._listViewData = [];
		this._listViewSettings = [];
		this._buttonListData = [];
		this._spinListData = [];
		this._sliderData = [];
		this._treeData = [];
		this._treeSettings = [];
		this._mapSettings = [];
		this._menus = [];
		this._layoutRules = [];
		this._menuData = [];
		this._waitDialogs = [];
		this._listsDV = [];
		this._templates = [];
		this._templateData = [];
		this._queryState = {};
		this._hiddenControls = {};
		this._objectsToDestroy = [];
		this._dataCache = {};
		this._ajaxCallbackCompleteCode = {};
		this._fireWatchesFlag = true;
		this._defaultWindowSettings = new Object();
		this._activeLayoutRule = '';
		this.locationMaximumAge = 30000;
		this.locationTimeout = 15000;
		this._componentType = 'UX';
		this.ajaxCallbackTimeout = 0;  //no timeout
		this.locationHighAccuracy = true;
		this._defaultWindowTitleDirection = 'ltr';
		this._editors = {};
		this._forms = {};
		this._formControls = {};
		this.nullImage = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP4//8/AwAI/AL+eMSysAAAAABJRU5ErkJggg==';
		this._defaultWindowSettings['dropdown'] = {
			type: 'popup',
			theme: this.styleName,
			title: {html: 'Null',show: false},
			body:  {content: {type: 'blank'}}
		};
		this._controlInst = new Object();
		this._genericWindow = new Object();
		this._vars = {SESSION : {}, PAGEVARIABLE : {}};

		this._kw = new AUI.KeyWatcher([
			{key: 'F1', handle: this._keyF1}
			],this);

		var closeButton = {action: 'close',name: 'Close',image: 'images/$$window.button.close.png.a5image'};
		if(typeof A5.themes != 'undefined') {
			if(typeof A5.themes._t[this.styleName] != 'undefined') closeButton = A5.themes._t[this.styleName].window.base._defaultTools.close;
		}



		this._defaultWindowSettings['modal'] = {
			type: 'modal', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', direction: this._defaultWindowTitleDirection,
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};

		this._defaultWindowSettings['modalpopup'] = {
					type: 'modal-popup', autoPosition: 'in-view',
					theme: this.styleName,
					title: {html: 'Window', direction: this._defaultWindowTitleDirection,
						tools: {items: [closeButton],
							dummy: false
						}},
					body: {content: {type: 'blank'}}
		};


		this._defaultWindowSettings['modeless'] = {
			type: 'modeless', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', direction: this._defaultWindowTitleDirection,
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};

		this._defaultWindowSettings['modelesspopup'] = {
			type: 'popup', autoPosition: 'in-view',
			theme: this.styleName,
			title: {html: 'Window', direction: this._defaultWindowTitleDirection,
				tools: {items: [closeButton],
					dummy: false
				}},
			body: {content: {type: 'blank'}}
		};

		this._prepared = false;
		this.initialized = false;
		this._functions = {};

		this._executeEvent('onInitializeBegin',{});

	},

	_delay: function(m,a) {
		var ta = [];
		for(var i = 0; i < a.length; i++) ta.push(a[i]);
		this._delayed.push({m:m,a:ta});
	},
	_destroy: function() {



		var _obj = this.wsclient;
		if(_obj) _obj.disconnect();

 		var rowNum = 1;
        $e.removeGroup(this.dialogId + '.DIALOG');
        for(var dialogWatch in this.dialogWatches) {
            if(typeof this.dialogWatches[dialogWatch].repeatingSection == 'undefined'){
                A5.Watch.remove(this.dialogId+'.R' + rowNum + '.'+dialogWatch);
            }
        }
        var ele = 0;
        for(var winName in this._genericWindow){
            //ele = $(this._genericWindow[winName].getWindowId('body'));
            //if(ele.tagName.toLowerCase() == 'div') ele.innerHTML = '';
            ele = $(this._genericWindow[winName].getWindowId());
            if(ele) {
                if(ele.parentNode) ele.parentNode.removeChild(ele);
            }
            this._genericWindow[winName].destroy();
        }
        this.tabTimersStopAll();

        for(var i = 0; i < this._objectsToDestroy.length; i++) {
        	if (typeof window[ this._objectsToDestroy[i]] == 'object') {
        		if(typeof window[ this._objectsToDestroy[i]].destroy == 'function') {
        			window[ this._objectsToDestroy[i]].destroy();
        		}
        		delete window[ this._objectsToDestroy[i]] ;
        	}
        };

        for(var c in this._controlInst) {
        	if(typeof this._controlInst[c].destroy == 'function') this._controlInst[c].destroy();
        }



	},


	destroyChildComponent: function(name) {
		A5.component.remove(name);
	},


	_dynamicMask: function(fnName) {
		if(window[this.format.maskFunctionName])
		{
			var classInst = window[this.format.maskComponentObject];
			var e = {};
			e.rowNumber = 1;
			e.part = 'O';
			return window[this.format.maskFunctionName].call(classInst,e);
		}
		return '';
	},


	prepare: function() {
		this._executeEvent('beforePrepare',{});
		this._prepareRow(1);
		this._prepared = true;
		this._executeEvent('afterPrepare',{});
	},

	_prepareRow: function(rowNum) {


		$e.removeGroup(this.dialogId + '.DIALOG');
		var rele = $(this.dialogId + '.R' + rowNum);
		var eles = 0;
		this.rowStateInfo[rowNum-1] = {summary: {}};
		for(var columnName in this.columnInfo) {
			if(this.columnInfo[columnName].type == 'control') {
				if(typeof this.columnInfo[columnName].repeatingSection != 'undefined') {
					this.repeatingSections[this.columnInfo[columnName].repeatingSection]._ci[columnName] = this.columnInfo[columnName];
				}
			} else {
				if(typeof this.columnInfo[columnName].repeatingSection != 'undefined') {
					this.repeatingSections[this.columnInfo[columnName].repeatingSection]._ci[columnName] = this.columnInfo[columnName];
				}
			}
		}

		for(var dialogWatch in this.dialogWatches) {
			if(typeof this.dialogWatches[dialogWatch].repeatingSection != 'undefined') {
				this.repeatingSections[this.dialogWatches[dialogWatch].repeatingSection]._w[dialogWatch] = this.dialogWatches[dialogWatch];
			}
		}


		// 9.26.13 -- moved from old position after control prepare so that if a user has an event that fires an ajax callback we don't get a js error because the rs has not been prepared
		// 9.27/13 -- need to run this code a second time in its original position because List in repeating sections got broken
		//9.27.13 -- added code above to prepare the ._ci property so that we can finally delete the second instance of this code block.
		for(var repeatingSection in this.repeatingSections) {
			for( var i = 1; i <= this.repeatingSections[repeatingSection].rows; i++) {
				this._prepareRepeatingSectionRow(repeatingSection,i,rowNum);
			}
			this._prepareRepeatingSection(repeatingSection,rowNum);
		}


		for(var columnName in this.columnInfo) {

			if(this.columnInfo[columnName].calculateSummary) {
				this._summarize(columnName,rowNum,false);
			}
			if(this.columnInfo[columnName].type == 'control') {
				if(typeof this.columnInfo[columnName].repeatingSection != 'undefined') {
					//this.repeatingSections[this.columnInfo[columnName].repeatingSection]._ci[columnName] = this.columnInfo[columnName];
				} else {
					if(typeof this._controlInst['R'+rowNum + '.' + columnName] == 'undefined') {
						var controlDat = this._controls[columnName];
						if(controlDat.type == 'list') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName , onSelect: function(){if(typeof this._onSelect != 'undefined') this._onSelect(); setTimeout(Function('$e.execute(\''+this.inputId+'\', \'change\');'),0) }  };
							if(typeof controlDat.settings.onSelect != 'undefined') controlDat.settings._onSelect = controlDat.settings.onSelect;
							$u.o.assign(sObj,controlDat.settings,true);
							sObj._state = {};
							sObj._state.page = 1;
							if(typeof sObj.containerId == 'undefined') sObj.containerId = this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL';
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.ListBox(sObj.containerId, controlDat.data, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'viewBox' || controlDat.type.toLowerCase() == 'databoundcustomcontrol') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName , onSelectComplete: function(){if(typeof this._onSelectComplete != 'undefined') this._onSelectComplete.apply(this,arguments); setTimeout(Function('$e.execute(\''+this.inputId+'\', \'change\');'),0) }  };
							if(typeof controlDat.settings.onSelectComplete != 'undefined') controlDat.settings._onSelectComplete = controlDat.settings.onSelectComplete;
							$u.o.assign(sObj,controlDat.settings,true);
							sObj._state = {};
							sObj._state.page = 1;
							if(typeof sObj.containerId == 'undefined') sObj.containerId = this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL';
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.ViewBox(sObj.containerId, controlDat.data, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'ink') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName };
							$u.o.assign(sObj,controlDat.settings,true);
							if(typeof sObj.containerId == 'undefined') sObj.containerId = this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL';
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.Ink(sObj.containerId, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'dateTimePicker') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.DateTimePicker(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', sObj);
							//ensure that the calendar works after as second prepare()
							this._controlInst['R' + rowNum + '.' + columnName].setValue(this.originalValues[rowNum-1][columnName]);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'slider') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							//when the dialog was opened in a window, the slider would show up multiple times. unlike other controls - the slider is not destructive
							$(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL').innerHTML = '';
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.Slider(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'switch') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							$(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL').innerHTML = '';
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.Switch(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'spinList') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.SpinList(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', controlDat.data, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'buttonList') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.ButtonList(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', controlDat.data, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'tree') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName};
							$u.o.assign(sObj,controlDat.settings,true);
							this._controlInst['R' + rowNum + '.' + columnName] = new A5.Tree(this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL', controlDat.data, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						} else if(controlDat.type == 'map') {
							var cId = this.dialogId + '.V.R' + rowNum + '.' + columnName + '.CONTROL';
							if(typeof controlDat.containerId != 'undefined') cId = controlDat.containerId;
							if($(cId).innerHTML == '') {
								this._controlInst['R' + rowNum + '.' + columnName] = new A5.Map(cId, controlDat.settings);
							}
						} else if(controlDat.type == 'custom' ) {

							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName, rowNumber: rowNum};
							$u.o.assign(sObj,controlDat.settings,true);
							this._controlInst['R' + rowNum + '.' + columnName] = sObj;
						}


						if(controlDat.onInitialize) controlDat.onInitialize.call(this._controlInst['R' + rowNum + '.' + columnName],rowNum);
						this._controlInst['R' + rowNum + '.' + columnName].initialized = true;
					}
				}
			} else {
				if(typeof this.columnInfo[columnName].repeatingSection != 'undefined') {
					//this.repeatingSections[this.columnInfo[columnName].repeatingSection]._ci[columnName] = this.columnInfo[columnName];
				} else {
					if(this.columnInfo[columnName].isArray) eles = $n('V.R' + rowNum + '.' + columnName+'[]');
					else eles = $n('V.R' + rowNum + '.' + columnName);
					//eles = $cetp(eles,rele);
					eles = this._functionToConstrainElements(eles);
					if(eles) {
						var tagName = eles[0].tagName.toLowerCase();
						//keyup event on non typeable controls cause problems
						if((tagName == 'input' && eles[0].type != 'radio' && eles[0].type != 'checkbox'  ) || tagName == 'textarea') $e.add(eles,'keyup',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						$e.add(eles,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						$e.add(eles,'blur',this._setControlBlur,this,false,this.dialogId + '.DIALOG');
						$e.add(eles,'focus',this._setControlFocus,this,false,this.dialogId + '.DIALOG');
						if(tagName == 'input') {
							if(eles[0].type == 'radio' || eles[0].type == 'checkbox') {
								$e.add(eles,'click',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
							}
						}
						if(this.fieldHelpers[columnName]) {
							this.fieldHelpers[columnName].bind(eles[0]);

							if(this.fieldHelpers[columnName].onBind) this.fieldHelpers[columnName].onBind(rowNum)
						}
					}
				}
			}
		}

		for(var form in this._forms){
			this._formPrepare(form);
		}
		//selwyn prepare repeating sections used to be here, but have moved up to before control prepare
		// 9.27/13 -- need to run this code here a second time because List in repeating sections got broken
		/*
		for(var repeatingSection in this.repeatingSections) {
			for( var i = 1; i <= this.repeatingSections[repeatingSection].rows; i++) {
				this._prepareRepeatingSectionRow(repeatingSection,i,rowNum);
			}
			this._prepareRepeatingSection(repeatingSection,rowNum);
		}
		*/


		//if a child ux was opened in a DYNAMIC panel, rele does not exist and so the watches were not getting prepared.
		if(rele || true) {
			for(var dialogWatch in this.dialogWatches) {
				if(typeof this.dialogWatches[dialogWatch].repeatingSection == 'undefined') {
					var watchIds = new Array();
					var eleTagName = '';
					var eles = 0;
					var tempEle = 0;
					for(var i = 0;i<this.dialogWatches[dialogWatch].watch.length; i++){
					//	if(this.dialogWatches[dialogWatch].watch[i] == this.dialogId + '.STATEINFO') watchIds.push(this.dialogId + '.STATEINFO');
					//	else {
							tempEle = $(this.dialogId + '.V.R' + rowNum + '.' + this.dialogWatches[dialogWatch].watch[i]);
							eleTagName = '';
							if(tempEle) eleTagName = tempEle.tagName.toLowerCase();
							if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
								eles = $n('V.R' + rowNum + '.' + this.dialogWatches[dialogWatch].watch[i]);
								if(eles.length == 0) eles = $n('V.R' + rowNum + '.' + this.dialogWatches[dialogWatch].watch[i]+'[]');
								//eles = $cetp(eles,$(this.dialogId + '.R' + rowNum));
								eles = this._functionToConstrainElements(eles);


								for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
							} else watchIds.push(this.dialogId + '.V.R' + rowNum + '.' + this.dialogWatches[dialogWatch].watch[i]);
					//	}
					}
					A5.Watch.add(this.dialogId+'.R' + rowNum + '.'+dialogWatch,watchIds,{
						data: {rowNumber: rowNum},
						onChange: this.dialogWatches[dialogWatch].onChange
					});
				}
			}
		}

	},

	_prepareRepeatingSection: function(sectionName) {
		var rowNum = typeof arguments[1] != 'undefined' ? arguments[1] : 1;
		var rele = $(this.dialogId + '.R' + rowNum);
		var ele = 0;
		var eleL = 0;

		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		var instNum = 0;

		var rsTemp = this.repeatingSections[sectionName];
		for(var i = 0; i < rsTemp._r[rowNum-1].i.length ; i ++ ) {
			if(!rsTemp._r[rowNum-1].i[i].deleted) {
				instNum = i + 1;
				break;
			}
		}

		var rsEle = $(this.dialogId+'.V.R'+rowNum + '.' + sectionName + '.I' + instNum +'.CONTENT');
		var rslEle = $(this.dialogId+'.V.R'+rowNum + '.' + sectionName + '.TITLES');
		var rslIndex = 0;
		if(rslEle && rsEle) {
			var rslIndx = 0;
			for(var i=0;i<rsEle.childNodes.length;i++){
				if(typeof rsEle.childNodes[i].tagName != 'undefined'){
					if(rsEle.childNodes[i].tagName.toUpperCase() == 'DIV'){
						//sr 4/7/12 orphan controls are in a hidden div
						if(rsEle.childNodes[i].style.display != 'none') {
							while(rslIndx < rslEle.childNodes.length){
								if(typeof rslEle.childNodes[rslIndx].tagName != 'undefined'){
									if(rslEle.childNodes[rslIndx].tagName.toUpperCase() == 'DIV') break;
								}
								rslIndx++;
							}
							if( !(rsEle.childNodes[i].innerHTML == '&nbsp;' && rsEle.childNodes[i].style.width == '')) {
								rslEle.childNodes[rslIndx].style.width = rsEle.childNodes[i].offsetWidth+'px';
							}
							rslIndx++;
						}
					}
				}
			}
		}

		this._getRepeatingSectionLogicalRowNumber(sectionName);
	},

	populateDropdownBox: function(columnName,data,clearExisting) {
		var curData = '';
		var ele = this._getControlLow(columnName);
		if(ele) {
			curData = this.getValue(columnName);
			//if(clearExisting) is curData in data? if not then set curData to data[0]
			if(clearExisting) {
				var setData = true;
				var val = '';
				var firstVal = '';
				for(var i = 0; i < data.length; i++) {
					if(data[i].constructor == Array) {
						if(data[i].length > 1) val = data[i][1];
						else val = data[i][0];
					} else {
						val = data[i];
					}
					if(val == curData) {
						setData = false;
						break;
					}
					if(i==0) firstVal = val;
				}
				if(setData) curData = firstVal;
			}
			A5.form.populateSelect(ele,curData,data,clearExisting);
		}
	},

	_getControlLow: function(columnName) {
		columnName = columnName.toUpperCase();
		var ele =  $(this.dialogId + '.V.R1.' + columnName);
		if(!ele) {
			columnName = columnName.split('_A5INSTANCE')[0];
			var rsName = this._findRepeatingSection(columnName);
			if(rsName == '') return ele;
			var instNum = this.repeatingSections[rsName].activeRow;
			ele = $(this.dialogId + '.V.R1.' + columnName + '_A5INSTANCE' + instNum);
		}
		return ele;
	},


	setListColumnsAndPopulate: function(listName,data,options) {

		var flagShowTitles = true;
		var customTitles = {};
		var flagCustomTitles = false;
		var multiple = false;
		if(typeof options == 'undefined') options = {};
		if(typeof options.showTitle != 'undefined') flagShowTitles = options.showTitle;
		if(typeof options.customTitles != 'undefined') {
			customTitles = options.customTitles; //in the form of an array titles
			flagCustomTitles = true;
		}
		if(typeof options.multiple != 'undefined') multiple = options.multiple;
		var colCount = options.columnCount;
		var columns = options.columns;
		var flagColumns = false;
		if(typeof columns != 'undefined') flagColumns = true;
		if(typeof colCount == 'undefined') colCount = 1000;
		var lObj = this.getControl(listName);
		if(!lObj) return false;
		if(data == null) {
			lObj.populate([{}]);
			return false;
		}
		var _d0 = data[0];
		if(_d0 == null) return false;
		if(typeof _d0 == 'undefined') return false;
		if(columns != null && typeof columns == 'string') columns = columns.split(',');
		if(typeof _d0 == 'string') {
			if(flagCustomTitles) {
				flagShowTitles = options.showTitle;
			} else {
				flagShowTitles = false;
			}
			options.returnExpression = 'data.field';
			var data2 = [];
			for(var i = 0; i < data.length; i++) {
				data2.push({'field': data[i]});
			}
			data = data2;
			var _d0 = data[0];
		}

		var def = [];
		var di = '';
		var id = this.dialogId;
		var fo = '';
		var count = 0;
		var flagIncludeColumn;
		var headingHTML = '';
		for(var name in _d0) {
			if(count >= colCount) {
				break;
			}
			flagIncludeColumn = true;
			if(flagColumns) {
				if(columns.indexOf(name) == -1) {
					flagIncludeColumn = false;
				}
			}
			if(flagIncludeColumn) {
				delete fo;
				var fo = {};
				di = fo;
				di.header = {};
				headingHTML = name;
				if(flagCustomTitles) {
					//if(customTitles[count] != 'undefined') headingHTML = customTitles[count];
					headingHTML = customTitles[name];
					if(typeof headingHTML == 'undefined') headingHTML = name;
				}
				di.header.html = headingHTML;
				di.resize = false;
				di.data = {};
				di.data.template = '<span id="' + id + '.' + listName.toUpperCase()  + '.' + name.toUpperCase() + '.I.{*dataRow}">{' + name + '}</span>&nbsp;';
				di.order = name;
				di.width = 'flex(1)';
				def.push(fo);
			}
			count++;
		}
		if(typeof lObj.layouts == 'undefined') {
			alert('List is not poperly defined. Populate List with dummy data first.');
		}
		if(typeof lObj.layouts.Default == 'undefined') {
			alert('Target list properties have not been set');
			return false;
			lObj.layouts.Default = {};
		}


		lObj.layouts.Default.columns = def;

		if(options.returnExpression == 'data.<listColumn>') {
			var _row1 = data[0];
			var count = -1;
			var fieldName = '';
			for(var n in _row1) {
				count++
				if(count > 0) {
					exit;
				}
				fieldName = n;
			}
			options.returnExpression = 'data.'+fieldName;
		}


		lObj.columnLayout.header.show = flagShowTitles;
		if(typeof options.returnExpression != 'undefined') {
			var fString = 'return \'\'+' + options.returnExpression + ';' ;
			var _f = Function('data',fString);
			lObj.calculateValue = _f;
		}
		//lObj.refresh(); //was causing an error in cascading list editors
		//lObj.onClick = function() { alert('i added this on click');}
		if(typeof lObj._userOnClick == 'undefined') {
			lObj._userOnClick = lObj.onClick;
		}
		if(typeof options.onClick == 'function') {
			lObj.onClick = options.onClick;
		} else if(typeof options.onClick == 'string') {
			lObj.onClick = Function(options.onClick);
		}

		lObj.multiple = multiple;
		if(multiple) lObj.selectionMode =  'additive';
		lObj.populate(data);
		lObj.refresh();
	},

	exportListData: function(listName, options) {

		var lObj = this.getControl(listName);
		if(!lObj) return false;
		if(typeof options.data == 'undefined') {
			if(lObj._dataSourceType == 'Data Series' || lObj._dataSourceType == 'DBF' || lObj._dataSourceType == 'Custom' || lObj._dataSourceType == 'SQL' || lObj._dataSourceType == 'Odata') {
				options.data = 'listQuery';
			} else {
				options.data = 'listData';
			}
		}
		options.listName = listName;
		if(options.data.toLowerCase() == 'listdata') {
			//options.listData = lObj._rData;
			options.listData = this.getListData(listName);
		}
		var _d = A5.ajax.buildURLParam('_exportParam',JSON.stringify(options));
		this.ajaxCallback('G',1,'system:exportData','',_d);
	},

	populateDropdownBoxRepeatingSection: function(columnName,data,clearExisting) {
		var flagDisabledState = typeof arguments[3] != 'undefined' ? arguments[3] : -1;
		var flagClearExistingSelection = typeof arguments[4] != 'undefined' ? arguments[4] : false;
		var sectionName = this._findRepeatingSection(columnName);
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rows = rs.rows;
		var columnName_i = '';
		var id = '';
		for(var i = 1; i <= rows; i++) {
			columnName_i = columnName + '_A5INSTANCE' + i;
			this.populateDropdownBox(columnName_i,data,clearExisting);
			id = this.dialogId + '.V.R1.' + columnName_i;
			if(flagDisabledState == true || flagDisabledState == false) {
				$(id).disabled = flagDisabledState;
			}
			if(flagClearExistingSelection == true) {
				$svs(id,'');
			}
		}
	},

	refreshDropdownBoxChoices: function(controlName) {

		var dynamicFilter = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		var dynamicFilterArgs = typeof arguments[2] != 'undefined' ? arguments[2] : '';
		var dynamicFilter = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		var selectedValue = typeof arguments[3] != 'undefined' ? arguments[3] : '__none__';
		//if the control is in a RS
		var currentRSRowOnly = typeof arguments[4] != 'undefined' ? arguments[4] : false;
		var data = new Array();
		data.push(A5.ajax.buildURLParam('_controlName',controlName));
		data.push(A5.ajax.buildURLParam('_dynamicFilter',dynamicFilter));
		data.push(A5.ajax.buildURLParam('_dynamicFilterArgs',dynamicFilterArgs));
		data.push(A5.ajax.buildURLParam('_selectedValue',selectedValue));
		data.push(A5.ajax.buildURLParam('_currentRSRowOnly',currentRSRowOnly));
		data = data.join('&');
		var xbasicFunction = 'system:refreshDropddownBox';
		this.ajaxCallback('G',1,xbasicFunction,'',data);
	},

	_getRepeatingSectionLogicalRowNumber: function(sectionName) {
		var rowNum = 1;

		if(typeof this.repeatingSections == 'undefined') return false;
		if(typeof this.repeatingSectionInfo == 'undefined') return false;
		var rsInfo = this.repeatingSectionInfo[sectionName];
		if(rsInfo.showRowCount == false) return false;
		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		//var instNum = rsTemp.activeRow;
		var logRow = 0;
		var ele = '';
		for(var i = 1; i <= rsTemp.rows; i++) {
			ele = $(this.dialogId + '.' + sectionName + '.RSROWNUMBER_A5INSTANCE' + i );
			if(rsTemp._r[rowNum-1].i[i-1].deleted == false) {
				logRow++;
				if(ele) ele.innerHTML = logRow;
			}
		}
	},

	_prepareRepeatingSectionRow: function(sectionName,instNum, rowNum) {
		this._executeEvent('beforeRptSectionRowPrepare',{sectionName: sectionName, rowNumber: instNum});
		var rele = $(this.dialogId + '.R' + rowNum);
		var eles = 0;
		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		rsTemp._r[rowNum-1].i[instNum-1] = {deleted: false, dirty: false, error: false};
		for(var columnName in rsTemp._ci) {
			if(rsTemp._ci[columnName].type == 'control') {
				if(typeof this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] == 'undefined') {
					var controlDat = this._controls[columnName];
					if(controlDat.type == 'list') {
						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum, onSelect: function(){setTimeout(Function('$e.execute(\''+this.inputId+'\', \'change\');'),0) }};
						$u.o.assign(sObj,controlDat.settings,true);
						var tData = [];
						$u.o.assign(tData,controlDat.data);
						sObj._state = {};
						sObj._state.page = 1;
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.ListBox(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', tData, sObj);
						$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					} else if(controlDat.type == 'viewBox' || controlDat.type.toLowerCase() == 'databoundcustomcontrol') {

						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum, onSelectComplete: function(){setTimeout(Function('$e.execute(\''+this.inputId+'\', \'change\');'),0) }};
						$u.o.assign(sObj,controlDat.settings,true);
						if(controlDat.data.constructor == Array)  {
							var tData = [];
						} else {
							var tData = {};
						}
						$u.o.assign(tData,controlDat.data);
						sObj._state = {};
						sObj._state.page = 1;
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.ViewBox(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', tData, sObj);
						$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					} else if(controlDat.type == 'dateTimePicker') {
						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
						$u.o.assign(sObj,controlDat.settings,true);
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.DateTimePicker(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', sObj);

						//ensure that the calendar works after as second prepare()
						this._controlInst['R' + rowNum + '.' + columnName+ '_A5INSTANCE' + instNum].setValue(this.originalValues[rowNum-1][columnName +':' + instNum]);

						$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');

					} else if(controlDat.type == 'slider') {
						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
						$u.o.assign(sObj,controlDat.settings,true);
						//see comment for single instance
						$(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL').innerHTML = '';
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.Slider(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', sObj);
						$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');

						//fire the onchange event so that the slider message gets painted for each rs row - not working
						//var ctrl_i = this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum];
						//ctrl_i.onChange.call(this,ctrl_i);


					} else if(controlDat.type == 'switch') {
						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
						$u.o.assign(sObj,controlDat.settings,true);
						//see comment for single instance
						$(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL').innerHTML = '';
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.Switch(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', sObj);
						$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					} else if(controlDat.type == 'buttonList') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
							$u.o.assign(sObj,controlDat.settings,true);
							var tData = [];
							$u.o.assign(tData,controlDat.data);
							this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.ButtonList(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', tData, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');

					} else if(controlDat.type == 'spinList') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
							$u.o.assign(sObj,controlDat.settings,true);
							var tData = [];
							$u.o.assign(tData,controlDat.data);
							this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.SpinList(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', tData, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');


					} else if(controlDat.type == 'tree') {
							var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum};
							$u.o.assign(sObj,controlDat.settings,true);
							var tData = [];
							$u.o.assign(tData,controlDat.data);
							this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.Tree(this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum + '.CONTROL', tData, sObj);
							$e.add(sObj.inputId,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					} else if(controlDat.type == 'map') {
						if($(this.dialogId + '.V.R' + rowNum + '.' + columnName  + '_A5INSTANCE' + instNum + '.CONTROL').innerHTML == '') {
							this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = new A5.Map(this.dialogId + '.V.R' + rowNum + '.' + columnName  + '_A5INSTANCE' + instNum + '.CONTROL', controlDat.settings);
						}
					} else if(controlDat.type == 'custom' ) {
						var sObj = {inputId: this.dialogId + '.V.R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum, rowNumber: rowNum, instanceNumber: instNum};
						$u.o.assign(sObj,controlDat.settings,true);
						this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum] = sObj;
					}
					if(controlDat.onInitialize) controlDat.onInitialize.call(this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum],rowNum,instNum);
					this._controlInst['R' + rowNum + '.' + columnName + '_A5INSTANCE' + instNum].initialized = true;
				}
			} else {
				if(rsTemp._ci[columnName].isArray) eles = $n('V.R' + rowNum + '.' + columnName +'_A5INSTANCE' + instNum + '[]');
				else eles = $n('V.R' + rowNum + '.' + columnName +'_A5INSTANCE' + instNum);
				//eles = $cetp(eles,rele);
				eles = this._functionToConstrainElements(eles);


				if(eles) {

					var tagName = eles[0].tagName.toLowerCase();
					//keyup event on non typeable controls cause problems
					if((tagName == 'input' && eles[0].type != 'radio' && eles[0].type != 'checkbox'  ) || tagName == 'textarea') $e.add(eles,'keyup',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					$e.add(eles,'change',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
					$e.add(eles,'blur',this._setControlBlur,this,false,this.dialogId + '.DIALOG');
					$e.add(eles,'focus',this._setControlFocus,this,false,this.dialogId + '.DIALOG');

					if(tagName == 'input') {
						if(eles[0].type == 'radio' || eles[0].type == 'checkbox') {
							$e.add(eles,'click',this._setControlDirty,this,false,this.dialogId + '.DIALOG');
						}
					}
					if(this.fieldHelpers[columnName]) {
						this.fieldHelpers[columnName].bind(eles[0]);
						if(this.fieldHelpers[columnName].onBind) this.fieldHelpers[columnName].onBind(rowNum,instNum)
					}
				}
			}
		}

		var rsInfo = this.repeatingSectionInfo[sectionName];
		if(typeof rsInfo['abstractJavascript']	!= 'undefined') rsInfo['abstractJavascript'](instNum);

		var rsiEle = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.I' + instNum );
		$e.add(rsiEle,A5.d.evnts.down,this._rsiOnClick,this,false,this.dialogId+'.DIALOG');
		var flagHighlightOnHover  = this.repeatingSectionInfo[sectionName].highlightOnHover;
		var flagHighlightOnSelect = this.repeatingSectionInfo[sectionName].highlightOnSelect;

		if(this.defaultRepeatingSection){
			if(this.defaultRepeatingSection.rowHoverClassName != '' && flagHighlightOnHover){
				$e.add(rsiEle,'mouseover',function(e,classInst){ $acn($(this.id+'.CONTENT').parentNode,classInst.defaultRepeatingSection.rowHoverClassName);},this,false,this.dialogId+'.DIALOG');
				$e.add(rsiEle,'mouseout',function(e,classInst){ $rcn($(this.id+'.CONTENT').parentNode,classInst.defaultRepeatingSection.rowHoverClassName);},this,false,this.dialogId+'.DIALOG');
			}
		}

		var rseEle = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.I' + instNum +'.ERROR' );
		if(rseEle) {
			$e.add(rseEle,'mouseover',this._repeatingSectionRowErrorShow,this,false,this.dialogId + '.DIALOG');
			$e.add(rseEle,'mouseout',this._repeatingSectionRowErrorHide,this,false,this.dialogId + '.DIALOG');

		}
		for(var dialogWatch in rsTemp._w) {
			var watchIds = new Array();
			var eleTagName = '';
			var eles = 0;
			var tempEle = 0;

			for(var i = 0;i<rsTemp._w[dialogWatch].watch.length; i++){
				tempEle = $(this.dialogId + '.V.R' + rowNum + '.' + rsTemp._w[dialogWatch].watch[i].replace(':A5INSTANCE','_A5INSTANCE'+instNum));

				eleTagName = '';
				if(tempEle) eleTagName = tempEle.tagName.toLowerCase();
				if(eleTagName != 'input' && eleTagName != 'select' && eleTagName != 'textarea'){
					eles = $n('V.R' + rowNum + '.' + rsTemp._w[dialogWatch].watch[i].replace(':A5INSTANCE','_A5INSTANCE'+instNum));
					if(eles.length == 0) eles = $n('V.R' + rowNum + '.' + rsTemp._w[dialogWatch].watch[i].replace(':A5INSTANCE','_A5INSTANCE'+instNum ) +'[]');
					//eles = $cetp(eles,$(this.dialogId + '.R' + rowNum));
					eles = this._functionToConstrainElements(eles);
					for(var j=0;j<eles.length;j++) watchIds.push(eles[j].id);
				} else watchIds.push(this.dialogId + '.V.R' + rowNum + '.' + rsTemp._w[dialogWatch].watch[i].replace(':A5INSTANCE','_A5INSTANCE'+instNum));
			}
			A5.Watch.add(this.dialogId+'.R' + rowNum + '.'+dialogWatch+'.I'+instNum,watchIds,{
				data: {rowNumber: rowNum, instNumber: instNum},
				onChange: rsTemp._w[dialogWatch].onChange
			});
		}

		var buttons = this.repeatingSectionInfo[sectionName].buttons;
		if(typeof buttons != 'undefined') {
			for(var i = 0; i < buttons.length; i++) {
				this._buttons[buttons[i]].bind(this.dialogId+'.V.R' + rowNum + '.' + buttons[i] + '_A5INSTANCE' + instNum);
			}
		}


		if(typeof rsTemp._r[rowNum-1].hc != 'undefined') {
			for(var controlName in rsTemp._r[rowNum-1].hc) {
				this._hideRSColumnLow(controlName,instNum,rsTemp._r[rowNum-1].hc[controlName]);
			}
		}

		if(typeof rsTemp._r[rowNum-1].width != 'undefined') {
			for(var controlName in rsTemp._r[rowNum-1].width) {
				this._hideRSColumnLow(controlName,instNum,'width',rsTemp._r[rowNum-1].width[controlName]);
			}
		}


		this._executeEvent('afterRptSectionRowPrepare',{sectionName: sectionName, rowNumber: instNum});
	},


	_populateSourceComponent: function() {
		var go = {};
		go.controlMap = this.stateInfo.__controlMap;
		if(typeof go.controlMap == 'undefined') {
			alert('Method only appropriate if UX component was opened in a Window using the \'Open UX as an alternate editing view\' action');
			return false;
		};
		go.sourceGridRowNumber = this.stateInfo._parentGridRow;
		go.parentControlType = this.stateInfo.__parentComponentType;
		go.parentAlias = this.stateInfo.__parentAlias;
		go.submitParent = this.stateInfo._submitParent;
		go.windowName = this.stateInfo.__windowname;
		go.closeAfterSubmit = this.stateInfo.__closeDialogAfterSubmit;
		go.controlSourceData = this.harvest();



		var a = go.controlMap.split(',');
		var itemP = '';
		var item = '';
		var itemA = [];
		var arr = [];
		//arr - source - grid/dialog source control name, target - targetDialog controlName
		//create an array from the control Map with .source and .target properties
		for(var i = 0; i < a.length; i++){
			item = a[i];
			itemA = item.split('>');
			itemP = {};
			itemP.source = itemA[0];
			itemP.target = itemA[1];
			arr.push(itemP);
	    }

		var objName = '';
		var p2 = 'G';
		var r2 = '1';
		if(go.parentControlType == 'G' || go.parentControlType == 'D') {
			objName = go.parentAlias + '_GridObj';
			if(go.parentControlType == 'G') r2 = go.sourceGridRowNumber;
		}
		if(go.parentControlType == 'O') {
			objName = go.parentAlias + '_DlgObj';
			r2 = '1';
			p2 = 'O';
		}

		//create an array from the source data values
	    var arrSD = go.controlSourceData.split('&');
	    var y = '';
	    var arr2 = [];
	    var arr3 = [];
	    var data = '';
	    var cn = '';
	    // arr2 - source - gridProperty
	    var rowNum = '1';
	    var sliceLen = 4;
	    for(var i = 0; i < arrSD.length; i++) {
	        y = arrSD[i];
	        if(y.slice(0,sliceLen) == 'V.R' + rowNum) {
	            arr3 = y.split('=');
	            data = arr3.slice(1,99999).join('=');
	            //get controlname from string like V.R4.FIRSNAME
	            cn = arr3[0].split('.')[2];
	            itemP = {};
	            itemP.source = cn;


	            data = data.replace('%26amp;','&');
	            data = data.replace('%3D','=');
	            data = data.replace('%26gt;','>');
	            data = data.replace('%26lt;','<');

	            itemP.data = data;
	            arr2.push(itemP);
	        }
	    }

		//lookup the source Data value for each entry in the controlMap.
		var sn = '';
		var idx = '';
		var vali = '';
		var _d = {};

		for(var i = 0; i < arr.length; i++) {
			sn = arr[i].target;
			sn = sn.toUpperCase();
			idx = this._findArrayProp(arr2,'source',sn);
			if(idx >= 0 ) {
				vali = arr2[idx].data;
				vali = decodeURIComponent(vali);
				if(p2 == 'G') {
					if(go.parentControlType == 'G') window[objName].setValue(go.parentControlType,arr[i].source,r2,vali);
					else window[objName].setValue(go.parentControlType,arr[i].source,vali);
				}
				else window[objName].setValue(arr[i].source,vali);

			} else {
				if(p2 == 'G') {
					if(go.parentControlType == 'G') window[objName].setValue(go.parentControlType,arr[i].source,r2,vali);
					else window[objName].setValue(go.parentControlType,arr[i].source,vali);
				}
				else window[objName].setValue(arr[i].source,'');
			}
	    }

	    if(go.closeAfterSubmit) {
	    	var currWindow = window[objName].getWindow(go.windowName);
	    	currWindow.hide();
	    }


		if(go.submitParent == 'Y') {
			if(go.parentControlType == 'G') window[objName].submitGridPartRow(r2);
			if(go.parentControlType == 'D') window[objName].submitDetailView();
			if(go.parentControlType == 'O') window[objName].submit();
		}


	},

	_synchronizeDialogData: function(go) {
		var rowNum = go.sourceGridRowNumber;
		var osi = {};
		osi._parentGridRow = rowNum;
		this.setStateInfo(osi);



	    var a = go.controlMap.split(',');
	    var itemP = '';
	    var item = '';
	    var itemA = [];
	    var arr = [];
	    //arr - source - grid/dialog source control name, target - targetDialog controlName
	    //create an array from the control Map with .source and .target properties
	    for(var i = 0; i < a.length; i++){
	        item = a[i];
	        itemA = item.split('>');
	        itemP = {};
	        itemP.source = itemA[0];
	        itemP.target = itemA[1];
	        arr.push(itemP);
	    }



		//create an array from the source data values
	    var arrSD = go.controlSourceData.split('&');
	    var y = '';
	    var arr2 = [];
	    var arr3 = [];
	    var data = '';
	    var cn = '';
	    // arr2 - source - gridProperty
	    var rn = $u.s.toNum(rowNum);
	    var sliceLen = 4;
	    if(rn >= 10) sliceLen = 5;
	    if(rn >= 100) sliceLen = 6;
	    if(rn >= 1000) sliceLen = 7;
	    if(rn < 0) sliceLen = 5;


	    for(var i = 0; i < arrSD.length; i++) {
	        y = arrSD[i];
	        if(y.slice(0,sliceLen) == 'V.R' + rowNum) {
	            arr3 = y.split('=');
	            data = unescape(arr3.slice(1,99999).join('='));
	            //get controlname from string like V.R4.FIRSNAME
	            cn = arr3[0].split('.')[2];
	            itemP = {};
	            itemP.source = cn;
	            itemP.data = data;
	            arr2.push(itemP);
	        }
	    }

		//lookup the source Data value for each entry in the controlMap.
		var sn = '';
		var idx = '';
		var vali = '';
		var _d = {};
	    for(var i = 0; i < arr.length; i++) {
	    	sn = arr[i].source;
	    	idx = this._findArrayProp(arr2,'source',sn);
	    	if(idx >= 0 ) {
	    		vali = arr2[idx].data;
		    	_d[arr[i].target] = vali;
		    } else {
		    	_d[arr[i].target] = '';
		    }
	    }
	    this.populate(_d);
	    this.prepare();
	    var obj = {};
	    obj.specialDialogMode = 'none';
	    this._executeEvent('onSynchronizeDialog',{synchronizeType: obj.specialDialogMode, obj: obj});

	},


	_findArrayProp: function(array,propName,value) {

		var flagString = false;
		if(typeof value == 'string') {
			value = value.toLowerCase();
			flagString = true;
		}
		if(flagString) {
			for(var i = 0; i < array.length; i++) {
			    if(array[i][propName].toLowerCase() == value) {
	    	           return i;
	    	     }
	    	 }
		} else {
			for(var i = 0; i < array.length; i++) {
			    if(array[i][propName] == value) {
    	           return i;
	    	     }
	    	 }
		}
	    return -1;
	},

	getParentObject: function() {

		if(this.parentComponentAlias !='') {
			if(typeof window[this.parentComponentAlias+'_GridObj'] != 'undefined') return window[this.parentComponentAlias+'_GridObj'];
			if(typeof window[this.parentComponentAlias+'_DlgObj'] != 'undefined') return window[this.parentComponentAlias+'_DlgObj'];
			return false
		} else return false;
	},

	getTopParentObject: function() {
		var p2 = false;
		var p = this.getParentObject();
		while(p) {
			p2 = p
			p = p.getParentObject();
		}
		return p2;
	},

	getChildObject: function(alias) {
		alias = alias.toUpperCase()  ;
		var type = typeof arguments[1] != 'undefined' ? arguments[1] : 'ux';
		type = type.toLowerCase();
		var obj = false;
		if(type == 'ux') {
			obj = window[alias + '_DlgObj'];
			if(typeof obj == 'undefined') obj = window[this.dialogId + '_' +alias + '_DlgObj'];
			if(typeof obj == 'undefined') obj = window[alias + '_R1_DlgObj'];
		}
		if(type == 'grid') {
			obj = window[alias + '_GridObj'];
			if(typeof obj == 'undefined') obj = window[this.dialogId + '_' +alias + '_GridObj'];
			if(typeof obj == 'undefined') obj = window[alias + '_R1_GridObj'];
		}
		if(type == 'custom') {
			obj =  window[alias + '_CustObj'];
			if(typeof obj == 'undefined') obj = window[this.dialogId + '_' +alias + '_CustObj'];
			if(typeof obj == 'undefined') obj = window[alias + '_R1_CustObj'];
		}

		if(typeof obj == 'undefined') obj = false;
		return obj;
	},

	listFilterOrder: function(listId) {
			var mode = 'filter' //mode can also be 'userFilter' which does not include the base filter
			if(typeof arguments[1] != 'undefined') mode = arguments[1];
			var obj = {filter: '', order: '', parameters: ''};
			var lObj = this.getControl(listId);
			if(lObj) {
				if(mode == 'filter') {
					obj.filter = lObj._state.whereClause;
					obj.parameters = lObj._state.whereParameters;
				} else {
					obj.filter = lObj._state.filter;
					obj.parameters = lObj._state.filterParameters;
				}
				obj.order = lObj._state.order;
			}
			return obj;


	},


	__toggleListCRUDMessage: function(listId,row) {
		var state = ''
		if(row == 'GUID') {
			var id_img = $(this.dialogId +'.CRUD.IMG.' + listId);
			var id_msg = $(this.dialogId +'.CRUD.MSG.' + listId);
		} else {
			var id_img = $(this.dialogId +'.CRUD.IMG.' + listId + '.' + row);
			var id_msg = $(this.dialogId +'.CRUD.MSG.' + listId + '.' + row);
		}


		if (id_msg.style.display == 'none') state = 'closed';
		else state = 'open';
		if(state == 'closed') {
			id_img.src = 'images/removeItemSmall.png.a5image';
			if(this._embeddedMode && this.__WPhostName == 'chrome') id_img.src = 'a5res:images/removeItemSmall.png';
		} else {
			id_img.src = 'images/addItemSmall.png.a5image';
			if(this._embeddedMode && this.__WPhostName == 'chrome') id_img.src = 'a5res:images/addItemSmall.png';
		}


		A5.u.element.toggle(id_msg,{show: {type: 'slide',duration: 'fast'},hide: {type: 'slide',duration: 'fast'}} )
	},


	_assignInstanceId: function() {
		//callback to server to get an instanceId
		var xbasicFunction = 'system:assignInstanceId';
		var data = '';
		var ops = {};
		ops.submitFormData = false;
		this.ajaxCallback('G',1,xbasicFunction,'',data,ops);
	},

	_fixGUID: function(guid) {

		guid = guid.toLowerCase();
		guid = guid.replace(/-/g, '');
		return guid;
	},

	_setInstanceId: function(guid) {
		guid = this._fixGUID(guid);
		//store instanceId in localStorage
		var key = 'A5-' + this._fixGUID(this.componentGUID) + '-' + 'InstanceId';
		try {
			localStorage.setItem(key,guid);
		} catch(err) {

		}
		this.__instanceId = guid;
	},

	_getInstanceId: function() {
		//to prevent an ajaxcallback if _getInstanceId is null
		var flagCallback = typeof arguments[0] != 'undefined' ? arguments[0] : true;
		var key = 'A5-' + this._fixGUID(this.componentGUID) + '-' + 'InstanceId';
		var id = '';
		try {
			id = localStorage.getItem(key);
		} catch(err) {

		}
		this.__instanceId = id;
		if(id == null && flagCallback) {
			this._assignInstanceId();
		}
		return id;
	},
	//////////////////////////////
	_listRowSelect: function(listId,lObj) {
		//populate Form when List row is clicked
		if(typeof this._listsWithLinkedForms != 'undefined') {
			var forms = this._listsWithLinkedForms[listId.toUpperCase()];
			if(typeof forms == 'undefined') return false;
			if(!lObj) {
				var lObj = this.getControl(listId);
				if(!lObj) return false;
			}
			var row = lObj.selection[0];
			var formId = '';
			for(var i = 0; i < forms.length; i++) {
				formId = forms[i];
				this._forms[formId].row = row;
				if(row == 'undefined' || lObj._data.length == 0) {
					this._forms[formId].row = -1;
					this.formViewNewRecord(formId);
				} else {
					this._forms[formId].row = row;
					this.formViewRefresh(formId);
				}
			}
		}
	},

	synchronizeComplete: function(guids) {
		var data = A5.ajax.buildURLParam('_guids',JSON.stringify(guids));
		this.ajaxCallback('G',1,'system:synchronizationcomplete','',data);
	},

	_ls_manager_showStats: function(o) {
		var eCount = $('__LOCALSTORAGEKEYCOUNT');
		if(eCount) eCount.innerHTML = o.keyCount;
		var eSize = $('__LOCALSTORAGESIZE');
		if(eSize) eSize.innerHTML = o.size;
		var e = $('__LOCALSTORAGEINFO');
		if(e) e.style.display = '';
	},

	_ls_getStats: function(l) {
		var keyCount = 0;
		var size = 0;
		if(l) {
			var keyCount = l._data.length;
			var size = 0;
			for(var i = 0; i < l._data.length; i++) {
				size = size + l._data[i].size;
			}
		}
		var o2 = {};
		o2.size = size;
		o2.keyCount = keyCount;
		return o2;
	},

	_ls_manager: function(obj) {
		var flagRepopulate = false;
		var l = this.getControl(obj.listName);
		var flagPrompt = obj.prompt;

		if(typeof flagPrompt ==  'undefined') flagPrompt = true;
		if(obj.action == 'populateListAll') {
			var o = this._ls_getData('a')
			l.populate(o.data);
			this.__localStorageManagerLast = obj.action;
		} else if(obj.action == 'populateListThisNamespace') {
			var o = this._ls_getData('t')
			l.populate(o.data);
			this.__localStorageManagerLast = obj.action;
		} else if(obj.action == 'populateNotThisNamespace') {
			var o = this._ls_getData('o')
			l.populate(o.data);
			this.__localStorageManagerLast = obj.action;
		} else if(obj.action.substr(0,6) == 'delete') {
			var oA = {};
			var flagSingle = false;
			if(obj.action == 'deleteKey') {
				var r = l.selection[0];
				var flagError = false;
				if(typeof r ==  'undefined') {
					flagError = true;
				}
				var _d = l.getData(l.selection[0])
				if(l._data.length == 0) flagError = true;
				if(flagError) {
					alert('You must first select a row in the list.');
					return false;
				}

				oA.data = [_d];
				flagSingle = true;
			} else if(obj.action == 'deleteAllKeys') {
				oA = this._ls_getData('a');
			} else if(obj.action == 'deleteAllKeysForThisComponent') {
				oA = this._ls_getData('t');
			} else if(obj.action == 'deleteAllKeysExceptThisComponent') {
				oA = this._ls_getData('o');
			}
			var result = true;
			if(flagSingle) {
				if(flagPrompt) result = confirm('Delete ' + '1' + ' key?');
			} else {
				if(flagPrompt) result = confirm('Delete ' + oA.data.length + ' keys?');
			}
			if(result) {
				for(var i = 0; i < oA.data.length; i++) {
					localStorage.removeItem(oA.data[i].key);
					if(l) l.removeRows([oA.data[i].key]);
				}
			}
		}
		if(l) {
			var oNew = this._ls_getStats(l);
			this._ls_manager_showStats(oNew);
		}
	},

	_ls_getData: function(mode) {
		/*
		a 			All keys in Local Storage
		aa 			All keys created by UX components. Keys that are added to Local Storage all have 'ALPHA_' as a prefix. Only keys that have this prefix are returned.
		t 			All keys for this UX component. These keys all start with 'ALPHA_' followed by the namespace for the component (e.g. ALPHA_NS1).  NOTE: The namespace for the component is specified in the UX component properties - Local Storage section.
		o 			All keys, but excluding keys for this UX component. (Same as using the 'a' flag, then removing keys returned for the 't' flag).
		oa 			All UX component keys, but excluding keys for this component. (Same as using the 'aa' flag, then removing keys returned for the 't' flag).
		v:t 		Key used to persist variables for this UX component.
		v:a 		All UX component keys that store persisted variables (for any UX component, not just this component).
		v:o All 	UX components keys that store persisted variables, excluding this UX component (Same as using 'va' and then removing 'vt').
		lists:t 	All of the List components in this component that are persisted to Local Storage.
		lists:a 	All of the List components (from any UX component) that are persisted to Local Storage.
		lists:o 	All of the List components, excluding the Lists in this component. (Same as using 'lists:a' and then removing 'lists:t')
		*/
		if(typeof mode == 'undefined') mode = 'a'; //all
		//mode = mode[0];
		var ns = '';
		if(mode != 'a') {
			var ls = this._localStorageSettings;
			ns = ls.namespace;
		}
		var cnt = localStorage.length;
		var _d = [];
		var item = '';
		var key = '';
		var size = 0;
		var totalSize = 0;
		var flagPush = '';
		for(var i = 0; i < cnt; i++) {
			key = localStorage.key(i);
			item = localStorage.getItem(key);
			size = item.length;
			flagPush = false;
			if(mode == 'a') flagPush = true;
			if(mode == 'aa') {if(key.indexOf('ALPHA_') == 0) {flagPush = true; } }
			if(mode == 't') {if(key.indexOf(ns+ '.') == 0) {flagPush = true; } }
			if(mode == 'o') {if(key.indexOf(ns+ '.') != 0) {flagPush = true;} }
			if(mode == 'oa') {if(key.indexOf('ALPHA_') == 0 && key.indexOf(ns+ '.') != 0   ) {flagPush = true; } }
			if(mode == 'v:t') { if(key.indexOf(ns+ '._VARIABLES') == 0) {flagPush = true; } }
			if(mode == 'v:a') { if(key.indexOf('._VARIABLES') > 0) {flagPush = true; } }
			if(mode == 'v:o') { if(key.indexOf('._VARIABLES') > 0 && key.indexOf(ns+ '._VARIABLES') != 0) {flagPush = true; } }
			if(mode == 'lists:t') { if(key.indexOf(ns+ '.LIST.') == 0) {flagPush = true; }     }
			if(mode == 'lists:a') { if(key.indexOf('.LIST.') > 0 && key.indexOf('ALPHA_') == 0   ) {flagPush = true; }     }
			if(mode == 'lists:o') { if(key.indexOf('.LIST.') > 0 && key.indexOf('ALPHA_') == 0  && key.indexOf(ns+ '.LIST.') != 0  ) {flagPush = true; }       }
			if( flagPush) {
				_d.push( {  key: key, size: size } );
				totalSize = totalSize + size;
			}
			delete item;
		};
		var o2 = {};
		o2.data = _d;
		o2.size = totalSize;
		o2.keyCount = _d.length;
		return o2;
	},

	_ls_deleteKeys: function(obj) {
		//pass in object returned by ._ls_getData()
		var _a = '';
		if(obj.constructor == Array) _a = obj;
		else _a = obj.data;
		if(typeof _a == 'undefined') return false;
		for(var i = 0; i < _a.length; i++) {
			localStorage.removeItem(_a[i].key);
		}
	},

	_restoreListsFromLocalStorage: function() {

		var l = this._listControls;
		var ls = this._localStorageSettings;
		var flagWP = this._embeddedMode;
		if(flagWP && ls.workingPreviewTestingMode.toLowerCase() == 'filesystem') {
			var data = A5.ajax.buildURLParam('_lists',JSON.stringify(l));
			this.ajaxCallback('G',1,'system:workingPreviewSimulateLocalStorageRestoreLists','',data);

		} else {
			for(var i = 0; i < l.length; i++) {
				this._restoreListFromLocalStorage(l[i]);
			}
		}
	},

	_restoreListsWorkingPreviewLow: function(listId,_l) {

		var obje = {};
		obje.data = JSON.stringify(_l);
		this._executeEvent('localStorageDecryption',obje)
		if(typeof obje.data != 'undefined') _l = JSON.parse(obje.data);
		var data = _l.data;

		if(typeof _l.minified != 'undefined') {
			if(_l.minified == true) {
				data = A5.u.json.expand(data,_l.map);
			}
		}

		var _s = _l.state;

		var _u = {};
		if(typeof _l.userData != 'undefined') _u = _l.userData;


		var lObj = this.getControl(listId);
		if(!lObj) return false;
		this._restoreListState(lObj,_s);
		lObj.populate(data,false,false,false);
		//if(typeof _s.scrollPosition.start != 'undefined') lObj.scrollToItem(_s.scrollPosition.start);
		lObj._hasBeenRendered = true; //so that the panelActivate does not overwrite changes - if List set to delay render till visible

		obje = {};
		obje.listId = listId;
		obje.userData = _u;
		this._list_executeEvent(listId,'onRestoreFromLocalStorage',obje);
		this.refreshClientSideComputations()


	},



	_restoreListFromLocalStorage: function(listId) {
		var ls = this._localStorageSettings;
		var key = ls.namespace + '.' + 'LIST' + '.' + listId.toUpperCase();
		var o2 = {};
		o2.listId = listId;
		this._readFromLocalStorage(key,'_restoreListLow',JSON.stringify(o2));
	},

	_restoreListLow: function(_JData,obj) {

		if(typeof _JData == 'undefined') return false;
		if(_JData == null) return false;
		this._restoringVariables = true;
		var obje = {};
		obje.data = JSON.stringify(_JData);
		this._executeEvent('localStorageDecryption',obje)
		if(typeof obje.data != 'undefined') _JData = JSON.parse(obje.data);
		var _d = _JData.data;

		if(typeof _JData.minified != 'undefined') {
			if(_JData.minified == true) {
				_d = A5.u.json.expand(_d,_JData.map);
			}
		}


		var _s = _JData.state;
		var _u = {};
		if(typeof _JData.userData != 'undefined') _u = _JData.userData;
		var lObj = this.getControl(obj.listId);
		if(!lObj) {
			this._restoringVariables = false;
			return false;
		}
		this._restoreListState(lObj,_s);
		lObj._restoringList = true;
		lObj.populate(_d,false,false,false);
		lObj._restoringList = false;
		lObj._hasBeenRendered = true; //so that the panelActivate does not overwrite changes - if List set to delay render till visible
		//if(typeof _s.scrollPosition.start != 'undefined') lObj.scrollToItem(_s.scrollPosition.start);

		if(typeof obj._route != 'undefined' && lObj._setRoute) {
			lObj._setRoute(obj._route);
		}

		obje = {};
		obje.listId = obj.listId;
		obje.userData = _u;
		this._list_executeEvent(obj.listId,'onRestoreFromLocalStorage',obje);
		this.refreshClientSideComputations()
		this._restoringVariables = false;


	},

	_restoreVariablesFromLocalStorage: function() {

		var ls = this._localStorageSettings;
		var key = ls.namespace + '.' + '_VARIABLES';
		this._readFromLocalStorage(key,'_restoreVariablesLow');
	},

	_restoreVariablesLow: function(_JData) {
		if(typeof _JData == 'undefined') return false;
		if(_JData == null) return false;
		this._restoringVariables = true;
		var obj = {};
		obj.data = JSON.stringify(_JData);
		this._executeEvent('localStorageDecryption',obj)
		if(typeof obj.data != 'undefined') _JData = JSON.parse(obj.data);

		var _d = _JData.data;
		var _dirty = _JData.dirty;
		var _dDirty = {};
		for(var i = 0; i < _dirty.length; i++) {
			_dDirty[_dirty[i]] = _d[_dirty[i]];
			delete _d[_dirty[i]];
		}



		//restore routes
		if(typeof _JData.routes != 'undefined') {
			var _r = _JData.routes;
			var lObj = '';
			for(var i = 0; i < _r.length; i++) {
				lObj = this.getControl(_r[i].listId);
				if(!lObj) {
					this._restoringVariables = false;
					return false;
				}
				//lObj._restoringList = true;
				lObj._setRoute(_r[i].route);
				//lObj._restoringList = false;
			}
		}


		this.populate(_d); //populating clean controls
		this.populate(_dDirty,1,false,false,true); //controls that are set will be dirty
		//this.populate(_JData.data,1,false,false,true); //controls that are set will be dirty
		var o2 = {};
		o2.userData = _JData.userData;
		o2.data = _JData.data;

		this._executeEvent('onRestoreVariablesFromLocalStorage',o2);
		this._restoringVariables = false;




	},

	_readFromLocalStorage: function(key,callbackFunctionName) {
		var jsonOptions = arguments[2];
		var onError = null;
		if(typeof jsonOptions == 'undefined') jsonOptions = '';
		if(typeof jsonOptions == 'function') {

			onError = arguments[2];
			jsonOptions = '';
		}
		var flagWP = this._embeddedMode;
		var ls = this._localStorageSettings;
		var o2 = {};
		o2.key = key;
		o2.callbackFunctionName = callbackFunctionName;
		o2.jsonOptions = jsonOptions;
		if(flagWP && ls.workingPreviewTestingMode.toLowerCase() == 'filesystem') {
			if(typeof callbackFunctionName == 'function') {
				o2.callbackFunctionName = '__tempfunction';
				this.__tempfunction = callbackFunctionName;
			}

			var data = A5.ajax.buildURLParam('_localStorageRead',JSON.stringify(o2));
			this.ajaxCallback('G',1,'system:workingPreviewSimulateLocalStorageRead','',data);
		} else {
			var _dataJSON = localStorage.getItem(key);
			if(_dataJSON == null) {
				return false;
			}

			if(_dataJSON.substring(0,11) == 'compressed:') {
				_dataJSON = _dataJSON.substring(11);
				_dataJSON = A5.inflate(_dataJSON);
			}
			var _data = JSON.parse(_dataJSON);
			var _route = {};
			if(typeof _data.route != 'undefined') {
				_route = _data.route;
			}
			if(jsonOptions != '') {
				var _jO = JSON.parse(jsonOptions);
				_jO._route = _route;
				this[callbackFunctionName](_data,_jO);
			} else {
				if(typeof callbackFunctionName == 'string') {
					this[callbackFunctionName](_data);
				} else {
					//reading a data cache value
					callbackFunctionName.call(this,_data); //data cache
					delete _dataJSON;
					delete _data;
				}
			}
		}
	},


	_restoreFromLocalStorage: function() {
		var ls = this._localStorageSettings;
		var lsr = ls.restore;
		if(typeof lsr == 'undefined') return false;

		if(lsr.data) {
			this._restoreListsFromLocalStorage();
		}

		if(lsr.variables) {
			this._restoreVariablesFromLocalStorage();
		}



		if(lsr.state) {
			this._executeEvent('onRestoreComponentStateFromLocalStorage',{});
		}
	},

	_persistToLocalStorageLow: function(key,_dJSON) {
		var flagWP = this._embeddedMode;
		var ls = this._localStorageSettings;
		var obj = {};
		obj.data = _dJSON;
		this._executeEvent('localStorageEncryption',obj)
		if(typeof obj.data != 'undefined') _dJSON = obj.data;
		var infoKey = ls.namespace + '._INFO';
		var d1 = new Date();
		var infoData = JSON.stringify( { lastUsed: d1, friendlyName: ls.friendlyName, description: ls.description, version: ls.__version } )
		var flagCompress = false;
		if(flagWP) {
			if(ls.workingPreviewTestingMode == 'Filesystem') {
				var o2 = {};
				o2.key = key;
				o2.keyValue = _dJSON;
				o2.infoKey = infoKey;
				o2.infoData = infoData;
				var data = A5.ajax.buildURLParam('_localStorage',JSON.stringify(o2));
				//sr 8/24/2015 - callback not working
				var ocb = {};
				if(typeof arguments[2] == 'function') {
					ocb.onComplete = arguments[2];
					ocb.errorFunction = function() { };
					ocb.deviceOfflineFunction = function() { };
				}
				this.ajaxCallback('G',1,'system:workingPreviewSimulateLocalStorage','',data,ocb);

				return true;
			}
		}
		try{
			//compress?
			flagCompress = this._localStorageSettings['compressListData'];
			if(typeof flagCompress == 'undefined') flagCompress = false;
			if(flagCompress) {
				var _compressed = A5.deflate(_dJSON);
				_dJSON = 'compressed:' + _compressed;
			}
			localStorage.setItem(key,_dJSON);
		}
		catch(err) {
			return false;
		}



		var _d2 = localStorage.getItem(key);
		var flag = (_dJSON == _d2);
		if(!flag && flagCompress) {
			//when you compress, sometimes there appears to be a small side diffrence
			if(Math.abs(_d2.length -  _dJSON.length) < 2) flag = true;
		}


		//alert('Working Preview: ' + flagWP + 'saved successfully: ' + flag +  '\n\n\n' +_dJSON);
		if(flag) {
			localStorage.setItem(infoKey,infoData)
		}

		delete _d2;
		return flag;

	},

	persistVariablesToLocalStorage: function(objX) {
		if(this._restoringVariables) return false;
		if(typeof objX == 'undefined') objX = {};
		var ls = this._localStorageSettings;
		if(!ls.persistVariableValues) return false;
		var key = ls.namespace + '.' + '_VARIABLES';

		//capture list routes
		var l = this._listControls;
		var _r = [];
		for(var i = 0; i < l.length; i++) {
			var lObj = this.getControl(l[i]);
			if(lObj && lObj._getRoute) {
				if(lObj.__flagPersist) {
					_r.push({'listId' : lObj.listVariableName, 'route' : lObj._getRoute()});
				}
			}
		}
		this._executeEvent('onBeforePersistControlValuesToLocalStorage',objX);
		if(typeof objX.userData == 'undefined') objX.userData = '';
		var data = this._harvestVariables();
		if(typeof this._noPersist != 'undefined') {
			for(var i = 0; i < this._noPersist.length; i++) {
				delete data.data[this._noPersist[i]];
			}
		}
		data.userData = objX.userData;
		data.version = ls.__version;
		data.routes = _r;
		if(typeof data.version == 'undefined') data.version = 1;
		var _dJSON = JSON.stringify(data);
		var flag = this._persistToLocalStorageLow(key,_dJSON);
		objX.success = flag;
		this._executeEvent('onPersistControlValuesToLocalStorage',objX);

	},

	_restoreListState: function(lObj,_s) {
		A5.u.json.postparse(_s);
	 	lObj.filter = _s.filter;
		lObj.order = _s.order;
		lObj.group.auto = _s.group;
		lObj.disabled = _s.disabled;
		lObj.readOnly = _s.readOnly;
		if(typeof _s.ssFilter) {
		 	lObj._state = {};
		 	lObj._state.filter = _s.ssFilter;
		 	lObj._state.filterParameters = _s.ssFilterParameters;
		 	lObj._state.order = _s.ssOrder;
		 	lObj._state.recordCountFormatted = _s.ssRecordCountFormatted;
		 	var ele = $(this.dialogId + '.' + lObj.listVariableName + '.RECORDCOUNT');
		 	if(ele) ele.innerHTML = lObj._state.recordCountFormatted;
		 }


	},

	persistListToLocalStorage: function(listId) {
		var objIn = arguments[1];
		if(typeof objIn == 'undefined') {objIn = {}};
		var mode = objIn.mode;
		if(mode == 'undefined') mode = '';
		if(typeof listId == 'string') {
			var lObj = this.getControl(listId);
			if(!lObj) return false;
		} else {
			var lObj = listId;
			listId = lObj.listVariableName;
		}
		var _u = {};
		if(typeof lObj.__userData != 'undefined') _u = lObj.__userData;
		delete lObj.__userData;

		//if you don't do the shallow copy then when you do A5.u.json.preparse() you will encode the filters in the list Object!!
		var _s2 = {};
		var _s = {};
		_s2.filter = lObj.filter;
		_s2.order = lObj.order;
		_s2.group = lObj.group.auto;

		$u.o.assign(_s,_s2);
		//can't do this becuase the data has not yet been written to the _state Object
		if(typeof lObj._state != 'undefined') {
			if(typeof lObj._state.filter != 'undefined') _s.ssFilter = lObj._state.filter;
			if(typeof lObj._state.filterParameters != 'undefined') _s.ssFilterParameters = lObj._state.filterParameters;
			if(typeof lObj._state.order != 'undefined') _s.ssOrder = lObj._state.order;
			if(typeof lObj._state.recordCountFormatted != 'undefined') _s.ssRecordCountFormatted = lObj._state.recordCountFormatted;
		}
		//_s.scrollPosition = lObj.indexVisible();
		_s.disabled = lObj.disabled;
		_s.readOnly = lObj.readOnly;

		A5.u.json.preparse(_s);

		var _d = lObj._data;

		//var _d = [];
		//$u.o.assign(_d,lObj._data);

		//alert(mode);
		/*
		//this event is getting called 2 times after a synch because first .setRowClean(), .updateRow() triggers the event
		if(mode == 'update') {
			var debugTxt = JSON.stringify(_d,'','\t');
			debugTxt = debugTxt.split('\t').join('    ');
			var ele = $('msg1');
			if(ele) {
				ele.innerHTML = '<div style="color: blue;width: 100%; height: 100%;white-space: pre;border: solid 1px blue; padding: 2px;"></div>';
				ele.firstChild.innerText = debugTxt;
				if(ele.firstChild.innerHTML == '')  { ele.firstChild.innerHTML = debugTxt }
			}

			var debugTxt2 = JSON.stringify(lObj.harvestList(),'','\t').split('\t').join('     ');
			var ele2 = $('msg2');
			if(ele2) {
				ele2.innerHTML = '<div style="color: orange;width: 100%; height: 100%;white-space: pre;border: solid 1px blue; padding: 2px;"></div>';
				ele2.firstChild.innerText = debugTxt2;
				if(ele2.firstChild.innerHTML == '')  { ele2.firstChild.innerHTML = debugTxt2 }
			}
		}
		*/

		var ls = this._localStorageSettings;
		var _l = {};
		var flagMin = false;
		if(typeof ls.minify != 'undefined') flagMin = ls.minify;

		if(flagMin) {
			var _m = {};
			var _dmin = {};
			var _clean = function(p,v) {
				//if(p[0] == '*' || v == '') return false; //do NOT remove system fields. it can cause sync errors.
				if(v == '') return false;
			    return true;
			}
			_dmin = A5.u.json.compress(_d,_m,_clean);
			_l.data = _dmin;
			_l.minified = true;
			_l.map = _m;
		} else {
			_l.data = _d;
			_l.minified = false;
		}
		_l.state = _s;
		_l.userData = _u;
		_l.version = lObj.__version;
		//_l.route = lObj._getRoute();
		var _dJSON = JSON.stringify(_l);
		var ls = this._localStorageSettings;
		var key = ls.namespace + '.' + 'LIST' + '.' + listId.toUpperCase();
		var flag =  this._persistToLocalStorageLow(key,_dJSON);
		delete _dJSON;
		return flag;
	},


	////
	_wce: function(listId,varName) {
		//write conflict error - show more
		var lObj = this.getControl(listId);
		var ele = arguments[2];
		var info = arguments[3];
		if(lObj) lObj._showWCErrorMore(varName,ele,info);
	},

	_getListCRCs: function(listId) {
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return [];
		var _d = listObj._data;
		if(_d.length == 0) {
			return '';
		}
		var crc = [];
			if(typeof _d[0]['__primaryKey'] != 'undefined' && typeof _d[0]['__a5crc'] != 'undefined') {
				for(var i = 0; i < _d.length; i++) {
					crc.push( [_d[i].__primaryKey, _d[i].__a5crc]);
				}
		}
		return crc;
	},

	synchronizeLists: function() {

		var ops = typeof arguments[0] != 'undefined' ? arguments[0] : {};
		var arr = this._listsDV;
		if(typeof arr == 'undefined') return false;
		var listObj = '';
		var parentList = '';

		for(var i = 0; i < arr.length; i++) {
			listObj = this.getControl(arr[i]);
			parentList = listObj.parentList;
			if(typeof parentList == 'undefined') parentList = '';
			if(parentList == '') {
				//only sync top level lists
				this.saveListEdits(arr[i],ops);
			}
		}

	},

	_saveNextBatch: function(listId,totalDirtyRows,batchSize,startingRow,cntObj) {
		var pct = ((startingRow-batchSize)/totalDirtyRows) * 100;
		var lObj = this.getControl(listId);
		var obj = {};
		obj.totalDirtyRows = totalDirtyRows;
		obj.batchSize = batchSize;
		obj.startingRow = startingRow;
		obj.pctComplete = pct;
		obj.countObject = cntObj;
		lObj._setSynchProgress(pct);
		var result = this._list_executeEvent(listId,'detailView.afterSynchronizeListBatch',obj);

		if(lObj._flagCancelBatchSynchronize) {
			lObj._hideSynchProgress();
			this._list_executeEvent(listId,'detailView.afterCancelBatch',obj);
			return false;
		}

		if(Number(startingRow) > Number(totalDirtyRows)) {
			lObj._hideSynchProgress();
			this._list_executeEvent(listId,'detailView.afterSynchronizeListBatchEnd',obj);
			return false;
		}

		if(result) this.saveListEdits(listId,{batchSize: batchSize, _startingRow: startingRow, _countObject: obj.countObject });
	},

	countRecordsToSynch: function(listId) {
		var allParentLists = listObj.allParentLists;
		var topList = listId;
		if(typeof allParentLists != 'undefined') {
			if(allParentLists.length > 0) {
				topList = allParentLists[allParentLists.length -1];
			}
		}

		var lObj = this.getControl(topList);
		if(!lObj) return {}
		var _d = lObj._data;
		var o = {};
		o.count = 0;
		o.updatedRecords = 0;
		o.newRecords = 0;
		o.deletedRecords = 0;
		for(var i = 0; i < _d.length; i++) {
			if(_d[i]._isDirty) {
				o.count = o.count +1;
				if(typeof _d[i]._isDeleted != 'undefined') {
					if(_d[i]._isDeleted) o.deletedRecords = o.deletedRecords +1;
				}
				if(typeof _d[i]._isNewRow != 'undefined') {
					if(_d[i]._isNewRow) o.newRecords = o.newRecords +1;
				}
			}
		}
		o.updatedRecords = (o.count - o.newRecords - o.deletedRecords);
		return o;
	},

	saveListEdits: function(listId) {

		var opsIn = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		var data = '';
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return false;
		if(!listObj._hasDetailView) {
			alert('List does not have a Detail View.');
			return false;
		}
		var flagSumbmitAllChildRecords = false;
		if(typeof opsIn.allChildRecords) flagSumbmitAllChildRecords = opsIn.allChildRecords;
		var flagSubmitLocation = false;
		if(typeof listObj._submitLocationInfo != 'undefined') flagSubmitLocation = listObj._submitLocationInfo;
		//submit the top-level parent
		var allParentLists = listObj.allParentLists;
		if(typeof allParentLists != 'undefined') {
			if(flagSubmitLocation == false) {
				//check is an upstream list need location information
				for(var i = 0; i < allParentLists.length; i++) {
					if(  this.getControl(allParentLists[i])._submitLocationInformation) flagSubmitLocation = true;
				}
			}

			if(allParentLists.length > 0) {
				var topList = allParentLists[allParentLists.length -1];
				listId = topList;
				listObj = this.getControl(listId);
			}
		}

		var flagResetMediaFileErrors = true;
		if(typeof opsIn.resetMediaFileUploadErrors != 'undefined') flagResetMediaFileErrors = opsIn.resetMediaFileUploadErrors;
		if(flagResetMediaFileErrors) {
			if(listObj._resetMediaFileUploadErrorsFlag) listObj._resetMediaFileUploadErrorsFlag(listObj._data);
		}

		var flagCheckForDirtyMediaFiles = true;
		if(typeof opsIn.checkForMediaFiles != 'undefined') flagCheckForDirtyMediaFiles = opsIn.checkForMediaFiles;
		var flagInPhoneGap = false;
		if(typeof this._cordovaReady != 'undefined') flagInPhoneGap = this._cordovaReady;
		if(!flagInPhoneGap) flagCheckForDirtyMediaFiles = false;
		if(flagCheckForDirtyMediaFiles) {
			var arr = listObj._harvestMediaFields();
			if(arr.length > 0) {
				listObj._mediaFiles = arr;
				var result = this._list_executeEvent(listId,'detailView.beforePhoneGapMediaFilesUploaded',{array: arr});
				if(result == false) return false;
				//we dont want to fetch media files that were captured on the device previously.
				//_cleanMediaFiles are pushed back into the array by a5UXHelper_listDetailViewSubmit_Nested()
				listObj._cleanMediaFiles = listObj._harvestMediaFields({cleanOnly: true});
				listObj._syncMediaFiles();
				return false;
			}
		}
		var route = listObj._getRoute();
		listObj.__currentRoute = route;
		var arr = listObj._getControlsInDv();
		if(arr == '') arr = [];
		if(typeof arr == 'undefined') return false;
		var flagPushEditsToClient = listObj.pushServerEditsToClient;
		var batchSize = 0;
		var _startingRow = 1;
		var _countObject = '';
		var rows = 'all';
		if(typeof opsIn.rows != 'undefined') rows = opsIn.rows;
		var dirtyPK = '';
		var totalDirtyRows = -1;
		if(rows == 'current') {
			if(listObj.listRowIsDirty() == false) {
				return true;
			}
			dirtyPK = listObj.harvestList(true);
			var obj = [];
			obj.push(listObj.harvestListRow(-1, {flagSumbmitAllChildRecords: flagSumbmitAllChildRecords} ));
		} else if (rows.constructor == Array) {
			var obj = [];
			for(var i = 0; i < rows.length; i++) {
				if(listObj.listRowIsDirty(Number(rows[i])) ) {
					obj.push(listObj.harvestListRow(Number(rows[i]), {flagSumbmitAllChildRecords: flagSumbmitAllChildRecords} ));
				}
				dirtyPK = listObj.harvestList(true);
				if(obj.length == 0) {
					return true;
				}
			}
		} else {
			//allRows - maybe in batches
			if(typeof listObj._synchBatchSize != 'undefined') batchSize = listObj._synchBatchSize;
			if(typeof opsIn.batchSize != 'undefined') batchSize = opsIn.batchSize;
			if(typeof opsIn._startingRow != 'undefined') _startingRow = opsIn._startingRow;
			if(typeof opsIn._countObject != 'undefined') _countObject = JSON.stringify(opsIn._countObject);
			var obj = listObj.harvestList(false,{batchSize: batchSize, startingRow: _startingRow, flagSumbmitAllChildRecords: flagSumbmitAllChildRecords});
			totalDirtyRows = listObj.__arrDirtyRows.length;
		}
		var batchObj = {};
		batchObj.size = Number(batchSize);
		batchObj.totalDirtyRows = totalDirtyRows;
		batchObj.startingRow = _startingRow;
		batchObj.countObject = _countObject;
		var result = this._list_executeEvent(listId,'detailView.canSynchronizeList',{data: obj, batchSize: batchObj.size, totalDirtyRows: batchObj.totalDirtyRows, startingRow: batchObj.startingRow});
		if(result == false) return false;
		listObj._flagCancelBatchSynchronize = false;
		if(batchObj.size > 0 && batchObj.startingRow == 1) {
			listObj._setSynchProgress(1);
			this._list_executeEvent(listId,'detailView.beforeSynchronizeListBatchStart',{batchSize: batchObj.size, totalDirtyRows: batchObj.totalDirtyRows, startingRow: batchObj.startingRow});
		}
		data = [];
		data.push(A5.ajax.buildURLParam('_batchInfo',JSON.stringify(batchObj)));
		data.push(A5.ajax.buildURLParam('_listData',JSON.stringify(obj)));
		data.push(A5.ajax.buildURLParam('_listRoute',JSON.stringify(route)));
		data.push(A5.ajax.buildURLParam('_dirtyRowInList',JSON.stringify(dirtyPK)));

		if(typeof listObj._parentListForNotPreLoadedData != 'undefined') {
			var lParent = this.getControl(listObj._parentListForNotPreLoadedData);
			if(lParent) {
				var parentRow = lParent.selection[0];
				if(typeof parentRow != 'undefined') {
					var parentData = lParent._data[parentRow];
					data.push(A5.ajax.buildURLParam('_parentListData',JSON.stringify(parentData)));
					data.push(A5.ajax.buildURLParam('_linkingFields',JSON.stringify(listObj._linkingKeys)));
				}
			}
		}




		if(flagPushEditsToClient) {
			//don't waste bandwith by sending crcs back.
			//var crc = this._getListCRCs(listId);
			//data.push(A5.ajax.buildURLParam('_crcData',JSON.stringify(crc)));
			data.push(A5.ajax.buildURLParam('_incrementalRefresh','true'));
		} else {
			data.push(A5.ajax.buildURLParam('_incrementalRefresh','false'));
		}
		var flagFixMediaFileReferences = false;
		if(typeof opsIn.fixMediaFileReferences != 'undefined') flagFixMediaFileReferences = opsIn.fixMediaFileReferences;
		data.push(A5.ajax.buildURLParam('_fixMediaFileReferences',flagFixMediaFileReferences));
		data = data.join('&');
		data = data + '&_listName='+listId+'&_listControls=' + arr.join(',');
		var objS = {};
		if(flagSubmitLocation) {
			objS.getLocationData = true;
			objS.enableHighAccuracy = true,
			objS.imeout =  15000
			objS.maximumAge = 30000
		}
		objS.flagSaveListData = true;
		this.ajaxCallback('G','','system:persistListData','',data,objS);
	},

	_getDirtyLists: function() {
		//array of dirty Lists
		var arr = [];
		for(var i = 0; i < this._listsDV.length; i++) {
			if(this.getControl(this._listsDV[i]).listIsDirty()) arr.push(this._listsDV[i]);
		}
		return arr;
	},
	_hasDirtyLists: function() {
		var arr = this._getDirtyLists();
		if(arr.length == 0) return false;
		return true;
	},

	_isControlInListDetailView: function(colName) {
		//true if control in any List detail view
		if(this._getListForDetailViewControl(colName) == '') return false;
		else return true;
	},

	_getListForDetailViewControl: function(colName) {
		//return empty sting or name of list for which this control is part of the list's detail view
		colName = colName.toUpperCase();
		var lObj = '';
		var ctrls = '';
		var indx = -1;
		for(var i = 0; i < this._listsDV.length; i++) {
			lObj = this.getControl(this._listsDV[i]);
			ctrls = lObj._getControlsInDv();
			indx = $u.a.find(ctrls,colName);
			if(indx > -1) return this._listsDV[i];
		}
		return '';
	},


	fixCase: function(string,array) {
		//makes case of 'string' same as matching entry in 'array'
		string = string.toLowerCase();
		for(var i = 0; i < array.length; i++) {
	 	   if( array[i].toLowerCase() == string) {
	  	     string = array[i];
	   	     break;
		    }
		}
		return string;
	},



	_fixDVValue: function(valToUse,controlName,ops) {
		if(valToUse == null) return valToUse;
		var controlType = this._getControlType(controlName).toLowerCase()

		if(controlType == 'signaturecapture' || controlType == 'image') {

			var lObj = ops.listObj;
			if(!lObj) {
				lObj = this.getControl(ops.listVariableName);
				if(!lObj) return valToUse;
			}
			var listField = lObj._getListFieldFromControl(controlName);
			var ix = this._findArrayProp(lObj._listFields,'name',listField);
			if(ix > -1) {
				if(typeof lObj._listFields[ix].image != 'undefined') {
					if(typeof lObj._listFields[ix].image.embedded != 'undefined') {
						if(lObj._listFields[ix].image.embedded) {
							var iType = lObj._listFields[ix].image.type;
							var prefix = 'data:image/' + iType + ';base64,'
							var prefix = prefix.toLowerCase();
							valToUse = prefix + valToUse;
						} else {
							valToUse = valToUse.replace(/\\/g,'/');
						}
					}
				}
			}
			if(controlType == 'signaturecapture') {
				this._functions._toggleCanvas(controlName.toUpperCase(),'IMAGE');
			}
		}
		return valToUse;
	},

	_isEmbeddedImage: function(listField,lObj) {
		var ix = this._findArrayProp(lObj._listFields,'name',listField);
		if(ix > -1) {
			if(typeof lObj._listFields[ix].image == 'undefined') return false;
			if(lObj._listFields[ix].image.embedded) return true;
			return false;
		}
	},





	_getListFieldProps: function(listObj,fn) {
		var ix = -1;
		for(var i = 0; i < listObj._listFields.length; i++) {
			if(listObj._listFields[i].name == fn) {
				ix = i;
				break;
			}
		}
		if(ix > -1) return listObj._listFields[ix];
		else return {};
	},


//////////////////////////////
	_populateUXControlsWithListData: function(_d,argIn) {


		var ops = typeof arguments[2] != 'undefined' ? arguments[2] : {};
		var flagAjaxCallback = false;
		var flagSkipDirtyFields = false;
		if(typeof ops.ajaxCallback != 'undefined') flagAjaxCallback = ops.ajaxCallback;
		if(typeof ops.skipDirtyFields != 'undefined') flagSkipDirtyFields = ops.skipDirtyFields;
		var listObj = false;
		if(typeof ops.listObj != 'undefined' ) listObj = ops.listObj;

		var dirtyClass = '';
		if(typeof listObj.dirtyControlClassName != 'undefined') dirtyClass = listObj.dirtyControlClassName;



		//called from an event in a List control - argIn can either be a container name or field map
		var method = 'container';
		if(typeof argIn == 'object') {
			method = 'map';
			var map = argIn;
		} else {
			var container = argIn;
		}

		var flagArray = false;
		var valToUse = '';
		var fObj = '';
		var fieldDirty = false;

		if(method == 'container') {
			var arr = [];
			for(var fn in _d) {
				arr.push(fn);
			}
			var controls = this.getControlsInContainer(container);
			if(controls.constructor != Array) {
				alert('Invalid List Detail View container: ' + container);
				return false;
			}
			var field = '';
			var flag = '';
			var fDirty = '';

			for(var i = 0; i < controls.length; i++) {
				flagArray = false;
				if(typeof controls[i] != 'string') {
					alert('Invalid List Detail View container: ' + container);
					return false;
				}
				flag = true;
				field = this.fixCase(controls[i],arr)
				if(typeof _d[field] != 'undefined') {
					if(flagSkipDirtyFields) {
						fDirty = this.getControlDirty(controls[i].toUpperCase())
						if(fDirty) flag = false;
					};

					flagDirty = false;
					id = this.getPointer(controls[i]);
					if(dirtyClass != '') {
						$rcn(id,dirtyClass);
						if(typeof _d['_oldData'] != 'undefined' && _d['_oldData'] != false) {
							if( _d['_oldData'][field] != _d[field]) {
								flagDirty = true;
								$acn(id,dirtyClass);
							}
						}
					}


					flagArray = false;
					fObj = this.columnInfo[field.toUpperCase()];
					if(typeof fObj != 'undefined') flagArray = fObj.isArray;
					valToUse = _d[field];
					if(flagArray) {if(typeof valToUse == 'string') {   valToUse = valToUse.split(',')}};
					if(flag) {
						valToUse = this._fixDVValue(valToUse,controls[i],ops);



						//is there a transformation expression
						if(listObj) {
							fieldProps = this._getListFieldProps(listObj,field);
							jsBeforeDVPopulate = '';
							if(typeof fieldProps.onDetailViewPopulate != 'undefined') jsBeforeDVPopulate = fieldProps.onDetailViewPopulate;
							if(jsBeforeDVPopulate != '') {
								listObj._value = valToUse;
								valToUse = Function(jsBeforeDVPopulate).call(listObj,valToUse);
							}
						}

						//need to set this or else selecting text in control and then hit BS does not make control dirty
						var base64Prefix = this._getBase64Prefix(listObj,field)  //image field that has base64 data but not prefix
						if(base64Prefix != '') valToUse = base64Prefix + valToUse;

						this.originalValues[0][controls[i].toUpperCase()] = valToUse;
						this.setValue(controls[i],valToUse,false);
					}
				}
			}
		} else {
			//method = map
			var indx = -1;
			var flag = '';
			var fDirty = '';
			var controlType = '';
			var fieldProps = '';
			var jsBeforeDVPopulate = ''
			var id = '';


			for(var fn in _d) {
				flag = true;
				indx = this._findArrayProp(map,'field',fn);
				flagDirty = false; //has list field been edited
				if(indx > -1) {
					id = this.getPointer(map[indx].control);
					if(dirtyClass != '') {
						$rcn(id,dirtyClass);
						if(typeof _d['_oldData'] != 'undefined' && _d['_oldData'] != false) {
							if( _d['_oldData'][fn] != _d[fn]) {
								flagDirty = true;
								$acn(id,dirtyClass);
							}
						}
					}

					if(flagSkipDirtyFields) {
						fDirty = this.getControlDirty(map[indx].control.toUpperCase())
						if(fDirty) flag = false;
					};
					flagArray = false;
					fObj = this.columnInfo[map[indx].control.toUpperCase()];
					if(typeof fObj != 'undefined') flagArray = fObj.isArray;
					valToUse = _d[fn];
					if(flagArray) {if(typeof valToUse == 'string') {   valToUse = valToUse.split(',')}};
					if(flag) {
						valToUse = this._fixDVValue(valToUse,map[indx].control,ops);
						//this.originalValues[0][map[indx].control.toUpperCase()] = valToUse;


						//is there a transformation expression
						if(listObj) {
							fieldProps = this._getListFieldProps(listObj,fn);
							jsBeforeDVPopulate = '';
							if(typeof fieldProps.onDetailViewPopulate != 'undefined') jsBeforeDVPopulate = fieldProps.onDetailViewPopulate;
							if(jsBeforeDVPopulate != '') {

								listObj._value = valToUse;
								valToUse = Function(jsBeforeDVPopulate).call(listObj,valToUse);

							}
						}

						var base64Prefix = this._getBase64Prefix(listObj,fn) //image field that has base64 data but not prefix
						if(base64Prefix != '') valToUse = base64Prefix + valToUse;
						this.originalValues[0][map[indx].control.toUpperCase()] = valToUse;
						this.setValue(map[indx].control,valToUse,false);
					}
				}
			}
		}

		if(flagAjaxCallback) {
			var arr = [];

			arr.push(A5.ajax.buildURLParam('__pk',_d['__primaryKey']) );
			arr.push(A5.ajax.buildURLParam('__listId',ops.listId) );
			var data = arr.join('&');
			var xbasicFunction = 'system:refreshListDetailView';
			this.ajaxCallback('G',1,xbasicFunction,'',data);
		}
	},


	_getBase64Prefix: function(lObj,listFieldName) {
		//used when populating ux detail view with data from a list where list data is base64, but has no prefix
		var prefix = '';
		var ix = -1;
		for(var i = 0; i < lObj._listFields.length; i++) {
			if(lObj._listFields[i].name == listFieldName) {
				ix = i;
				break;
			}
		}
		if(ix > -1) {
			if(typeof lObj._listFields[ix].base64Prefix != 'undefined') {
				prefix = lObj._listFields[ix].base64Prefix;
			}
		}
		return prefix;
	},

////cachestart
	fetchDataCacheFiles: function(filesArray,targetFolder,progObj,callbackId,item,_dlgObj,onRefreshAllComplete) {
 		var fn = false;

 		if(typeof progObj.javascript != 'undefined') {
 			fn = progObj.javascript.beforeDownloadBegin;
 		}
 		if(typeof fn == 'function') fn.call(this,{totalFileSize: progObj.totalFileSize, fileCount: progObj.fileCount});

    	if(typeof targetFolder == 'undefined' || targetFolder == '') targetFolder = '__AADataCache';
    	if(typeof progObj == 'undefined') {
    		showProgress = false;
    		progObj = {};
    	}
    	if(typeof progObj.showProgress == 'undefined') progObj.showProgress =  false;;
    	if(typeof progObj.color == 'undefined') progObj.color =  '#9fa1e8';
    	if(typeof progObj.width == 'undefined') progObj.width = '300px;';
    	if(typeof progObj.placeHolder == 'undefined') progObj.showProgress = false;
    	progressElement = progObj.placeHolder;


		var arr = [];
		for(var i = 0; i < filesArray.length; i++) {
			arr.push( {filename: filesArray[i]} );
		}
		var options = {
			totalFileSize: progObj.totalFileSize,
			targetFolder: targetFolder,
			showProgress: progObj.showProgress,
			forceDownloadIfFileExists: true,
			onComplete: function(array) {
				if(callbackId == '') {
					//alert('all done - call the oncomplete function:' + onRefreshAllComplete);
					var objx = _dlgObj._ajaxCallbackCompleteCode;
					var onSuccess =	objx[onRefreshAllComplete].success;
					onSuccess.call();
					delete objx[callbackId];
				} else {
					//alert('all done fetching data from server -- now call the oncomplete for THE item = callback id:' + callbackId + '\nitemName: ' + item);
					var objx = _dlgObj._ajaxCallbackCompleteCode;
					var onSuccess =	objx[callbackId].success;
					var onError = 	objx[callbackId].fail;
					delete objx[callbackId];
					_dlgObj.getDataCacheItemFromFile(item,onSuccess,onError);
				}
			},
			onError: function(array,arrayIndex) {
				alert('Error fetching files in data cache');
			},
			progress: {
				color: progObj.color,
				width: progObj.width,
				allowCancel: false,
				progressElement: progressElement
			}
		}
		this.phoneGapFileDownload(arr,options);
    },
    getDataCacheItemFromFile: function(itemName,onSuccess,onError) {
    	var folder = '__AADataCache';
    	var fn = folder + '/A5SessionFile/' + itemName + '.json';
    	this.phoneGapReadFile(fn,function(data) {
    		var d1 = new Date();
    		try {
    			data = JSON.parse(data);
	    		var d2 = new Date();
				onSuccess(data);
			} catch(e) {
				alert('Error - Could not JSON.parse data in file');
			}
		},function() { alert('failed'); })
    },
    getFromDataCache: function(item,onSuccessIn,onError,filterString,orderString) {
    	var opsIn = arguments[5];
    	//example: {columns: ['City','Country'], distinct: true, distinctColumn: 'Country'}
    	if(typeof opsIn == 'undefined') opsIn = {};

    	var _dlgObj = window[this.dialogId + '_DlgObj'];
    	var _dc = _dlgObj._dataCache[item];
    	if(typeof _dc == 'undefined') {
    		alert('Item not defined: \''+item+'\'');
    		return false;
    	}
    	if(typeof filterString == 'undefined') filterString = '';
    	if(typeof orderString == 'undefined') orderString = '';
    	//redefine the onSuccess function
    	var opsInJSON = JSON.stringify(opsIn);
    	if(opsInJSON == '{}') opsInJSON = '';
    	if(filterString + orderString + opsInJSON != '') {
    	   	var onSuccess = function(data) {
    	   		data = A5FilterPropertyArray(data,filterString,orderString,opsIn);
    			onSuccessIn(data);
    		}
    	} else  {
    		var onSuccess = onSuccessIn;
    	}
    	var cb = function(flag) {
    		//alert('Item \''+item+'\'is in cache: ' + flag + ' ---- ' + _dc.persisted);
    		if(flag) { //in cache
   				_dc.persisted = true;
   			} else { //not in cache
    			_dc.persisted = false;
    		}
    		_dlgObj._getFromDataCacheLow(item,onSuccess,onError)
    	}
    	//alert('PERSISTED: ' + _dc.persisted +'\nPERSIST: ' + _dc.persist + '\nDELAYED: ' + _dc.delayed);
    	if(_dc.delayed == false  ) {
    		//alert('read directly from object');
    		var data = [];
    		$u.o.assign(data,_dc.data)
    		onSuccess.call(this,data);
    	} else {
    		//alert('call _getFromDataCacheLow');
    		this._isDataItemInCache(item,cb)
    	}
    },
	_getFromDataCacheLow: function(item,onSuccess,onError) {
		var _dc = this._dataCache;
		if(typeof _dc == 'undefined') {
			if(typeof onError == 'function') {
				onError.call();
			} else {
				alert('UX does not have a data cache');
			}
			return false;
		}

		_dc = _dc[item];
		if(typeof _dc == 'undefined') {
			if(typeof onError == 'function') {
				onError.call();
			} else {
				alert('Item not found in data cache: ' + item);
			}
			return false;
		}
		flagMakeAjaxCallback = false;
		if(_dc.persist == false) {
			//persist is false
			if(_dc.delayed == false) {
				//data is available in _dataCache (_dc), but we never actually get here because getDataFromCache() handles this
				alert('data is available in _dc - should never get here');
			} else {
				//alert('make a callback - delayed data has not been fetched');
				flagMakeAjaxCallback = true;
			}
		} else {
			//persist is true
			if(_dc.persisted) {
				//alert('data has been persisted into cache - read from cache');
			} else {
				//alert('data has not yet been persisted - make ajax callback');
				flagMakeAjaxCallback = true;
			}
		};
		if(flagMakeAjaxCallback) {
			//make ajax callback to get delayed non-persistable item or persistable item that has not yet been persisted
			var cbData = '_item=' + item;
			var callbackId = A5.UUID();
			cbData = cbData + '&_callbackId=' + callbackId;
			var pgLoaded = 'no';
			if (typeof window['cordova'] != 'undefined') pgLoaded = 'yes';
			cbData = cbData + '&_phoneGapLoaded=' + pgLoaded;
			var objx = this._ajaxCallbackCompleteCode;
			objx[callbackId] = {};
			objx[callbackId].success = onSuccess;
			objx[callbackId].fail = onError;
			var obj = {};
			obj.errorFunction = function() { };
			obj.onComplete = function() {  };
			obj.deviceOfflineFunction = function() { };
			this.ajaxCallback('','','__A5SystemRefreshDataCacheItem','',cbData,obj);
		} else {
			//read from cache (local storage or file)
			var persistWhere = _dc.persistWhere;
			var flagPG = false;
			if(typeof window['cordova'] != 'undefined') flagPG = true;
			if(!flagPG) {
				if(persistWhere == 'FileSystemPreferred') {
					persistWhere = 'LocalStorage';
				} else if (persistWhere  == 'FileSystem') {
					alert('Cannot read item from file system when not running in PhoneGap.');
					onError.call();
					return false;
				}
			}
			if(persistWhere == 'LocalStorage') {
				var nsObj = this._localStorageSettings;
				var ns = nsObj.namespace;
				var key = ns + '._dataCache_' + item;

				this._readFromLocalStorage(key,onSuccess,onError);
			} else {


				this.getDataCacheItemFromFile(item,onSuccess,onError);
			}
		}

	},
	_isDataItemInCache: function(item,cb) {
		var flagPG = false;
		var _dc = this._dataCache[item];
		if(typeof window['cordova'] != 'undefined') flagPG = true;
		if(flagPG) {
			if(_dc.persistWhere == 'LocalStorage') flagPG = false;
		}
		if(!flagPG) {
			var nsObj = this._localStorageSettings;
			var ns = nsObj.namespace;
			var key = ns + '._dataCache_' + item;
			var flagWP = this._embeddedMode;
			var ls = this._localStorageSettings;
			if(flagWP && ls.workingPreviewTestingMode.toLowerCase() == 'filesystem') {
				//always set to false for working preview-filesystem-mode mode - forces an ajax callback
				if(_dc) _dc.foundInCache = false;
				cb(false,item);
			} else {
				var indx = -1;
				for ( var i = 0, len = localStorage.length; i < len; ++i ) {
					if(localStorage.key(i) == key) {
						indx = i;
						break;
					}
				}
				var flagFound = false;
				if(indx > -1) flagFound = true;
				//alert('2 '  + ' found: ' + flagFound)
				if(_dc) _dc.foundInCache = flagFound;
				cb(flagFound,item)
			}
		} else {
			//phonegap
			this.phoneGapGetDirectoryRecurse('__AADataCache',function(array) {
				var fn = '__AADataCache/A5SessionFile/' + item + '.json';
				var indx = -1;
				var fn2 = '';
				for(var i = 0; i < array.length; i++) {
					fn2 = array[i].fullPath
					if(fn2.substring(0,1) == '/') fn2 = fn2.substring(1);
					if(array[i].isFile && fn2 == fn) {
						indx = i;
						break;
					}
				}
				if(indx == -1) {
					if(_dc) _dc.foundInCache = false;
					cb(false,item);
				} else {
					if(_dc) _dc.foundInCache = true;
					cb(true,item);
				}
				},function(array) {
					//no files in cache
					if(_dc) _dc.foundInCache = false;
					cb(false,item);
				}
			);
		}
	},

	_fetchItemsNotInCache: function(items,onComplete) {
		//fetches any delayed items that have not yet been fetched
		var _dlgObj = window[this.dialogId + '_DlgObj'];
		items = items.split(',');
		var arr = [];
		for(var i = 0; i < items.length; i++) {
			arr.push({item: items[i], found: null});
		}
		var itemName = '';
		var ix = '';
		for(var i = 0; i < arr.length; i++) {
			itemName = arr[i].item;
			function _cb(flag,item) {
				ix = -1;
				for(var i2 = 0; i2 < arr.length; i2++) {
					if(arr[i2].item == item) {
						arr[i2].found = flag;
						break;
					}
				}
				var flagAllDone = true;
				for(var i2 = 0; i2 < arr.length; i2++) {
					if(arr[i2].found == null) {
						flagAllDone = false;
						break;
					}
				}
				if(flagAllDone) {
					var itemsToRefresh = [];
					for(var i2 = 0; i2 < arr.length; i2++) {
						if(!arr[i2].found) {
							if(typeof _dlgObj._dataCache[arr[i2].item] != 'undefined') {
								itemsToRefresh.push(arr[i2].item); //don't try to refresh non-existent items
							}
						}
					}

					//alert('items to fetch: ' + JSON.stringify(itemsToRefresh));

					if(itemsToRefresh.length == 0) {
						onComplete.call();
					} else {
						_dlgObj.refreshDataCacheItem(itemsToRefresh.join(','),onComplete)
					}
				}
			}
			_dlgObj._isDataItemInCache(itemName,_cb);
		}
	},

	_removeUndefinedItems: function(items) {
		items = items.split(',');
		var arr = [];
		var obj = '';
		for(var i = 0; i < items.length; i++) {
			obj = this._dataCache[items[i]];
			if(typeof obj != 'undefined') arr.push(items[i]);
		}
		return arr.join(',');

	},

	readDataCacheItems: function(items,onComplete) {
		//read multiple items at once, then call onComplete
		items = this._removeUndefinedItems(items);
		var _dlgObj = window[this.dialogId + '_DlgObj'];
		var _cb = function() {
			_dlgObj.readDataCacheItems_low(items,onComplete);
		}
		//first make sure all items are in the cache
		_dlgObj._fetchItemsNotInCache(items,_cb);

	},

	readDataCacheItems_low: function(items,onComplete) {
		var _dlgObj = window[this.dialogId + '_DlgObj'];
		var objData = {};
		var arr = [];
		items = items.split(',');
		for(var i = 0; i < items.length; i++) {
			arr.push({item: items[i], data: null, complete: null});
		}
		var _onFail = function() { 	};
		var _filter = '';
		var _order = '';
		var itemName = '';
		this.__dataItemRead = function(data,itemName) {
			var ix = -1;
			for(var i = 0; i < arr.length; i++) {
				if(arr[i].item == itemName) {
					arr[i].complete = true;
					objData[itemName] = data;
				}
			}
			var flagAllDone = true;
			for(var i = 0; i < arr.length; i++) {
				if(arr[i].complete == null) {
					flagAllDone = false;
					break;
				}
			}
			if(flagAllDone) {
				onComplete.call(this,objData);
				delete arr;
				delete objData;
			}

		}
		for(var i = 0; i < arr.length; i++) {
			itemName = arr[i].item;
			var functionString = 'window[\''+this.dialogId + '_DlgObj'+'\'].__dataItemRead(data,\'' +itemName+'\');'
			var _onSuccess = Function('data',functionString);
			_dlgObj.getFromDataCache(arr[i].item,_onSuccess,'','','');
		}

	},

	_runGetDataCallback: function(cbid,item,dataPassedIn) {
		var objx = this._ajaxCallbackCompleteCode;
		if(typeof objx == 'undefined') return false;
		var fn = objx[cbid];
		if(typeof fn == 'undefined') return false;
		var _dc = this._dataCache[item];
		if(typeof _dc == 'undefined') return false;
		if(_dc.hasError == false) type = 'success';
		else type = 'fail';
		if(type == 'success') {
			fn = fn.success;
		} else {
			fn = fn.fail;
		}
		if(typeof dataPassedIn == 'undefined') {
			var data = this._dataCache[item].data;
			var d2 = [];
			$u.o.assign(d2,data);
			fn.call(this,d2);
		} else {
			fn.call(this,dataPassedIn);
		}
		delete objx[cbid]; //delete from stack
	},

	refreshDataCacheItem: function(item) {
		var cbData = '_item=' + item;
		var pgLoaded = 'no';
		if (typeof window['cordova'] != 'undefined') pgLoaded = 'yes';
		cbData = cbData + '&_phoneGapLoaded=' + pgLoaded;
		var obj = {};
		obj.errorFunction = function() {  };
		obj.onComplete = function() { };
		obj.deviceOfflineFunction = function() {   };
		var onComplete = arguments[1];
		if(typeof onComplete == 'function') {
			var guid = A5.UUID();
			var objx = this._ajaxCallbackCompleteCode;
			objx[guid] = {}
			objx[guid].success = onComplete;
			cbData = cbData + '&_onCompleteDataItemRefresh=' + guid;
		}
		this.ajaxCallback('','','__A5SystemRefreshDataCacheItem','',cbData,obj);
	},

	addDataItemToLocalStorage: function(item,data, callbackId) {
		var nsObj = this._localStorageSettings;
		var ns = nsObj.namespace;
		//alert('add item to cache: ' + item + ' namespace: ' + ns);
		var key = ns + '._dataCache_' + item;
		var flag = this._persistToLocalStorageLow(key,JSON.stringify(data));
		var _dc = this._dataCache[item];
		if(flag == false) {
			var fn = _dc.persistToLocalStorageFailed;
			fn.call();
		} else {
			if(callbackId != '') {
				this._runGetDataCallback(callbackId,item,data);
				delete data;
			}
		}
	},

////cacheend

	_getControlType: function(name) {
		var cntrlInfoObj = this._getControlInfo(name);
		var info = false;
		var controlType = '';
		if(typeof cntrlInfoObj.info != 'undefined') info = cntrlInfoObj.info;
		if(info) controlType = info.controlType;
		return controlType;
	},


	///_updateListDataFromUXControls
	_updateListDataFromUXControls: function(listId,argIn)  {
		var ops = typeof arguments[2] != 'undefined' ? arguments[2] : {};
		if(typeof ops.synchronize == 'undefined') ops.synchronize = false;
		if(typeof ops.programmatic == 'undefined') ops.programmatic = false;
		if(typeof ops.setFocusToTargetRow == 'undefined') ops.setFocusToTargetRow = false;
		var flagLowLevel = false;
		var lObj = this.getControl(listId);
		var _lFields = lObj._listFields;




		if(ops.programmatic) {
			flagLowLevel = true;
			var dataSparse = ops.data;
			var primaryKeyOrRowNumber = ops.primaryKeyOrRowNumber;
			var flagSetFocusToTargetRow = ops.setFocusToTargetRow;
			var flagNewRow = false;
			if(primaryKeyOrRowNumber == null) flagNewRow = true;
			var flagKeyType = 'primaryKey';
			if(!flagNewRow) {
				var targetRowIsSelected = false;
				if(typeof primaryKeyOrRowNumber == 'number') flagKeyType = 'rowNumber';
				var currSel = lObj.selection[0];
				var currSelKey = '';
				if(typeof currSel != 'undefined') {
					var currSelData = lObj.getData(currSel);
					//make sure that currSelData has a corresponding property for each prop in dataSparse
					var dataProps = [];
					for(var pn in dataSparse) {
						dataProps.push(pn);
					}
					var existingProps = [];
					for(var pn in currSelData) {
						existingProps.push(pn);
					}
					for(var i = 0; i < dataProps.length; i++) {
						if( existingProps.indexOf(dataProps[i]) == -1) {
							currSelData[dataProps[i]] = '';
						}
					}
					if(flagKeyType == 'primaryKey') currSelKey = currSelData['__primaryKey'];
					else currSelKey = currSel;
					if(currSelKey == primaryKeyOrRowNumber) targetRowIsSelected = true;
				}
			}
		}

		if(!flagLowLevel) {
			if(typeof argIn == 'object') {
				var map = argIn;
				method = 'map';
			} else {
				var container = argIn;
				method = 'container';
			}

			var arr = [];
			for(var i = 0; i < _lFields.length; i++) {
				arr.push(_lFields[i].name);
			}
			var flagArray = false;
			var valToUse = '';
			var fObj = '';

			var flagNewRow = false;
			var existingData = '';

			var sel = lObj.selection[0];
			if(typeof lObj._selectedRow != 'undefined') {
				sel = lObj._selectedRow;
				if(sel == -1) sel = undefined;
			}

			if(lObj._data.length == 0) {

				flagNewRow = true;
			}

			var rowNum = sel;
			var jsBeforeListUpdate = '';

			var flagSetNewRowFlagTo = false;
			if(typeof sel == 'undefined') flagNewRow = true;
			else {
				existingData = lObj.getData(sel);
				if(typeof existingData != 'undefined') {
					if(typeof existingData._isNewRow != 'undefined') flagSetNewRowFlagTo = existingData._isNewRow;
				}
			}

			var _embeddedImages = [];
			var sourceImageName = ''; //html5 image selection - source image name

			if(method == 'container') {
				//var _rdata = lObj._data[lObj._dataMap[0]];
				var controls = this.getControlsInContainer(container);
				var field = '';
				var data = {};
				for(var i = 0; i < controls.length; i++) {
					sourceImageName = '';
					field = this.fixCase(controls[i],arr);
					//typeof _rdata != 'undefined' && typeof _rdata[field] != 'undefined'
					if(true) {
						controlType = this._getControlType(controls[i]).toLowerCase();
						var flagEmbeddedImage = false;

						if(controlType == 'signaturecapture' || controlType == 'image') {
							flagEmbeddedImage = this._isEmbeddedImage(lObj._getListFieldFromControl(controls[i]),lObj);
							if(flagEmbeddedImage) _embeddedImages.push(lObj._getListFieldFromControl(controls[i]));
							if(controlType == 'image') {
								var sourceImageName = $ga(this.dialogId + '.V.R1.' + controls[i].toUpperCase() + '_HIDDENA5FN','a5imageSourceName');
								if(typeof sourceImageName != 'undefined' && sourceImageName != null) sourceImageName = sourceImageName.toString();
							}


						}
						valToUse = this.getValue(controls[i], 1,{controlType: controlType, embeddedImage: flagEmbeddedImage});
						flagArray = false;
						fObj = this.columnInfo[field.toUpperCase()];
						if(typeof fObj != 'undefined') flagArray = fObj.isArray;
						if(flagArray) {
							valToUse = valToUse.join(',');
						}
						var flagControlDirty = this.getControlDirty(controls[i].toUpperCase());
						if(valToUse == '' && !flagControlDirty) {
							if(typeof existingData == 'object') {
								if(existingData[controls[i].toUpperCase()] == null) valToUse = null;
							}
						}


						//is there a transformation expression
						if(lObj) {
							fieldProps = this._getListFieldProps(lObj,field);
							jsBeforeListUpdate = '';
							if(typeof fieldProps.onListUpdate != 'undefined') jsBeforeListUpdate = fieldProps.onListUpdate;
							if(jsBeforeListUpdate != '') {
								lObj._value = valToUse;
								valToUse = Function(jsBeforeListUpdate).call(lObj,valToUse);
							}
						}


						data[field] = valToUse;
						if(sourceImageName != '') {
							data[controls[i] + '__A5SOURCEIMAGENAME'] = sourceImageName;
						}
					}
				}
			} else { //fieldmap


				var data = {};
				var controlType = '';


				for(var i = 0; i < map.length; i++) {
					controlType = this._getControlType(map[i].control).toLowerCase();
					sourceImageName = '';

					var flagEmbeddedImage = false;
					if(controlType == 'signaturecapture' || controlType == 'image') {
						flagEmbeddedImage = this._isEmbeddedImage(lObj._getListFieldFromControl(map[i].control),lObj);
						if(flagEmbeddedImage) _embeddedImages.push(lObj._getListFieldFromControl(map[i].control));
						if(controlType == 'image') {
							var sourceImageName = $ga(this.dialogId + '.V.R1.' + map[i].control.toUpperCase() + '_HIDDENA5FN','a5imageSourceName');
							if(typeof sourceImageName != 'undefined' && sourceImageName != null) sourceImageName = sourceImageName.toString();
						}
					}
					var flagControlDirty = this.getControlDirty(map[i].control.toUpperCase());

					valToUse = this.getValue(map[i].control, 1,{controlType: controlType, embeddedImage: flagEmbeddedImage});
					flagArray = false;
					fObj = this.columnInfo[map[i].control.toUpperCase()];
					if(typeof fObj != 'undefined') flagArray = fObj.isArray;

					if(flagArray) {
						valToUse = valToUse.join(',');
					}

					if(valToUse == '' && !flagControlDirty) {
						if(typeof existingData == 'object') {
							if(existingData[map[i].field] == null) valToUse = null;
						}
					}

					//is there a transformation expression
					if(lObj) {
						fieldProps = this._getListFieldProps(lObj,map[i].field);
						jsBeforeListUpdate = '';
						if(typeof fieldProps.onListUpdate != 'undefined') jsBeforeListUpdate = fieldProps.onListUpdate;
						if(jsBeforeListUpdate != '') {
							lObj._value = valToUse;
							valToUse = Function(jsBeforeListUpdate).call(lObj,valToUse);
							}
						}

					if(this.getPointer(map[i].control)) {
						data[map[i].field] = valToUse;
						if(sourceImageName != '') {
							data[map[i].field + '__A5SOURCEIMAGENAME'] = sourceImageName;
						}
					}
				}
			}
		} else {
			//low level
			var rowNum = primaryKeyOrRowNumber;
			var existingData = {};
			var data = {};
			data = dataSparse;
			if(!flagNewRow) {

				existingData = lObj.getData(primaryKeyOrRowNumber);
				if(typeof existingData == 'undefined') return false;
				var sel = lObj.selection[0];
				var value = '';
				if(typeof sel != 'undefined') value = lObj._values[sel];

				var flagSetNewRowFlagTo = false;
				if(typeof existingData._isNewRow != 'undefined') flagSetNewRowFlagTo = existingData._isNewRow;

			} else {
				//new row -- set blank value in all columns then load dataSpare
			}


		}

		//strip off the base64 prefix if the List has defined one for a field
		var n = '';
		for(var i = 0; i < lObj._listFields.length; i++) {
			if(typeof lObj._listFields[i].base64Prefix !== 'undefined') {
				n = lObj._listFields[i].name;
				var _old = data[n];
				data[n] = data[n].split('base64,')[1];
				if(typeof data[n] == 'undefined' || data[n] == '') data[n] = _old;
			}
		}

		var _mediaTypes = lObj._mediaTypes;
		var mt = '';
		if(typeof _mediaTypes == 'undefined') _mediaTypes = {};


		if(flagNewRow == true) {
			//capture dirty state of images

			for(var prop in data) {
				controlType = this._getControlType(lObj._getUXDetailViewControlName(prop)).toLowerCase();
				mt = _mediaTypes[prop];
				if(typeof mt != 'undefined') {
					if(mt.toLowerCase() == 'video') {
						controlType = 'video';
					}
					if(mt.toLowerCase() == 'audio') {
						controlType = 'audio';
					}
				}
				if(controlType == 'signaturecapture' || controlType == 'image' || controlType == 'video' || controlType == 'audio') {
					controlName = lObj._getUXDetailViewControlName(prop);
					if(this.getValue(controlName) != '') {
						if(typeof data._dirtyImages == 	'undefined') data._dirtyImages = {};
						data._dirtyImages[prop] = true;

						var exifName = this.dialogId + '.V.R1.' + prop.toUpperCase() + '_HIDDENA5FN';
						var exifData = $ga(exifName,'a5EXIF');
						if(exifData != '') {
							if(typeof data._exifData == 'undefined') data._exifData = {};
							data._exifData[prop] = exifData.toString();
						}
					}
				}
			}
		}

		if(flagNewRow == false) {
			//capture dirty state of images
			for(var prop in existingData) {
				controlType = this._getControlType(lObj._getUXDetailViewControlName(prop)).toLowerCase();

				mt = _mediaTypes[prop];
				if(typeof mt != 'undefined') {
					if(mt.toLowerCase() == 'video') {
						controlType = 'video';
					}
					if(mt.toLowerCase() == 'audio') {
						controlType = 'audio';
					}
				}

				if(controlType == 'signaturecapture' || controlType == 'image' || controlType == 'video' || controlType == 'audio') {
					controlName = lObj._getUXDetailViewControlName(prop);
					if(this.getControlDirty( controlName)) {
						if(typeof existingData._dirtyImages != 'undefined') {
							if(existingData._dirtyImages == false) {
								delete existingData._dirtyImages;
								delete existingData._exifData;
							}

						}
						if(typeof existingData._dirtyImages == 'undefined') existingData._dirtyImages = {};
						existingData._dirtyImages[prop] = true;

						var exifName = this.dialogId + '.V.R1.' + prop.toUpperCase() + '_HIDDENA5FN';
						var exifData = $ga(exifName,'a5EXIF');
						if(exifData != '') {
							if(typeof existingData._exifData == 'undefined') existingData._exifData = {};
							existingData._exifData[prop] = exifData.toString();
						}
					}
				}
			}


			var value = lObj._values[sel];

			if(typeof existingData != 'undefined' && (typeof existingData._oldData == 'undefined' || existingData._oldData == false) ) {
			//if(!existingData._isDirty) {
				data._oldData = {};
				//$u.o.assign(data._oldData,existingData);
				//don't copy nested data


				var controlType = '';
				var controlName = '';
				var flagCaptureOldData = true;
				var flagSkip = false;
				//data properties that do not belong in _oldData
				var s = ['__primaryKey','__a5crc','*key','*renderIndex','*value','_isNewRow','_isDirty','__locationLatitude','__locationLongitude','_hasServerSideError','_serverSideErrors','_flagServerSideErrorInChild','_flagWriteConflictErrorInChild'];
				var flagKeepOldData = false;
				for(var prop in existingData) {

					flagCaptureOldData = true;
					flagSkip = false;
					controlType = this._getControlType(lObj._getUXDetailViewControlName(prop)).toLowerCase();
					if(controlType == 'signaturecapture' || controlType == 'image') {
						flagCaptureOldData = false;
					}
					if(s.indexOf(prop) > -1) flagSkip = true;
					if(!flagSkip) {
						if(flagCaptureOldData) {
							if(typeof existingData[prop] != 'object') {
								data._oldData[prop] = existingData[prop];
								if(data[prop] != existingData[prop]) flagKeepOldData = true;
							} else {
								if(existingData[prop] == null) {
									data._oldData[prop] = null;
								} else if(existingData[prop].constructor == Date) { //capture date objects
									data._oldData[prop] = existingData[prop];
								}
								if(data[prop] != existingData[prop]) flagKeepOldData = true;
							}
						} else {
							data._oldData[prop] = '';
						}
					}
				}


				var dod = data._oldData;
				delete dod._writeConflictErrors;
				delete dod._hasWriteConflictErrors;
				delete dod._flagWriteConflictErrorInChild;
				delete dod._hasGlobalErrors;
				delete dod._flagGlobalErrorInChild;
				delete dod._globalErrors;
				delete dod._hasServerSideError;
				delete dod._flagServerSideErrorInChild;
				delete dod._flagViewed;
				delete dod.__displayStyle;
				if(!flagKeepOldData) {
					if(flagLowLevel) {
						//probably don't need to restrict to low level, but be conservative
						//alert('delete _oldData');
						delete data._oldData;
					}
				}
			} else {
				//data._previousData = {}
				//$u.o.assign(data._previousData,existingData)
				//delete data._previousData._previousData;
				//delete data._previousData._oldData;
				//delete data._previousData._isDirty;
				//delete data._previousData._isNewRow;
			}
			data._isDirty = true;
			//alert('inside update list from detail view: ' + JSON.stringify(data,'','\t'));
			data._isNewRow = flagSetNewRowFlagTo;
			if(data._isNewRow) {
				delete data._oldData; //don't need this for a new record
			}
		} //isNewRow == false;

		var result = this._list_executeEvent(listId,'detailView.canUpdateList',{data: data});
		if(result == false) return false;


		var flagCaptureLocation = false;
		if(typeof lObj._captureLocation != 'undefined') flagCaptureLocation = lObj._captureLocation;
		if(flagCaptureLocation) {
			if(typeof this._location != 'undefined') {
				data.__locationLatitude = this._location.lat;
				data.__locationLongitude = this._location.lng;
			} else {
				data.__locationLatitude = 'undefined';
				data.__locationLongitude = 'undefined';
			}
		}


		//fix null embedded images so they don't display the broken image link
		var imgname = '';
		var imgdata = '';
		var nullImage = this.nullImage;
		if(typeof _embeddedImages != 'undefined') {
			for(var i = 0; i < _embeddedImages.length; i++) {
				imgname = _embeddedImages[i];
				imgdata = data[imgname];
				if(imgdata == undefined || imgdata == '') data[imgname] = nullImage;
			}
		}


		var _rowGUID = A5.UUID();
		data['*rowGUID'] = _rowGUID;

		if(flagLowLevel) {
			//formView will update the top list in an hierarchical array and if you edited a grandchild, the grandhild will be set dirty
			//by the formViewUpdate() method, and the top-most parent will have been set dirty by this method, but intermediate lists will not yet have been
			//set dirty
			this.__set_isDirtyFlagOnAllArrayLevels(data);
		}


		if(flagNewRow == false) {
			if(typeof existingData != 'undefined') {
				if(typeof existingData._isNewRow == 'undefined') existingData._isNewRow = false;
			}

			lObj.updateRow(rowNum,data);
			//need to fix up rowNum in case there was client-side sorting in place
			if(typeof existingData != 'undefined') {
				rowNum = lObj._dataMap.indexOf(existingData['*key']);
			} else {
				rowNum = 0; //not sure about this
			}
			if(!flagLowLevel) {
				this._setDVClean(lObj);
				lObj.setValue(rowNum,false); //false prevents ajaxcallback to refresh row
			} else {
				if(targetRowIsSelected || flagSetFocusToTargetRow) {
					this._setDVClean(lObj);
					lObj.setValue(rowNum,false); //false prevents ajaxcallback to refresh row
					lObj.populateUXControls();
				}
			}

		} else {

			//new row
			var flagInsertRow = false;
			if(ops.programmatic == true) {
				if(ops.insertRow == true) {
					flagInsertRow = true;
					var pos = ops.insertRowPosition;
				}
			}

			//new row
			//if the list has a display column that is not in the detail view, set field to ''
			for(var i = 0; i < _lFields.length; i++) {
				if(typeof data[_lFields[i].name] == 'undefined') data[_lFields[i].name] = '';
			}
			data._isDirty = true;
			data._isNewRow = true;

			if(flagInsertRow) {
				lObj.insertRows(pos,data);
				rowNum = lObj.indexFromValue(pos);
				if(flagSetFocusToTargetRow) {
					if(typeof pos == 'string') {
						rowNum = rowNum - 1;
					}
					lObj.setValue(rowNum,false);
					lObj._selectedRow = rowNum;
				}
				//rowNum = pos;


			} else {
				lObj.appendRows(data);
				//need to fix up rowNum in case there was client-side sorting in place
				rowNum = lObj._dataMap.indexOf(lObj._data.length - 1);
				lObj._selectedRow = rowNum;

			}


			if(!flagLowLevel) {
				this._setDVClean(lObj);
				lObj.setValue(rowNum,false); //false prevents ajaxcallback to refresh row
			} else {
				if(flagSetFocusToTargetRow) {
					lObj._selectedRow = rowNum;
					this._setDVClean(lObj);
					lObj.setValue(rowNum,false); //false prevents ajaxcallback to refresh row
					lObj.populateUXControls();
				}
			}
		}
		//should the update be pushed back to the server?
		//moved into <listObj>.updateListFromUXControls() method
		/*
		if(ops.synchronize) {
			var flagOnLine = this._getOnlineStatus();
			if (flagOnLine) this.saveListEdits(listId);
		}
		*/


		return true;
	},




	__set_isDirtyFlagOnAllArrayLevels: function(_d) {
		//make sure that _isDirty is set on all levels of the array. if a child array has _isDirty = true, then its parent is also must have _isDirty = true
		var _allR = []
		var r = A5.u.object.each(_d,function(name,value,path,result) {
			if(name == '_isDirty' || name == '_isNewRow'){
				if(value) {
					path = path.splice(0,path.length -3);  //move up to parent List
					result.push(JSON.stringify(path));
					while(path.length > 0) {
						path = path.splice(0,path.length -2)
						result.push(JSON.stringify(path));
					}
				}
			}
		});
		var _d2 = '';
		for(var i = 0; i < r.length; i++) {
	 		 _d2 = _d
	 		var path = JSON.parse(r[i])
	 		for(var j = 0; j < path.length; j++) {
	 			_d2 = _d2[path[j]];
	 		}
	 		_d2._isDirty = true;
		}
	},

	_setDVClean: function(lObj) {
		//set dv controls to clean
		if(!lObj._hasDetailView) return true;
		var ctrls = lObj._getControlsInDv();
		for(var i = 0; i < ctrls.length; i++) {
			this.setControlDirty(ctrls[i],false,undefined,undefined,true) //tell .setControlDirty() working with a DV control
		}
	},

	_harvestListsDV: function() {
		var obj = {};
		var listObj = {};
		for(var i = 0; i < this._listsDV.length; i++) {
			obj.listName = this._listsDV[i];
			listObj = this.getControl(this._listsDV[i]);
			obj._data = listObj.harvestList();
		}

		alert($u.o.toJSON(obj));

	},


	getListData: function(listId) {
		var flag = arguments[1];
		if(typeof flag == 'undefined') flag = true;
		//recursively remove system fields ('*' prefix) from data)
		var lObj = this.getControl(listId);
		if(!lObj) return '';
		var cleanData = function(_data) {
			var _nd = {};
			for(var p in _data) {
				if(p[0] != '*') {
					if(_data[p] != null && _data[p].constructor == Array) {
						_nd[p] = [];
						for(var i = 0; i < _data[p].length; i++) {
							if(_data[p][i].constructor == Object) {
								_nd[p].push(cleanData(_data[p][i]));
							} else {
								_nd[p].push(_data[p][i]);
							}
						}
					} else if(_data[p] != null && _data[p].constructor == Object) {
						_nd[p] = cleanData(_data[p]);
					} else {
						_nd[p] = _data[p];
					}
				}
			}
			return _nd;
		}
		var _d = '';
		if(!flag) _d = lObj._data;
		else _d = lObj._rData;

		for(var i = 0; i < _d.length; i++) {
			_d[i] = cleanData(_d[i])
		}
		return _d;
	},



	_harvestListsOld: function() {
			var c = this._controlInst;
			var cInfo = this._controls;
			var id = '';
			var name = ''
			var ci = '';
			var datai = '';
			var obj = '';
			var instNum = '';
			for(var l in c){
				id = l.split('.')[1];
				name = l.split('.')[1].split('_A5INSTANCE')[0];
				instNum = l.split('.')[1].split('_A5INSTANCE')[1];
				ci = cInfo[name];

				if(ci.type == 'list') {
					obj = this.getControl(id);
					datai = obj._data[obj._dataMap[obj.selection[0]]];
				}
			}
		},


	setControlDisplay: function(controlName,flag,mode,animJSON) {

		var data = {};
		data.rowNumber = 1;
		controlName = controlName.toUpperCase();
		if(controlName.indexOf(':') > 0) {
			controlName = controlName.split(':');
			controlName = controlName[0] + '_A5INSTANCE' + controlName[1];
		}
		var cn = controlName.split('_A5INSTANCE');
		var instNum = cn[1];
		if(typeof instNum == 'undefined') instNum = '';
		cn = cn[0];
		if(typeof mode == 'undefined') mode = 'd';
		if(animJSON == 'undefined') animJSON = {};
		mode = mode[0].toLowerCase();
		var fn = '';
		if(!flag) {
			if(mode == 'd') {
				fn = A5.u.element.hide;

			} else {
				fn = A5.u.element.visibilityHide;
			}
			this._hiddenControls[controlName] = true;
		} else {
			if(mode == 'd') {
				fn = A5.u.element.show;
			} else {
				fn = A5.u.element.visibilityShow;
			}
			delete this._hiddenControls[controlName];
		}
		if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.CONTAINER')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.CONTAINER'),animJSON);
		else {
			if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.CONTROL')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.CONTROL'),animJSON);
			else if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + ''),animJSON);
			if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.BUTTON')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.BUTTON'),animJSON);
			if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.HELPICON')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.HELPICON'),animJSON);
			if($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.BREAK')) fn($(this.dialogId + '.V.R' + data.rowNumber + '.'+controlName + '.BREAK'),animJSON);
		}
		if($(this.dialogId + '.LBL.R' + data.rowNumber + '.'+controlName + '')) fn($(this.dialogId + '.LBL.R' + data.rowNumber + '.'+controlName + ''),animJSON);
		//sr 11/20/2014 - removed because of bug in Demo Mobile App - Create a new customer. Customer ID, which was previously hidden, is shown, but also (incorrectly), immediately validated
		//this.clientSideValidateField(cn,1,instNum);

		//sr 10/11/2015 - spin list was not displaying properly after being shown if based on a data series
		var obj = this.getControl(controlName);
		if(obj) {
			if(typeof obj.refresh == 'function') {
				try{ obj.refresh();} catch(err) {	}
			}
		}
	},






	buttonClick: function(id) {
		id = id.toUpperCase();
		var instNum = typeof arguments[1] != 'undefined' ? arguments[1] : -1;
		var eleId = this.dialogId + '.V.R1.' + id;
		if(instNum > 0) eleId = eleId + '_A5INSTANCE' + instNum;
		var ele = $(eleId);
		if(ele) {
			$e.execute(ele,'abstractclick');
			ele.click();
		}
	},

	_orientationChangeHandler: function() {
		var that = this;
		//iOS7 first orientation change does not report correct value without the timeout
		if(A5.flags.isAndroid || true) {
			setTimeout(function() {
				var s = that.getSize();
				that._executeEvent('onOrientationChange',{orientation: s.orientation});
				if(typeof that._functions.listControlOrientationChange == 'function') that._functions.listControlOrientationChange();
				that._fireWatches(1);
				delete that;
			},300);
		} else {
			var s = that.getSize();
			that._executeEvent('onOrientationChange',{orientation: s.orientation});
			if(typeof that._functions.listControlOrientationChange == 'function') that._functions.listControlOrientationChange();
			that._fireWatches(1);
		}
	},


	getOrientation: function() {
		var ele = $('MOBILESIMULATORDEVICEPICKER');
		if(ele) {
			var ele2 = $(this.dialogId + '.R1.BODY');
			if(ele2.clientWidth >= ele2.clientHeight) return 'landscape';
			else return 'portrait';
		}
		var s = this.getSize();
		return s.orientation;
	},

	getSize: function() {
		var s = {};
		var ele = $('MOBILESIMULATORDEVICEPICKER');
		if(ele) {
			var ele2 = $(this.dialogId + '.R1.BODY');
			s.width = ele2.clientWidth;
			s.height = ele2.clientHeight;
			if(ele2.clientWidth >= ele2.clientHeight) {
				s.orientation =  'landscape';
				s.isLandscape = true;
			} else {
				s.orientation =  'portrait';
				s.isLandscape = false;
			}
			return s;
		}

		s.width = window.innerWidth;
		s.height = window.innerHeight;
		var sw = s.width;
		var sh = s.height;
		/*
		sr removed 3/24/2015
		if(A5.flags.iOSVersion == -1 ) {
			sw = screen.width;
			sh = screen.height;
		}
		*/
		if(sw >= sh ) {
			s.orientation = 'landscape';
			s.isLandscape = true;
		} else {
			s.orientation = 'portrait';
			s.isLandscape = false;
		}

		////--------------------------------
		var s1 = this._screen;
		var q = this._quirks;
		var flagAndroidOld = false;
		if(typeof q != 'undefined' && typeof q.keyboardAffectsScreenSizeCalc  != 'undefined') {
			if(q.keyboardAffectsScreenSizeCalc == true) flagAndroidOld = true;
		}
		if(!flagAndroidOld && typeof s1 != 'undefined') {
			if(sw != s1.w || sh != s1.h) {
				//orientation may have changed
				if(s1.w == sw) {
					//keyboard came up or down
					if(s1.h > sh) {
						this._executeEvent('onKeyboard',{state: 'up'});
						if(sw > s1.h) {
							s.orientation = 'landscape';
							s.isLandscape = true;
						} else {
							s.orientation = 'portrait';
							s.isLandscape = false;
						}
					} else {
						this._executeEvent('onKeyboard',{state: 'down'});
					}
					s1.h = sh;
					s1.o = s.orientation;
				} else {
					//orientation DID change
					s1.w = sw;
					s1.h = sh;
					s1.o = s.orientation;
				}
			}
		}
		////--------------
		return s;
	},


	getListServerSideSummaryValue: function(listId,field,type) {
		field = field.toUpperCase();
		type = type.toLowerCase();
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return '';
		if(typeof listObj._state == 'undefined') return '';
		if(typeof listObj._state.summary == 'undefined') return '';
		if(typeof listObj._state.summary[field] == 'undefined') return '';
		if(typeof listObj._state.summary[field][type] == 'undefined') return '';
		return listObj._state.summary[field][type];

	},

	getListClientSideSummaryValue: function(listId,field,type) {
		field = field.toUpperCase();
		type = type.toLowerCase();
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return '';
		if(typeof listObj.csSummary == 'undefined') return '';
		if(typeof listObj.csSummary[field] == 'undefined') return '';
		if(typeof listObj.csSummary[field][type] == 'undefined') return '';
		return listObj.csSummary[field][type];

	},

	fireLayoutRule: function(ruleName) {
		//debugger;
		var ra = this._layoutRules;
		if(typeof ra == 'undefined') return '';
		var screen = this.getSize();
		var device = A5.flags;
		if(typeof ra[ruleName] == 'undefined') return false;
		actionFn = ra[ruleName].action;
		actionFn.call(this,ruleName,screen,device);
		this.refreshClientSideComputations();

	},

	_findActiveLayoutRule: function() {
		var classInst = this;
		var args = [];
		for(var i = 0; i < arguments.length; i++) {
			args.push(arguments[i]);
		}



		setTimeout(function() {
			classInst._findActiveLayoutRuleLow.apply(classInst,args);
			delete classInst;
			delete args;
		},100);
	},


	_findActiveLayoutRuleLow: function() {
		var flagApplyRule = typeof arguments[0] != 'undefined' ? arguments[0] : true;
		if(typeof arguments[1] == 'undefined') {
			if(this._responsiveRulesMode == 'firsttrue') flagStopOnFirstTrue = true;
			else flagStopOnFirstTrue = false;
		} else {
			flagStopOnFirstTrue = arguments[1];
		}
		var ra = this._layoutRules;
		if(typeof ra == 'undefined') return '';
		var screen = this.getSize();
		var device = A5.flags;
		var ruleFn = '';
		var ruleResult = '';
		var actionFn = '';
		for(var rn in ra) {
			ruleFn = ra[rn].rule;
			ruleResult = ruleFn.call(this,device,screen);
			if(ruleResult) {
				var existingRuleName = this._activeLayoutRule;
				this._activeLayoutRule = rn;
				if(flagApplyRule && (rn != existingRuleName) ) {
					actionFn = ra[rn].action;
					actionFn.call(this,rn,screen,device);
					this.refreshClientSideComputations();
				}
				if(flagStopOnFirstTrue) {
					return rn;
				}
			}
		}
		return this._activeLayoutRule;
	},


	refreshClientSideComputations: function() {
		var sync = typeof arguments[0] != 'undefined' ? arguments[0] : false;
		if(sync) { //synchronous
			this._fireWatches_low(1);
		} else {
			this._fireWatches(1);
		}

	},

	_fireWatches: function(rowNum) {
		clearTimeout(this._fwTO);
		//this._fwTO = setTimeout(Function(this.dialogId + '_DlgObj._fireWatches_low(1)'),300);
		this._fwTO = setTimeout(Function('if(typeof '+this.dialogId+'_DlgObj != \'undefined\') '+this.dialogId + '_DlgObj._fireWatches_low(1)'),300);
	},

	_fireWatches_low: function(rowNum) {
		if(this._fireWatchesFlag == false) return false;
		//alert('fire watches' + this.dialogId);
		for(var columnName in this.columnInfo) {
			if(this.columnInfo[columnName].calculateSummary) {
				this._summarize(columnName,rowNum);
			}
		}


		for(var dialogWatch in this.dialogWatches) {
			if(typeof this.dialogWatches[dialogWatch].repeatingSection != 'undefined') {
				for(var i = 0; i < this.repeatingSections[this.dialogWatches[dialogWatch].repeatingSection].rows; i++) {
					A5.Watch.fire(this.dialogId+'.R' + rowNum + '.'+dialogWatch + '.I' +(i+1));
				}

			} else {
				A5.Watch.fire(this.dialogId+'.R' + rowNum + '.'+dialogWatch);
			}

			if(typeof this.dialogWatches[dialogWatch].updateColumn != 'undefined') {
				if(this.dialogWatches[dialogWatch].updateColumn != '') {
					var ci = this.columnInfo[this.dialogWatches[dialogWatch].updateColumn]
					if(typeof ci != 'undefined') {
						if(ci.calculateSummary) {
						this._summarize(this.dialogWatches[dialogWatch].updateColumn,rowNum);
						}
					}
				}
			}

		}
	},

	_repeatingSectionRowErrorShow: function(e,classInst) {
		var id = this.id;
		id = id.split('.');
		var rowNum = $u.s.toNum(id[2]);
		var instNum = $u.s.toNum(id[4]);
		var sectionName = id[3];
		var rsTemp = classInst.repeatingSections[sectionName];
		clearTimeout(rsTemp._r[rowNum-1].reto);
		if(rsTemp._r[rowNum-1].i[instNum-1].error) {
			//alert(rsTemp._r[rowNum-1].i[instNum-1].errorText);
			id.pop();
			id.pop();
			var errorDivId = id.join('.') +'.ERRORDIV';
			var ele = $(errorDivId);
			if(ele == false) {
				ele = document.createElement('div');
				ele.id = errorDivId;
				ele.className = classInst.fieldErrors.className;
				ele.style.position = 'absolute';
				$e.add(ele,'mouseover',classInst._repeatingSectionRowErrorHideCancel,classInst);
				$e.add(ele,'mouseout',classInst._repeatingSectionRowErrorHide,classInst);
				document.body.appendChild(ele);
			}

			if(rsTemp._r[rowNum-1].i[instNum-1].errorText.constructor == Array) {
				var html = [];
				html.push(rsTemp._r[rowNum-1].i[instNum-1].errorText[0]);
				html.push('&nbsp;<a onclick="if(this.nextSibling.style.display==\'none\'){this.nextSibling.style.display=\'block\'; this.innerHTML = \'Less...\'; } else {this.nextSibling.style.display=\'none\'; this.innerHTML = \'More...\'; }; return false;" style="text-decoration: underline; cursor: pointer;">More...</a>');
				html.push('<div style="display:none;">');
				html.push(rsTemp._r[rowNum-1].i[instNum-1].errorText[1]);
				html.push('</div>');
				ele.innerHTML = html.join('');
			} else {
				ele.innerHTML = rsTemp._r[rowNum-1].i[instNum-1].errorText;
			}
			ele.style.display = '';
			$po(ele,this,'dropdown');

		}

	},

	_repeatingSectionRowErrorHideCancel: function(e,classInst) {
		var id = this.id;
		id = id.split('.');
		var rowNum = $u.s.toNum(id[2]);
		var sectionName = id[3];
		var rsTemp = classInst.repeatingSections[sectionName];
		clearTimeout(rsTemp._r[rowNum-1].reto);
	},

	_repeatingSectionRowErrorHide: function(e,classInst) {
		var id = this.id;
		id = id.split('.');
		var rowNum = $u.s.toNum(id[2]);
		var sectionName = id[3];
		var rsTemp = classInst.repeatingSections[sectionName];
		rsTemp._r[rowNum-1].reto = setTimeout(function() {classInst._repeatingSectionRowErrorHideComplete(sectionName); } , 500);
	},

	_repeatingSectionRowErrorHideComplete: function(sectionName) {
		var errorDivId = this.dialogId + '.V.R1.' + sectionName + '.ERRORDIV';
		var ele = $(errorDivId);
		if(ele) {
			ele.style.display = 'none';
		}
	},

	_activateControlPanel: function(name) {
		var flagSilent = arguments[1];
		if(typeof flagSilent == 'undefined') flagSilent = false;

		name = name.toUpperCase();
		if(typeof this._panelCardControls == 'undefined') return false;
		var panel = this._panelCardControls[name];
		if(typeof panel == 'undefined') return false;
		this.panelSetActive(panel,false,flagSilent);
	},

	activateControlContainer: function(name) {
		var flagSilent = arguments[1];
		if(typeof flagSilent == 'undefined') flagSilent = false;
		name = name.toUpperCase();
		this._activateControlPanel(name,flagSilent);

		if(!this._controlContainers[name]) return false;
		var obj = this._controlContainers[name];

		var containerName = '';
		for(var i = 0; i < obj.length; i++) {
			containerName = this.dialogId + '.V.R1.' + obj[i].tab + 'Obj';
			if(typeof window[containerName]._curBandIndx != 'undefined') {
				//in an accordion
				if(window[containerName]._curBandIndx != -1) {
					if(window[containerName]._curBandIndx +1 == obj[i].pane) {
						//you are already on the pane. so bail. otherwise it will toggle the pane
						return false;
					}
				}
			}
			window[containerName].select(''+obj[i].pane);
		}
	},

	closeContainerWindow: function(ele) {
		//if dialog is opened in a window, closes the container window

		if(typeof ele == 'object') {
	    	var cw = A5.windows.getFromElement(ele);
		    if(cw) cw.hide();
		 } else {
		 	this.hideContainerWindow(ele);
		 }
	},

	showContainerWindow: function(ele,containerName) {

		//don't confuse with closeContainerWindow() which has nothing to do with 'containers' that have a sub-type of 'window'
		this._functions['_showContainerWindow_' + containerName.toUpperCase()](ele);
	},

	hideContainerWindow: function(containerName) {
		if(!containerName) return false;
		if(typeof this._openWindows == 'undefined') return false;
		var wObj = this._openWindows[this.dialogId + '_CONTAINERWINDOW_' + containerName.toUpperCase()];
		if(!wObj) wObj = this._openWindows[containerName.toUpperCase()];
		if(wObj) wObj.hide();
	},


	closeWindow: function(windowName) {
		var win = this.getWindow(windowName);
		if(win) win.hide();
	},


	_resetDialogToBlank: function() {
		var data = {};
		$u.o.assign(data,this.defaultValues);
		delete data.A5REPEATINGSECTIONDATA;
		this.populate(data);
		for(var rs in this.repeatingSections) {
			for(var i = 0; i < this.repeatingSections[rs].rows; i++) {
				this._setRepeatingRowValuesToNull(rs,i+1);
			}
		}
	},

	closeCurrentTabbedUIPane: function() {
		if(typeof tbiObj != 'undefined') {
			var idx = tbiObj._tbObj._curTabIndx;
			tbiObj._tbObj.remove(idx);
		}
	},


	accordionControl: function (id,action) {
		var tObj = this.getControl(id);
		if(!tObj) return false;
		if(action.toLowerCase() == 'close') {
			tObj.select([].concat(tObj.value),true);
			return true;
		}
		if(action.toLowerCase() == 'open') {
			if (typeof arguments[2] == 'undefined') {
				var arr = [];
				for(var i = 0; i < tObj.bands.length; i++) arr.push(i);
				tObj.select(arr);
			} else {
				tObj.select(arguments[2]);
			}
		}
	},

	synchronizeEmbeddedUX: function (alias) {

		alias = alias.toUpperCase();
		if(typeof this._embeddedUXComponents == 'undefined') return false;
		var obj = this._embeddedUXComponents[alias];
		if(typeof obj == 'undefined') return false;
		obj = obj.arguments;
		var arr = [];
		for(var i = 0; i < obj.length; i++) {
			//alert(obj[i].name + ' - ' + obj[i].type + ' - ' + obj[i].source + ' - value: ' + this.getValue(obj[i].source) );
			if(typeof obj[i].sourceType == 'undefined') {
				arr.push( obj[i].name + '|' + obj[i].type + '|' + this.getValue(obj[i].source) );
			} else {
				if(obj[i].sourceType == 'uxControl') {
					arr.push( obj[i].name + '|' + obj[i].type + '|' + this.getValue(obj[i].source) );
				} else if(obj[i].sourceType == 'constant') {
					if(obj[i].source.toLowerCase().indexOf('(javascript') > -1) {
						var source = obj[i].source.split(':')[1];
						source = source.split(')')[0];
						if(typeof window[source] == 'function') {
							sourceValue = window[source]();
							obj[i].source = sourceValue;
						}
					}
					arr.push( obj[i].name + '|' + obj[i].type + '|' + obj[i].source );
				} else if(obj[i].sourceType == 'sessionVariable') {
					arr.push( obj[i].name + '|' + obj[i].type + '|' + obj[i].source );
				}
			}
		}
		var data = arr.join('||');
		var go = {};
		go.specialDialogMode = 'refreshUX';
		go.arguments = data;
		var childObjAlias = this.dialogId + '_' + alias + '_DlgObj';




		if(typeof window[childObjAlias] != 'undefined') window[childObjAlias].synchronizeDialog(go);
	},

	applyServerSideRules: function() {

		var s = this._objSV;
		if(typeof s != 'undefined') {
			for(var n in s) {
				this.setControlDisplay(n,true);
				if(!s[n]) this.setControlDisplay(n,false);
			}
		}

		var o = this._objR;
		if(typeof o == 'undefined') return false;
		var flag = '';
		for(var n in o) {
			flag = this.__inR(o[n]);
			this.setControlDisplay(n,true);
			if(!flag) this.setControlDisplay(n,false);
		}
	},

	__inR: function(r) {
		var _uR = this.__r;
		if(typeof _uR == 'undefined') return true;
		var _aR = r.split(',');
		var flag = false;
		for(var i = 0; i < _aR.length; i++) {
			if(_uR.indexOf(_aR[i]) > -1) {
				flag = true;
				break;
			}
		}
		return flag;
	},


	synchronizeDialog: function(obj) {
		var specialDialogMode = '';
		if(typeof obj.specialDialogMode != 'undefined') specialDialogMode = obj.specialDialogMode;

		var flagHideWaitMessage = obj.__hideWaitMessage;
		if(typeof flagHideWaitMessage == 'undefined') flagHideWaitMessage = false;

		if(typeof obj.specialDialogMode != 'undefined') {
			if(obj.specialDialogMode == 'refreshUX') {
				var jdata = $u.o.toJSON(obj);
				jdata = jdata.replace('<','__lessthan__');
				jdata = jdata.replace('>','__greaterthan__');
				var data = new Array();
				data.push(A5.ajax.buildURLParam('_jdata',jdata));
				if(flagHideWaitMessage) data.push(A5.ajax.buildURLParam('_hideWaitMessage','true'));
				data = data.join('&');

				var xbasicFunction = 'system:synchronize_RefreshUX';
				this.ajaxCallback('G',1,xbasicFunction,'',data);
				return true;
			}
		}

		if(typeof this._hasOnSynchronizeEvent != 'undefined') {
			if(this._hasOnSynchronizeEvent) {
				var jdata = $u.o.toJSON(obj);
				jdata = jdata.replace('<','__lessthan__');
				jdata = jdata.replace('>','__greaterthan__');
				var data = new Array();
				data.push(A5.ajax.buildURLParam('_jdata',jdata));
				if(flagHideWaitMessage) data.push(A5.ajax.buildURLParam('_hideWaitMessage','true'));
				data = data.join('&');
				if(specialDialogMode != 'editGridRow' && specialDialogMode != 'editListRow' && specialDialogMode != 'newListRow' && specialDialogMode != 'newGridRow') {
					//don't do the callback here. just tell .populateControlsFromTable() to fire the event. this way only one callback
					var xbasicFunction = 'system:onSynchronizeDialogServerEvent';
					this.ajaxCallback('G',1,xbasicFunction,'',data);
					}
				}
		}


		if(typeof obj.specialDialogMode == 'undefined') {
			this._resetDialogToBlank();

			this._executeEvent('onSynchronizeDialog',{synchronizeType: obj.specialDialogMode, obj: obj});
			return false;
		}
		if(obj.specialDialogMode == 'editGridRow') {
			//reset dialog to default
			this._resetDialogToBlank();
			var flagShowDebug = false;
			var parentRowNum = -1;
			if(typeof obj.__parentRowNum != 'undefined') parentRowNum = obj.__parentRowNum;
			this.stateInfo._parentGridRow = obj.__parentRowNum;
			if(typeof jdata == 'undefined') jdata = '';
			this.populateControlsFromTable(obj.recordPrimaryKey,flagShowDebug,'','','',{fireOnSynchronize: true, _jdata: jdata, _hideWaitMessage: flagHideWaitMessage});


		}


		if(obj.specialDialogMode == 'editListRow') {
			//reset dialog to default
			this._resetDialogToBlank();
			var flagShowDebug = false;
			this.stateInfo._specialMode = 'editListRow';
			this.stateInfo._listControlToRefresh = obj.listControlId;
			this.stateInfo.__closeDialogAfterSubmit = obj.closeDialogAfterSubmit;
			this.stateInfo.__windowName = obj.windowName;

			if(typeof jdata == 'undefined') jdata = '';
			this.populateControlsFromTable(obj.recordPrimaryKey,flagShowDebug,'','','',{fireOnSynchronize: true, _jdata: jdata, _hideWaitMessage: flagHideWaitMessage});

		}

		if(obj.specialDialogMode == 'newListRow') {
			//reset dialog to default
			this._resetDialogToBlank();
			var flagShowDebug = false;
			this.stateInfo._specialMode = 'editListRow';
			this.stateInfo._listControlToRefresh = obj.listControlId;
			this.stateInfo.__closeDialogAfterSubmit = obj.closeDialogAfterSubmit;
			this.stateInfo.__windowName = obj.windowName;
			//this.populateControlsFromTable(obj.recordPrimaryKey,flagShowDebug,'','','',{fireOnSynchronize: true});
			this.newRecord();

		}


		if(obj.specialDialogMode == 'newGridRow') {
			this._resetDialogToBlank();
			this.newRecord();
		}
		if(obj.specialDialogMode == 'populateDialog') {
			if(obj.getPKFrom.toLowerCase() == 'specifynow') {
				this._resetDialogToBlank();
				this.populateControlsFromTable(obj.pkValue);

			} else {
				this._resetDialogToBlank();
				this.populateControlsFromTable('__sessionvariable__:' +obj.pkValue);
			}
		}

		//since the window show happens after the synchronizeDialog() we have to use a setTimeout() to fix RS headings
		var classInst = this;
		setTimeout(function() {classInst._fixAllRepeatingSectionHeaders(); delete classInst; },100);

		this._executeEvent('onSynchronizeDialog',{synchronizeType: obj.specialDialogMode, obj: obj});

	},

	_fixAllRepeatingSectionHeaders: function() {
		for(var rs in this.repeatingSections) {
			this._prepareRepeatingSection(rs,1);
		}
	},


	deleteRecord: function() {

		var flagNewRecord = false;
		if(typeof this.stateInfo.keys == 'undefined') flagNewRecord = true;
		if(flagNewRecord) {
			return false;
		}

		var result = this._executeEvent('canDeleteParentRecord',{});
		if(result == false) {
			return false;
		}



		var options = typeof arguments[0] != 'undefined' ? arguments[0] : {};
		if(typeof options.confirmation != 'undefined') {
			if(options.confirmation == false) {
				this._deleteRecordNoConfirmation(options);
				return true;
			}
		}
		var classInst = this;
		var msg = classInst.deleteRecordDialogMessage;
		var image = classInst.resetFormIcon;

		var flagCSSIcon = this._isCSSIcon(image);
		var imageHTML = this._getImageHTML(image,flagCSSIcon);
		msg = '<div style="padding: 10px;" >' + imageHTML + msg + '<br style="clear: both;" /></div>';

		A5.msgBox.show(classInst.deleteRecordDialogTitle,msg,'yn',function(button) {
			if(button == 'yes'){
				classInst._deleteRecordNoConfirmation(options);
		    } else if(button == 'no'){
		       //do nothing
			}
			delete classInst;
			} );
		return false;
	},



	_deleteRecordNoConfirmation: function() {
		var options = typeof arguments[0] != 'undefined' ? arguments[0] : {};
		if(typeof options.primaryKeySource != 'undefined') {
			if(options.primaryKeySource.toLowerCase() == 'explicit') {
				var data = '__keyToDelete=' + options.explicitPrimaryKey + '&__nextKeyToShow=__newrecord__&__deleteMode=explicitKey' + '&_options=' + $u.o.toJSON(options)
				var xbasicFunction = 'system:deleteRecord';
				this.ajaxCallback('G',1,xbasicFunction,'',data);
				return true;
			}


			if(options.primaryKeySource.toLowerCase() == 'list') {
				var lObj = this.getControl(options.listForPrimaryKey);
				if(typeof lObj == 'undefined') return false;
				var row = lObj.selection[0];
				var data = lObj._rData[row];
				var pk = data.__primaryKey;
				var flagSQL = true;
				if(typeof pk == 'undefined') {
					pk = data.key_table_1;
					if(typeof pk != 'undefined') flagSQL = false;
				}
				if(typeof pk == 'undefined') {
					var msg = '';
					msg = msg + 'Error - List "'+options.primaryKeySource+'" has not been configured to return the primary key. Therefore, Cannot delete record.';
					alert(msg);
					return false;
				}
				var  nextPk = '__newrecord__';
				var nextRow = row;
				if(row < lObj._rData.length -1) {
					nextRow = row + 1;
				} else {
					nextRow = row - 1;
				}
				var  nextData = lObj._rData[nextRow];
				if(typeof nextData != 'undefined')  {
					if(flagSQL) nextPk = nextData.__primaryKey;
					else nextPk = nextData.key_table_1;
				}

				if(typeof options.nextRecordToShow != 'undefined') {
					if (options.nextRecordToShow == 'newrecord') nextPk = '__newrecord__';
				}

				var data = '__keyToDelete=' + pk + '&__nextKeyToShow=' + nextPk + '&__deleteMode=explicitKey' + '&_options=' + $u.o.toJSON(options)
				var xbasicFunction = 'system:deleteRecord';
				this.ajaxCallback('G',1,xbasicFunction,'',data);
				return true;
			}
		}


		var pkl = this._primaryKeyList;
		if(!pkl) {
			var msg = '';
			msg = msg + 'Error - You have not loaded primary keys. Therefore, you cannot delete this record.' + '\n';
			msg = msg + '\n';
			msg = msg + '\n';
			msg = msg + 'To load primary keys for the component, the component must be \'Data Bound\' (see the \'Data Binding\') pane in the builder.\n\n\n';
			msg = msg + 'Once the component is \'Data Bound\' use the \'Load Primary keys for Parent Table\' action in the \'OnDialogInitialize\' event, or execute an Ajax callback to load primary keys (see actions in \'Action Javascript\') .' + '\n';
			alert(msg);
			return false;
			}
		if(pkl.length == 0) return false;
		var currentRecord = 0;
		if(typeof this._currentRecordNumber != 'undefined') {
			currentRecord = this._currentRecordNumber;
		}

		var flagAdjustCurrentRecord = false;
		if(currentRecord == pkl.length) flagAdjustCurrentRecord = true;

		var nextRecordToShow = 0;
		if(currentRecord < pkl.length) {
			nextRecordToShow = currentRecord + 1;
		} else {
			nextRecordToShow = currentRecord - 1;
		}


		var pkToShow = '';
		var flagShowNewRecord = true;
		if(nextRecordToShow >0) {
			pkToShow = pkl[nextRecordToShow-1].k;
			flagShowNewRecord = false;
		}

		if(typeof options.nextRecordToShow != 'undefined') {
			if(options.nextRecordToShow.toLowerCase() == 'newrecord') flagShowNewRecord = true;
		}


		var data = '_flagAdjustCurrentRecord=' +flagAdjustCurrentRecord +  '&_flagShowNewRecord=' + flagShowNewRecord +  '&_currentRecordNumber=' + currentRecord + '&_primaryKeyToShow=' + pkToShow + '&_options=' + $u.o.toJSON(options);
		var xbasicFunction = 'system:deleteRecord';
		this.ajaxCallback('G',1,xbasicFunction,'',data);

	},

	navigateRecordByKey: function(direction) {
		var section = typeof arguments[1] != 'undefined' ? arguments[1] : '$component';
		var qs = this._queryState[section];
		var qso = {};
		if(typeof qs == 'undefined') {
			qso.key = '___firstkey___';
		} else {
			qso = qs;
		}
		qso.section = section;
		qso.direction = direction;
		data = A5.ajax.buildURLParam('_navbykey',$u.o.toJSON(qso));
		var xbasicFunction = 'system:navigatebykey';
		this.ajaxCallback('G',1,xbasicFunction,'',data);
	},


	navigateRecord: function(direction) {
		var flagSetSliderPosition = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		var flag = '';
		flag = this._executeEvent('canRecordNavigate',{isDirty: this._isDirty, isDataDirty:  this._isDataDirty, target: direction});
		if (flag == false) {
			this._setSliderPosition(this._currentRecordNumber,false);
			if(typeof this._primaryKeyListNavigator != 'undefined') this._primaryKeyListNavigator.setValue(this._currentRecordNumber -1,false); //don't navigate to target record
			return false;
		}
		/*
		//it is up to the developer to decide how to handle this in the canRecordNavigate event
		if(this._isDataDirty) {
			alert('Please save changes before navigating.');
			this._setSliderPosition(this._currentRecordNumber,false);
			if(typeof this._primaryKeyListNavigator != 'undefined') this._primaryKeyListNavigator.setValue(this._currentRecordNumber -1,false); //don't navigate to target record
			return false;
		}
		*/


		var pkl = this._primaryKeyList;
		if(!pkl) {

			var msg = '';
			msg = msg + 'Error - You have not loaded primary keys. Therefore, you cannot navigate records.' + '\n';
			msg = msg + '\n';
			msg = msg + '\n';
			msg = msg + 'To load primary keys for the component, the component must be \'Data Bound\' (see the \'Data Binding\') pane in the builder.\n\n\n';
			msg = msg + 'Once the component is \'Data Bound\' use the \'Load Primary keys for Parent Table\' action in the \'OnDialogInitialize\' event, or execute an Ajax callback to load primary keys (see actions in \'Action Javascript\') .' + '\n';
			alert(msg);
			return false;
		}
		if(pkl.length == 0) return false;

		if(typeof pkl == 'undefined') return false;
		if(!isNaN(direction)) {
				targetRecord = direction;
		} else {
			direction = direction.toLowerCase();

			var currentRecord = 0;
			if(typeof this._currentRecordNumber != 'undefined') {
				currentRecord = this._currentRecordNumber;
				if(currentRecord == -1) currentRecord = pkl.length + 1;
			}
			var targetRecord = 0;

			if(direction == 'next') targetRecord = currentRecord + 1;
			if(direction == 'previous') targetRecord = currentRecord - 1;
			if(direction == 'first') targetRecord = 1;
			if(direction == 'last') targetRecord = pkl.length;
			if(targetRecord == 0) targetRecord = 1;
			if(targetRecord > pkl.length) targetRecord = pkl.length
		}

		var listsSynch = this._listsToSynchronize;
		if(typeof listsSynch != 'undefined') {
			if(listsSynch.length > 0) {
				for(var i = 0; i < listsSynch.length; i++) {
					var pkval = pkl[targetRecord-1].k;
					var rNum = this._listFindRowNumberForKey(listsSynch[i],pkval);
					if(rNum > -1) {
						var lObj = this.getControl(listsSynch[i]);
						if(lObj) lObj.setValue(rNum);
					}
				}
			}
		}
		this.populateControlsFromTable(pkl[targetRecord-1].k,false);
		this._currentRecordNumber = targetRecord;
		if(flagSetSliderPosition) {
			this._setSliderPosition(targetRecord,false);
		}
		if(typeof this._primaryKeyListNavigator != 'undefined') this._primaryKeyListNavigator.setValue(targetRecord -1,false); //don't navigate to target record

		this._executeEvent('afterRecordNavigate',{target: direction});

	},

	_listFindRowNumberForKey: function(listId,key) {
		//given a primaryKey value finds the row number in the List data
		var lObj = this.getControl(listId);
		if(!lObj) return -1;
		var rd = lObj._rData;
		if(typeof rd == 'undefined') return -1;
		if(typeof rd[0] == 'undefined') return -1;
		var flagDBF = false;
		if(typeof rd[0].__primaryKey == 'undefined') flagDBF = true;
		if(flagDBF) {
			for(var i = 0; i < rd.length; i++) {
				if(rd[i].key_table_1 == key) {
					return i;
				}
			}
		} else {
			for(var i = 0; i < rd.length; i++) {
				if(rd[i].__primaryKey == key) {
					return i;
				}
			}
		}
		return -1;
	},

	_primarKeyListFindRowNumber: function(key) {
		//given a primaryKey value, finds the row number in the primaryKey list
		var pkl = this._primaryKeyList;
		if(!pkl) return -1;
		for(var i = 0; i < pkl.length; i++) {
			if(pkl[i].k == key) return (i+1);
		}
		return -1;
	},

	_listSystemOnClick: function(listId,rowNum) {
		//called when the user clicks on a row in a list control to synchronize the bound data
		var listsSynch = this._listsToSynchronize;
		if(typeof listsSynch == 'undefined') return true;
		var i = $u.a.find(listsSynch,listId);
		if(i < 0) return true;
		var lObj = this.getControl(listId);
		if(!lObj) return true;
		var pk = lObj._rData[lObj._dataMap[rowNum]].__primaryKey;
		if(typeof pk == 'undefined') pk = lObj._rData[lObj._dataMap[rowNum]].key_table_1;
		var targetRow = -1;
		targetRow = this._primarKeyListFindRowNumber(pk);
		if(targetRow > -1) {
			this.navigateRecord(targetRow);
		} else {
			this.populateControlsFromTable(pk);
		}
	},


	setFocus: function(name) {

		var instNum = typeof arguments[1] != 'undefined' ? arguments[1] : 0;
		this.activateControlContainer(name.toUpperCase());
		var ele = $(this.dialogId + '.V.R1.' + name.toUpperCase());
		if(instNum > 0) {
			//_repeatingSectionLogicalToPhysicalRow
			var rsName = this._findRepeatingSection(name);
			var instNum2 = this._repeatingSectionLogicalToPhysicalRow(rsName,instNum);
			ele = $(this.dialogId + '.V.R1.' + name.toUpperCase()+'_A5INSTANCE' + instNum2);
		}
		if(ele) {
			try
			{
				if(typeof ele.focus != 'undefined') ele.focus();
				if(typeof ele.select != 'undefined') setTimeout(function() { ele.select();} ,10);
			}
			catch(err) {}
		}
	},

	getPointer: function(id) {
		var ele =  $(this.dialogId +'.V.R1.' + id.toUpperCase());
		return ele;
	},


	_setControlFocus: function(e,classInst) {
		var oldFocus = '';
		var oldRS = '';
		var oldRSrow = '';
		if(typeof classInst._focusControl != 'undefined') oldFocus = classInst._focusControl;
		if(typeof classInst._focusRepeatingSection != 'undefined') oldRS = classInst._focusRepeatingSection;
		if(typeof classInst._focusRepeatingSectionRow != 'undefined') oldRSrow = classInst._focusRepeatingSectionRow;
		clearTimeout(classInst._blurTO);
		classInst._kw.on();
		this._focusRow = Number(this.name.split('.')[1].substr(1));
		var colName = this.name.split('.')[2];
		colName = colName.split('_A5INSTANCE');
		var instNum = colName[1];
		if(typeof instNum == 'undefined') instNum = '0';

		if(instNum > 0) {
			var rsName = classInst._findRepeatingSection(colName[0]);
			if(rsName != oldRS) {
				//alert('repeating section changed: ' + rsName);
				classInst._executeEvent('onRptSectionFocus',{sectionName: rsName});
				classInst._focusRepeatingSection = rsName;
				//alert('row in repeating section changed: ' + instNum);
				//classInst._executeEvent('onRptSectionRowChange',{sectionName: rsName, rowNumber: instNum, previousRowNumber: -1});
				classInst._focusRepeatingSectionRow = instNum;
				oldRSrow = instNum;
			}

			if(instNum != oldRSrow) {
				//alert('row changed: ' + instNum);
				//classInst._executeEvent('onRptSectionRowChange',{sectionName: rsName, rowNumber: instNum, previousRowNumber: oldRSrow});
				classInst._focusRepeatingSectionRow = instNum;

				classInst.setRepeatingSectionActiveRow(rsName,instNum);

			}

		} else {
			classInst._focusRepeatingSection = '';
			classInst._focusRepeatingSectionRow = '';
		}

		colName = colName.join(':');
		colName = colName.split('[');
		colName = colName[0];
		classInst._focusControl = colName;
		if(colName != oldFocus) {
			classInst._executeEvent('onControlFocus',{controlName: colName});
		}


	},

	_setControlBlur: function(e,classInst) {
		classInst._blurTO = setTimeout(function() {classInst._completeControlBlur(); classInst = null; } ,100);
		var rowNum = Number(this.name.split('.')[1].substr(1));
		var colName = this.name.split('.')[2];
		colName = colName.split('_A5INSTANCE');
		var instNum = colName[1];
		if(typeof instNum == 'undefined') instNum = '0';
		colName = colName.join(':');
		colName = colName.split('[');
		colName = colName[0];
		//classInst.clientSideValidateField(colName,rowNum,instNum);
		//if you make a selection from an edit-combo, the validation was firing when you clicked in the edit-combo
		var classInst2 = classInst;

		this._csvTo = setTimeout(function() {classInst2.clientSideValidateField(colName,rowNum,instNum); delete classInst2; },400);

		classInst._executeEvent('onControlBlur',{controlName: colName, sourceElement: this});
	},

	_completeControlBlur: function() {
		this._kw.off();
	},

	blur: function() {
		//dummy function because tabbedUI code generates a call to the .blur(), which grid has
	},

	_setControlDirty: function(e,classInst) {

		if(e.type == 'keyup') {

			if( e.keyCode == 9 || e.keyCode == 16) {
				return false;
			}
		}
		if(typeof flagInDV == 'undefined') flagInDV = false;
		if(typeof this.name == 'undefined') return false;
		var rowNum = Number(this.name.split('.')[1].substr(1));
		var colName = this.name.split('.')[2];
		colName = colName.split('_A5INSTANCE');
		var instNum = colName[1];
		if(typeof instNum == 'undefined') instNum = '0';

		colName = colName.join(':');
		colName = colName.split('[');
		colName = colName[0];

		if(e.type == 'keyup' && $ga(this,'A5IsDirty') != 'true') classInst.setControlDirty(colName,true,rowNum,true);
        else if(e.type != 'keyup') classInst.setControlDirty(colName,true,rowNum,true);


		if( this.tagName.toLowerCase() == 'select' || (this.tagName.toLowerCase() == 'input' && (this.type == 'radio' || this.type == 'checkbox') )) {
			classInst.clientSideValidateField(colName,rowNum,instNum);
		}

		var cntrlInfoObj = classInst._getControlInfo(colName);
		var info = false;
		var controlType = '';
		if(typeof cntrlInfoObj.info != 'undefined') info = cntrlInfoObj.info;
		if(info) controlType = info.controlType;
		if(e.type == 'change' || typeof e.type == 'undefined') {
			if(classInst.flagRenderComplete) {
				classInst._executeEvent('onControlChange',{controlName: colName, controlType: controlType, sourceElement: this});
				var val = $ga(this,"A5LastPersistValue");
				var dirty = $ga(this,"A5IsDirty");
				var currVal =  classInst.getValue(colName);
				if(currVal != val && dirty == 'true' ) {
					$sa(this,"A5LastPersistValue",currVal);
					var objX = {controlName: colName, controlType: controlType, sourceElement: this};
					classInst.persistVariablesToLocalStorage(objX);
				}
			}
		}
	},



	setControlDirty: function(colName,state) {

		var cntrlInfoObj = this._getControlInfo(colName);
		var info = false;
		var controlType = '';
		if(typeof cntrlInfoObj.info != 'undefined') info = cntrlInfoObj.info;
		var flagInDv = typeof arguments[4] != 'undefined' ? arguments[4] : false;
		if(info) {
			controlType = info.controlType.toLowerCase();
			if(controlType == 'label' || (controlType == 'image' && flagInDv == false) ) return true; //can't set label/image dirty
		}

		var rowNum = typeof arguments[2] != 'undefined' ? arguments[2] : 1;
		var setRowState = typeof arguments[3] != 'undefined' ? arguments[3] : false;


		//var eles = $cetp($n('V.R' + rowNum + '.' + cntrlInfoObj.controlName),$(this.dialogId+'.R'+rowNum));
		var eles = this._functionToConstrainElements($n('V.R' + rowNum + '.' + cntrlInfoObj.controlName));
		if(!eles) {
			if(controlType.toLowerCase() == 'signaturecapture' || controlType.toLowerCase() == 'image') {
				//don't need to consider RepeatingSection as we don't allow
				var id = this.dialogId + '.V.R1.' + cntrlInfoObj.controlName + '_HIDDENA5FN';
				var ele = $(id);
				eles = [ele];
			}
		}

		if(state) {
			if(cntrlInfoObj.calculateSummary) this._summarize(cntrlInfoObj.name,rowNum);
			//needs to be changed
			var oVal = this.originalValues[rowNum-1][cntrlInfoObj.fullName];
			if(oVal == null) oVal = '';
			var nVal = $gvs(eles);
			if(oVal.constructor == Array) {
				if(typeof nVal == 'string') nVal = nVal.split(',');
				oVal = oVal.join('\n');
			}
			if(nVal.constructor == Array) {
				nVal = nVal.join('\n');
			}
			if(oVal != nVal) {
				$sa(eles,'A5IsDirty','true');
				if(this._isDataDirty == false) {
					if($u.a.find(this._dataBoundControls,cntrlInfoObj.name) != -1) {
						this._isDataDirty = true;
						this._variablesChanged(['dialog.isDataDirty'],rowNum);
						this._executeEvent('onDataStateChange',{isDirty: true, isDataDirty: this._isDataDirty});
						//the previous command was not causing the submit button to show if an unbound field had been previously edited
						this.refreshClientSideComputations();
					}
				}
				if(setRowState) {
					this._setRowState(rowNum,true);
				}
			} else if(this._listsDV.length > 0) {
				this.refreshClientSideComputations();
			}
		} else {
			if($ga(eles[0],'A5IsDirty') == 'true') {
				$sa(eles,'A5IsDirty','false');
				if(setRowState) {
					this._setRowState(rowNum,false);
				}
			} else if(this._listsDV.length > 0) {
				 this.refreshClientSideComputations();
			}
		}
	},

	setDirty: function() {
		var flag = typeof arguments[0] != 'undefined' ? arguments[0] : false;
		if(flag)this._isDataDirty = true;
		this._setRowState(1,true);
		if(flag) this._executeEvent('onDataStateChange',{isDirty: true, isDataDirty: true});
	},

	getControlDirty: function(colName) {
		var cntrlInfoObj = this._getControlInfo(colName);

		var info = false;
		var controlType = '';
		if(typeof cntrlInfoObj.info != 'undefined') info = cntrlInfoObj.info;
		if(info) controlType = info.controlType;

		var rowNum = typeof arguments[1] != 'undefined' ? arguments[1] : 1;
		//var eles = $cetp($n('V.R' + rowNum + '.' + cntrlInfoObj.controlName),$(this.dialogId+'.R'+rowNum));
		var eles = this._functionToConstrainElements($n('V.R' + rowNum + '.' + cntrlInfoObj.controlName));


		if(eles) {
			var flagDirty = $ga(eles[0],'A5IsDirty');
			if($ga(eles[0],'A5IsDirty') == 'true') return true;
			else return false;
		} else {
			if(controlType.toLowerCase() == 'signaturecapture' || controlType.toLowerCase() == 'image') {
				//don't need to consider RepeatingSection as we don't allow
				var id = this.dialogId + '.V.R1.' + cntrlInfoObj.controlName + '_HIDDENA5FN';
				var ele = $(id);
				if($ga(ele,'A5IsDirty') == 'true') return true;
				else return false;
			} else {
				return false;
			}
		}
	},

	_setRepeatingSectionRowDirty: function(name,rowNum) {
		var controlName = this._getControlsInRepeatingSection(name)[0];
		var data = this.getValue(controlName + ':' + rowNum);
		this.setValue(controlName + ':' + rowNum,'foo');
		this.setValue(controlName + ':' + rowNum,data);
	},


	_repeatingSectionRowIsDirty: function(name,rowNum) {
			var isDirty = false;
			var controls = this._getControlsInRepeatingSection(name);
			for(var i=1;i<= controls.length;i++) {
				if(this.getControlDirty(controls[i-1] + ':' + rowNum)) {
					isDirty = true;
					return isDirty;
				}
			}
			return isDirty;
	},


	_repeatingSectionRowIsEmpty: function(name,rowNum) {
			var isEmpty = true;
			var controls = this._getControlsInRepeatingSection(name);
			for(var i=1;i<= controls.length;i++) {
				if(this.getValue(controls[i-1] + ':' + rowNum) != '' ) {
					isEmpty = false;
					return isEmpty;
				}
			}
			return isEmpty;
	},


	_repeatingSectionRowIsDeleted: function(id,i) {
		return this.repeatingSections[id]._r[0].i[i-1].deleted;
	},


	_repeatingSectionLogicalToPhysicalRow: function(name,logicalRow) {
		var rs = this.repeatingSections[name]._r[0].i;
		if(rs.length == 0) return logicalRow; //may not yet be instantiated
		var pr = -1;
		var lr = 0 ;
		for(var i = 1; i <= rs.length; i++) {
			if(!rs[i-1].deleted) {
				lr = lr+1;
				if(lr == logicalRow) {
					pr = i;
					break;
				}
			}
		}
		return pr;
	},

	_getControlsInRepeatingSection: function(name) {
		return this.repeatingSectionInfo[name].controls;
	},

	getControlsInContainer: function(name) {
		var obj = this.__controlNesting;
		if(typeof obj == 'undefined') return '';
		obj = obj[name];
		if(typeof obj == 'undefined') return '';
		var type = '';
		var name2 = '';
		var arr = [];
		var list2 = '';
		for(var i = 0; i < obj.length; i++) {
			type = obj[i].split(':')[0];
			if(type == 'container' || type == 'tabControl' || type == 'tabPane' || type == 'frame') {
				name2 = obj[i].split(':')[1];
				list2 = this.getControlsInContainer(name2);
				if(list2.length > 0 ) arr.push( list2);
			} else arr.push(obj[i]);
		}
		return arr;
	},

	_setRowState: function(rowNum,isDirty) {

		var dataDirty = this._isDataDirty;
		var stateChange = false;
		if(this._dirtyRows[rowNum-1] != isDirty) {
			stateChange = true;
			this._dirtyRows[rowNum-1] = isDirty;
		}

		if(stateChange) {
			if(isDirty){
				if($u.a.find(this._dirtyRows,true) != -1 && !this._isDirty) {
					this._isDirty = true;
				}
			} else{
				if($u.a.find(this._dirtyRows,true) == -1 && this._isDirty) {
					this._isDirty = false;
					this._isDataDirty = false;
				}
			}

			if(this._prepared)	this._fireWatches(rowNum);
			this._executeEvent('onStateChange',{isDirty: this._isDirty, isDataDirty: this._isDataDirty});
			if(isDirty == false && dataDirty) this._executeEvent('onDataStateChange',{isDirty: false, isDataDirty: false});
		}  else if(this._listsDV.length > 0) {
				this.refreshClientSideComputations();
		}
	},


	_keyF1: function(){
		//alert(this._focusControl);

		if(this._focusControl != '') {
			var instNum = this._focusControl.split(':')[1];
			if(typeof instNum == 'undefined') instNum = '';
			else instNum = Number(instNum);
			if(instNum > 0) instNum = '_A5INSTANCE' + instNum;
			this.showFieldHelp(this._focusControl,instNum);
		}
		return true;
	},

	harvest: function() {
		var ops = arguments[0];
		if(typeof ops == 'undefined') ops = {};
		var data = this._harvestRow(1,false,ops);
		return data;
	},

	getData: function() {
		//just an alias for _harvestRow()
		return this._harvestRow(1);
	},

	populateControlsFromTable: function(primaryKey) {


		if(typeof primaryKey == 'undefined') return false;
		if(typeof this._lockPopulateControlsFromTable != 'undefined') {
			if(this._lockPopulateControlsFromTable == true) return false;
		}
		var pkData = '';
		if(primaryKey.constructor == Array) pkData = primaryKey.join('|||');
		else pkData = primaryKey;
		var showDebugInfo = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var onCallbackComplete = typeof arguments[2] != 'undefined' ? arguments[2] : '';
		var debugDiv = typeof arguments[3] != 'undefined' ? arguments[3] : '';
		var errorDiv = typeof arguments[4] != 'undefined' ? arguments[4] : '';
		var ops = typeof arguments[5] != 'undefined' ? arguments[5] : {};
		var flagHideWaitMessage = ops._hideWaitMessage;
		if(typeof flagHideWaitMessage == 'undefined') flagHideWaitMessage = false;

		var flagWaitMsg = false;
		if(typeof ops.showWaitMessage != 'undefined') {
			flagWaitMsg = ops.showWaitMessage;
			ops.waitMessage = {};
			ops.waitMessage.target = 'page';
			ops.waitMessage.message = 'Wait...';
			ops.waitMessage.useCSSAnimation = false;
			ops.waitMessage.icon = 'css/A5System/Images/wait.gif';
		}
		var flagFireOnSynchronize = false;
		if(typeof ops.fireOnSynchronize != 'undefined') flagFireOnSynchronize = ops.fireOnSynchronize;
		var data = '_showDebug=' + showDebugInfo + '&_primaryKey=' + pkData + '&_debugInfoDiv=' + debugDiv + '&_errorDiv=' + errorDiv + '&_fireServerSideOnSynchronize=' + flagFireOnSynchronize;
		if(flagWaitMsg) data = data + '&_waitMsgTarget=' + ops.waitMessage.target;
		data = data + '&' + A5.ajax.buildURLParam('_onCallbackComplete',onCallbackComplete);
		if(flagHideWaitMessage) data = data + '&_hideWaitMessage=yes';
		var _jdata = ops._jdata;

		if(typeof _jdata == 'undefined') _jdata = '';
		if(_jdata != '') data = data + '&' + A5.ajax.buildURLParam('_jdata',_jdata);
		var xbasicFunction = 'system:populateControlsFromTable';
		this._lockPopulateControlsFromTable = true;
		this._resetFlag('_lockPopulateControlsFromTable',5000);
		this.ajaxCallback('G',1,xbasicFunction,'',data);
		if(flagWaitMsg) this.showWaitMessage(ops.waitMessage.target,ops.waitMessage);
		//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Wait...',icon: 'css/A5System/Images/wait.gif'});
	},

	_resetFlag: function(flagName,delay) {
		var x = this[flagName];
		var f = Function(this.dialogId + '_DlgObj._setFlag(\''+flagName+'\');');
		setTimeout(f,delay);

	},

	_setFlag: function(flagName) {
		this[flagName] = false;
	},

	groupSummary: function(data,field,summaryType) {
		alert('Method is deprecated. Please edit component and change to \'this.groupSummary()\'.');
	},


	getPrimaryKeyList: function(filter,order,maxKeys) {
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__filter',filter));
		arr.push(A5.ajax.buildURLParam('__order',order));
		arr.push(A5.ajax.buildURLParam('__maxkeys',maxKeys));
		var data = arr.join('&');
		var xbasicFunction = 'system:getPrimaryKeyList';
		this.ajaxCallback('G',1,xbasicFunction,'',data);
	},

	refreshPrimaryKeyList: function() {
		var xbasicFunction = 'system:refreshKeys';
		var data = '';
		this.ajaxCallback('G',1,xbasicFunction,'',data);
	},

	getRepeatingSectionVisibleRows: function(sectionName) {
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rows = rs.rows;
		var a = [];
		var ele = '';
		for(var i = 1; i <= rows; i++) {
			ele = $(this.dialogId + '.V.R1.' + sectionName + '.I' + i);
			if(ele) {
				if(ele.style.display == '') a.push(i);
			}
		}
		return a.join(',');
	},

	_harvestVariables: function() {
		return this._harvestRow(1,true);
	},

	__pA: function(obj,key,value) {
		obj[key] = value;
	},

	_harvestRow: function(row) {
		var ops = typeof arguments[2] != 'undefined' ? arguments[2] : {};
		var flagHarvestImageData = ops.flagHarvestImageData;
		if(typeof flagHarvestImageData == 'undefined') flagHarvestImageData = true;
		var flagVariables = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var data = new Array();
		var dirtyColumns = new Array();
		var rs = 0;
		var vardata_i = '';
		var varolddata_i = '';
		var eleFU = '';
		var colName2 = '';
		var dataLS = {};
		var colnameSuffix = '';
		for(var colName in this.columnInfo) {
			colName2 = colName
			if(this.columnInfo[colName].isArray) colnameSuffix = '[]';
			else colnameSuffix = '';
			if(typeof this.columnInfo[colName].repeatingSection != 'undefined') {
				//in repeating section
				rs = this.repeatingSections[this.columnInfo[colName].repeatingSection];
				if(typeof rs == 'undefined') return false;
				for(var i = 1; i <= rs.rows; i++) {
					vardata_i = this.getValue(colName+':'+i,row);
					varolddata_i = this.originalValues[row-1][colName+':'+i];
					if(this.columnInfo[colName].type == 'img,img') {
						//don't submit binary data
						if(!flagVariables) {
							if (vardata_i != null && vardata_i.substring(0,11) == 'data:image/') vardata_i = '';
							if (varolddata_i != null && varolddata_i.substring(0,11) == 'data:image/') varolddata_i = '';
						}
					}
					if(this.columnInfo[colName].type == 'fileUpload,fileUpload') {
						var eleFU = $(this.dialogId + '.V.R1.' + colName + '_A5INSTANCE' + i);
						if(eleFU) vardata_i = eleFU.value;
						varoldata_i = '';
						colName2 = colName+ '_A5FILEUPLOAD' ;
						if(vardata_i != '') dirtyColumns.push(colName2+ '_A5INSTANCE' + i);
					}
					data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName2+'_A5INSTANCE' + i+colnameSuffix, vardata_i ));
					data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName2+'_A5INSTANCE' + i+colnameSuffix, varolddata_i ));
					this.__pA(dataLS,colName2 + '_A5INSTANCE' + i, vardata_i);

					if(this.getControlDirty(colName+':'+i,row)) {
						dirtyColumns.push(colName+'_A5INSTANCE'+i);
					}
					if(this.columnInfo[colName].type == 'img,img') {
						if(!flagVariables) {
							var eleId = this.dialogId + '.V.R1.' + colName + '_HIDDENA5FN' +'_A5INSTANCE' + i +colnameSuffix;
							var ele = $(eleId);
							var valImg = $gvs(ele);
							data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName+'_HIDDENA5FN'+'_A5INSTANCE'+ i +colnameSuffix, valImg ));
							data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName+'_HIDDENA5FN'+'_A5INSTANCE'+ i +colnameSuffix, '' ));
							this.__pA(dataLS,colName+'_HIDDENA5FN'+'_A5INSTANCE'+ i, valImg);
							if(valImg != '') {
								dirtyColumns.push(colName+ '_HIDDENA5FN' +'_A5INSTANCE' + i +colnameSuffix);
							}
						} else {
							data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName+'_HIDDENA5FN'+'_A5INSTANCE'+ i +colnameSuffix, vardata_i ));
							data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName+'_HIDDENA5FN'+'_A5INSTANCE'+ i +colnameSuffix, '' ));
						}
					}
				}
			} else {
				//not in repeating section
				var controlType = this._getControlType(colName).toLowerCase();
				vardata_i = this.getValue(colName,row, {controlType: controlType } );
				varolddata_i = this.originalValues[row-1][colName];
				colName2 = colName

				if(this.columnInfo[colName].type == 'img,img') {
				//do not submit binary data
					if(!flagVariables) {
						if (vardata_i != null && vardata_i.substring(0,11) == 'data:image/') vardata_i = '';
						if (varolddata_i != null && varolddata_i.substring(0,11) == 'data:image/') varolddata_i = '';
					} else {
						//debugger;
					}

					if(flagHarvestImageData == false) {
						vardata_i = '';
						varolddata_i = '';
					}

				}

				if(this.columnInfo[colName].type == 'fileUpload,fileUpload') {
					var eleFU = $(this.dialogId + '.V.R1.' + colName);
					if(eleFU) vardata_i = eleFU.value;
					varoldata_i = '';
					colName2 = colName+ '_A5FILEUPLOAD';
					if(vardata_i != '') dirtyColumns.push(colName2);
				}

				data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName2+colnameSuffix, vardata_i ));
				data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName2+colnameSuffix, varolddata_i ));
				this.__pA(dataLS,colName2, vardata_i);
				if(this.columnInfo[colName].type == 'img,img') {
					if(!flagVariables) {
						var eleId = this.dialogId + '.V.R1.' + colName + '_HIDDENA5FN';
						var ele = $(eleId);
						var valImg = $gvs(ele);

						if(flagHarvestImageData == false) {
							 valImg = '';
						}

						data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName+'_HIDDENA5FN'+colnameSuffix, valImg ));
						data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName+'_HIDDENA5FN'+colnameSuffix, '' ));
						this.__pA(dataLS,colName+'_HIDDENA5FN', valImg);
						if(valImg != '') {
							dirtyColumns.push(colName+ '_HIDDENA5FN');
						}
					} else {
						data.push(A5.ajax.buildURLParam('V.R' + row + '.' + colName+'_HIDDENA5FN'+colnameSuffix, vardata_i ));
						data.push(A5.ajax.buildURLParam('old.V.R' + row + '.' + colName+'_HIDDENA5FN'+colnameSuffix, '' ));

					}
				}

				if(this.getControlDirty(colName,row)) {
					dirtyColumns.push(colName);
				}
			}
		}
		data.push(A5.ajax.buildURLParam('dirtyColumns.R' + row, dirtyColumns.join('\n') ));
		var li = {};
		li.loggedInUserName = '';
		li.loggedInUserNameFriendly = '';
		li.isLoggedIn = false;
		if(typeof A5.__loginUserName != 'undefined') li.loggedInUserName = A5.__loginUserName;
		if(typeof A5.__loginUserNameFriendly != 'undefined') li.loggedInUserNameFriendly = A5.__loginUserNameFriendly;
		if(li.loggedInUserName != '') li.isLoggedIn = true;
		//data.push(A5.ajax.buildURLParam('__loggedInUserName',li.loggedInUserName));
		data.push(A5.ajax.buildURLParam('__loggedInUserNameFriendly',li.loggedInUserNameFriendly));
		data.push(A5.ajax.buildURLParam('__isLoggedIn',li.isLoggedIn));



		if(flagVariables) {
			var ox = {};
			ox.data = dataLS;
			ox.dirty = dirtyColumns;
			return ox;

		} else {
			return data.join('&');
		}
	},

	setVariables: function(vars) {
		if($u.compare(this._vars,vars) == false ) {
			$u.o.assign(this._vars,vars);
		}
	},

	getSessionVariable: function(varname) {
		varname = varname.toUpperCase();
		return this._vars.SESSION[varname];
	},

	getPageVariable: function(varname) {
		varname = varname.toUpperCase();
		return this._vars.PAGEVARIABLE[varname];
	},

	populate: function(data) {
		var row = typeof arguments[1] != 'undefined' ? arguments[1] : 1;
		//if clean is true, then after you set the data the row is now clean
		var clean = typeof arguments[2] != 'undefined' ? arguments[2] : true;
		if(typeof clean == 'boolean') {
			if(clean) clean = 'clean';
			else clean = 'dirty';
		};
		var honorChange = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		var flagDirtyFlags = typeof arguments[4] != 'undefined' ? arguments[4] : false;

		// flag for populating / forms to refresh var
		this._populateActive = true;
		this._formsToRefresh = {};

		if(clean == 'clean') {
			//$u.o.assign(this.originalValues[row-1],data);
			var cntrlInfoObj = '';
			var prop2 = '';
			var tempData = '';
			var tempDirty = false;
			var rowStateFlag = false;
			for(var prop in data) {
				prop2 = prop.split('_A5INSTANCE').join(':');
				prop2 = prop2.toUpperCase();
				tempData = data[prop];
				tempDirty = false;
				tempOrigVal = null;
				if(flagDirtyFlags) {
					tempDirty = tempData.dirty;
					tempOrigVal = tempData.origVal;
					tempData = tempData.val;
					data[prop] = tempData;
					if(typeof tempDirty == 'undefined') tempDirty = false;
					if(tempDirty) rowStateFlag = true;
				}
				if(tempData == null) tempData = '';


				if(tempOrigVal == null) this.originalValues[row-1][prop2] = data[prop];
				else this.originalValues[row-1][prop2] = tempOrigVal;

				// moved after original values set to fix form control dirty set
				this.setValue(prop2,tempData,false,row);

				cntrlInfoObj = this._getControlInfo(prop2);
				//$sa($cetp($n('V.R'+row + '.' + cntrlInfoObj.controlName),$(this.dialogId+'.R' + row)),'A5IsDirty','false');
				$sa(this._functionToConstrainElements($n('V.R'+row + '.' + cntrlInfoObj.controlName)),'A5IsDirty','' + tempDirty);
			}
			this._setRowState(row,rowStateFlag);
		} else if(clean == 'incremental') {
			for(var prop in data) {
				this.setValue(prop,data[prop],honorChange,row);
			}
		} else {
			for(var prop in data) {
				this.setValue(prop,data[prop],honorChange,row);
				if(!honorChange) {
					//set dirtyflag manually
					prop2 = prop.split('_A5INSTANCE').join(':');
					prop2 = prop2.toUpperCase();
					cntrlInfoObj = this._getControlInfo(prop2);
					//$sa(this._functionToConstrainElements($n('V.R'+row + '.' + cntrlInfoObj.controlName)),'A5IsDirty','true');
					this.setControlDirty(prop2,true);
				}
			}
			this._setRowState(row,true);
		}


		// flag for populating
		this._populateActive = false;
		for(var fn in this._formsToRefresh){
			if(this._forms[fn].autoCommit) this.formViewRefresh(fn);
		}

	},

	_getControlFullId: function(shortId) {
		var inst = shortId.split(':')[1];
		if(typeof inst == 'undefined') return this.dialogId + '.V.R1.' + shortId;
		else return this.dialogId + '.V.R1.' + shortId.split(':')[0] + '_A5INSTANCE' + inst;

	},


	getControl: function(name ) {
		name = name.toUpperCase();
		var cntrlInfoObj = this._getControlInfo(name);
		name = cntrlInfoObj.name;
		var row = typeof arguments[1] != 'undefined' ? arguments[1] : 1;
		if(cntrlInfoObj.instNum != -1) {
			if(typeof this._controlInst['R' + row + '.' + name + '_A5INSTANCE' + cntrlInfoObj.instNum] != 'undefined') return this._controlInst['R' + row + '.' + name + '_A5INSTANCE' + cntrlInfoObj.instNum];
		} else {
			if(typeof this._controlInst['R' + row + '.' + name] != 'undefined') return this._controlInst['R' + row + '.' + name ];
		}


		//check if it is a tab object
		var tObj = window[this.dialogId + '.V.R1.' + name + 'Obj'];
		if(tObj) return tObj;

		//buttons
		if(typeof this._buttons[name] != 'undefined') return this._buttons[name];

		//field helpers
		if(typeof this.fieldHelpers[name] != 'undefined') return this.fieldHelpers[name];

		return false;

	},

	_getArrayControls: function() {
		var a = [];
		for(var i in this.columnInfo) {
	    	if(this.columnInfo[i].isArray) a.push(i);
		}
		return a.join(',');
	},

	deleteImageOrAttachment: function(name) {

		name = name.toUpperCase();
		var cntrlInfoObj = this._getControlInfo(name);
		name = cntrlInfoObj.name;
		var name2 = cntrlInfoObj.controlName;
		var inst = name2.split('_A5INSTANCE')[1];
		if(typeof inst == 'undefined') inst = -1;

		var n2 = ''; var h2 = '';
		if(inst > -1) {
			n2 = name + '_A5INSTANCE' + inst;
			h2 = name + '_HIDDENA5FN_A5INSTANCE' + inst;
		} else {
			n2 = name;
			h2 = name + '_HIDDENA5FN';
		}

		this.setValue(n2,'images/null_1x1.png.a5image');
		this.setValue(h2,'__NULL__');
		var id = this.dialogId + '.V.R1.' + h2;
		$svs(id,'__NULL__');
		this.setDirty();


	},

	customSetting: function(name,value) {

		if(typeof value == 'undefined') {
			if(typeof this._settings == 'undefined') return false;
			return this._settings[name];
		} else {
			if(typeof this._settings == 'undefined') this._settings = {};
			this._settings[name] = value;

		}

	},

	getValue: function(name) {
		var obj = typeof arguments[2] != 'undefined' ? arguments[2] : {};
		var controlType = obj.controlType;
		if(controlType == 'signaturecapture' || controlType == 'image') {
			name = name.toUpperCase();
			var flagEmbImg = false;
			if(typeof obj.embeddedImage != 'undefined') flagEmbImg = obj.embeddedImage;
			if(!flagEmbImg) {
				var valToReturn = '';
				var ele = $(this.dialogId + '.V.R1.' + name + '_HIDDENA5FN');
				if(ele.value != '') {
					valToReturn = ele.value
				} else {
					ele = $(this.dialogId + '.V.R1.' + name) ;
					if(ele) valToReturn = ele.src;
				}
				return valToReturn;
			} else {
				var ele = $(this.dialogId + '.V.R1.' + name);
				var val = ele.src;
				return val.split(',')[1]; //return part after data:image/png;base64,
			}
		}
		if(name.split('::')[0].toLowerCase() == 'list' && typeof name.split('::')[1] != 'undefined')  {
			//get value from a list. format for name is: //list::l1::lastname (list::listname::fieldname). listname can be list1:3 (3rd instance)
			var rowNumber = typeof arguments[1] != 'undefined' ? arguments[1] : -1;
			var listId = name.split('::')[1];
			var field = name.split('::')[2];
			return this.listGetValue(listId,field,rowNumber);
		}
		name = name.toUpperCase();
		var cntrlInfoObj = this._getControlInfo(name);
		name = cntrlInfoObj.name;
		var row = typeof arguments[1] != 'undefined' ? arguments[1] : 1;
		if(this.columnInfo[name]) {
			var flagHidden = this.columnInfo[name].hiddenVal;
			if(typeof flagHidden == 'undefined') flagHidden = false;

			var flagForceReadControl = this.columnInfo[name].isCalc;
			var controlType = this._getControlType(name);
			if(controlType.toLowerCase() == 'list' || controlType.toLowerCase() == 'switch' ) flagForceReadControl = true; //if UX had been set to clean, wrong List value was read
			if(cntrlInfoObj.type.toLowerCase() == 'control') flagForceReadControl = true; //all controls were returning wrong value if the ux had been set to clean

			var colType = this.columnInfo[name].type.split(',')[0];
			var dataType = this.columnInfo[name].dataType;
			if(this._dirtyRows[row-1]) {
				if(colType != 'label'  && colType != 'link'  && colType != 'img' ){
					if(flagHidden) {
						var val = $gvs(this.dialogId + '.V.R' + row + '.' + cntrlInfoObj.hiddenControlName );
					} else {
						var val = $gvs('V.R' + row + '.' + cntrlInfoObj.controlName, this._functionToConstrainElements );
					}
					if(val == $ga('V.R' + row + '.' + cntrlInfoObj.controlName, 'A5WatermarkText', this._functionToConstrainElements)[0]) val = '';
					if(typeof dataType != 'undefined') {
						if(dataType == 'L') val = $u.s.toBool(val);
					}

					var separator = this.columnInfo[name].separator;
					if(typeof separator == 'undefined') separator = '\n';
					if(this.columnInfo[name].isArray && typeof val == 'string') val = val.split(separator);
					return val;
				}
			}
			if(colType == 'label') return $gvs(this.dialogId + '.V.R' + row + '.' + cntrlInfoObj.controlName);
			if(colType == 'link') return this.originalValues[row -1][cntrlInfoObj.fullName][0];
			else {
				if(flagForceReadControl) {
					if(flagHidden) {
						var val = $gvs(this.dialogId + '.V.R' + row + '.' + cntrlInfoObj.hiddenControlName);
					} else {
						var val = $gvs(this.dialogId + '.V.R' + row + '.' + cntrlInfoObj.controlName);
					}
					if(typeof dataType != 'undefined') {
						if(dataType == 'L') val = $u.s.toBool(val);
					}
					return val

				} else {
					return this.originalValues[row -1][cntrlInfoObj.fullName];
				}
				}
		} else {
			var val = $gvs(this.dialogId + '.V.R' + row + '.' + name);
			if(val == $ga(this.dialogId + '.V.R' + row + '.' + name, 'A5WatermarkText')) val = '';
			return val;
		}

	},

	setValueFrom: function(target,source) {
		if(target.constructor == Array) {
			var count = target.length;
			var count2 = source.length;
			var t2 = '';
			var s2 = '';
			for(var i = 1; i <= count; i++) {
				t2 = target[i-1];
				s2 = source[i-1];
				if(typeof s2 != 'undefined') this.setValue(t2,this.getValue(s2));
			}

		} else {
			this.setValue(target,this.getValue(source));
		}
	},


	setDisabled: function(name) {
		var flag = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		if(name.constructor != Array) var nameArr = [name];
		else var nameArr = name;

		var enable = !flag;
		for(var k = 0; k < nameArr.length; k++) {
			name = nameArr[k].toUpperCase();
			var eles = $cetp($n('V.R1.' + name),$(this.dialogId + '.R1'));
			if(typeof eles.length == 'undefined' || eles.length == 0) eles = [$(this.dialogId + '.V.R1.' + name)];
			var pObj = this.getControl(name);
			if(pObj) {
				if(typeof pObj.setDisabled != 'undefined') {
					pObj.setDisabled(!enable,eles);
					continue;
				}
			}
			if(typeof this._buttons[name] != 'undefined') {
				this._buttons[name].setDisabled(!enable,eles)
			} else {
				for(var i=0; i<eles.length;i++) eles[i].disabled = !enable;
			}
		}

	},


	setValue: function(name, value) {
		if( value == null) value = '';
		var ele = false;
		name = name.toUpperCase();

		// handle form bound control
		if(this._formControls[name]){
			var fn = this._formControls[name];
			var fo = this._forms[fn];
			if(fo){
				if(fo.autoCommit){
					fo.viewBox.data[name] = value;
					var oVal = this.originalValues[0][name];
					if(oVal == null) oVal = '';
					if(oVal != value) fo.viewBox.state.dirty[name] = true;
					else delete fo.viewBox.state.dirty[name];
					if(!this._populateActive && !this._setValueFromForm) fo.viewBox.refresh(true);
					else this._formsToRefresh[fn] = true;
				}
			}
		}


		var cntrlInfoObj = this._getControlInfo(name);
		name = cntrlInfoObj.name;
		if(typeof cntrlInfoObj.type == 'undefined') {
			var ele = $(this.dialogId + '.V.R1.' + name);
			if(ele) {
				if(ele.tagName == 'DIV' || ele.tagName == 'A' || ele.tagName == 'BUTTON') return ele.innerHTML = value;
			}
		}

		var honorChange = typeof arguments[2] == 'boolean' ? arguments[2] : true;
		var row = typeof arguments[3] != 'undefined' ? arguments[3] : 1;

		if(this.columnInfo[name]) {

			var flagHidden = this.columnInfo[name].hiddenVal;
			if(typeof flagHidden == 'undefined') flagHidden = false;


			if(this.columnInfo[name].dataType == 'L') value = $u.s.toBool(''+value);
			colType = this.columnInfo[name].type.split(',')[0];
			if(typeof this.fieldHelpers[name] != 'undefined'){


				ele = $(this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName);
				if(flagHidden) {
					var e2 = $(this.dialogId + '.V.R1.' +cntrlInfoObj.hiddenControlId);
					e2.value = value;
					this.fieldHelpers[name].resolveStoredValue(value, cntrlInfoObj.controlId);
				} else {
					this.fieldHelpers[name].setValue(value,this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName);
				}
			} else if(colType == 'control'){
				$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,this._functionToConstrainElements);

				if(this._controlInst['R' + row + '.' + cntrlInfoObj.controlName ]) {
					this._controlInst['R' + row + '.' + cntrlInfoObj.controlName ].setValue(value,honorChange);
				}
			} else if(colType == 'label'  || colType == 'link'  || colType == 'img'){
				$svs(this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName,value);
				ele = $(this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName);

				if(value == '') {
					var hiddenField = this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName+'_HIDDENA5FN';
					$svs(hiddenField,value);
					if(colType == 'img') {
						//needed on ios devices as well as working preview
						if(this._embeddedMode || true) {
							ele.src = 'data:image/jpg;base64,' + this.nullImage; //fix for chrome working preview
							$(hiddenField).src = '';
						}
					}
				}


			} else if(colType == 'popup-rte'){
				//$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,$(this.dialogId+'.R'+row));
				$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,this._functionToConstrainElements);
				$(this.dialogId+'.V.R'+row+'.'+cntrlInfoObj.controlName+'.DISPLAY').innerHTML = value;
			} else if(colType == 'logicalRadio') {
				if(value) value = 'True';
				else value = 'False';
				$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,this._functionToConstrainElements);
			} else if(colType == 'rte'){
				//$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,$(this.dialogId+'.R'+row));
				$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,this._functionToConstrainElements);
				if(typeof window[this.dialogId+'_'+cntrlInfoObj.controlName+'_RTEObj']._rteObj != 'undefined') {
					window[this.dialogId+'_'+cntrlInfoObj.controlName+'_RTEObj']._rteObj.setHTML(value);
				} else {
					window[this.dialogId+'_'+cntrlInfoObj.controlName+'_RTEObj'].setHTML(value);
				}
			} else{
				//$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,$(this.dialogId+'.R'+row));
				$svs('V.R'+row+'.'+cntrlInfoObj.controlName,value,this._functionToConstrainElements);
			}
		} else {
			//$svs('V.R'+row+'.'+name,value,$(this.dialogId+'.R'+row));
			$svs('V.R'+row+'.'+name,value,this._functionToConstrainElements);
		}
		if(!ele && honorChange){
			ele = $n('V.R'+row+'.'+cntrlInfoObj.controlName);
			//ele = $cetp(ele,$(this.dialogId+'.R'+row));
			ele = this._functionToConstrainElements(ele);
			if(ele){
				//if a checkbox for example, has 10 boxes - don't fire onChange 10 times!
				//for(var i=0;i<ele.length;i++) $e.execute(ele[i],'change');
				$e.execute(ele[0],'change');
			}
		} else if(honorChange) {
			$e.execute(ele,'change');
		}
	},


	fadeOutMessage: function(id,message) {
		var duration = typeof arguments[2] != 'undefined' ? arguments[2] : 2000;
		var flagStyle = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		A5.fadeOutMessage(id,message,duration,flagStyle,this.styleName);
	},

	openLookup: function(fieldName,objEle) {
		window[this.dialogId +'_LOOKUPGRID_'+fieldName].call(this,objEle);
	},

	fillinLookupValues: function(data, fieldName, part, lookupGridId) {
		var currWindow = this.getWindow(this.dialogId + '.LOOKUP.' + fieldName);
		if(currWindow) currWindow.hide();
		var w2 = this.getWindow(this._currentOpenLookupWindowName);
		if(w2) w2.hide();
		var rowNum = 1;
		var fieldsTofillin = this.lookups[fieldName].fieldsToFillin;
		var prop = '';
		for(var i = 0; i < data.length; i++) {
			prop = fieldsTofillin[i];
			this.setValue(prop,data[i],true,rowNum);
		}
		if(this.lookups[fieldName].resetAfterFillin) {
			window[lookupGridId+'_GridObj'].showAll();
		}
		this._executeEvent('afterLookupGridFillinValues',{});
	},

	setRepeatingSectionRowError: function(sectionName,instNum,errorText) {
		var rowNum = 1;
		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		rsTemp._r[rowNum-1].i[instNum-1].error = true;
		rsTemp._r[rowNum-1].i[instNum-1].errorText = errorText;
		this._showHideRowErrorIcons(sectionName);
		var ele = $(this.dialogId + '.V.R'+rowNum+'.'+sectionName+'.I'+instNum+'.CONTENT').parentNode;
		if(this.defaultRepeatingSection){
			if(this.defaultRepeatingSection.rowErrorClassName != ''){
				$acn(ele,this.defaultRepeatingSection.rowErrorClassName)
			}
		}
	},

	clearRepeatingSectionRowError: function(sectionName,instNum) {
		var rowNum = 1;
		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		rsTemp._r[rowNum-1].i[instNum-1].error = false;
		this._showHideRowErrorIcons(sectionName);
		var ele = $(this.dialogId + '.V.R'+rowNum+'.'+sectionName+'.I'+instNum+'.CONTENT').parentNode;
		if(this.defaultRepeatingSection){
			if(this.defaultRepeatingSection.rowErrorClassName != ''){
				$rcn(ele,this.defaultRepeatingSection.rowErrorClassName)
			}
		}
	},

	_showHideRowErrorIcons: function(sectionName) {
		var rowNum = 1;
		var rsTemp = this.repeatingSections[sectionName];
		if(typeof rsTemp == 'undefined') return false;
		var hasError = false;
		for(var i = 0; i < rsTemp._r[rowNum-1].i.length; i++) {
			if(rsTemp._r[rowNum-1].i[i].error) {
				hasError = true;
				break;
			}
		}
		if(hasError) {
			var ele = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.TITLES.ERROR')
			if(ele) ele.style.display = '';
			for(var i = 1; i <= rsTemp._r[rowNum-1].i.length; i++) {
				var ele = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.I' + i + '.ERROR')
				if(ele) {
					ele.style.display = '';
					var eles = ele.getElementsByTagName('img');
					if(rsTemp._r[rowNum-1].i[i-1].error) {
						eles[0].style.visibility = '';
					} else {
						eles[0].style.visibility = 'hidden';
					}

				}
			}
		} else {
			var ele = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.TITLES.ERROR')
			if(ele) ele.style.display = 'none';
			for(var i = 1; i <= rsTemp._r[rowNum-1].i.length; i++) {
				var ele = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.I' + i + '.ERROR')
				if(ele) ele.style.display = 'none';
			}

		}


	},


	setErrors: function(errors) {
		var clientSide = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		for(var i = 0; i < errors.length; i++) {
			var colName = errors[i].id.split('.')[3];
			colName = colName.split('_A5INSTANCE');
			colName = colName.join(':');
			colName = colName.split('[');
			colName = colName[0];

			this.activateControlContainer(colName,true); //silent
			if($(errors[i].id + '.CONTROL')) errors[i].id = errors[i].id + '.CONTROL';
			if(errors[i].id.search('_A5INSTANCE') != -1) {
				this._rseh.set(errors[i].id,errors[i].message);
				for(var j = 0; j < this._rseh._e.length; j++) {
					if(this._rseh._e[j].id == errors[i].id) {
						this._rseh._e[j].clientSide = clientSide;
						break;
					}
				}
			} else {
				this._eh.set(errors[i].id,errors[i].message);
				for(var j = 0; j < this._eh._e.length; j++) {
					if(this._eh._e[j].id == errors[i].id) {
						this._eh._e[j].clientSide = clientSide;
						break;
					}
				}

			}
		}
	},



	showGlobalErrors: function(location,msg) {
		var eleId = '';
		if(location.toLowerCase() == '<default>' || location == '') eleId = this.dialogId + '.GLOBALERRORS';
		else eleId = this.dialogId + '.V.R1.' + location.toUpperCase();

		var ele = $(eleId);
		if(!ele) {
			alert('Global Error\n\n' + msg);
			return false;
		}
		this._globalErrorId = ele;

		ele.style.display = '';

		if(msg.indexOf('<Hidden>') > -1 ) {
			ele.style.display = 'none';
			return true;
		}

		ele.innerHTML = '<span style="color:red;">' + msg + '</span>';
		//if the last control before submit has client-side validation, the validation does some stuff on a 400ms setTimeout()
		//if the ajax response from the submit happens before the 400ms and it sets a global error, the client-side validation might clear it away.
		clearTimeout(this._csvTo);
		var pEle = ele.parentNode;
		while(pEle.tagName.toLowerCase() != 'body') {
			if( typeof $ga(pEle,'A5CustomScroll') == 'string') break;
			pEle = pEle.parentNode;
		}
		A5.u.element.setScroll(pEle,ele);
	},


	showDebuggingInfo: function(location,msg) {
		var eleId = '';
		if(location.toLowerCase() == '<default>' || location == '') eleId = this.dialogId + '.DEBUGUPDATECOMMANDS';
		else eleId = this.dialogId + '.V.R1.' + location.toUpperCase();
		var ele = $(eleId);
		if(!ele) return false;
		ele.style.display = '';
		ele.innerHTML = msg;
	},

	clearErrors: function() {
		//put in try/catch because dynamic forms clear form after successful submit
		try {
			var flagClearGlbl = typeof arguments[1] != 'undefined' ? arguments[1] : true;
			if(typeof arguments[0] != 'undefined') {
				var errorsToClear = new Array();
				var rsErrorsToClear = new Array();
				for(var i = 0; i < arguments[0].length; i++) {
					if(typeof arguments[0][i] == 'number') {
						for(var j = 0; j < this._eh._e.length; j++) {
							if(this._eh._e[j].id.indexOf('.R'+arguments[0][i]+'.') > -1) {
								errorsToClear.push(this._eh._e[j].id);
							}
						}
					} else {
						if($(arguments[0][i] + '.CONTROL')) arguments[0][i] = arguments[0][i] + '.CONTROL';
						if(arguments[0][i].search('_A5INSTANCE') != -1) rsErrorsToClear.push(arguments[0][i]);
						else errorsToClear.push(arguments[0][i]);
					}

				}
				if(errorsToClear.length > 0 ) this._eh.clear(errorsToClear);
				if(rsErrorsToClear.length > 0 ) this._rseh.clear(rsErrorsToClear);
			} else {
				this._eh.clear();
				this._rseh.clear();
			}

			if(flagClearGlbl) {
				if($(this.dialogId + '.GLOBALERRORS')) $(this.dialogId + '.GLOBALERRORS').style.display = 'none';
				var ele2  = this._globalErrorId;
				if(ele2) ele2.style.display = 'none';
			}
		} catch(err) { }
	},




	clientSideValidateField: function(colName,rowNum,instNum) {
		var cntrlInfoObj = this._getControlInfo(colName);
		colName = cntrlInfoObj.name;
		if(typeof this.columnInfo[colName] != 'undefined') {
			if(typeof this.columnInfo[colName].validate != 'undefined') {
				var curValue = this.getValue(cntrlInfoObj.fullName);
				if(this._hiddenControls[colName.toUpperCase()]) {
					this.clearErrors([this.dialogId + '.V.R' + rowNum + '.' + cntrlInfoObj.controlId],false);
					return '';
				}
				var result = this.columnInfo[colName].validate.call(this,curValue,colName,rowNum,instNum);
				if(typeof result == 'string') {
					this.setErrors([{id: this.dialogId + '.V.R' + rowNum + '.' + cntrlInfoObj.controlId, message: result}],true);
				} else {
					this.clearErrors([this.dialogId + '.V.R' + rowNum + '.' + cntrlInfoObj.controlId],false);
				}
				return result;
			}
		}
	},

	validate: function() {
		//1st arg: function to call if no errors, 2nd arg: function to call if errors, 3rd arg: tabId - only validate fields on current pane of tab Id
		var data = '';
		if(typeof arguments[0] == 'function') {
			this.__afterValidateSuccess = arguments[0];
			data='__hasAfterValidateSucess=true';
		} else {
			data = '__hasAfterValidateSucess=false';
		}

		if(typeof arguments[1] == 'function') {
			this.__afterValidateFailure = arguments[1];
			data=data+'&__hasAfterValidateFailure=true';
		} else {
			data=data+'&__hasAfterValidateFailure=false';
		}

		var tabObj = typeof arguments[2] != 'undefined' ? arguments[2] : '';
		var xbasicFunction = 'system:validateData';
		if(tabObj != '') {
			data = data +'&__currentTabOjbectId=' + tabObj;
			data = data+'&__currentPaneId=' + this.genieObjectNavigate(tabObj,'currentPaneId');
			xbasicFunction = 'system:validateFieldsOnPane'
		}
		this.ajaxCallback('G',1,xbasicFunction,'',data);
	},

	validateField: function(colName,rowNum,instNum) {

		var repeatingSectionName = '';
		if(instNum >0) {
			repeatingSectionName = this.columnInfo[colName].repeatingSection;
		}
		this.ajaxCallback('G',1,'system:validateField','','_fieldToValidate='+colName + '&_instNum=' + instNum +'&_repeatingSectionName='+repeatingSectionName);
	},

	validateContainer: function(containerId) {
		var onSuccess = typeof arguments[1] != 'undefined' ? arguments[1] : 'none';
		var onFailure = typeof arguments[2] != 'undefined' ? arguments[2] : 'none';
		var onSuccessSS = typeof arguments[3] != 'undefined' ? arguments[3] : 'none';

	},

	runAction: function(name) {

		var objEle = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		var actObj = this._actions;
		if(typeof actObj == 'undefined') return false;
		var js = actObj[name];
		if(typeof js == 'undefined') return false;
		//js = js.replace('(this)','(objEle)');
		//js = js.replace(',this)',',objEle)');
		//if(js != '') eval(js);
		if(js != '') {
			var func = Function(js);
			func.call(objEle);
		}

	},

	submit: function() {

		var submitType = typeof arguments[0] != 'undefined' ? arguments[0] : 'none';
		var submitData = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		var ops = typeof arguments[2] != 'undefined' ? arguments[2] : {};
		var flagCheck = !this.submitIfHasClientSideErrors;

		//if there are any errors caught by clientside validation, the form does NOT submit.
		if(flagCheck){
			for(var i = 0; i < this._eh._e.length; i++) {
				if(this._eh._e[i].clientSide) return false;
			}
		}
		for(var i = 0; i < this._rseh._e.length; i++) {
			if(this._rseh._e[i].clientSide){

				var d = this._rseh._e[i].id.split('.').pop().split('_A5INSTANCE');
				var rsName = this._findRepeatingSection(d[0]);
				if(!this.repeatingSections[rsName]._r[0].i[Number(d[1])-1].deleted) {
					return false;
				}
			}
		}
		if(!this._executeEvent('canSubmitDialog',{ajaxEvent: 'SubmitDialog', submitType: submitType})) return false;
		var data = '__submitType=' + submitType;
		if(submitData != '') data = data + '&' + submitData;
		this.ajaxCallback('G',1,'system:submitDialog','',data,ops);
	},


	_isCSSIcon: function(image) {
		var x = image.split('=');
		if(x[0] == 'cssIcon') return true;
		return false;
	},

	_getImageHTML: function(image,flagCSSIcon) {
		var imageHTML = '';
		if(flagCSSIcon) {
			var cssIcon = A5.u.icon.html(image);
			imageHTML = '<span style="margin-right: 5px; float: left;"/>' + cssIcon + '</span>'
		} else {
			imageHTML = '<img src="'+image+'" style="margin-right: 5px; float: left;"/>'
		}
		return imageHTML;

	},

	_resetImage: function(name) {
		var val = this.originalValues[0][name];
		this.setValue(name,val,false);
	},

	resetForm: function() {
		var prompt = typeof arguments[0] != 'undefined' ? arguments[0] : true;
		if(prompt) {
			if(!this._executeEvent('canResetForm',{})) return false;
			var classInst = this;
			var msg = classInst.resetFormMessage;
			var image = classInst.resetFormIcon;

			var flagCSSIcon = this._isCSSIcon(image);
			var imageHTML = this._getImageHTML(image,flagCSSIcon);
			msg = '<div style="padding: 10px;" >' + imageHTML + msg + '<br style="clear: both;" /></div>';



			A5.msgBox.show(classInst.resetFormTitle,msg,'yn',function(button) {
				if(button == 'yes'){
					classInst.resetForm(false);
			    } else if(button == 'no'){
			       //do nothing
    			}
    			delete classInst;
			} );
			return false;
		}
		this.populate(this.originalValues[0]);
		this.clearErrors();
		this._executeEvent('afterResetForm',{});
	},


	_confirmAction: function() {
		var msg = this.dirtyFormMessage;
		var image = this.dirtyFormIcon;

		var flagCSSIcon = this._isCSSIcon(image);
		var imageHTML = this._getImageHTML(image,flagCSSIcon);
		msg = '<div style="padding: 10px;" >' + imageHTML + msg + '<br style="clear: both;" /></div>';
		A5.msgBox.show(this.dirtyFormTitle,msg,'O',function() {} );
	},


	getRepeatingSectionActiveRow: function(sectionName) {
		var flagLogicalRow = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		if(flagLogicalRow) {
			var lrn = 0;
			for(var i = 1; i <= rs.rows; i++) {
				if(rs._r[0].i[i-1].deleted == false) {
					lrn++;
					if(i == rs.activeRow) break;
				}
			}
			return lrn;
		} else {
			return rs.activeRow;
		}
	},


	setRepeatingSectionActiveLogicalRow: function(sectionName,logicalInstNumber) {
		var r = this._repeatingSectionLogicalToPhysicalRow(sectionName,logicalInstNumber);
		if(r == -1) r = 1;
		this.setRepeatingSectionActiveRow(sectionName,r);
	},

	setRepeatingSectionActiveRow: function(sectionName,instNumber) {
		var rowNum = 1;
		var oldInstNumber = this.repeatingSections[sectionName].activeRow;

		var flagHighlightOnHover  = this.repeatingSectionInfo[sectionName].highlightOnHover;
		var flagHighlightOnSelect = this.repeatingSectionInfo[sectionName].highlightOnSelect;

		if(oldInstNumber == instNumber) return false;
		var ele = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + instNumber +'.ICON');
		if(ele) {
			ele.style.visibility = '';
			if(this.defaultRepeatingSection){
				if(this.defaultRepeatingSection.rowSelectedClassName != '' && flagHighlightOnSelect){
					$acn($(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + instNumber +'.CONTENT').parentNode,this.defaultRepeatingSection.rowSelectedClassName);
				}
			}

			if(oldInstNumber != 0) {
				var eleOld = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + oldInstNumber+'.ICON' );
				eleOld.style.visibility = 'hidden';
				if(this.defaultRepeatingSection){
					if(this.defaultRepeatingSection.rowSelectedClassName != ''  && flagHighlightOnSelect){
						$rcn($(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + oldInstNumber +'.CONTENT').parentNode,this.defaultRepeatingSection.rowSelectedClassName);
					}
				}
			}
		}

		this.repeatingSections[sectionName].activeRow = instNumber;
		this._executeEvent('onRptSectionRowChange',{sectionName: sectionName, rowNumber: instNumber, previousRowNumber: oldInstNumber});


	},

	_findRepeatingSection: function(controlName) {
		var rsi = this.repeatingSectionInfo;
		if(typeof rsi == 'undefined') return false;
		for(var sn in rsi) {
			var ctrls = rsi[sn].controls;
			for(var i = 1; i <= ctrls.length; i++) {
				if(ctrls[i-1] == controlName.toUpperCase()) return sn;
			}
		}
		return '';
	},

	getInstanceNumber: function(controlName) {
		var rs = this._findRepeatingSection(controlName.toUpperCase());
		if(rs == '') return '';
		var rsi = this.repeatingSections[rs];
		return rsi.activeRow;
	},

	harvestRepeatingSectionColumn: function(controlName) {
		var delim = typeof arguments[1] != 'undefined' ? arguments[1] : ',';
		var mode =  typeof arguments[2] != 'undefined' ? arguments[2] : '';
		var width =  typeof arguments[3] != 'undefined' ? arguments[3] : '';
		var sectionName = this._findRepeatingSection(controlName);
		if(sectionName == '') return false;
		controlName = controlName.toUpperCase();
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rowNum = 1;
		var rows = rs.rows
		var dataArr = [];
		var ele = '';
		var ele2 = '';
		var ele3 = '';
		if(mode != '') {
			if(mode == 'width') {
				if(typeof rs._r[rowNum-1].hc == 'undefined') rs._r[rowNum-1].width = {};
				rs._r[rowNum-1].width[controlName] = width;
			} else {
				if(typeof rs._r[rowNum-1].hc == 'undefined') rs._r[rowNum-1].hc = {};
				rs._r[rowNum-1].hc[controlName] = mode;
			}
		}
		for(var instNum = 1; instNum <= rows; instNum ++) {
			if(mode == '') {
				if(rs._r[rowNum-1].i[instNum-1].deleted == false) {
					dataArr.push(this.getValue(controlName + ':' + instNum));
				}
			} else {
				this._hideRSColumnLow(controlName,instNum,mode,width);
			}
		}
		var data = dataArr.join(delim);
		return data;
	},

	setRepeatingSectionColumnWidth: function(controlName,width) {
		if(this._layoutMode != 'containerwidth') {
			alert('Set column width only supported for \'ContainerWidth\' mode');
			return false;
		};
		this.harvestRepeatingSectionColumn(controlName,',','width',width) ;
	},

	_hideRSColumnLow: function(controlName,instNum,mode) {
		var width =  typeof arguments[3] != 'undefined' ? arguments[3] : '';
		ele = $(this.dialogId + '.V.R1.' + controlName + '_A5INSTANCE' + instNum);
		tEle = $(this.dialogId + '.V.R1.' + controlName + '.RSTITLE');
		cEle = false;
		ctEle = false;
		var cn = '';
		while(ele.tagName.toLowerCase() != 'body') {
			cn = ele.className.toLowerCase();
			//if(ele.className.toLowerCase() == 'a5container' || ele.className.toLowerCase() == 'a5cwlayout') {
			if(cn.search('a5container') != -1 || cn.search('a5cwlayout') != -1  ) {
				cEle = ele;
				break;
			}

			ele = ele.parentNode;
		}
		if(tEle) {
			while(tEle.tagName.toLowerCase() != 'body') {
				if(tEle.className.toLowerCase() == 'a5container' || tEle.className.toLowerCase() == 'a5cwlayout') {
					ctEle = tEle;
					break;
				}
				tEle = tEle.parentNode;
			}
		}



		var brEle = false;
		var brtEle = false;
		if(cEle) {
			brEle = cEle.nextSibling;
		}
		if(ctEle) {
			//container width does not has a spacer div after each column title
			if(ctEle.className.toLowerCase() != 'a5cwlayout') brtEle = ctEle.nextSibling;
		}


		if(mode == 'width') {
			if(cEle) cEle.style.width = width;
			if(ctEle) ctEle.style.width = width;

			if(brEle) if(typeof brEle.style != 'undefined') brEle.style.width = width;
			if(brtEle) if(typeof brtEle.style != 'undefined') brtEle.style.width = width;

		}


		if(mode == 'hide') {
			if(cEle) cEle.style.display = 'none';
			if(ctEle) ctEle.style.display = 'none';

			if(brEle) if(typeof brEle.style != 'undefined') brEle.style.display = 'none';
			if(brtEle) if(typeof brtEle.style != 'undefined') brtEle.style.display = 'none';

		}

		if(mode == 'show') {
			if(cEle) cEle.style.display = '';
			if(ctEle) ctEle.style.display = '';

			if(brEle) if(typeof brEle.style != 'undefined') brEle.style.display = '';
			if(brtEle) if(typeof brtEle.style != 'undefined') brtEle.style.display = '';

		}

		if(mode == 'visibility_hide') {
			if(cEle) cEle.style.visibility = 'hidden';
			if(ctEle) ctEle.style.visibility = 'hidden';

			if(brEle) brEle.style.visibility = 'hidden';
			if(brtEle) brtEle.style.visibility = 'hidden';


		}
		if(mode == 'visibility_show') {
			if(cEle) cEle.style.visibility = 'visible';
			if(ctEle) ctEle.style.visibility = 'visible';

			if(brEle) brEle.style.visibility = '';
			if(brtEle) brtEle.style.visibility = '';

		}

	},

	hideRepeatingSectionColumn: function(controlName) {
		var mode =  typeof arguments[1] != 'undefined' ? arguments[1] : 'hide';
		this.harvestRepeatingSectionColumn(controlName,'',mode);
	},


	addRepeatingSectionRow: function(sectionName) {

		var flagNavToNewRow = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		if(!this._executeEvent('canRptSectionRowAdd',{sectionName: sectionName})) return false;
		var flagIsDirty = this._isDirty
		var rowNum = 1;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var pEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName);

		if(rs.usedRows < rs.rows) {
			var instNum = rs.usedRows + 1;
			rs.usedRows = instNum;
			var ele = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.I' + instNum);
			ele.style.display = '';
			//new record row was not scrolling into view
			if($(this.dialogId + '.V.R'+rowNum+'.' + sectionName+'.CONTENT')) pEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName+'.CONTENT');
			if(pEle.firstChild.id == pEle.id + '.SCROLLWRAPPER') pEle = pEle.firstChild;
		} else {
			if($(this.dialogId + '.V.R'+rowNum+'.' + sectionName+'.CONTENT')) pEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName+'.CONTENT');
			if(pEle.firstChild.id == pEle.id + '.SCROLLWRAPPER') pEle = pEle.firstChild;
			var cEle = document.createElement('div');
			var dEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I[instanceNumber]');
			var iHTML = dEle.innerHTML;

			var instNum = rs.rows + 1;
			if(typeof iHTML == 'undefined') return false;
			iHTML = iHTML.split('[instanceNumber]').join('' + instNum);

			cEle.innerHTML = iHTML;
			cEle.id = this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + instNum;
			//pEle.appendChild(cEle);

			pEle.insertBefore(cEle,$(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + rs.rows).nextSibling);
			this._prepareRepeatingSectionRow(sectionName,instNum, rowNum);
			rs.rows = instNum;
			rs.usedRows = instNum;
		}
		//if the new row you just added is already in the dom, make sure it is not set to deleted
		rs._r[0].i[instNum-1].deleted = false;

		var tempData = {};
		for(colName in rs._ci) {
			if(typeof this.defaultValues.A5REPEATINGSECTIONDATA != 'undefined') {
				tempData[colName + ':' + instNum] = this.defaultValues.A5REPEATINGSECTIONDATA[colName];
				this.originalValues[rowNum-1][colName + ':' + instNum] = this.defaultValues.A5REPEATINGSECTIONDATA[colName];
			} else {
				tempData[colName + ':' + instNum] = this.defaultValues[colName];
				this.originalValues[rowNum-1][colName + ':' + instNum] = this.defaultValues[colName];
			}
		}
		this.populate(tempData,rowNum,'incremental',false);
		this.setRepeatingSectionActiveRow(sectionName,instNum);
		this._repeatingSectionFix(sectionName, rowNum);
		this._isDirty = flagIsDirty;
		this._fireWatches(rowNum);

		/*
		var scrollContainerEle = $(this.dialogId + '.V.R' + rowNum + '.' + sectionName + '.CONTENT');
		if(scrollContainerEle) {
			if(scrollContainerEle.style.overflow == 'auto' && flagNavToNewRow) {
				pEle.scrollTop = pEle.scrollHeight;
			}
		}
		*/
		//fixed issue where add row to rs in scrollable container failed with mobile preview
		if(pEle) A5.u.element.setScroll(pEle,0,pEle.scrollHeight);
		this._executeEvent('afterRptSectionRowAdd',{sectionName: sectionName, rowNumber: instNum});

		//paint slider message on sliders in new row
		this._getRepeatingSectionLogicalRowNumber(sectionName);
		var ctli = '';
		var idi = '';
		var smt = '';
		for(var i = 0; i < this.repeatingSectionInfo[sectionName].controls.length; i++) {
			var idi = this.repeatingSectionInfo[sectionName].controls[i];
			ctli = this.getControl(idi);
			if(typeof ctli != 'undefined') {
				if(typeof ctli._sliderMessageTemplate != 'undefined') {
					this._paintSliderMessage(ctli,idi,ctli._sliderMessageTemplate);
				}
			}
		}
	},

	_repeatingSectionRowHasKey: function(sectionName,instNum) {
		//returns true if a row in a repeating section has a key value
		if(typeof this.stateInfo == 'undefined') return false;
		if(typeof this.stateInfo.keys == 'undefined') return false;
		var aliases = this.repeatingSectionInfo[sectionName].boundAliases[0];
		if(typeof aliases == 'undefined') return false;
		var key = aliases + '_row' + instNum;
		if(typeof this.stateInfo.keys[key] == 'undefined') return false;
		return true;

	},


	_cleanRepeatingSections: function() {
		for(var sN in this.repeatingSections) {
			for(var i = 0; i < this.repeatingSections[sN]._r.length; i++) {
				for(var j = 0; j < this.repeatingSections[sN]._r[i].i.length; j++) {
					this.repeatingSections[sN]._r[i].i[j].dirty = false;

				}
			}
		}

	},



	deleteRepeatingSectionRow: function(sectionName) {
		var flagSilent = typeof arguments[2] != 'undefined' ? arguments[2] : false;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rowNum = 1;
		var instNum = typeof arguments[1] != 'undefined' ? arguments[1] : -1;
		if(instNum < 1) instNum = rs.activeRow;
		if(!this._executeEvent('canRptSectionRowDelete',{sectionName: sectionName, rowNumber: instNum})) return false;

		if(instNum > 0){
			var flagDirty = this._repeatingSectionRowIsDirty(sectionName,instNum);
			var flagRowHasKey = this._repeatingSectionRowHasKey(sectionName,instNum);
			if(flagRowHasKey) flagDirty = true;
			var flagOKToDelete = true;
			if(flagSilent == false && flagDirty == true) {
				//var flagConfirm = confirm('Delete this row?');
				var classInst = this;
				var msg = classInst.repeatingSectionInfo[sectionName].prompt;
				var image = classInst.repeatingSectionInfo[sectionName].icon;

				var flagCSSIcon = this._isCSSIcon(image);
				var imageHTML = this._getImageHTML(image,flagCSSIcon);
				msg = '<div style="padding: 10px;" >' + imageHTML + msg + '<br style="clear: both;" /></div>';

				//msg = '<div style="padding: 10px;" ><img src="'+image+'" style="margin-right: 5px; float: left;"/>'+msg+'					<br style="clear: both;" /></div>'

				var title = classInst.repeatingSectionInfo[sectionName].title;
				A5.msgBox.show(title,msg,'yn',function(button) {
					if(button == 'yes'){
						classInst._deleteRepeatingSectionRowLow(sectionName,instNum);
						//want the submit button to go enabled after deleting a row that has a key (i.e databound row)
						classInst._isDataDirty = true;
						classInst._variablesChanged(['dialog.isDataDirty'],rowNum);
						classInst.refreshClientSideComputations();
						classInst._executeEvent('afterRptSectionRowDelete',{sectionName: sectionName, rowNumber: instNum});
						classInst._repeatingSectionFix(sectionName, rowNum);


					} else if(button == 'no'){
					   //do nothing
					}
					delete classInst;
					} );
				return false;

				//if(flagConfirm == false) flagOKToDelete =  false;
			}

			if(flagOKToDelete) {
				this._deleteRepeatingSectionRowLow(sectionName,instNum);
				this._executeEvent('afterRptSectionRowDelete',{sectionName: sectionName, rowNumber: instNum});
			}

		}
		this._repeatingSectionFix(sectionName, rowNum);

		this._getRepeatingSectionLogicalRowNumber(sectionName);



	},


	_deleteRepeatingSectionRowLow: function(sectionName,instNum) {
		var flagDirty = this._repeatingSectionRowIsDirty(sectionName,instNum);
		//this._setRepeatingSectionRowDirty(sectionName,instNum);
		var rowNum = 1;
		this._setRowState(rowNum,true);
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var iEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + instNum);
		iEle.style.display = 'none';
		rs._r[rowNum-1].i[instNum-1].deleted = true;
		rs._r[rowNum-1].i[instNum-1].dirty = true;
		var nextInstNum = this._repeatingSectionNextRow(sectionName,instNum);
		if(nextInstNum > 0) this.setRepeatingSectionActiveRow(sectionName,nextInstNum);
		this._repeatingSectionFix(sectionName, rowNum);
		this._getRepeatingSectionLogicalRowNumber(sectionName);
	},

	_getRepeatingSectionRowCount: function(sectionName) {
		if(typeof this.repeatingSections == 'undefined') return false;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var count = 0;
		var rowNum = 1;
		for(var i = 1; i <= rs.rows; i++) {
			if(rs._r[rowNum-1].i[i-1].deleted != true) count++;
		}
		return count;
	},

	_setRepeatingSectionColumnDefaultValues: function(sectionName) {
		sectionName = sectionName.toUpperCase()
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;


		var rows = rs.rows;
		var rsi = this.repeatingSectionInfo[sectionName];
		var controlList = rsi.controls;
		//alert(controlList);
		var dval = '';
		var ddis = false;
		for(var i = 0; i < controlList.length; i++) {
			dval = this.defaultValues.A5REPEATINGSECTIONDATA[controlList[i]];
			ddis = false;
			if(typeof this._cascadingControlsChildren != 'undefined') {
				ddis = $u.a.find(this._cascadingControlsChildren,controlList[i]) != -1 ? true : false;
			}
			//alert(ddis);
			//alert(controlList[i] + ' --- ' + dval + '==== ' + rows);
			var ele = '';
			for(var r = 1; r <= rows; r++) {
				ele = this.dialogId + '.V.R1.' + controlList[i] + '_A5INSTANCE' + r;
				ele = $(ele);
				ele.disabled = ddis;
				//$svs(ele,dval);
				//$svs() was destroying radio button controls.
				this.setValue(controlList[i] + ':' + r,dval,false);
				$sa(ele,'a5isdirty','false');
			}


		}
		//DLG1_DlgObj.defaultValues.A5REPEATINGSECTIONDATA.BETA

//		DLG1_DlgObj.repeatingSectionInfo.CONTAINER_1.controls
//		DLG1_DlgObj._cascadingControls = ['CATEGORYID'];


	},

	_RepeatingSectionFixImagesIE_All: function() {
		if(typeof this.repeatingSections == 'undefined') return true;
		var rs = this.repeatingSections;
		if(typeof rs == 'undefined') return false;
		for(var rn in rs) {
			this._RepeatingSectionFixImagesIE(rn);
		}
	},

	_RepeatingSectionFixImagesIE: function(sectionName) {
		//in IE10 in a repeating section, the images in image controls are not sized correctly if they don't have an explicit size
		sectionName = sectionName.toUpperCase();
		if(typeof this.repeatingSections == 'undefined') return true;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rows = rs.rows;
		var rsi = this.repeatingSectionInfo[sectionName];
		var controlList = rsi.controls;
		var type = '';
		for(var i = 0; i < controlList.length; i++) {
			type = this.columnInfo[controlList[i]].type;
			if(type == 'img,img') {
				var ele = '';
				for(var r = 1; r <= rows; r++) {
					ele = this.dialogId + '.V.R1.' + controlList[i] + '_A5INSTANCE' + r;
					ele = $(ele);
					$svs(ele,$gvs(ele));
				}
			}
		}
	},

	_setRepeatingSectionRowCount: function(sectionName,rows) {
		rows = Number(rows);
		this._fireWatchesFlag = false;
		var flagNavToNewRow = typeof arguments[2] != 'undefined' ? arguments[2] : true;
		var flagSetToNull = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		var rowNum = 1;
		var iEle = 0;
		if(typeof this.repeatingSections == 'undefined') return false;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		rs.usedRows = rows;
		var totalRows = rs.rows;
		//undelete all rows and set all controls to null
		for(var i = 1; i <= totalRows; i++) {
			if(rs._r[rowNum-1].i[i-1].deleted == true) {
				if(flagSetToNull) this.undeleteRepeatingSectionRow(sectionName,i);
			} else {
				if(flagSetToNull) {
					iEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + i);
					if(iEle) iEle.style.display = '';
				}
			}
			//set values in row that you undelete to null
			if(flagSetToNull) this._setRepeatingRowValuesToNull(sectionName,i);
		}
		if(rows > totalRows) {
			var rowsToAdd = rows - totalRows
			for(var i = 1; i <= rowsToAdd; i++) {
				this.addRepeatingSectionRow(sectionName,flagNavToNewRow);
			}
		}
		if(totalRows > rows) {
			var rowsToDelete = totalRows - rows;
			var rn = 0;
			var iEle = 0;
			for(var i = 1; i <= rowsToDelete; i++) {
				rn = (totalRows-i) + 1;
				iEle = $(this.dialogId + '.V.R'+rowNum+'.' + sectionName + '.I' + rn);
				if(iEle) iEle.style.display = 'none';
				rs._r[rowNum-1].i[rn-1].deleted = true;
			}
		}
		if(!flagSetToNull) {
			//if not setting existing data to null, deleted rows are not restored, therefore
			//the actual row count might still be short
			var actualRows = this._getRepeatingSectionRowCount(sectionName);
			var rowsStillToAdd = rows - actualRows;
			if(rowsStillToAdd > 0 ) {
				for(var i = 1; i <= rowsStillToAdd; i++) {
					this.addRepeatingSectionRow(sectionName,flagNavToNewRow);
					//alert('target row count: ' + rows + ' actual ' + actualRows);
				}
			}
		}

		this._fireWatchesFlag = true;
		this._fireWatches(rowNum);
		if(flagNavToNewRow) this.setRepeatingSectionActiveRow(sectionName,1);
	},

	_setRepeatingRowValuesToNull: function(sectionName,instNum) {
		var obj = this.repeatingSectionInfo[sectionName];
		var row = 1;
		for(var i = 1; i <= obj.controls.length; i++) {
			this.originalValues[0][obj.controls[i-1]+':' + instNum] = '';
			this.setValue(obj.controls[i-1] +':' + instNum,'',false);
			//$sa($cetp($n('V.R'+row + '.' + obj.controls[i-1]),$(this.dialogId+'.R' + row)),'A5IsDirty','false');
			$sa(this._functionToConstrainElements($n('V.R'+row + '.' + obj.controls[i-1])),'A5IsDirty','false');

		}
	},

	undeleteRepeatingSectionRow: function(sectionName,instNum) {
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var rowNum = 1;
		rs._r[rowNum-1].i[instNum-1].deleted = false;
		var eleName = this.dialogId + '.V.R'+rowNum+'.'+sectionName+'.I'+instNum;
		var ele = $(eleName);
		if(ele) {
			ele.style.display = '';
			this.setRepeatingSectionActiveRow(sectionName,instNum);
		}
	},


	_repeatingSectionNextRow: function(sectionName,instNum) {
		var rowNum = 1;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var instData = rs._r[rowNum-1].i;
		for(var i = instNum + 1; i <= rs.rows; i++) {
			if(instData[i-1].deleted == false) return i;
		}

		for(var i = instNum - 1; i >= 1; i--) {
			if(instData[i-1].deleted == false) return i;
		}

		return -1;

	},

	_repeatingSectionFix: function(sectionName, rowNum) {
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		for(var i = 0; i < rs._r[rowNum-1].i.length; i++) {
			if(rs._r[rowNum-1].i[i].deleted == false) {
				var ele = $(this.dialogId + '.V.R' + rowNum + '.' +sectionName + '.I' + (i+1) + '.DIVIDER');
				if(ele) ele.style.display = 'none';
				break;
			}
		}
		//force summary calculations to recompute
		this.refreshClientSideComputations();
	},



	accordionPanes: function(id,action) {
		//action is 'open' or 'close' - opens or closes all panes on an accordion
		action = action.toUpperCase()[0];
		var test = true;
		if(action == 'O') test = false;
		var ele = window[this.dialogId + '.V.R1.' + id + 'Obj'];
		var count = ele.bands.length;
		for(var i = 1; i <= count; i++) {
			if(ele.bands[i-1].expanded == test) {
				ele.select(i-1,true);
			}
		}
	},

	genieObjectNavigate: function(id,target) {

		var rowNum = typeof arguments[2] != 'undefined' ? arguments[2] : 1;
		target = target.toLowerCase();
		var name = this.dialogId + '.V.R1.' + id + 'Obj';
		var ele = window[name];
		if(!ele) return false;
		var elePanes = '';
		if(typeof ele.panes != 'undefined')  {
			elePanes = ele.panes;
		} else if(typeof ele.bands != 'undefined') {
			elePanes = ele.bands;
		} else {
			return false;
		}

		var currentId = -1;
		if(typeof ele._curTabIndx != 'undefined') currentId = ele._curTabIndx;
		else currentId = ele._curBandIndx;

		if(target == 'currentpaneid') {
			return currentId;
		} else {
			var visiblePanes = [];
			for(var i = 0; i < elePanes.length; i++) {
				if(elePanes[i].show) visiblePanes.push(i);
			}
			var nextPane = 0;
			var lastPane = visiblePanes[visiblePanes.length-1];
			var currentPaneNumber = ($u.a.find(visiblePanes,currentId))
			if(target == 'next') nextPane = visiblePanes[currentPaneNumber + 1];
			if(target == 'prev') nextPane = visiblePanes[currentPaneNumber - 1];
			if(target == 'first') nextPane = visiblePanes[0];
			if(target == 'last') nextPane = visiblePanes[lastPane];
			if(typeof nextPane != 'undefined') {
				ele.select(nextPane);
				this._variablesChanged(['dialog.tabObject.' + id],rowNum);
			}
		}

		this.genieButtonStates(id);
	},

	genieButtonStates: function(id) {
		var dialog = {};
		this._getTabObjectInfo(dialog,id);

		var elePrev = $(this.dialogId + '.' + id + '.PREVIOUS');
		var eleNext = $(this.dialogId + '.' + id + '.NEXT');
		var eleSubmit = $(this.dialogId + '.' + id + '.SUBMIT');
		if(elePrev) {
			if(dialog.tabObject[id].isOnFirstPane) elePrev.style.display = 'none';
			else elePrev.style.display = '';
		}
		if(eleNext) {
			if(dialog.tabObject[id].isOnLastPane) eleNext.style.display = 'none';
			else eleNext.style.display = '';
		}
		if(eleSubmit) {
			if(dialog.tabObject[id].isOnLastPane) eleSubmit.style.display = '';
			else eleSubmit.style.display = 'none';
		}
	},


	cascadingDropdown: function(rowNumber, value,childControls,part,thisControl) {

		//all dropdowns in a dialog have call cascadingDropdown(). But if they don't have dependent controls, it is a no-op.
		var arr = this._cascadingControls;
		var controlName = thisControl;
		var instNum = 0;
		controlName = controlName.split('_A5INSTANCE');
		if(controlName[1]!= '') instNum = controlName[1];
		controlName = controlName[0];
		controlName = controlName.split('.')
		controlName = controlName[ (controlName.length -1)];
		if($u.a.find(arr,controlName) == -1 ) return false;;
		part = 'O';
		var data = '';
		data = data + '__dropdownValue=' + urlencode(value);
		data = data + '&__childControls=' + urlencode(childControls);
		data = data + '&__thisControl=' + urlencode(controlName);
		data = data + '&__part=' + urlencode(part);
		//when a grid was being run as a lookup grid, __part was getting overwritten with the wrong value
		data = data + '&__part2=' + urlencode(part);
		data = data + '&_rowNumber=' + urlencode(rowNumber);
		data = data + '&_instanceNumber=' + instNum;
		this._executeEvent('beforeAjaxCallback',{ajaxEvent: 'cascadingDropdown'})

		this.ajaxCallback('G',1,'system:cascadingDropdown','',data);
		return false;

	},

	_getControlInfo: function(colName){
		colName = colName.toUpperCase();
		var tColName = '';
		if(colName.search(':') != -1 ) 	tColName = colName.split(':');
		else tColName = colName.split('_A5INSTANCE');
		var tObj = {name: tColName[0], controlName: tColName[0], controlId: tColName[0], fullName: tColName[0], calculateSummary: false, instNum: -1, hiddenControlName: tColName[0] + '_A5HIDDENVALUE', hiddenControlId: tColName[0], hiddenValue: false};
		if(this.columnInfo[tColName[0]]){
			if(typeof this.columnInfo[tColName[0]].repeatingSection != 'undefined'){
				var tRSInstNum = 0;
				var rsObj = this.repeatingSections[this.columnInfo[tColName[0]].repeatingSection];
				if(tColName.length > 1) tRSInstNum = $u.s.toNum(''+tColName[1]);
				if(tRSInstNum <=0) tRSInstNum = rsObj.activeRow;
				if(tRSInstNum > rsObj.rows) tRSInstNum = rsObj.rows;
				tObj.controlName = tObj.name+'_A5INSTANCE'+tRSInstNum;
				tObj.hiddenControlName = tObj.name+'_A5HIDDENVALUE_A5INSTANCE'+tRSInstNum;
				tObj.fullName = tObj.name + ':' + tRSInstNum;
				tObj.instNum = tRSInstNum;
			}
			tObj.controlId = tObj.controlName;
			tObj.hiddenControlId = tObj.hiddenControlName;
			if(this.columnInfo[tObj.name].isArray && this.columnInfo[tObj.name].type != 'control') tObj.controlName = tObj.controlName + '[]';
			if(this.columnInfo[tObj.name].calculateSummary) tObj.calculateSummary = this.columnInfo[tObj.name].calculateSummary;
			if(this.columnInfo[tObj.name].type) tObj.type = this.columnInfo[tObj.name].type;
			if(this.columnInfo[tObj.name].info) tObj.info = this.columnInfo[tObj.name].info;
			if(this.columnInfo[tObj.name].hiddenVal) tObj.hiddenValue = this.columnInfo[tObj.name].hiddenVal;
		}
		return tObj;
	},

	_summarize: function(name,rowNum){
		var flagVarChanged = typeof arguments[2] != 'undefined' ? arguments[2] : true;
		name = name.toUpperCase();
		var cntrlInfoObj = this._getControlInfo(name);
		name = cntrlInfoObj.name;
		var sectionName = this.columnInfo[name].repeatingSection;
		var rs = this.repeatingSections[sectionName];
		if(typeof rs == 'undefined') return false;
		var values = [];
		for(var i=1;i<=rs.rows;i++){
			if(rs._r[rowNum-1].i.length == 0) values.push(this.getValue(name+'_A5INSTANCE'+i,rowNum));
			else {
				if(!rs._r[rowNum-1].i[i-1].deleted) values.push(this.getValue(name+'_A5INSTANCE'+i,rowNum));
			}
		}
		if(this.columnInfo[name].dataType == 'N'){
			var sum = {count: values.length, total: 0, average: 0, first: 0, last: 0, minimum: 0, maximum: 0, standardDeviation: 0, variance: 0};
			if(sum.count > 0){
				for(var i=0;i<values.length;i++){
					values[i] = $u.s.toNum(values[i]);
					sum.total += values[i];
				}
				//fix rounding problems with addition. e.g. var x = 45.9 + 51 + -45.9 + -51; alert(x);
				//var scale = 100000;
				var scale = 10000000;
				sum.total = Math.round(sum.total * scale)/scale;


				sum.average = sum.total/sum.count;
				sum.first = values[0];
				sum.last = values[values.length-1];
				values.sort(function(a,b){return a - b});
				sum.minimum = values[0];
				sum.maximum = values[values.length-1];

				// variance/standard deviation
				var sdVal = 0;
				var sdtVal = 0
				for(var i=0;i<values.length;i++){
					sdtVal = values[i]-sum.average;
					sdtVal = sdtVal*sdtVal;
					sdVal += sdtVal;
				}
				sum.variance = sdVal/sum.count;
				sum.standardDeviation = Math.sqrt(sdVal/sum.count);
			}
		} else{
			// Add date/logical handling at some point
			var sum = {count: values.length, first: '', last: '', minimum: '', maximum: ''};
			if(sum.count > 0){
				sum.first = values[0];
				sum.last = values[values.length-1];
				values.sort();
				sum.minimum = values[0];
				sum.maximum = values[values.length-1];
			}
		}
		this.rowStateInfo[rowNum-1].summary[name] = {};
		$u.o.assign(this.rowStateInfo[rowNum-1].summary[name],sum);
		if(flagVarChanged) this._variablesChanged(['summary.' + name],rowNum);
	},

	_variablesChanged: function(variables,rowNum) {
		for(var dialogWatch in this.dialogWatches) {
			if(this.dialogWatches[dialogWatch].variables) {
				for(var i = 0; i < variables.length; i++) {
					if($u.a.find(this.dialogWatches[dialogWatch].variables,variables[i]) != -1) {
						A5.Watch.fire(this.dialogId + '.R' + rowNum + '.' + dialogWatch);
						break;
					}
				}
			}
		}
	},

	setStateInfo: function(obj) {
		$u.o.assign(this.stateInfo,obj);
	},

	getStateInfo: function() {
		var stateData = $u.o.toParams(this.stateInfo,'_state');
		var listsStateData = this._getListsState();
		stateData = stateData + '&' +A5.ajax.buildURLParam('_state.listsControls',listsStateData);
		var sa = this._securityAction;
		if(typeof sa == 'undefined') sa = '';
		stateData = stateData + '&__securityAction=' + sa;
		return stateData;
	},


	_getListsState: function() {
			var ci = this._controlInst;
			var lObj = '';
			var name = '';
			var filter = '';
			var arr = [];
			var obj_i = {}
			for(var ll in ci) {
				lObj = ci[ll];
				name = ll.split('.')[1];
				if(typeof this._listViewSettings[name] != 'undefined') {
					delete obj_i
					var obj_i = {};
					obj_i.name = name;
					obj_i.state = lObj._state;
					arr.push(obj_i);
				}
			}

			return $u.o.toJSON(arr);
	},

	refreshCaptcha: function(name) {
		var rowNum = 1;
		var data = '_captchaName=' + name + '&_rowNum=' + rowNum
		this.ajaxCallback('G',1,'system:refreshCaptcha','',data);
	},

	newRecord: function() {
		var ops = typeof arguments[0] != 'undefined' ? arguments[0] : {};
		var flag = '';
		flag = this._executeEvent('canRecordNavigate',{isDirty: this._isDirty, isDataDirty:  this._isDataDirty, target: 'newRecord'});
		if (flag == false) {
			this._setSliderPosition(this._currentRecordNumber,false);
			if(typeof this._primaryKeyListNavigator != 'undefined') this._primaryKeyListNavigator.setValue(this._currentRecordNumber -1,false); //don't navigate to target record
			return false;
		}

		var data = '_newRecord=yes&_newRecordOptions='  + $u.o.toJSON(ops);
		delete this.stateInfo.keys;
		this.ajaxCallback('G',1,'system:newRecord','',data);
		this._executeEvent('afterRecordNavigate',{target: 'newRecord'});

		if(typeof this._signatureControls != 'undefined') {
			for(var i=0; i < this._signatureControls.length; i++) {
				this._functions._fillCanvas(this._signatureControls[0]);
				this._functions._toggleCanvas(this._signatureControls[0],'canvas');
			}
		}

		for(var repeatingSection in this.repeatingSections) {
			this.setRepeatingSectionActiveRow(repeatingSection,1);
		}

		if(typeof this.__navigationSliderObject != 'undefined') {
			var count = parseInt(this.__navigationSliderObject.max);
			this._setSliderPosition(count,false);
			var msg = 'New record';
			if(typeof this.navigationSliderNewRecordMsg != 'undefined') msg = this.navigationSliderNewRecordMsg;
			if($(this.__sliderDynMsgId)) $(this.__sliderDynMsgId).innerHTML = msg;
			this._currentRecordNumber = -1;
		}

		if(typeof this._primaryKeyListNavigator != 'undefined') {
			this._primaryKeyListNavigator.setValue(-1,false);
		}


	},

	serverIsAvailable: function(timeOut) {
		var prefix = this.ajaxURL.split('?')[0];
		if(typeof prefix == 'undefined' ) prefix = '';
		else {
			prefix = prefix.split('/');
			prefix.pop();
			prefix = prefix.join('/');
			if(prefix != '') prefix = prefix + '/';
		}
		if(typeof timeOut == 'undefined') timeOut = 300;
		var obj = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		var success = typeof arguments[1] != 'undefined' ? arguments[1] : function() {};
		var failure = typeof arguments[2] != 'undefined' ? arguments[2] : function() {};

		if(this._embeddedMode) {
			success();
			return true;
		}

		var tt = new Date();
		var _eh = function() { A5._serverAvailable = false; A5._serverCheckTime = tt;  };
		var _h = function() { A5._serverAvailable = true; A5._serverCheckTime = tt;};

		var page = '__a5ServerAvailableTest.a5w';
		page = prefix + page;
		var sObj = {};
		sObj.method = 'head';
		sObj.timeout = timeOut;
		sObj.errorHandle = function() { _eh(); failure();  };
		sObj.handle = function() {  _h(); success() };

		if(typeof this._onlineStatus != 'undefined') {
			if(this._onlineStatus == 'offline') {
				sObj.errorHandle();
				return false;
			}
		}



		new $a.simple(page,sObj);
	},

	saveDataInRepository: function(key) {
		var data = '_repositoryKey=' + key;
		this.ajaxCallback('G',1,'system:saveDataInRepository','',data);
	},

	loadDataFromRepository: function(key) {
		var flagDelete = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var data = '_repositoryKey=' + key + '&_delete=' + flagDelete;
		this.ajaxCallback('G',1,'system:loadDataFromRepository','',data);
	},

	clearLoginErrors: function() {
		var ph = this._loginErrorsPH;
		if(typeof ph == 'undefined') return false;
		ele = this.dialogId + '.V.R1.' + ph;
		if(ele) {
			ele.style.display = 'none';
			ele.innerHTML = '';
		}
	},

	login: function() {
		var obj = typeof arguments[0] != 'undefined' ? arguments[0] : {};
		if(this._executeEvent('canLogin',{}) == false) return false;
		var data = A5.ajax.buildURLParam('__loginSettings', $u.o.toJSON(obj) );
		this.ajaxCallback('','','system:login','',data);
	},

	logout: function() {
		var result = this._executeEvent('canLogout',{});
		if(result == false) return false;
		var loginFrom = '';
		var redirectPage = '';
		if(typeof A5.__loginPage != 'undefined') redirectPage = A5.__loginPage;
		if(typeof A5.__loginFrom != 'undefined') loginFrom = A5.__loginFrom;

		if(redirectPage == '') {
			alert('This method can only be used if the user logged in from the AppLauncher component, or from a UX with intergrated login functionality');
			return false;
		}
		var data = A5.ajax.buildURLParam('__redirectPage',A5.__loginPage)
		data = data + '&__loginFrom=' + loginFrom;
		if (loginFrom == 'ux') {
			if(this.dialogId == A5.__loginUX) this.ajaxCallback('','','system:logout','',data);
			//user executed .logout() method of a child ux.
			else window[A5.__loginUX + '_DlgObj'].logout();
		} else {
			this.ajaxCallback('','','system:logout','',data);
		}

	},



	loggedInUserNameFriendlyGet: function() {
		if(typeof A5.__loginUserNameFriendly != 'undefined') return A5.__loginUserNameFriendly;
		else return '';
	},

 	loginAlternative: function(named) {
 		if(this._executeEvent('canLogin',{}) == false) return false;
 		var data = A5.ajax.buildURLParam('__pagename', window.location.pathname );
 		this.ajaxCallback('','','','__a5ExternalAuthentication.a5w',data+'&state='+named+'|'+this.dialogId+'_DlgObj&__Mode=1N');
  	},

 	addAlternativeLoginToCurrentUser: function(named) {
 		var data = A5.ajax.buildURLParam('__pagename', window.location.pathname );
 		var varName = typeof arguments[1] != 'undefined' ? arguments[1] : {};
 		this.ajaxCallback('','','','__a5ExternalAuthentication.a5w',data+'&state='+named+'|'+this.dialogId+'_DlgObj&__Mode=2&__variableName='+varName);

 	},

	ajaxCallbackCrossDomain: function(url,successFunction) {
		var flagJQuery = typeof arguments[2] != 'undefined' ? arguments[2] : false;
		var callbackParameter = typeof arguments[3] != 'undefined' ? arguments[3] : 'callback';
		if(!flagJQuery) {
			this._ajaxCallbackCrossDomain(url,successFunction,callbackParameter);
			return true;
		}
		if(typeof jQuery == 'undefined') {
			alert('This method required jQuery. See Project Properties dialog to turn on jQuery.');
			return false;
		}
		//no error function for jsonp callbacks
		jQuery.ajax({
			url: url,
			contentType: 'application/json',
			dataType: 'jsonp',
			success: successFunction
		});
	},

	getOAuthAccessToken: function(named) {
		var data = A5.ajax.buildURLParam('__pagename', window.location.pathname );
		var varName = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		this.ajaxCallback('','','','__a5ExternalAuthentication.a5w',data+'&state='+named+'|'+this.dialogId+'_DlgObj&__Mode=3&__variableName='+varName);
	},

	_ajaxCallbackCrossDomain: function(url,successFunctionName) {
		var callbackParameter = typeof arguments[2] != 'undefined' ? arguments[2] : 'callback';
		var script = document.createElement('script');
		script.src = url + '&'+callbackParameter+'=' + successFunctionName;
		script.onload = function() { this.parentNode.removeChild(this);}
		document.head.appendChild(script);
	},

	_executeAjaxCallbackCompleteCode: function(id) {
		var code = this._ajaxCallbackCompleteCode[id];
		if(typeof code != 'undefined') {
			if(typeof arguments[1] != 'undefined') {
				code[arguments[1]].call(); //'success' or 'fail'
			} else {
				code.call();
			}
			delete this._ajaxCallbackCompleteCode[id];
		}
	},


	ajaxCallback: function(part,rowNum,xbasicFunction) {


		if(!this._executeEvent('canAjaxCallback',{xbasicFunctionName: xbasicFunction, ajaxEvent: 'AjaxCallback'})) return false;
		part = part.toUpperCase().substring(0,1);
		var callbackURL = typeof arguments[3] != 'undefined' ? arguments[3] : '';
		var otherData = typeof arguments[4] != 'undefined' ? arguments[4] : '';
		var ops = typeof arguments[5] != 'undefined' ? arguments[5] : {};
		var flagSaveListData = ops.flagSaveListData; //ajax callback to sync list data - do not need to submit data in HIDDENA5FN fields
		if(typeof flagSaveListData == 'undefined') flagSaveListData = false;

		if(typeof this._onlineStatus != 'undefined') {
			if(this._onlineStatus == 'offline') {
				if(typeof ops.deviceOfflineFunction == 'function') {
					ops.deviceOfflineFunction.apply(this);
				}
				this._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: xbasicFunction, ajaxEvent: 'AjaxCallback'})
				return false;
			}
		}

		var onCompleteCode = '';
		var callbackId = A5.UUID();
		if(typeof ops.onComplete != 'undefined') {
			onCompleteCode = ops.onComplete;
			var objx = this._ajaxCallbackCompleteCode;
			objx[callbackId] = onCompleteCode;
		}



		var flagSubmitFormData = true;
		if(typeof ops.submitFormData != 'undefined') flagSubmitFormData = ops.submitFormData

		var flagGetLocationData = false;
		var _locationHighAccuracy = this.locationHighAccuracy;
		var _locationTimeout = this.locationTimeout;
		var _locationMaximumAge = this.locationMaximumAge;
		var _ajaxCallbackTimeout = this.ajaxCallbackTimeout;
		if(typeof ops.getLocationData != 'undefined') flagGetLocationData = ops.getLocationData;
		if(typeof ops.enableHighAccuracy != 'undefined') _locationHighAccuracy = ops.enableHighAccuracy;
		if(typeof ops.timeout != 'undefined') _locationTimeout = ops.timeout;
		if(typeof ops.maximumAge != 'undefined') _locationMaximumAge = ops.maximumAge;
		if(typeof ops.ajaxCallbackTimeout != 'undefined') _ajaxCallbackTimeout = ops.ajaxCallbackTimeout;


		var errFn = '';
		if(typeof ops.errorFunction != 'undefined') errFn = ops.errorFunction;

		if(rowNum == '') rowNum = 1;
		if(typeof rowNum == 'undefined') rowNum = 1;

		//
		//rowNum can be 1, 2, 3, etc. or 1:none, 3:all etc
		//we want tempRowNum to be 1, 2, none, all so we can pass that into _getData(), and currentRowNum to be the actual current row number
		//if you pass in say 3, then tempRowNum and currentRowNum are both 3
		//but if you pass in 3:all, then tempRowNum = 'all' and currentRowNum = 3
		if(isNaN(rowNum)) {
			if(rowNum.toLowerCase() == 'all' || rowNum.toLowerCase() == 'all:all' ) {
				var tempRowNum = 'all';
				var currentRowNum = this._selectedRow;

			} else if (rowNum.toLowerCase() == 'none' || rowNum.toLowerCase() == 'none:none' ) {
				var tempRowNum = 'none';
				var currentRowNum = this._selectedRow;
			} else {
				if(rowNum.indexOf(':') == -1 ) {
				    var tempRowNum = 'all';
				    var currentRowNum = this._selectedRow;
				} else {
				    var rowNumC = new String(rowNum);
				    var currentRowNum = rowNumC.split(':')[0];
				var	tempRowNum = rowNumC.split(':')[1];
				};
			}
		} else {
			var tempRowNum = rowNum;
			var currentRowNum = rowNum;
		}
		//var data = this._getData(part,rowNum);
		var data = '';
		if(flagSubmitFormData==true) {
			data = this.harvest({flagHarvestImageData: !flagSaveListData} );
		}

		var browserData = $u.o.toJSON(A5.flags);
		data = data + '&' + A5.ajax.buildURLParam('__a5browserflags',browserData);
		data = data + '&_part=' + part;
		data = '&' + data;

		var hc = []
		for(var c in this._hiddenControls) {
			hc.push(c);
		}

		data = data + '&_hiddenControls=' + JSON.stringify(hc);

		//get repeating section active rows
		var rs = {};
		var rsPname = '';

		if(flagSubmitFormData) {
			for(var repeatingSection in this.repeatingSections) {
				rsPname = '_repeatingSections.' + repeatingSection;
				rs = this.repeatingSections[repeatingSection];
				if(typeof rs == 'undefined') return false;
				data = data + '&' +rsPname + '.activeRow=' + rs.activeRow;
				data = data + '&' + rsPname + '.visibleRows=' + this.getRepeatingSectionVisibleRows(repeatingSection);
				var rsDeletedInst = [];
				var rsDirtyInst = [];
				for(var i = 1; i <=rs.rows; i++)  {
					if(rs._r[currentRowNum-1].i[i-1].deleted) rsDeletedInst.push(i);
					if(rs._r[currentRowNum-1].i[i-1].dirty) rsDirtyInst.push(i);
				}
				data = data + '&' + rsPname + '.deletedRows='+rsDeletedInst.join(',');
				data = data + '&' + rsPname + '.dirtyRows='+rsDirtyInst.join(',');
			}
		}

		if(callbackURL == '') {
			data = '_XbasicFunction='+xbasicFunction+'&_currentRow='+currentRowNum+'&__FormAction=GenericAjaxCallback&__FormID=' + this.gridId+data;
			callbackURL = this.ajaxURL;
		} else {
			data = '_Action='+xbasicFunction+'&_currentRow='+currentRowNum+'&__FormAction=GenericAjaxCallback&__FormID=' + this.gridId+data;
		}
		if(otherData!='') data=data + '&' + otherData;
		data = data + '&' + this.getStateInfo();
		data = data + '&__componentGUID=' + this.componentGUID + '&__instanceGUID=' + this._getInstanceId(false);

		data = data + '&__callbackId=' + callbackId ;


		var aFail = {};
		//aFail.errorHandle = Function(this.dialogId + '_DlgObj._executeEvent(\'onAjaxCallbackFailed\',this)');
		//aFail.errorHandleContext = {xbasicFunctionName: xbasicFunction, ajaxEvent: 'AjaxCallback'};
		//errFn was passed in
		aFail.errorHandleContext = {xbasicFunctionName: xbasicFunction, ajaxEvent: 'AjaxCallback', _uerrorFn: errFn};

		//see blow - added in check for status code 401 and 403
		aFail.errorHandle = Function(this.dialogId + '_DlgObj._executeEvent(\'onAjaxCallbackFailed\',this); if(this._uerrorFn.constructor == Function) this._uerrorFn(); ');


		aFail.timeout = _ajaxCallbackTimeout;

		/*
		inside aFail.errorHandle, you can see arguments[0].status
			arguments[0].status == 401 -- fire 'securityNotAuthenticated' event - user is not logged in and has tried to do something that required a login
			arguments[0].status == 403  -- fire 'securityPermissionDenied' event - user is logged in, but does not have permission to do what they tried to do

		aFail.errorHandle = function(e) { }
		aFail.onload
		//onprogress
		//onerror
		//onabort
		//onload
		*/

		var errorHandleFunction = [
		"var obj = " + this.dialogId + "_DlgObj;",
		"if(arguments[0].status == 401) {",
		"	obj._executeEvent('securityNotAuthenticated',{xbasicFunctionName: '"+xbasicFunction+"' }); return false;",
		"}",
		"if(arguments[0].status == 403) {",
		"	obj._executeEvent('securityPermissionDenied',{xbasicFunctionName: '"+xbasicFunction+"' }); return false;",
		"}",
		"obj._executeEvent('onAjaxCallbackFailed',this); if(this._uerrorFn.constructor == Function) this._uerrorFn(); "
		].join('\n');
		aFail.errorHandle = Function( errorHandleFunction );



		if(this._embeddedMode || this._livePreviewInBuilder) flagGetLocationData = false;
		if(flagGetLocationData) {
				navigator.geolocation.getCurrentPosition(
				function(pos) {
					var loc = pos.coords.latitude+','+pos.coords.longitude;
					var locData='&__locationFound=true&__locationLatitude=' +pos.coords.latitude + '&__locationLongitude=' + pos.coords.longitude
					data = data + locData;
					A5.ajax.callback(callbackURL,data,aFail);
					return false;
				},
				function(error) {
					//failed
					var locData='&__locationFound=false'
					data = data + locData;
					A5.ajax.callback(callbackURL,data,aFail);
					return false;
 			} ,	{enableHighAccuracy : _locationHighAccuracy, timeout: _locationTimeout, maximumAge: _locationMaximumAge})
		} else {
			//location not supported
			var locData='&__locationFound=false'
			data = data + locData;
			A5.ajax.callback(callbackURL,data,aFail);
			return false;
		}
	},



	_getRepeatingSectionInfo: function() {
		var currentRowNum = 1;
		//get repeating section active rows
		var data = '';
		var rs = {};
		var rsPname = '';
		for(var repeatingSection in this.repeatingSections) {
			rsPname = '_repeatingSections.' + repeatingSection;
			rs = this.repeatingSections[repeatingSection];
			if(typeof rs == 'undefined') return false;
			data = data + '&' +rsPname + '.activeRow=' + rs.activeRow;
			var rsDeletedInst = [];
			var rsDirtyInst = [];
			for(var i = 1; i <=rs.rows; i++)  {
				if(rs._r[currentRowNum-1].i[i-1].deleted) rsDeletedInst.push(i);
				if(rs._r[currentRowNum-1].i[i-1].dirty) rsDirtyInst.push(i);
			}
			data = data + '&' + rsPname + '.deletedRows='+rsDeletedInst.join(',');
			data = data + '&' + rsPname + '.dirtyRows='+rsDirtyInst.join(',');
			data = data + '&' + rsPname + '.visibleRows='+this.getRepeatingSectionVisibleRows(repeatingSection);
		}
		return data;
	},

	_dvButtonEnabled: function() {
		return false;
	},

	_getDialogVariables: function(dialog,summary,data) {
		dialog.activeLayoutRule = this._activeLayoutRule;
		dialog.orientation = this.getOrientation();

		dialog.loggedInUserName = '';
		dialog.loggedInUserNameFriendly = '';
		dialog.isLoggedIn = false;

		if(typeof A5.__loginUserName != 'undefined') dialog.loggedInUserName = A5.__loginUserName;
		if(typeof A5.__loginUserNameFriendly != 'undefined') dialog.loggedInUserNameFriendly = A5.__loginUserNameFriendly;
		if(dialog.loggedInUserName != '') dialog.isLoggedIn = true;




		//will need to fill in dialog. state varibles for use in client side calc fields.
		dialog.isDirty = this._isDirty;
		dialog.isDataDirty = this._isDataDirty;
		//dialog.state is not yet implemented - don't know what this means. header could be in view and a row in a Repeating Section could be enter


		dialog.isNewRecord = true;
		var primaryAlias = this._primaryTableAlias;
		if(primaryAlias != '') {
			if(typeof this.stateInfo.keys != 'undefined') {
				if(typeof this.stateInfo.keys[primaryAlias] != 'undefined') dialog.isNewRecord = false;
			}
		}

		dialog.firstRecord = false;
		dialog.lastRecord = false;
		if(typeof pkl != 'undefined') {
			if(typeof this._currentRecordNumber != 'undefined') {
				var pkl = this._primaryKeyList;
				dialog.firstRecord = false;
				dialog.lastRecord = false;
				if(this._currentRecordNumber == 1) {
					dialog.firstRecord = true;
					dialog.lastRecord = false;
				} else if(this._currentRecordNumber == pkl.length) {
					dialog.firstRecord = false;
					dialog.lastRecord = true;
				}
			}
		}

		dialog.activePanelId = this.panelGetActive();
		dialog.activePanelName = '';
		if(dialog.activePanelId != '') dialog.activePanelName =  window[this.dialogId + '_PanelObj']._displayNames[dialog.activePanelId];

		var rsInfo = this.rowStateInfo[data.rowNumber-1];
		if(typeof rsInfo != 'undefined') {
			$u.o.assign(summary,this.rowStateInfo[data.rowNumber-1].summary);
		}
		if(this._tabObjects.length > 0) {
			for(var i in this._tabObjects) {
			    this._getTabObjectInfo(dialog,this._tabObjects[i]);
			}
		}


		var lObj = '';
		dialog.listDetailView = {};
		dialog.listRow = {};



		//initialize to false
		var arr = this._listControls;
		for(var i = 0; i < arr.length; i++) {
			dialog.listDetailView[arr[i].toUpperCase()] = {};
			dialog.listDetailView[arr[i].toUpperCase()].isDirty = false;
			dialog.listRow[arr[i].toUpperCase()] = {};
			dialog.listRow[arr[i].toUpperCase()].isDirty = false;
			dialog.listRow[arr[i].toUpperCase()].isRowSelected = false;
			dialog.listDetailView[arr[i].toUpperCase()].mode = '';
		}


		var flagIsRowSelected = false;
		if(typeof this._listsDV != 'undefined') {
			for(var i = 0; i < this._listsDV.length; i++) {
				lObj = this.getControl(this._listsDV[i]);
				if(lObj) {
					dialog.listDetailView[this._listsDV[i]] = {};
					dialog.listDetailView[this._listsDV[i]].isDirty = lObj.detailViewIsDirty();
					dialog.listRow[this._listsDV[i]] = {};
					dialog.listRow[this._listsDV[i]].isDirty = lObj.listRowIsDirty();

					flagIsRowSelected = false;
					if(typeof lObj.selection != 'undefined') {
						if(lObj.selection.length == 1) flagIsRowSelected = true;
					}
					dialog.listRow[arr[i].toUpperCase()].isRowSelected = flagIsRowSelected;

					dialog.listDetailView[this._listsDV[i]].mode = lObj._dvmode;
				} else {
					dialog.listDetailView[this._listsDV[i]] = {};
					dialog.listDetailView[this._listsDV[i]].isDirty = false;
					dialog.listRow[this._listsDV[i]] = {};
					dialog.listRow[this._listsDV[i]].isDirty = false;
					dialog.listDetailView[this._listsDV[i]].mode = '';
				}
			}
		}


		dialog.hasDirtyLists = false;
		dialog.list = {};



		if(typeof this._listViewSettings != 'undefined') {
			for (var ln in this._listViewSettings) {
				dialog.list[ln] = {};
			    dialog.list[ln].isDirty = false;
			}
			var ln = '';
			var flag = ''
			for(var i = 0; i < this._listsDV.length; i++) {
				ln = this._listsDV[i];
				lObj = this.getControl(this._listsDV[i]);
				if(lObj) flag = lObj.listIsDirty();
				//alert(ln + ' --- ' + flag);
				dialog.list[ln].isDirty = flag;
				if(flag) dialog.hasDirtyLists = true;
			}
		}



	},

	_getTabObjectInfo: function(dialog,tabId) {

		var name = this.dialogId + '.V.R1.' + tabId + 'Obj';
		var ele = window[name];
		if(!ele) return false;
		var currentId = -1;
		if(typeof ele._curTabIndx != 'undefined' ) currentId = ele._curTabIndx;
		else currentId = ele._curBandIndx;

		var elePanes = '';
		if(typeof ele.panes != 'undefined')  {
			elePanes = ele.panes;
		} else if(typeof ele.bands != 'undefined') {
			elePanes = ele.bands;
		} else {
			return false;
		}

		var visiblePanes = [];
		for(var i = 0; i < elePanes.length; i++) {
			if(elePanes[i].show) visiblePanes.push(i);
		}
		var paneCount = visiblePanes.length;
		var lastPane = visiblePanes[visiblePanes.length-1];
		var isOnFirstPane = false;
		var isOnLastPane = false;
		if(currentId == 0) isOnFirstPane = true;
		if(currentId == lastPane) isOnLastPane = true;
		if(typeof dialog.tabObject == 'undefined') dialog.tabObject = {};
		var currentPaneNumber = ($u.a.find(visiblePanes,currentId)) + 1;
		var js = '';
		dialog.tabObject[tabId] = {
			'isOnFirstPane' : isOnFirstPane,
			'isOnLastPane' : isOnLastPane,
			'currentPane' : currentPaneNumber,
			'paneCount' : paneCount
			};

	},

	selectTabPane: function(id,numberOrId) {
		try {
			if(typeof numberOrId == 'string') {
				numberOrId = this._tabPaneNumberFromId(id,numberOrId);
				if(numberOrId == 0) return false;

			}
			numberOrId = numberOrId -1;
	  		window[this.dialogId + '.V.R1.' + id + 'Obj'].select(numberOrId);
		  }
		catch(err)
		  {
		  }
	},
	_tabControlType: function(tabId) {
		var obj = window[this.dialogId + '.V.R1.' + tabId + 'Obj'];
		if(typeof obj._curBandIndx != 'undefined') return 'accordion';
		else return 'tab';
	},


	_getInnerHTMLWithValues: function(containerId) {
	    var ele2 = this.getPointer(containerId);
	    var containerClass = '';
	    var containerStyle = '';
	    if(typeof ele2.style != 'undefined') containerStyle = ele2.style.cssText;
	    containerClass = ele2.className;
	    var eleS = ele2.getElementsByTagName('input');
	    for(var i = 0; i < eleS.length; i++) {
	        if(eleS[i].type == 'radio' || eleS[i].type == 'checkbox' ) {
	            if(eleS[i].checked) $sa(eleS[i],'checked',eleS[i].checked);
	            else eleS[i].removeAttribute('checked');
	        } else {
	            $sa(eleS[i],'value',eleS[i].value);
	        }
	    }

	    var eleS = ele2.getElementsByTagName('textarea');
	    for(var i = 0; i < eleS.length; i++) {

	        eleS[i].innerText = eleS[i].value;
	    }

	    var eleS = ele2.getElementsByTagName('select');
	    for(var i = 0; i < eleS.length; i++) {
	        for(var k = 0; k < eleS[i].options.length; k++) {
	            if(eleS[i].options[k].selected) $sa(eleS[i].options[k],'selected',eleS[i].options[k].selected);
	            else eleS[i].options[k].removeAttribute('selected');
	        }
	    }

	    var html = ele2.innerHTML;
	    html = html.replace(RegExp('name="','g'),'xname="');

	    var cssCustomRadio = '';
		var eleX = $(this.dialogId + '_CUSTOMRADIOBUTTONSTYLE');
	    if(eleX) cssCustomRadio = eleX.innerHTML;

	    if(cssCustomRadio !='') cssCustomRadio = '<style>\n' + cssCustomRadio + '</style>';

	    var sEle = $('A5STYLESHEET');
	    var css = '';
	    if(sEle) {
	    	css = '<style>\n';
		    var ss = sEle.sheet ? sEle.sheet : sEle.styleSheet;
		    var r = ss.cssRules ? ss.cssRules : ss.rules;
		    for(var i=0;i<r.length;i++){
		        css = css+r[i].selectorText+'{ '+r[i].style.cssText+' }\n';
		    }
		    css = css+'</style>';
		   }
	    var htmlWrapped = '';
	    htmlWrapped = '<body class="Page">' + css + cssCustomRadio +  html + '</body>';



	    var obj = {}
	    obj.html = html;
	    obj.css = css + cssCustomRadio;
	    obj.htmlWrapped = htmlWrapped
	    obj.containerClass = containerClass;
	    obj.containerStyle = containerStyle;
	    return obj;

	},

	containerToPDF: function(container,options) {
		if(typeof options == 'undefined') options = {};
		options.styleName = this.styleName;
		var oo = this._getInnerHTMLWithValues(container);
		var html = oo.html;

		options.containerClass = oo.containerClass;
		options.containerStyle = oo.containerStyle;
		options.css = oo.css;


		var arr = []
		arr.push(A5.ajax.buildURLParam('__html',html));
		arr.push(A5.ajax.buildURLParam('__options',JSON.stringify(options)));
		var data = arr.join('&');

		this.ajaxCallback('','','system:systemContainerToPDF','',data,{deviceOfflineFunction: function() {   }});
	},

	_accordionBandNumberFromId: function(tabId,bandId) {
		var ele = $(this.dialogId +'.V.R1.'+tabId);
		var tag = '';
		var id = '';
		var ele2 = '';
		var tabLabel = '';
		var zeroIndx = -1;
		var tabIndex = 0;

		for(var i = 0; i < ele.childNodes.length; i++) {
			tag = ele.childNodes[i].tagName;
			if(typeof tag != 'undefined') {
				if(tag == 'A') {
					id = ele.childNodes[i].id;
					ele2 = $(id);
					tabLabel = ele2.innerHTML;
					if(tabLabel == bandId) {
						zeroIndx = $ga(ele.childNodes[i],'a5accordionctrlindex');
						tabIndex = (Number(zeroIndx) + 1);
					}
				}
			}
		}
		return tabIndex;

	},


	_tabPaneNumberFromPaneId: function (tabId,paneId) {
		//this is the pane Id, not the pane Label!!
		var ele = $(this.dialogId +'.V.R1.'+tabId+'.PANES');
		var paneId2 = '';
		var paneNumber = 0;
		var tag = '';
		var paneId2 = '';
		var i2 = 0;
		for(var i = 0; i < ele.childNodes.length; i++) {
			tag = ele.childNodes[i].tagName;
			if(typeof tag != 'undefined') {
				if(tag == 'DIV') {
					paneId2 = $ga(ele.childNodes[i],'a5paneid');
					if(paneId2 != '') i2 = i2 + 1;
					if(paneId2.toLowerCase() == paneId.toLowerCase()) {
						paneNumber = i2 ;
					}
				}
			}
		}
		return paneNumber;
	},


	_tabPaneNumberFromId: function(tabId,paneId) {
			//paneId can either be a pane Label or pane Id
			var type = this._tabControlType(tabId);
			if(type == 'accordion') {
				return this._accordionBandNumberFromId(tabId,paneId);
			}

			//first search by pane Label
			var ele = $(this.dialogId +'.V.R1.'+tabId+'.TABBAND');
			var paneId2 = '';
			var idx = '';
			var ids = [];
			var paneNumber = 0;
			var tag = '';
			var id = '';
			var tabLabel = '';
			var paneIndex = '';
			for(var i = 0; i < ele.childNodes.length; i++) {
				tag = ele.childNodes[i].tagName;
				if(typeof tag != 'undefined') {
					if(tag == 'A') {
						paneIndex = $ga(ele.childNodes[i],'a5tabctrlindex');
						id = ele.childNodes[i].id;
						ele2 = $(id);
						tabLabel = ele2.innerHTML;
						if(tabLabel == paneId) {
							paneNumber = ( Number(paneIndex) + 1);
						}
					}
				}
			}
			if(paneNumber == 0) {
				//then search by pane Id
				paneNumber = this._tabPaneNumberFromPaneId(tabId,paneId);
			}
			return paneNumber;
	},


	_tabInfo: function(tabId) {

		var paneCount = 0;
		var visiblePane = 0;
		var nextPane = 0;
		var prevPane = 0;
		var status = false;
		var interval = 0;
		var tobj = window[this.dialogId + '.V.R1.' + tabId + 'Obj'];
		paneCount = tobj.panes.length;
		visiblePane = tobj._curTabIndx+1;
		if(visiblePane == paneCount) nextPane = 1;
		else nextPane = visiblePane+1;

		prevPane = visiblePane -1;
		if(prevPane == 0) prevPane = paneCount;


		var tobj = this._tabTimers;
		if(typeof tobj != 'undefined') {
			var tobjx = tobj[tabId];
			if(typeof tobjx != 'undefined') {
				interval = tobjx.interval;
				status = tobjx.status;
			}
		}


		return { 'paneCount' : paneCount, 'currentPane' : visiblePane, 'nextPane' : nextPane, 'previousPane' : prevPane, 'status' : status, 'interval' : interval};

	},


	tabTimerGoto: function(tabId,target) {
		target = target.toLowerCase();
		target = target[0];
		var t2 = '';
		var tInfo = this._tabInfo(tabId);
		t2 = target;
		if(target == 'f') t2 = 1;
		if(target == 'l') t2 = tInfo.paneCount;
		if(target == 'n') t2 = tInfo.nextPane;
		if(target == 'p') t2 = tInfo.previousPane;
		this.selectTabPane(tabId,t2);

		var tobj = this._tabTimers;
		if(typeof tobj == 'undefined') return false;
		var tobjx = tobj[tabId];
		if(typeof tobjx == 'undefined') return false;
		if(tobjx.status == 'on') {
			this.tabTimerStop(tabId);
			this.tabTimerStart(tabId);
		}

	},


	_tabTimerStartStop: function(tabId,mode) {
		var tobj = this._tabTimers;
		if(typeof tobj == 'undefined') return false;
		var tobjx = tobj[tabId];
		if(typeof tobjx == 'undefined') return false;
		var interval = tobjx.interval;
		var tabInfo = this._tabInfo(tabId);
		if(mode == 'start') {
			tobjx.status = 'on';
			tobjx._i = setInterval(Function(this.dialogId + '_DlgObj.tabTimerGoto(\''+tabId+'\',\'n\');'),interval*1000);
		} else if (mode == 'stop') {
			tobjx.status = 'off';
			clearInterval(tobjx._i);
		}
	},


	tabTimerStop: function(tabId) {
		this._tabTimerStartStop(tabId,'stop');
	},

	tabTimerStart: function(tabId) {
		this._tabTimerStartStop(tabId,'start');
	},

	tabTimersStopAll: function() {
		if(typeof this._tabTimers == 'undefined') return true;
		for(var id in this._tabTimers) {
			this._tabTimerStartStop(id,'stop')
		}
	},

	_tabPaneChange: function(id) {


		var dialog = {};
		this._getTabObjectInfo(dialog,id);
		this._variablesChanged(['dialog.tabObject.' + id ],1);
		if(typeof dialog.tabObject == 'undefined') return false;
		var d = dialog.tabObject[id];
		this.genieButtonStates(id);

		this._executeEvent('onTabPaneChanged',{'isOnFirstPane': d.isOnFirstPane, 'isOnLastPane' : d.isOnLastPane, 'currentPane' : d.currentPane, 'paneCount': d.paneCount});
		var eleCurrent = '';
		var eleCount = ''
		eleCurrent = $(this.dialogId + '.' + id + '.PROGRESS.CURRENT');
		eleCount = $(this.dialogId + '.' + id + '.PROGRESS.STEPCOUNT');
		if(eleCurrent) eleCurrent.innerHTML = d.currentPane;
		if(eleCount) eleCount.innerHTML = d.paneCount;



		var eleBarChart = $(this.dialogId + '.' + id + '.PROGRESS.BARCHART');
		if(eleBarChart) {
			var chartWidthC = eleBarChart.style.width;
			var chartWidth = parseFloat(chartWidthC);
			var units = chartWidthC.replace(''+chartWidth,'');
			var barWidth = chartWidth * ( d.currentPane/d.paneCount);
			var eleBar = $(this.dialogId + '.' + id + '.PROGRESS.BARCHART.INNER');
			eleBar.style.width = '' + barWidth + units;

		}


	},

	duplicateRepeatingSectionRow: function(id) {
		var flagFireEvents = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		var activeRow = this.repeatingSections[id].activeRow;
		var rows = this.repeatingSections[id].rows;
		//find a row that is empty
		var targetRow = -1;
		var flagDeleted = '';
		var flagEmpty = '';
		for(var i = 1; i <= rows; i++) {
			flagEmpty = this._repeatingSectionRowIsEmpty(id,i);
			if(flagEmpty) {
				flagDeleted = this.repeatingSections[id]._r[0].i[i-1].deleted;
				if(flagDeleted == false) {
					targetRow = i;
					break;
				}
			}
		}
		if(targetRow == -1) {
			this.addRepeatingSectionRow(id);
			targetRow = this.repeatingSections[id].activeRow;
		}
		this._copyRepeatingSectionRowLow(id,activeRow,targetRow,flagFireEvents);
	},


	copyRepeatingSectionRow: function(id,sourceRow,targetRow) {
		var promptIfDirty = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		var flagFireEvents = typeof arguments[4] != 'undefined' ? arguments[4] : true;
		if(targetRow == -1) targetRow = this.repeatingSections[id].activeRow;

		if(targetRow == sourceRow) return false;

		if(promptIfDirty) {
			var flagTargetIsDirty = this._repeatingSectionRowIsDirty(id,targetRow);
			var msg = 'Overwrite existing data in row?';
			if(typeof this._rsOverwriteRowMsg != 'undefined') msg = this._rsOverwriteRowMsg;
			if(flagTargetIsDirty) {
				var flagConfirm = confirm(msg);
				if(flagConfirm == false) return false;
			}
		}
		this._copyRepeatingSectionRowLow(id,sourceRow,targetRow,flagFireEvents);
	},

	_showHideFrame: function(id,action) {
		var sv = this.styleVersion;
		if(typeof sv == 'undefined') sv = 1;
		if(sv >= 3) {
			var ele = $(this.dialogId + '.SHOWHIDEPANELIMG.' + id + '.R1');
			ele.style.display = 'none';
		}
		if(typeof this.framesInfo == 'undefined') return false;
		var frameInfo = this.framesInfo[id];
		if(typeof frameInfo == 'undefined') return false;
		var rs = frameInfo.repeatingSections;
		var onOpen = frameInfo.onOpen;
		var onClose = frameInfo.onClose;

		var listsToRefresh = [];
		if(typeof frameInfo.listsToRefresh != 'undefined') {
			listsToRefresh = frameInfo.listsToRefresh;
		}


		if(action=='show') {
			for(var i = 1; i <= rs.length; i++) {
				this._prepareRepeatingSection(rs[i-1],1);
			}
			if(onOpen != '') {
				if(typeof window[onOpen] != 'undefined') window[onOpen]();
			}
			if(listsToRefresh.length > 0) {
				var obj = '';
				for(var i = 0; i < listsToRefresh.length; i++) {
					obj = this.getControl(listsToRefresh[i]);
					if(obj) obj.refresh();
				}
			}

		} else {
			if(onClose != '') {
				if(typeof window[onClose] != 'undefined') window[onClose]();
			}


		}
	},

	_copyRepeatingSectionRowLow: function(id,sourceRow,targetRow) {
		var flagFireEvents = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		if(targetRow == -1) targetRow = this.repeatingSections[id].activeRow;
		if(sourceRow == targetRow) return false;
		var rsInfo = this.repeatingSectionInfo[id].controls;
		var sourceVal = '';
		for(var i = 0; i < rsInfo.length; i++) {
			sourceVal = this.getValue(rsInfo[i] + ':' + sourceRow);
			this.setValue(rsInfo[i] + ':' + targetRow,sourceVal,flagFireEvents);
		}
	},

	moveUpRepeatingSectionRow: function(id) {
		var row1 = this.repeatingSections[id].activeRow;
		if(row1 == 1) return false;

		var row2 = row1;
		var flagLoop = true;
		while (flagLoop)
		  {
		 	row2 = row2 - 1;
		 	if(this._repeatingSectionRowIsDeleted(id,row2) == false) {
		 		flagLoop = false;
		 		break;
		 	}
		 	if(row2 <= 1) {
		 		flagLoop = false;
		 		break;
		 	}
		  }

		if(row2 == row1 || row2 < 1 || this._repeatingSectionRowIsDeleted(id,row2 )  ) return false;

		this.swapRepeatingSectionRows(id,row1,row2);
		this.setRepeatingSectionActiveRow(id,row2);

	},

	moveDownRepeatingSectionRow: function(id) {
		var row1 = this.repeatingSections[id].activeRow;
		var rows = this.repeatingSections[id].rows;
		if(row1 == rows) return false;
		var row2 = row1;
		var flagLoop = true;
		while (flagLoop)
		  {
		 	row2 = row2 + 1;
		 	if(this._repeatingSectionRowIsDeleted(id,row2) == false) {
		 		flagLoop = false;
		 		break;
		 	}
		 	if(row2 <= 1) {
		 		flagLoop = false;
		 		break;
		 	}
		  }

		if(row2 == row1 || row2 < 1 || this._repeatingSectionRowIsDeleted(id,row2 )  ) return false;
		this.swapRepeatingSectionRows(id,row1,row2);
		this.setRepeatingSectionActiveRow(id,row2);
	},

	_harvestRepeatingSection: function(id) {
		var flagDirty = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		id = id.toUpperCase();
		var rows = this.repeatingSections[id].rows;
		var _a = [];
		var rsInfo = this.repeatingSectionInfo[id].controls;
		if(typeof rsInfo == 'undefined') return false;
		for(var r = 1; r <= rows; r++) {
			var o = {};
			for(var i = 0; i < rsInfo.length; i++) {
				if(flagDirty == false) {
					o[rsInfo[i]] = this.getValue(rsInfo[i] + ':' + r);
				} else {
					o[rsInfo[i]] = {val: this.getValue(rsInfo[i] + ':' + r), dirty: $ga($(this.dialogId + '.V.R1.' +rsInfo[i] + '_A5INSTANCE' + r),'A5IsDirty'), origVal: this.originalValues[0][rsInfo[i] + ':' + r ]  } ;
				}
			}
			o.__deleted = this._repeatingSectionRowIsDeleted(id,r);
			o.__rowNumber = r;
			_a.push(o);
		}

		//alert($u.o.toJSON(_a));
		return _a;
	},

	sortRepeatingSection: function(id,colName,direction) {

		id = id.toUpperCase();
		colName = colName.toUpperCase();
		direction = direction.toLowerCase();
		direction = direction[0];
		var arrDirty = this._harvestRepeatingSection(id,'dirty');
		if(arrDirty == false) return false;
		var colType = this.columnInfo[colName].dataType;
	    arrDirty.sort( function(a,b) {

	        var result = 0;
	        var val1 = a[colName].val;
	        var val2 = b[colName].val;
	        if(colType == 'N') {
	        	val1 = $u.s.toNum(val1);
	        	val2 = $u.s.toNum(val2);
	        }

	        if(colType == 'L') {
	        	val1 = $u.s.toBool(val1);
	        	val2 = $u.s.toBool(val2);
	        }

	        if(colType == 'D' || colType == 'T'  ) {
	        	val1 = Date.parse(val1);
	        	val2 = Date.parse(val2);
	        }

	        if(typeof val1 == 'string') {
	            if(val1.toLowerCase() > val2.toLowerCase()) result =  1;
	            else if(val1.toLowerCase() < val2.toLowerCase()) result =  -1;
	        }  else {
	            result = val1 - val2;
	        }
	        if(val1 > val2) result =  1;
	        else if(val1 < val2) result =  -1;
	        if(direction == 'd') result = result * -1;
	        return result;
	        }
	     )

	     //move deleted items to the end
	     arrDirty.sort( function(a,b) {
	     	if(!a.__deleted && !b.__deleted) return 0;
	     	else if(a.__deleted) return 1;
	     	return -1;
	     })


	    var rows = this.repeatingSections[id].rows;
	    var rowNum = 1;
	    var rs = this.repeatingSections[id];
	    if(typeof rs == 'undefined') return false;
	    for(var i = 1; i <= rows; i++) {
	    	this.undeleteRepeatingSectionRow(id,i);
			this._setRepeatingRowValuesToNull(id,i);
		}

	    var _d = {};
	    var arrI = '';
	    var _pk = [];

	   	var arrTemp = [];
		var aliases = this.repeatingSectionInfo[id].boundAliases;

	    for(var i = 0; i < arrDirty.length; i++) {
	    	arrI = arrDirty[i];
	    	for(var key in arrI) {
	    		_d[key + ':' + (i+1)] = {val: arrDirty[i][key].val, dirty: arrDirty[i][key].dirty, origVal: arrDirty[i][key].origVal } ;
	    	}
	    	if(arrI['__deleted']) {
	    		this._deleteRepeatingSectionRowLow(id,i+1);
	    	}
	    	var pko = {};
	    	pko.newRow = i+1;
	    	pko.oldRow = arrI['__rowNumber'];
	    	arrTemp.push('New: '+ pko.newRow + ' Old: ' + pko.oldRow);
	    	_pk.push(pko);
	    }

	    this.populate(_d,1,true,false,true);
	    //after sorting rows, need to adjust the keys
		var tempkey = '';
	    for(r = 0; r < _pk.length; r++) {
	    	_pk[r].key = {};
	    	for(var a = 0; a <  aliases.length; a++) {
	    		tempkey = this.getKey(aliases[a],(r+1));
	    		_pk[r].key[aliases[a]] = tempkey;
	    	}
		}
		var keyval = '';


		for(r = 0; r < _pk.length; r++) {
			for(var a = 0; a < aliases.length;a++) {
				keyval = _pk[_pk[r].oldRow-1].key[aliases[a]];
				if(keyval == false) keyval = '__undefinedkey__';
				this.setKey(aliases[a],keyval,(r+1));
			}
		}

		var row1Phys = this._repeatingSectionLogicalToPhysicalRow(id,1);
		if(row1Phys == -1) row1Phys = 1;
		this.setRepeatingSectionActiveRow(id,row1Phys);


	},

	getKey: function(aliasName) {
		var row = typeof arguments[1] != 'undefined' ? arguments[1] : -1;
		var keyObj = typeof arguments[2] != 'undefined' ? arguments[2] : this.stateInfo.keys;
		if(typeof keyObj == 'undefined') return false;
		if(row > 0 ) {
			var k = aliasName.toUpperCase() + '_row' + row;
		} else {
			var k = aliasName.toUpperCase();
		}
		if(typeof keyObj[k] != 'undefined') return keyObj[k]._key;
		else return false;
	},

	setKey: function(aliasName,value) {
		var row = typeof arguments[2] != 'undefined' ? arguments[2] : -1;
		if(row > 0) {
			var k = aliasName.toUpperCase() + '_row' + row;
		} else {
			var k = aliasName.toUpperCase();
		}
		if(typeof this.stateInfo.keys == 'undefined') this.stateInfo.keys = {};
		if(typeof this.stateInfo.keys[k] == 'undefined') this.stateInfo.keys[k] = {};
		if(value == '__undefinedkey__') delete this.stateInfo.keys[k];
		else this.stateInfo.keys[k]._key = value;

	},





	_swapKeys: function(aliasName,row1,row2) {

		if(typeof this.stateInfo == 'undefined') return false;
		if(typeof this.stateInfo.keys == 'undefined') return false;
		var k1 = aliasName.toUpperCase() + '_row' + row1;
		var k2 = aliasName.toUpperCase() + '_row' + row2;
		var key1 = '__undefinedkey__';
		var key2 = '__undefinedkey__';

		if(typeof this.stateInfo.keys[k1] != 'undefined') key1 = this.stateInfo.keys[k1]._key;
		if(typeof this.stateInfo.keys[k2] != 'undefined') key2 = this.stateInfo.keys[k2]._key;;
		if(key2 == '__undefinedkey__') {
			delete this.stateInfo.keys[k1];
		} else {
			if(typeof this.stateInfo.keys[k1] == 'undefined') this.stateInfo.keys[k1] = {};
			this.stateInfo.keys[k1]._key = key2;
		}
		if(key1 == '__undefinedkey__') {
			delete this.stateInfo.keys[k2];
		} else {
			if(typeof this.stateInfo.keys[k2] == 'undefined') this.stateInfo.keys[k2] = {};
			this.stateInfo.keys[k2]._key = key1;
		}
	},

	_swapKeysRS: function(id,row1,row2) {
		var aliases = this.repeatingSectionInfo[id].boundAliases;
		for(var a in aliases) {
			this._swapKeys(aliases[a],row1,row2)
		}
	},

	swapRepeatingSectionRows: function(id,row1,row2) {
		var rsInfo = this.repeatingSectionInfo[id].controls;
		if(typeof rsInfo == 'undefined') return false;
		var v1 = '';
		var v2 = '';
		var _d = {};
		//alert(row1 + '\n' + row2);
		for(var i = 0; i < rsInfo.length; i++) {
			v1 = this.getValue(rsInfo[i] + ':' + row1);
			v2 = this.getValue(rsInfo[i] + ':' + row2);

			_d[rsInfo[i] +':' + row1] = v2;
			_d[rsInfo[i] +':' + row2] = v1;

			//alert(v1 + '\n' + v2);
			/*
			var flagFireChange = true;  //if you don't fire the change then moving a row up 2 times failes.
			this.setValue(rsInfo[i] + ':' + row1,v2,flagFireChange);
			this.setValue(rsInfo[i] + ':' + row2,v1,flagFireChange);
			*/


		}
		//1 row number, false - don't set controls clean, true - don't fire change event
		this.populate(_d,1,false,true);
		//alert($u.o.toJSON(_d));

		//this._prepareRepeatingSection(id,1);
		//this.prepare();
		this._swapKeysRS(id,row1,row2);

	},

	_sortPrimaryKeyList: function() {

		var r = this._primaryKeyListNavigator.selection[0];
		var k = this._primaryKeyList[r].k;
		var obj = this._primaryKeyList;
		if(typeof obj[0].d1 != 'undefined') {
			obj.sort(function(a,b) {
				if (a.d1 < b.d1) return -1;
				if (a.d1 > b.d1) return 1;
				return 0;
				}
			);
		} else {
			obj.sort(function(a,b) {
				if (a.k < b.k) return -1;
				if (a.k > b.k) return 1;
				return 0;
				}
			);
		}

		this._primaryKeyListNavigator.populate(this._primaryKeyList);
		var r2 = -1;
		for(var i = 0; i < this._primaryKeyList.length; i++) {
			if(this._primaryKeyList[i].k == k) {
				r2 = i;
				break;
		    }
		}
		if(r2 > -1) this._primaryKeyListNavigator.setValue(r2,false);
	},

	_primaryKeyListSetKey: function(key) {
		var arr = this._primaryKeyListNavigator._data;
		var idx = -1;
		for(var i = 1; i <= arr.length; i++) {
		    if(''+arr[i-1].k == '' + key) {
		        idx = i;
		        break;
	    	}
		}
		if(idx != -1) {
			this._primaryKeyListNavigator.setValue(idx-1);
		}
	},


	_updateListState: function(listId,action) {

		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return false;
		if(typeof listObj._state.recordCount == 'undefined') return false;
		if(action.toLowerCase() == 'add') listObj._state.recordCount = listObj._state.recordCount + 1;
		else listObj._state.recordCount = listObj._state.recordCount - 1;
		listObj._state.recordCountFormatted = $u.n.toStr(listObj._state.recordCount,0,',');
		var ele = $(this.dialogId + '.' + listId + '.RECORDCOUNT'); if(ele) ele.innerHTML = listObj._state.recordCountFormatted;
		if(listObj._refreshStateMessages) listObj._refreshStateMessages();

	},

	_updatePrimaryKeyList: function(obj,mode) {

		if(mode == 'update') {
			if(typeof this._primaryKeyListNavigator != 'undefined') {
				var r = this._primaryKeyListNavigator.selection[0];
				this._primaryKeyList[r] = obj;
				this._primaryKeyListNavigator.updateRow(r,obj);
			} else if (typeof this.__navigationSliderObject != 'undefined') {
				var r = this.__navigationSliderObject.value -1;
				this._primaryKeyList[r] = obj;
			}
		} else if(mode == 'enter') {
			if(typeof this._primaryKeyList != 'undefined') {

				var r = this._primaryKeyList.length;
				this._primaryKeyList[r] = obj;
				if(typeof this._primaryKeyListNavigator != 'undefined') {
					this._primaryKeyListNavigator.appendRows([obj]);
					var fnstring = this.dialogId + '_DlgObj._primaryKeyListNavigator.setValue(' + r + ',false);'
					setTimeout(Function(fnstring),0);
				}
			}
			//this._currentRecordNumber = this._currentRecordNumber + 1;
			this._currentRecordNumber = r+1;
		} else if(mode == 'delete') {
			var r = obj.recordNumber;
			var keyToDelete = this._primaryKeyList[r-1].k;
			this._primaryKeyList.splice(obj.recordNumber-1,1);
			r = r -1;

			if(typeof this._primaryKeyListNavigator != 'undefined') {
				this._primaryKeyListNavigator.populate(this._primaryKeyList);
				var r2 = r;
				if(r == this._primaryKeyList.length) {
					r2 = r2 -1;
				}
				this._primaryKeyListNavigator.setValue(r2,false);
				r = r2;
				//don't do this here. the ajax response has already done it.
				//this._currentRecordNumber = this._currentRecordNumber -1;
			} else {
				//if use has custom list record navigators
				if(typeof this._primaryKeyList != 'undefined') {
					var r2 = r;
					if(r == this._primaryKeyList.length) {
						r2 = r2 -1;
					}
					r = r2;
				}
			}

			if(typeof this._listsToSynchronize != 'undefined') {
				var lists = this._listsToSynchronize;
				for(var i = 0; i < lists.length; i++) {
					var lObj = this.getControl(lists[i]);
					var arr = [];
					arr.push(keyToDelete);
					if(lObj) {
						//need to check if the key was found before doing the delete because the 'delete' action may have already deleted the key
						var x = this._findArrayProp(lObj._data,'__primaryKey',keyToDelete)
						if(x >=0) lObj.removeRows(arr);
						lObj.setValue(obj.primaryKeyToShow);
					}
				}
			}
		}

		if(this.__navigationSliderObject) {
			if(typeof this._primaryKeyList != 'undefined') {
				var count = this._primaryKeyList.length;
				if($(this.__sliderDynMsgId)) {
					if(typeof r != 'undefined') {
						var data = {value: r+1};
						this._navigationSliderEvalMessage(data);
						//if(count >0 ) {
						//	$(this.__sliderDynMsgId).innerHTML = eval(this.__sliderMessageTemplate);
						//}
					}
				}
				if(mode == 'enter') {
					this.__navigationSliderObject.max = count;
					this.__navigationSliderObject.refresh();
					this._setSliderPosition(count,false);
				}
				if(mode == 'delete') {
					this.__navigationSliderObject.max = this.__navigationSliderObject.max -1;
					this.__navigationSliderObject.refresh();
				}
			}
		}

	},

	_navigationSliderEvalMessage: function(data) {
		var count = 0;

		if(typeof this._primaryKeyList == 'undefined') return false;
		if(typeof this.__sliderDynMsgId == 'undefined') return false;
		count = this._primaryKeyList.length;
		if(typeof this._currentRecordNumber != 'undefined') {
			if(this._currentRecordNumber == -1 && count == 0) {
				return false;
			}
		}
		if(count == 0) {
		//navigationSliderNoRecordsMsg
			var msg = 'No records';
			if(typeof this.navigationSliderNoRecordsMsg != 'undefined') msg = this.navigationSliderNoRecordsMsg;
			$(this.__sliderDynMsgId).innerHTML = msg;
		} else {
			$(this.__sliderDynMsgId).innerHTML = eval(this.__sliderMessageTemplate);
		}
	},

	_navigationListViewInit: function(id,obj,ops) {
		id = id.toUpperCase();
		var html = ops.htmlTemplate;
		var listViewObjId = ops.listViewObjectId;
		$(id).innerHTML = html;
		var initData = ops.initialData;
		this._primaryKeyListNavigator = new A5.ListBox(listViewObjId,initData,obj);
	},


	_navigationSliderInit: function(id,obj,ops) {
		var d = {};
		d.range = false;
		d.min = 1;
		d.max = 5;
		d.step = 1;
		d.value = 1;
		d.change = '';
		d.slide = '';
		$u.o.assign(d,obj);
		id = id.toUpperCase();
		if(!$(id)) return false;
		var idS = id + '_SLIDERCONTROL';
		var html = ops.sliderTemplate;
		$(id).innerHTML = html;
		//var idSjq = $u.s.tran(idS,'.','\\.');
		//jQuery('#' + idSjq).slider(d);

		d.onChange = d.change;
		d.onSlide = d.slide;
		d.theme = this.styleName;
		d.range = {show: true};
		this.__navigationSliderObject = new A5.Slider(idS,d);


		this.__sliderId = idS;
		//this.__sliderIdJS = idSjq;
		this.__sliderKeyColumnName = ops.keyColumnName;
		this.__sliderOnChange = ops.sliderOnChangeFunction;
		this.__sliderOnSlide = ops.sliderOnSlideFunction;
		this.__sliderMessageTemplate = ops.sliderMessage;
		this.__sliderDynMsgId = ops.sliderDynamicMsgId;

	},

	_hideSliderMsg2: function(e,id) {
		var ele = $(id + '.SLIDERMESSAGECONTAINER');
		var ele2 = $(id + '.CONTROL');
		var relEle = (e.relatedTarget) ? e.relatedTarget : e.toElement;
		if(relEle){
			while(relEle != ele2 && relEle.tagName.toLowerCase() != 'body' && relEle.tagName.toLowerCase() != 'html' ) relEle = relEle.parentNode
			if(relEle == ele2) return;
		}
		A5.u.element.hide(ele,{ type: 'fade'});
	},


	_paintSliderMessageRS: function(e,id,msg) {
		var rsName = this._findRepeatingSection(id);
		var rs = this.repeatingSections[rsName];
		var rows = rs.rows;
		for(var i = 1; i <= rows; i++) {
			this._paintSliderMessage(e,id + '_A5INSTANCE' + i , msg);
		}
	},

	_paintSliderMessage: function(e,id,msg) {
		var instNumInId = false;
		var instNum = -1;
		if(typeof id.split('_A5INSTANCE')[1] != 'undefined') {
			instNum = id.split('_A5INSTANCE')[1].split('.')[0];
			instNumInId = true;
		}

		id = id.toUpperCase();
		var ctrl = this.getControl(id);
		if(ctrl) {
			if(instNum == -1) {
				if(typeof ctrl.contId.split('_A5INSTANCE')[1] != 'undefined') {
					instNum = ctrl.contId.split('_A5INSTANCE')[1].split('.')[0];
				}
			}
		}

		var e2 = '';
		if(typeof e == 'object')  e2 = e;
		else e2 = ctrl;
		var dataType = 'n';
		var flagTwoValue = false;
		if(ctrl.type == 'range') flagTwoValue = true;
		if(typeof ctrl.dataType != 'undefined')  {
			dataType = ctrl.dataType[0];
		}

		if(flagTwoValue) {
			var value = e2.value[0];
			var value1 = e2.value[0];
			var value2 = e2.value[1];
		} else {
			var value = e2.value;
			var value1 = value;
			var value2 = value;
		}

		if(dataType == 'd') {
			value = value.toFormat(ctrl.format);
			value1 = value1.toFormat(ctrl.format);
			value2 = value2.toFormat(ctrl.format);

		}
		var max = ctrl.max
		var min = ctrl.min

		if(dataType == 'd') {
			max = max.toFormat(ctrl.format);
			min = min.toFormat(ctrl.format);
		}
		if(instNum == -1 || instNumInId) {
			var ele = $(this.dialogId + '.V.R1.' + id + '.SLIDERMESSAGECONTAINER');
		} else {
			var ele = $(this.dialogId + '.V.R1.' + id + '_A5INSTANCE'+instNum+'.SLIDERMESSAGECONTAINER');
		}

		var msgTxt = '';
		if(msg.split(':')[0].toLowerCase() == '\'js') {
			var fnName = msg.split(':')[1];
			fnName = fnName.split('\'')[0];
			if(typeof window[fnName] != 'undefined') {
				var e = {value: value, value1: value1, value2: value2, min: min, max: max};
				msgTxt = window[fnName].call(this,e);
			} else {
				msgTxt = 'Function not found: ' + fnName;
			}
		} else {
			msgTxt = eval(msg);
		}
		ele.innerHTML = msgTxt;
	},

	_hideSliderMsg: function(e) {
		var flagHideSlider = this.__hideSlider;
		if(flagHideSlider == false) return false;
		var sliderContainer = this.__idSliderMessageOuterContainer;
		var sliderMessage  = this.__idSliderMessageContainer;
		var ele = $(sliderContainer);
		if(!ele) return false;
		var relEle = (e.relatedTarget) ? e.relatedTarget : e.toElement;
		if(relEle){
			while(relEle != ele && relEle.tagName.toLowerCase() != 'body' && relEle.tagName.toLowerCase() != 'html' ) relEle = relEle.parentNode
			if(relEle == ele) return;
		}

		A5.u.element.hide($(sliderMessage),{ type: 'fade'});

	},

	_navigationSliderSetMax: function(id,max) {
		id = id.toUpperCase();
		var idS = id + '_SLIDERCONTROL';
		if(!$(idS)) return false;
		if(max == 0) $(this.__sliderId).style.visibility = 'hidden';
		else $(this.__sliderId).style.visibility = '';
		//we want the slider to show even if there are no records
		$(this.__sliderId).style.visibility = '';

		this.__navigationSliderObject.max = max;
		this.__navigationSliderObject.refresh();

	},

	_setSliderPosition: function(recno) {
		var flagNavigateToRecord = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		if(typeof this.__sliderId == 'undefined') return false;
		this.__sliderNavigateToRecord = flagNavigateToRecord;
		//jQuery('#' + this.__sliderIdJS).slider('option','value',recno);
		this.__navigationSliderObject.setValue(recno);
		this.__sliderNavigateToRecord = true;
		var count = this._primaryKeyList.length;
		var kc = this.__sliderKeyColumnName;
		var data = {};
		data.value = recno;
		this._navigationSliderEvalMessage(data);
	},


	_sliderOnChange: function (data) {
		//e,data

		var kc = this.__sliderKeyColumnName;
		var count = this._primaryKeyList.length;
		if(count == 0) return false;
		this._navigationSliderEvalMessage(data);
		var currentKey = this._primaryKeyList[data.value-1][kc];
		if(typeof window[this.__sliderOnChange] != 'undefined') window[this.__sliderOnChange](currentKey,data.value,count);
		var flagNavigate = true;
		if(typeof this.__sliderNavigateToRecord != 'undefined') flagNavigate = this.__sliderNavigateToRecord;
		if(flagNavigate) this.navigateRecord(data.value,false); //do not call _setSliderPosition()
		if(typeof this._listNavigator != 'undefined') {
			this._listNavigator.setValue(data.value-1, false); //do not fire onSelect
		}
	},


	_sliderOnSlide: function (data) {
		//e,data
		var count = this._primaryKeyList.length;
		var kc = this.__sliderKeyColumnName;
		this._navigationSliderEvalMessage(data);
		if(count > 0) {
			var currentKey = this._primaryKeyList[data.value-1][kc];
			if(typeof window[this.__sliderOnSlide] != 'undefined') window[this.__sliderOnSlide](currentKey,data.value,count);
		}


	},

	_runEmbeddedReport: function(data) {
		this.ajaxCallback('G',1,'system:ComputeFilterThenRunReport','',data);
	},

	_refreshListsWithJSFuncDataSource: function() {
		var listNames = typeof arguments[0] != 'undefined' ? arguments[0] : '';
		var ll = this._listsWithJSFuncDataSource;
		if(typeof ll == 'undefined') return false;
		var ll2 = '';
		var fnName = '';
		var data = '';
		var obj = '';
		if (listNames == '') {
			for(var name in ll) {
				this._refeshListJSDSLow(name);
			}
		} else {
			this._refeshListJSDSLow(listNames.toUpperCase());
		}
	},

	_refeshListJSDSLow: function(name) {
		var ll = this._listsWithJSFuncDataSource;
		ll2 = ll[name];
		if(typeof ll2 == 'undefined') return false;
		fnName = ll2.functionName;
		fnName = fnName.split('(')[0];
		if(fnName.indexOf(this.dialogId + '_DlgObj') == -1) {
			if(window[fnName]) {
				data = window[fnName].call();
			} else {
				alert('Refreshing List "'+name+'". Function for data source not found: "' + fnName+'".');
				return false;
			}
		} else {
			data = eval(fnName + '()');
		}
		obj = this.getControl(name);
		if(obj) obj.populate(data);
	},


	refreshDataSeries: function(seriesArray) {
		if(seriesArray.constructor != Array) var seriesArray = [seriesArray];
		var jsFunctionResult = this._executeJavascriptForDataSeries(seriesArray);
		var callbackData = '';
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__seriesNames',seriesArray.join(',')));
		arr.push(A5.ajax.buildURLParam('__javascriptFunctionResults',jsFunctionResult));
		callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:RefreshDataSeries','',callbackData);
	},

	exportChart: function(obj) {
		if(typeof this._chartControlsInfo == 'undefined') return false;
		obj._chartControlsInfo = this._chartControlsInfo;
		var data = $u.o.toJSON(obj);
		var arr = [];
		arr.push(A5.ajax.buildURLParam('_exportChartInfo',data));
		var callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:exportChart','',callbackData);
	},


	_listGetElement: function(listId,field,elementtype,rowNumber) {
		var tp = elementtype;
		var id = '';
		var x = '';
		tp = tp.toLowerCase();
		var tp0 = tp[0];
		if(tp0 == 'l') x = 'I';
		if(tp0 == 'b') x = 'BTN';
		if(tp0 == 'h') x = 'LNK';
		if(tp0 == 'd') x = 'DIMG';
		if(tp0 == 'i') x = 'IMG';
		id = this.dialogId + '.' + listId.toUpperCase() + '.' + field.toUpperCase() + '.' + x + '.' + rowNumber;
		return $(id);
	},

	listGetValue: function(listId,field) {

		var rowNumber = typeof arguments[2] != 'undefined' ? arguments[2] : -1;
		//listId can be LIST1:3 or LIST1_A5INSTANCE3
		var obj = this.getControl(listId);
		if(obj == false) {
			alert('List not found: ' + listId); return '';
		}
		//do not convert field to uppercase or you will break it
		if(field == '__PRIMARYKEY') field = '__primaryKey';
		if(field == 'KEY_TABLE_1') field = 'key_table_1';
		//var val = obj._rData[obj._dataMap[obj.selection[0]]][field];
		if(field.toUpperCase() == '<ROWNUMBER>') {
			return obj.selection[0] + 1;
		}

		//make lookup case insensitive by making a new json object with upper case keys
		if(rowNumber == -1) rowNumber = obj.selection[0];
		var lData = obj._data;
		var arr = lData[obj._dataMap[rowNumber]];


		var d2 = {};
		var key2 = '';
		for(var n in arr) {
			key2 = n.toUpperCase();
			d2[key2] = arr[n];
		}
		var val = d2[field.toUpperCase()];
		//don't want to return 'null' as the value
		if(val == null) val = '';

		var ele2 = $(this.dialogId + '.' + listId.toUpperCase() + '.' + field.toUpperCase() + '.' + (rowNumber + 1) + '.RAWDATA');
		if(ele2) return ele2.innerHTML;
		else return val;

		return val;
	},

	_doOnTimerEvent: function() {
		var result = this._executeEvent('beforeOnTimer',{})
		if(result == true) this._executeEvent('onTimer',{})
	},
	onTimerEventStop: function() {
		this._onTimerEventInterval = 0;
		if(typeof this.__globalTimer != 'undefined')  clearTimeout(this.__globalTimer);
	},
	onTimerEventStart: function(interval) {
		this._onTimerEventInterval = interval;
		this.__globalTimer = setTimeout('if( typeof ' + this.dialogId + '_DlgObj != \'undefined\')' + this.dialogId + '_DlgObj._onTimerEventLow();',interval);
	},
	_onTimerEventLow: function() {
		var d = 0;
		var ele = $(this.dialogId + '.R1');
		if(!ele) {
			this._onTimerEventInterval = 0;
			return false;
		}
		if(typeof this._onTimerEventInterval == 'undefined') return false;
		d = this._onTimerEventInterval;
		if(d == 0) return false;
		this._doOnTimerEvent();
		this.__globalTimer = setTimeout('if( typeof ' + this.dialogId + '_DlgObj != \'undefined\')' + this.dialogId + '_DlgObj._onTimerEventLow()',d);
	},

	computeSearchFromMetaDataAndFilterList: function(listId,syntax,data,jsonOptions) {

		var arr = [];
		arr.push(A5.ajax.buildURLParam('__listId',listId));
		arr.push(A5.ajax.buildURLParam('__options',syntax));
		arr.push(A5.ajax.buildURLParam('__searchData',data));
		var listState = this.getControl(listId)._state;
		arr.push(A5.ajax.buildURLParam('__listState',JSON.stringify(listState)));
		callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:ComputeSearchAndFilterList','',callbackData);
	},

	_filterList: function(listId,filterExpn,orderExpn,filterParameters,havingExpn) {
		filterExpn = $if(filterExpn==undefined,'Null',filterExpn);
		orderExpn = $if(orderExpn==undefined,'Null',orderExpn);
		filterParameters = $if(filterParameters==undefined,'Null',filterParameters);
		havingExpn = $if(havingExpn==undefined,'Null',havingExpn);
		var callbackData = '';
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__listId',listId));
		arr.push(A5.ajax.buildURLParam('__filter',filterExpn));
		arr.push(A5.ajax.buildURLParam('__having',havingExpn));
		arr.push(A5.ajax.buildURLParam('__order',orderExpn));
		arr.push(A5.ajax.buildURLParam('__filterParameters',filterParameters));
		callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:FilterList','',callbackData);

	},
	_initialViewBoxRender: function (viewBoxId) {

		var obj = this.getControl(viewBoxId.toUpperCase());
		if(typeof obj._hasBeenRendered == 'undefined') {
			obj._hasBeenRendered = true;
			this.refreshViewBoxData(viewBoxId);
		} else {
			if(obj._hasBeenRendered == false) {
				obj._hasBeenRendered = true;
				this.refreshViewBoxData(viewBoxId);
			}
		}
	},


	_initialListRender: function(listId) {
		var obj = this.getControl(listId.toUpperCase());
		if(typeof obj._hasBeenRendered == 'undefined') {
			obj._hasBeenRendered = true;
		}

		var parentList = '';
		//child lists with pre-fetched data are never delayed render
		if(typeof obj.parentList != 'undefined') {
			obj._hasBeenRendered = true;
			if(obj.parentList != '') return false;
		}

		if(typeof obj._hasBeenRendered == 'undefined') {
			obj._hasBeenRendered = true;
			this._refreshListData(listId);
		} else {
			if(obj._hasBeenRendered == false) {
				obj._hasBeenRendered = true;
				this._refreshListData(listId);
			}
		}
	},

	refreshTemplate:  function(templateId) {
			var obj = typeof arguments[1] != 'undefined' ? arguments[1] : {};
			this._refreshTemplate(templateId,obj);
		},

	_refreshTemplate:  function(templateId) {
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__templateId',templateId));
		var callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:RefreshTemplate','',callbackData);
	},

	_renderTemplate: function(templateId) {

		var layoutName = typeof arguments[1] != 'undefined' ? arguments[1] : 'DEFAULT';
		templateId = templateId.toUpperCase();
		var to = this._templates[templateId];
		if(typeof to == 'undefined') return false;
		var tol = to.layouts[layoutName];
		if(typeof tol == 'undefined') tol = to.layouts['DEFAULT'];
		if(typeof tol == 'undefined') return false;
		var template = tol.template;
		var data = this._templateData[templateId];
		if(typeof data == 'undefined') return false;

		var eleId = this.dialogId  + '.V.R1.' + templateId;
		var eleIdS = eleId + '.SCROLLWRAPPER';
		var ele = '';
		if($(eleIdS)) ele = $(eleIdS);
		else ele = $(eleId);

		var html = A5.u.template.expand(data,template);

		ele.innerHTML = html;



	},

	_listTypes: function(lists) {
		var arr = lists.split(',');
		var arrS = [];
		var arrJS = [];
		var arrCRC = [];
		var lObj = '';
		for(var i = 0; i < arr.length; i++) {
			lObj = this.getControl(arr[i]);
			if(lObj) {
				if(lObj._dataSourceType.toLowerCase() == 'javascript function') arrJS.push(arr[i]);
				else arrS.push(arr[i]);
				if(typeof lObj._includeCRC != 'undefined') {
					if(lObj._includeCRC) arrCRC.push(arr[i]);
				}
			}
		}
		return {listServer: arrS, listJS: arrJS, listCRC: arrCRC};
	},

	refreshViewBoxData: function(viewBoxIds) {
		//viewBoxIds can be a comma delimited list
		if(typeof this._viewBoxesBasedOnJavascriptFunctions != 'undefined') {
			var arr3 = [];
			var arr2 = viewBoxIds.toUpperCase().split(',');
			var obj = false;
			for(var i = 0; i < arr2.length; i++) {
				obj = this._viewBoxesBasedOnJavascriptFunctions[arr2[i]];
				if(typeof obj != 'undefined') {
					//refresh
					var vbObj = this.getControl(arr2[i]);
					this._viewBoxData[arr2[i]] = eval(obj.functionName+ '();');
					vbObj.populate(this._viewBoxData[arr2[i]]);
				} else {
					arr3.push(arr2[i]);
				}
			}
			viewBoxIds = arr3.join(',');
			if(viewBoxIds == '') return true;
		}

		var arr = [];
		arr.push(A5.ajax.buildURLParam('__ViewBoxIds',viewBoxIds));
		var callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:RefreshViewBox','',callbackData);
	},

	refreshListsIncremental: function() {
		var aL = [];
		for(var n in this.columnInfo) {
			if(this.columnInfo[n].info.controlType == 'List') aL.push(n);
		}
		if(aL.length == 0) return false;
		var objX = this._listTypes(aL.join(','));
		if(objX.listCRC.length == 0) return false;
		var obj = {mode: 'incremental'};
		for(var i = 0; i < objX.listCRC.length; i++) {
			//need to do one at a time, becuase the CRC data that is sent back is not collected for all Lists at once
			this._refreshListData(objX.listCRC[i],obj);
		}
	},

	refreshListData:  function(listId) {
		var obj = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		var objX = this._listTypes(listId);
		var arrJS = objX.listJS;
		var lObj = '';
		var fn = '';
		//refresh the JS lists - no callback needed
		for(var i = 0; i < arrJS.length; i++) {
			var lObj = this.getControl(arrJS[i]);
			fn = lObj._dataSourceJavascriptFunction;
			if(typeof window[fn] != 'undefined') {
				var data = window[fn].call();
				lObj.populate(data);
			} else if( fn.indexOf('._functions.') > 0) {
				var data = eval(fn + '()');
				lObj.populate(data);
			}

		}

		var serverLists = objX.listServer.join(',');
		if(serverLists != '') this._refreshListData(serverLists,obj);

		//some people  might have a valid use case to repopulate a static list with its original data
		//if(lObj._dataSourceType.toLowerCase() == 'static') return true;

		//this._refreshListData(listId,obj);
	},

	_refreshListData:  function(listId) {

		//listId can be a comma delimited list.
		var obj = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		var mode = 'full';
		if(typeof obj.mode != 'undefined') mode = obj.mode;
		listId = listId.toUpperCase();
		var listInfo = this._listControlsInfo[listId];
		var jsFuncName = '';
		var dataSeries = ''

		if(typeof listInfo != 'undefined') {
			if(typeof listInfo.javascriptFunction != 'undefined') jsFuncName = listInfo.javascriptFunction;
			if(typeof listInfo.seriesName != 'undefined') dataSeries = listInfo.seriesName;
			if(dataSeries != '') {
				var seriesInfo = this._dataSeries;
				if(typeof seriesInfo != 'undefined') seriesInfo = seriesInfo[dataSeries];
				if(typeof seriesInfo != 'undefined') jsFuncName = seriesInfo['javascriptFunction'];
			}
		}
		var jsFunctionResult = '';
		if(jsFuncName != '') {
			if(dataSeries != '') {
				var seriesArray = [];
				seriesArray.push(dataSeries)
				jsFunctionResult = this._executeJavascriptForDataSeries(seriesArray);
			} else {
				jsFunctionResult = window[jsFuncName]();
			}
		}
		var callbackData = '';

		var lObj = this.getControl(listId);
		if(lObj) {
			var parentList = lObj.parentList;
			if(typeof parentList != 'undefined') {
				if(parentList != '') {
					alert('Can\'t refresh List ' + listId + ' as it is a child List with pre-fetched data. You must refresh the data in this List\'s parent List(\''+parentList+'\')');
					return false;
				}
			}
		}


		var arr = [];
		arr.push(A5.ajax.buildURLParam('__listId',listId));
		//use singular for var name
		arr.push(A5.ajax.buildURLParam('__javascriptFunctionResults',jsFunctionResult));
		arr.push(A5.ajax.buildURLParam('__options',$u.o.toJSON(obj)));
		if(typeof this._listsToSynchronize != 'undefined') {
			arr.push(A5.ajax.buildURLParam('__arrayOfListsToSynchronize',$u.o.toJSON(this._listsToSynchronize)));
		}


		arr.push(A5.ajax.buildURLParam('__mode',mode));
		if(mode == 'incremental') {
			var listObj = this.getControl(listId);
			var dirtyPK = [];
			if(listObj) dirtyPK = listObj.harvestList(true);
			var crc = this._getListCRCs(listId);
			arr.push(A5.ajax.buildURLParam('_crcData',JSON.stringify(crc)));
			arr.push(A5.ajax.buildURLParam('_dirtyListRows',JSON.stringify(dirtyPK)));
			if(listObj._dataSourceType.toLowerCase() != 'sql') {
				var pkInList = listObj.harvestListKeys();
				arr.push(A5.ajax.buildURLParam('_primarykeysInList',JSON.stringify(pkInList)));
			}
		}

		if(mode == 'full') {
			if(obj.skipDirtyRows) { //this is not yet implemented
				var dirtyPK = [];
				var listObj = this.getControl(listId);
				if(listObj) dirtyPK = listObj.harvestList(true);
				arr.push(A5.ajax.buildURLParam('_dirtyListRows',JSON.stringify(dirtyPK)));
			}
		}

		callbackData = arr.join('&');
		//alert('refresh list: ' + this.getValue('list1'));
		this.ajaxCallback('G',1,'system:RefreshList','',callbackData);

		},


	_listRefreshCascadingLists: function(listId) {
		var obj = {};
		obj.keepFocusOnCurrentSelection = true;
		obj.setFocusToValue = '';
		obj.refreshDependentLists = true;
		obj.onlyRefreshDependentLists = true;
		this._refreshListData(listId,obj);
		},



	_listRemoveSelectedRows: function(listId) {
		var lObj = this.getControl(listId);
		var row = lObj.selection;
		if(typeof row == 'undefined') return false;
		row.sort();
		lObj.removeRows(row);
		//lObj.removeRows(lObj.value);
		//get last value in array
		row = row.shift();
		if((row+1) > lObj._rData.length) row --;
		lObj.setValue(row);
	},


	_listRemoveAllRows: function(listId) {
		var lObj = this.getControl(listId);
		lObj.populate([]);
	},




	_listShiftPositionSelectedRows: function(listId,target) {
		var lObj = this .getControl(listId);
		var a = lObj._rData;
		var lo = a.length;
		var rows =  [].concat(lObj.selection);
		rows.sort();

		var lastRow = rows[rows.length -1];
		var firstRow = rows[0];
		var nextRow = parseInt(lastRow) + 1;
		var prevRow = parseInt(firstRow) - 1;

		target = target.toLowerCase()[0];
		var old_index = -1;
		var new_index = -1;
		var newRows = rows;
		if(target == 'd') {
			old_index = nextRow;
			if(nextRow > a.length -1) return false;
			new_index = firstRow;
			for(i in newRows) {
				newRows[i] = parseInt(newRows[i]) + 1
			}
		}
		if(target == 'u') {
			old_index = parseInt(firstRow) -1;
			if(old_index < 0) return false;
			new_index = parseInt(lastRow);
			for(i in newRows) {
				newRows[i] = parseInt(newRows[i]) - 1
			}
		}
		if(target == 't') {
			for(var i = 1; i <= firstRow ; i++) {
				this._listShiftPositionSelectedRows(listId,'up');
			}
			return true;
		}
		if(target == 'b') {
			var count = (a.length -1) - parseInt(lastRow);
			for(var i = 0; i < count; i++) {
				this._listShiftPositionSelectedRows(listId,'down');
			}
			return true;
		}
		A5ArrayMove(a,old_index,new_index);
		//a.move(old_index,new_index);
		lObj.populate(a);
		lObj.setValue(newRows);
	},



	_listMoveAllRows: function(listSource,listTarget) {
		var lSrc = this.getControl(listSource);
		var lTar = this.getControl(listTarget);
		//get array of data to move
		var rows = [];
		for(var i = 0; i < lSrc._rData.length; i++) {
			rows.push(lSrc._rData[i]);
		}

		var flagAppend = false;
		var row = 0;
		//if there is no data in the list, or the last record is selected, do an append
		if(lTar._rData.length == 0) {
			flagAppend = true;
		} else {
			var row = [].concat(lTar.selection);
			row.sort();
			//get last value in array
			row = row.pop();
			row++;
			if(row >= lTar._rData.length) flagAppend = true;
		}

		if(flagAppend) {
			lTar.appendRows(rows);
		} else {
			lTar.insertRows(row,rows);
		}
		lTar.setValue(row + (rows.length -1));

		//lTar.insertRows(0,rows);
		this._listRemoveAllRows(listSource);
		//lTar.setValue(0);
	},

	_listMoveCurrentSelection: function(listSource,listTarget) {
		var lSrc = this.getControl(listSource);
		var lTar = this.getControl(listTarget);
		if ( lSrc.selection.length == 0) return false;
		var sel = [].concat(lSrc.selection);
		var data = [];
		var tData = {};
		for( var i = 0; i < sel.length; i++) {
			tData = {};
			$u.o.assign(tData,lSrc.getData(sel[i]));
			data.push(tData);
		}
		var rowTar = 0;
		if(lTar.selection.length != 0 ) {
			rowTar = [].concat(lTar.selection);
			rowTar.sort();
			rowTar = rowTar.pop();
			rowTar = rowTar + 1;
		}
		lTar.insertRows(rowTar,data);
		this._listRemoveSelectedRows(listSource);



	},

	_listNavigateRecord: function(listId,direction) {
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return false;
		var pageSize = listObj._state.pageSize;
		var currRow = listObj.selection[0];
		if(typeof currRow == 'undefined') currRow = 0;
		var targetRow = -1;
		var d = direction[0].toLowerCase();


		if(typeof listObj._state.paginated != 'undefined') {
			if(listObj._state.paginated == false) {
				//no need to do ajax callbacks if all data is in memory
				pageSize = 999999999999;

			}
		}

		if(d == 'n') {
			targetRow = (currRow+1) + 1;
			if(targetRow > pageSize) this._listNavigate(listId,'next-byrecord');
			listObj.setValue(targetRow -1);
		}

		if(d == 'p') {
			targetRow = (currRow+1) -1;
			if(targetRow < 1) {
				if(listObj._state.paginated) this._listNavigate(listId,'previous-byrecord');
			}
			listObj.setValue(targetRow -1);
		}

		if(d == 'f') {
			if(listObj._state.paginated) this._listNavigate(listId,'first-byrecord');
			else listObj.setValue(0);
		}


		if(d == 'l') {
			if(listObj._state.paginated) this._listNavigate(listId,'last-byrecord');
			else {

			var dm = listObj._dataMap;
			var index = $u.a.find(dm,listObj._rData[listObj._rData.length-1]['*key']);
			listObj.setValue(index);
			}
		}


	},

	_listNavigate: function(listId,direction) {
		var obj = {};
		obj.cmd = 'navigate';
		var result = this._list_executeEvent(listId,'beforePageNavigate',{'direction' : direction[0]});
		if(!result) return false;
		obj.direction = direction;

		this._listMethod(listId,obj);
	},

	_listNavigateToPage: function(listId,pageNumber) {
			var obj = {};
			obj.cmd = 'navigate';
			var result = this._list_executeEvent(listId,'beforePageNavigate',{'direction' : 'pageNumber', 'pageNumber': pageNumber});
			if(!result) return false;
			obj.direction = 'pageNumber';
			obj.pageNumber = pageNumber;
			this._listMethod(listId,obj);
	},

	_listRefreshRow: function(listId) {
		var obj = {};
		obj.cmd = 'refreshRow';
		var result = this._list_executeEvent(listId,'beforeRefreshRow',{});
		if(!result) return false;
		this._listMethod(listId,obj);
	},

	_listRefreshRecordsByKey: function(listId,keys) {
		var options = typeof arguments[2] != 'undefined' ? arguments[2] : {};

		if(keys.constructor != Array) keys = [keys];
		var obj = {};
		obj.cmd = 'refreshRowByKey';
		obj.keys = keys;
		obj.additionalOptions = options;
		var result = this._list_executeEvent(listId,'beforeRefreshRow',{keys : keys});
		if(!result) return false;
		this._listMethod(listId,obj);
	},


	_listFetchMore: function(listId) {
		var obj = {};
		obj.cmd = 'fetchMore';
		this._listMethod(listId,obj);
	},

	_listFetchRecordsByKey: function(listId,keys) {
		if(keys.constructor != Array) keys = [keys];
		this._listMethod(listId,{cmd : 'fetchExplicit', keys: keys} );
	},


	_list_executeEvent: function(listId,eventName) {
		var dvEv = eventName.split('.')[0];
		var flagDV = false;
		if(dvEv.toLowerCase() == 'detailview') {
			flagDV = true;
			eventName = eventName.split('.')[1];
		}
		listId = listId.toUpperCase();
		var result = true;
		var s = this._listViewSettings[listId];
		if(typeof s == 'undefined') return result;
		var e = s.systemEvents;
		if(flagDV) e = s.systemEvents.detailView;
		if(typeof e == 'undefined') return result;
		var obj = this.getControl(listId);
		var targs = new Array();
		for(var i = 2; i < arguments.length; i++) targs.push(arguments[i]);

		var tresult = false;
		//'_' system event fires after and '__' fires before
		if(typeof e['__' +eventName] != 'undefined' ) {
			if(e['__'+eventName].constructor == Function) {
				e['__'+eventName].apply(obj,targs);
			}
		}

		if(typeof e[eventName] != 'undefined'  ) {
			if(e[eventName].constructor == Function) {
				tresult = e[eventName].apply(obj,targs);
				if(typeof tresult == 'boolean') result = tresult;
			}
		}
		if(typeof e['_' +eventName] != 'undefined' ) {
			if(e['_'+eventName].constructor == Function) {
				tresult = e['_'+eventName].apply(obj,targs);
				if(typeof tresult == 'boolean') result = result && tresult;
			}
		}
		return result;
	},

	_listDeleteByKey: function(listId, key) {
		var lObj = this.getControl(listId.toUpperCase());
		if(typeof listObj == 'undefined') return false;
		lObj.setValue(key)
		var rn = lObj.selection[0];
		if(typeof rn == 'undefined') return false;
		var r = lObj._rData;
		r.splice(rn,1);
		lObj.populate(r);
	},



	_listMethod: function(listId, obj) {
		//('"+ut(variablename)+"',{cmd: 'fetchMore'});"
		//alert(obj.cmd);

		listId = listId.toUpperCase();
		var listObj = this.getControl(listId);
		if(typeof listObj == 'undefined') return false;
		var arr = [];
		if(obj.cmd == 'fetchMore') {
			if(typeof listObj._lockedForFetch != 'undefined') {
				if(listObj._lockedForFetch) return false;
			}
			if(typeof listObj._flagAllDataHasBeenFetched != 'undefined') {
				if(listObj._flagAllDataHasBeenFetched) return false;
			}
			var result = this._list_executeEvent(listId,'beforeFetchMore',{});
			if(!result) return false;
			listObj._lockedForFetch = true;
			this._resetFlag('_lockedForFetch',5000);
		}

		if(obj.cmd == 'refreshRow') {
			var listData = listObj._data;
			if(typeof listData == 'undefined') return false;
			var currentRow = listObj.selection[0];
			obj.currentRowNumber = currentRow;
			currentRow = listObj._dataMap[currentRow]; //translates logical to physical row
			if(typeof currentRow == 'undefined') return false;

			var currentRowData = listObj._data[currentRow];
			arr.push(A5.ajax.buildURLParam('_currentRowData',$u.o.toJSON(currentRowData)));

		}

		if(obj.cmd == 'navigate') {
			if(typeof listObj._lockedForFetch != 'undefined') {
				if(listObj._lockedForFetch) {
					return false;
				}
			}
			listObj._lockedForFetch = true;
			this._resetFlag('_lockedForFetch',5000);
		}

		arr.push(A5.ajax.buildURLParam('_listId',listId));
		//arr.push(A5.ajax.buildURLParam('_cmdObj',$u.o.toJSON(obj)));
		arr.push(A5.ajax.buildURLParam('_cmdObj',JSON.stringify(obj)));
		//arr.push(A5.ajax.buildURLParam('_listState',$u.o.toJSON(listObj._state)));
		arr.push(A5.ajax.buildURLParam('_listState',JSON.stringify(listObj._state)));
		var data = arr.join('&');


		this.ajaxCallback('G',1,'system:listCommand','',data);
	},

	_refreshChart: function(chartId) {
		//if otherInfo was not specified, but had been specified in a prior call, use the prior version
		//otherwise after resizing a chart the new size will be lost.
		var flagStoreSize = false;
		if(typeof arguments[1] != 'undefined') flagStoreSize = true;
		var otherInfo = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		chartId = chartId.toUpperCase();
		var chartInfo = this._chartControlsInfo[chartId];
		if(flagStoreSize) {
			chartInfo.otherInfo = otherInfo;
		} else {
			if(typeof chartInfo.otherInfo != 'undefined') otherInfo = chartInfo.otherInfo;
		}
		if(typeof chartInfo == 'undefined') return false;
		var seriesArray = chartInfo.dataSeries;
		var jsFunctionResult = this._executeJavascriptForDataSeries(seriesArray);
		var callbackData = '';
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__chartId',chartId));
		arr.push(A5.ajax.buildURLParam('__seriesNames',chartInfo.dataSeries.join(',')));
		arr.push(A5.ajax.buildURLParam('__javascriptFunctionResults', jsFunctionResult ));
		arr.push(A5.ajax.buildURLParam('__otherInfo', $u.o.toJSON(otherInfo) ));
		callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:RefreshChart','',callbackData);
	},

	refreshChart: function(chartId) {
		var otherInfo = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		this._refreshChart(chartId,otherInfo);
	},
	resizeChart: function(chartId,height,width) {
		//should not be used if there are events or an image mab as this does not regenerate image map. use refreshChart() instead.
		var obj = {};
		if(typeof this._chartControlsInfo == 'undefined') return false;
		obj._chartControlsInfo = this._chartControlsInfo;
		var data = $u.o.toJSON(obj);
		var ele = this.getPointer(chartId.toUpperCase())
		if(ele) ele.style.display = 'none';
		var callbackData = '';
		var arr = [];
		arr.push(A5.ajax.buildURLParam('__chartId',chartId));
		arr.push(A5.ajax.buildURLParam('__width', width ));
		arr.push(A5.ajax.buildURLParam('__height', height ));
		arr.push(A5.ajax.buildURLParam('_chartInfo',data));
		callbackData = arr.join('&');
		this.ajaxCallback('G',1,'system:ResizeChart','',callbackData);
	},

	_executeJavascriptForDataSeries: function(seriesArray) {
	//if a custom data series has a javascript function, execute code
		var seriesName = '';
		var fnResult = [];
		var seriesInfo = '';
		var jsFuncName = '';
		for(var sn = 0; sn < seriesArray.length; sn++){
			seriesName = seriesArray[sn].toUpperCase();
			if(seriesName != '') {
				seriesInfo = this._dataSeries[seriesName];
				jsFuncName = '';
				if(typeof seriesInfo != 'undefined') {
					if(typeof seriesInfo.javascriptFunction != 'undefined') {
						jsFuncName = seriesInfo.javascriptFunction;
						if(jsFuncName != '') {
							if(typeof window[jsFuncName] == 'function') {
								var fnResult_i = window[jsFuncName].call(this);
								if(typeof fnResult_i == 'undefined') {alert('Javascript did not return valid series'); return false;}
								if(fnResult_i.constructor == Array ||  fnResult_i.constructor == Object) fnResult_i = $u.o.toJSON(fnResult_i);
								var tempObj = {};
								tempObj.seriesName = seriesName;
								tempObj.javascriptFunctionResult = fnResult_i;
								fnResult.push( $u.o.toJSON(tempObj) );
							}
						}
					}
				}
			}
		}
		return fnResult.join('\n');
	},


	_panelGetSize: function(panelId) {
		var part = typeof arguments[1] != 'undefined' ? arguments[1] : 'body';
		var id  = this.panelGetId(panelId,part);
		var ele = $(id);
		var obj = {};
		obj.width = 0;
		obj.height = 0;
		if(!ele) return obj;
		obj.width = ele.offsetWidth;
		obj.height = ele.offsetHeight;
		return obj;
	},

	panelWidth: function(panelId) {
		return this._panelGetSize(panelId).width;
	},
	panelHeight: function(panelId) {
		return this._panelGetSize(panelId).height;
	},



	panelGetActive: function() {
		var targetPanel = typeof arguments[0] == 'undefined' ? '' : arguments[0];
		if(targetPanel != '') {
			var p = this.panelGet(targetPanel);
			if(p) {
				if(p.state) {
					return p.state.activePanel;
				}
			}
			return '';
		}
		var pObj = window[this.dialogId + '_PanelObj'];
		if(typeof pObj == 'undefined') return '';
		var addr_i = '';
		if(pObj._panelType == 'panelCard') {
			return '';
		} else {
			var address = [];
			while(pObj._panelType != 'panelCard') {
				address.push(pObj.state.activePanel);
				addr_i = address[address.length-1];
				if(addr_i == '') return '';
				pObj = pObj.getPanel(addr_i).src;
				if(!pObj) {
					return '';
				}

			}
			return address[address.length -1];
		}
	},

	panelGetId: function(panelName,part) {
		part = part.toLowerCase();
		if(part != 'header' && part != 'footer' && part != 'panel') part = 'body';
		if(panelName == '') return '';
		var obj = this.panelGet(panelName);
		if(!obj) return false;
		return obj.getPanelId(part);
	},


	panelGet: function(panelName) {



		//if flagRoot = true, return the root
		var flagRoot = typeof arguments[1] != 'undefined' ? arguments[1] : false;
		var path = this._panelResolvePath(panelName);

		if(typeof path == 'undefined') return false;

		//var path =  window[this.dialogId + '_PanelObj']._panelPath[panelName];
		//if(typeof path == 'undefined') {
		if(path == '') {
			var returnValue = '';
			if(flagRoot) returnValue =  {src: window[this.dialogId + '_PanelObj']};
			else returnValue =  window[this.dialogId + '_PanelObj'];
			if(typeof returnValue == 'undefined') {
				alert('Panel not found: ' + panelName);
				return false;
			} else {
				return returnValue;
			}
		} else {
			path = path.toUpperCase();
			if(flagRoot)	return window[this.dialogId + '_PanelObj'].getPanel(path);
			else return window[this.dialogId + '_PanelObj'].getPanel(path).src;
		}
	},

	panelSetActive: function(panelName) {
		var doAnim = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		var flagSilent = typeof arguments[2] != 'undefined' ? arguments[2] : false;
		panelName = panelName.toUpperCase();
		var path = this._panelResolvePath(panelName);
		if(typeof path == 'undefined' || path == false) {
			if(flagSilent == false) {
				alert('Panel not found: \'' + panelName+'\'')
			}
			return false;
		}
		window[this.dialogId + '_PanelObj'].setActivePanel(path,doAnim);
	},

	getPanelObject: function() {
		return window[this.dialogId + '_PanelObj'];
	},

	panelNavigate: function(panelName,direction, animate) {
		var panel = this.panelGet(panelName);
		var d2 = direction.toUpperCase();
		direction = direction.toUpperCase()[0];

		if(direction == 'F')      panel.firstPanel(animate);
		else if(direction == 'P') panel.prevPanel(animate);
		else if(direction == 'N') panel.nextPanel(animate);
		else if(direction == 'L') panel.lastPanel(animate);

		else if(d2 == 'HISTORYFIRST') panel.historyFirst(animate);
		else if(d2 == 'HISTORYLAST') panel.historyLast(animate);
		else if(d2 == 'HISTORYBACK') panel.historyBack(animate);
		else if(d2 == 'HISTORYFORWARD') panel.historyForward(animate);


	},



	_panelResolvePath: function(panelName) {
		if(typeof window[this.dialogId + '_PanelObj'] == 'undefined') return false;

		var path = '';
		if(panelName.search('>') == -1) {
			path =  window[this.dialogId + '_PanelObj']._panelPath[panelName];
		} else {
			panelName = panelName.split('>');

			path =  window[this.dialogId + '_PanelObj']._panelPath[panelName[0]];
			if(typeof path == 'undefined') path = panelName[1];
			else path = path + ':' + panelName[1];
		}
		if(typeof path == 'undefined') {
			if(typeof window[this.dialogId + '_PanelObj']._displayNames[panelName] != 'undefined') {
				path = '';
			}
		}
		return path;
	},


	loadJavascript: function(txt) {
		A5.loadJavascript(txt);
	},


	loadMetaTag: function(name,txt) {
		var e = document.createElement('meta');
		e.name = name;
		e.content = txt;
		document.getElementsByTagName('head')[0].appendChild(e);
	},



	loadJavascriptFile: function(filename) {
		A5.loadJavascriptFile(filename,arguments[1]);
	},


	loadCSSFile: function(filename) {
			var forceLoad = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			var sEle = document.getElementsByTagName('link');
			var cancelAdd = false;
			if(forceLoad == false) {
				for(var i=0; i < sEle.length; i++) {
					if(sEle[i].href.indexOf(filename) > 0) {
						cancelAdd = true;
						break;
					}
				}
			}
			if(cancelAdd == false) {
				var e = document.createElement('link');
				e.href = filename;
				e.rel = 'stylesheet';
				e.type = 'text/css';
				document.getElementsByTagName('head')[0].appendChild(e);
			}
	},

	loadXbasic: function(txt) {
		//return true;
		var versionNum = typeof arguments[1] != 'undefined' ? arguments[1] : '';
		if(this._embeddedMode == false) return false;
		var sEle = document.getElementsByTagName('script');
		var cancelAdd = false;
		for(var i=0; i < sEle.length; i++) {
			if(typeof sEle[i].language != 'undefined') {
				if(sEle[i].language.toLowerCase() == 'xbasic' + versionNum) {
					if(sEle[i].text.toLowerCase()  == txt.toLowerCase()) {
						cancelAdd = true;
						break;
					}
				}
			}
		}
		if(cancelAdd == false) {
			var e = document.createElement('script');
			e.text = txt;
			e.language = 'Xbasic' + versionNum;
			try {
				document.getElementsByTagName('head')[0].appendChild(e);
			} catch(err) {

			}
		}
	},



	resolveId: function(id) {
		if(typeof id == 'undefined') return 'page';
		if(id == '') return 'page';
		var id2 = id.split(':')
		var type = id2[0].toLowerCase();
		if(type == 'element') return id2[1];
		if(type == 'container') return this.dialogId + '.V.R1.' + id2[1].toUpperCase();
		if(type == 'panel') return this.panelGetId(id2[1],'panel');
		return id;
	},

	_getOnlineStatus: function() {
		var flag = true;
		if(this._onlineStatusMode == '') {
			var type = this.getConnectionType();
			if(type == 'none') flag = false;
		} else {
			if(this._onlineStatusMode == 'simulateOn') flag =  true;
			else if (this._onlineStatusMode == 'simulateOff') flag = false;
		}

		if(flag) this._onlineStatus = 'online';
		else this._onlineStatus = 'offline';

		return flag;

	},




	getConnectionType: function() {
		var flagPG = false;
		if(typeof navigator != 'undefined') {
			if(typeof navigator.connection != 'undefined') {
				if(typeof navigator.connection.type != 'undefined') flagPG = true;
			}
		}
		if(!flagPG) {
			//not in phonegap
			var type = '';
			if(navigator.onLine) type = 'connected_unknowntype';
			else type = 'none';
			return type;
		}

		var networkState = navigator.connection.type;
	    var s = {};
	    if(typeof Connection != 'undefined') {
			s[Connection.UNKNOWN]  = 'connected_unknowntype';
			s[Connection.ETHERNET] = 'ethernet';
			s[Connection.WIFI]     = 'wifi';
			s[Connection.CELL_2G]  = '2g';
			s[Connection.CELL_3G]  = '3g';
			s[Connection.CELL_4G]  = '4g';
			s[Connection.CELL]     = 'genericcell';
			s[Connection.NONE]     = 'none';
			return s[networkState];
		} else {
			return networkState;
		}

	},

	_setSimulatedOnlineStatus: function(mode) {
		var currentMode = this._onlineStatus;
		if(mode == 'on') {
			this._onlineStatusMode = 'simulateOn';
			if(currentMode == 'offline') this._executeEvent('onConnectionChange',{online: true});
			this._onlineStatus = 'online';
		}
		if(mode == 'off') {
			this._onlineStatusMode = 'simulateOff';
			if(currentMode == 'online') this._executeEvent('onConnectionChange',{online: false});
			this._onlineStatus = 'offline';
		}

		if(mode == '') {
			var newMode = navigator.onLine;
			if(newMode) newMode = 'online';
			else newMode = 'offline';
			this._onlineStatusMode = '';
			this._onlineStatus = newMode;
			if(newMode != currentMode) this._executeEvent('onConnectionChange',{online: navigator.onLine});
		}
	},

	_fireOnConnectionChangeEvent: function()  {

		var newMode = navigator.onLine;
		if(newMode) newMode = 'online';
		else newMode = 'offline';
		this._onlineStatus = newMode;
		this._executeEvent('onConnectionChange',{online: navigator.onLine});


	},

	hideWaitMessage: function() {

		var ele = typeof arguments[0] != 'undefined' ? arguments[0] : '';
		var eleResolved = ''

		if(ele != '') {
			if(ele == 'page') {
				AUI.WaitDialog.clearGlobal();
				clearTimeout(this._wmto);
				return true;
			} else {
				eleResolved = this.resolveId(ele);
				AUI.WaitDialog.clearLocal(eleResolved);
				var x = $u.a.find(this._waitDialogs,ele);
				if(x > 0) this._waitDialogs.splice(x,1);
				clearTimeout(this._wmto);
				return true;
			}
		}

		for(var i = 0; i < this._waitDialogs.length; i++) {
			eleResolved = this.resolveId(this._waitDialogs[i]);
			AUI.WaitDialog.clearLocal(eleResolved);
			AUI.WaitDialog.clearGlobal();
		}

	},

	showWaitMessage: function(id) {
		clearTimeout(this._wmto);
		var wObj = typeof arguments[1] != 'undefined' ? arguments[1] : {};
		var idResolved = this.resolveId(id);
		this._waitDialogs.push(id);
		var contentHTML = '';
		var msg = '';

		var _waitMessageAutoCloseDelay = this.waitMessageAutoCloseDelay;

		if(typeof wObj.useCSSAnimation == 'undefined') wObj.useCSSAnimation = false;
		if(typeof wObj.waitMessageAutoCloseDelay != 'undefined') _waitMessageAutoCloseDelay = wObj.waitMessageAutoCloseDelay;
		var _msgClassName = '_a5WaitMessageCSS';
		var _lockClassName = '_a5LockScreenCSS';

		if(typeof wObj.msgClassName != 'undefined') _msgClassName = wObj.msgClassName;
		if(typeof wObj.lockClassName != 'undefined') _lockClassName = wObj.lockClassName;
		if(_msgClassName == '') _msgClassName = '_a5WaitMessageCSS';
		if(_lockClassName == '') _lockClassName = '_a5LockScreenCSS';

		var padding = '';
		if(!wObj.useCSSAnimation) {
			padding = '10px';
			if(typeof wObj.icon == 'undefined') wObj.icon = this._waitGif;
			if(typeof wObj.message == 'undefined') wObj.message = '';
			if(wObj.message == '' && wObj.icon == '') wObj.icon = this._waitGif;

			if(wObj.message == '') msg = '<img style="vertical-align:middle;" src="'+wObj.icon+'">';
			else {
				if(wObj.icon != '') msg = '<img style="vertical-align:middle;" src="'+wObj.icon+'"> ' + wObj.message;
				else msg = wObj.message;
			}
		} else {
			padding = '30px';
			var cObj = {};
			if(typeof wObj.cssAnimationSettings != 'undefined') cObj = wObj.cssAnimationSettings;
			msg = this.waitMessageCSS3(cObj);
		}
		var style = '<style> ._a5WaitMessageCSS {background: rgba(0,0,0,.2);  border-radius: 5px; color: white; padding: '+padding+';  text-shadow: none; }  ._a5LockScreenCSS  { background: rgba(0,0,0,0); } </style> ';
		var obj = {
			content: style + msg,
			location: '',
			className: _msgClassName,
			lockControl: true,
			lockClassName: _lockClassName
		}

		if(idResolved == 'page') AUI.WaitDialog.setGlobal(obj);
		else AUI.WaitDialog.addLocal(idResolved,obj);

		var classInst = this;

		this._wmto = setTimeout(function() {
			classInst.hideWaitMessage();
			delete classInst;
		},_waitMessageAutoCloseDelay);
		//alert('wmto' + this._wmto);


	},



	waitMessageCSS3: function(e) {
		/* empty args build spinner with the following defaults:
			* strokeColor : #fff
			* shadowColor : #eee
			* strokeWidth : 6
			* cycleTime : 1
			* size : 32
		*/
		e = e || {};
		var options = {};
		if (typeof(e.autoColor) != 'undefined') {
			typeof(e.windowTheme) != 'undefined' ?options.windowTheme = e.windowTheme : options.windowTheme = this.styleName;
			if (e.autoColor) {
				// auto adjust colors based on theme in use
				if (options.windowTheme == 'iOS') {
					options.strokeColor = '#fff';
					options.shadowColor = '#eee';
				} else {
					options.strokeColor = '#333';
					options.shadowColor = '#aaa';
				}
			}
		} else {
			typeof(e.strokeColor) != 'undefined' ? options.strokeColor = e.strokeColor : options.strokeColor='#fff';
			typeof(e.shadowColor) != 'undefined' ? options.shadowColor = e.shadowColor : options.shadowColor='#eee';
		}
		typeof(e.strokeWidth) != 'undefined' ? options.strokeWidth = e.strokeWidth : options.strokeWidth = 6;
		typeof(e.cycleTime) != 'undefined' ? options.cycleTime = e.cycleTime : options.cycleTime = 1;
		typeof(e.size) != 'undefined' ? options.size = e.size : options.size = 32;
		var marginOffset = Math.abs(parseInt(options.size)/2) * -1;
		var data = [];
		data.push('<style>');
		data.push('#ajaxloader {');
		data.push('	display:table;');
		//data.push('position: absolute;');
		data.push('	width: '+options.size+'px;');
		data.push('	height: '+options.size+'px;');
		data.push('	border: '+options.strokeWidth+'px solid '+options.strokeColor+';');
		data.push('box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;');
		data.push('border-bottom-color: black;');

		//data.push('left: 50%;');
		//data.push('top: 50%;');
		//data.push('margin: '+marginOffset+'px 0px 0px '+marginOffset+'px;');
		//data.push('	border: '+options.strokeWidth+'px solid '+options.strokeColor+';');
		//data.push('	border-right-color: transparent;');


		data.push('	border-radius: 50%;');
		data.push('	box-shadow: 0 0 25px 2px '+options.shadowColor+';');
		data.push('	-webkit-animation: spin '+options.cycleTime+'s linear infinite;');
		data.push('	-moz-animation: spin '+options.cycleTime+'s linear infinite;');
		data.push('	-ms-animation: spin '+options.cycleTime+'s linear infinite;');
		data.push('	animation: spin '+options.cycleTime+'s linear infinite;');
		data.push('}');
		data.push('@-webkit-keyframes spin {');
		data.push('	from { -webkit-transform: rotate(0deg); opacity: 0.3; }');
		data.push('	50%  { -webkit-transform: rotate(180deg); opacity: 1; }');
		data.push('	to   { -webkit-transform: rotate(360deg); opacity: 0.3; }');
		data.push('}');
		data.push('@-moz-keyframes spin {');
		data.push('	from { -moz-transform: rotate(0deg); opacity: 0.3; }');
		data.push('	50%  { -moz-transform: rotate(180deg); opacity: 1; }');
		data.push('	to   { -moz-transform: rotate(360deg); opacity: 0.3; }');
		data.push('}');
		data.push('@-ms-keyframes spin {');
		data.push('	from { -ms-transform: rotate(0deg); opacity: 0.3; }');
		data.push('	50%  { -ms-transform: rotate(180deg); opacity: 1; }');
		data.push('	to   { -ms-transform: rotate(360deg); opacity: 0.3; }');
		data.push('}');
		data.push('@keyframes spin {');
		data.push('	from { transform: rotate(0deg); opacity: 0.3; }');
		data.push('	50%  { transform: rotate(180deg); opacity: 1; }');
		data.push('	to   { transform: rotate(360deg); opacity: 0.3; }');
		data.push('}');
		data.push('</style>');
		data.push('<div id=\'ajaxloader\'></div>');
		var thisHTML = data.join('\n');
		return (thisHTML);
	},

	_runJSOnLoad: function() {
		var e = A5.eleByClass('__A5Component_jsRunOnLoad');
		for(var i = 1; i <= e.length; i++) {
			eval(e[i-1].value);
			e[i-1].value = '';
		}
	},

	helpWindow: function(txt,title) {

		var windowName = '_HelpWindow';
		var currWindow = this.getWindow(windowName);
		var windowHeight = typeof arguments[3] != 'undefined' ? arguments[3]: '3in';
		var windowWidth = typeof arguments[2] != 'undefined' ? arguments[2]: '4in';
		var windowType = typeof arguments[4] != 'undefined' ? arguments[4]: 'modal-resizable';
		var relativeTo = typeof arguments[5] != 'undefined' ? arguments[5]: '';
		var flagDropdown = false;


		if(windowType.split('-')[0] == 'dropdown') {
			flagDropdown = true;
			var rEle = $(relativeTo);
		}
		if(!currWindow) {
			currWindow = this.createWindow(windowName,windowType,
			{

			body: {
				content: {
					type: 'blank',
					elementId: '~'
				}
			},
			height: windowHeight,
			width: windowWidth,
			title: {
				html: 'Help Window',
				location: 'top',
				direction: this._defaultWindowTitleDirection,
				show: true
			},
			disableMove: false
		}
			);
		}
		var windowDiv = currWindow.getWindowId('body');
		$(windowDiv).innerHTML = txt;
		currWindow.setTitle(title);
		if(!flagDropdown) {
			currWindow.show();
		} else {
			currWindow.show('dropdown',rEle);
		}
	},

	showDialogHelp: function(id) {
		var data = '__helpId=' + id;
		this.ajaxCallback('G','1','__a5ShowDialogHelp','',data);
	},

	showFieldHelp: function(fieldName,instNum) {
		fieldName = fieldName.split(':')[0];
		//alert(fieldName +'\n' + instNum);
		var helpId = this.columnInfo[fieldName].hlp;
		if(typeof helpId == 'undefined' || helpId == '') return false;
		var data = '__fieldname=' + fieldName + '&__helpId=' + helpId + '&__instNum=' + instNum;
		this.ajaxCallback('G',1,'system:showFieldHelp','',data);
	},

	openChildGrid: function(go) {
		A5.component.runGrid(go);
	},

	createWindow: function(name,settings) {
		if(!this.getWindow(name)) {
			if(typeof settings == 'string') {
				var parts = settings.split('-');
				settings = new Object();
				$u.o.assign(settings , this._defaultWindowSettings[parts.shift()]);
				for(var i=0;i<parts.length;i++){
					if(parts[i] == 'url'){
						settings.body.content.type = 'url';
						settings.body.content.url = 'about:blank';
					} else if(parts[i] == 'resizable'){
						settings.resize = 'both';
					}
				}
			}
			if(typeof arguments[2] == 'object') $u.o.assign(settings,arguments[2]);
			this._genericWindow[name] = new A5.Window(settings);
		}
		return this._genericWindow[name];
	},

	getWindow: function(name) {
		if(typeof this._genericWindow[name] != 'undefined' ) return this._genericWindow[name];
		return false;
	},

	imageIsEmpty: function(UXControlName) {
		UXControlName = UXControlName.toUpperCase()
		var val = this.getValue(UXControlName);
		if(val.indexOf('null_1x') > -1 || val == this.nullImage) val = '';
		val = val.substring(0,50);
		var ele = $(this.dialogId + '.V.R1.'+UXControlName+'_HIDDENA5FN');
		if(ele) {
			var val2 = ele.src;
			var val3 = ele.value;
			if(val2 == '') val2 = val3;
			val2 = val2.substring(0,50)
		} else {
			val2 = '';
		}
		var fieldHasValue = false;
		if(val.length > 0 || val2.length > 0) fieldHasValue = true;
		return !fieldHasValue;
	},

	inkIsEmpty: function(UXControlName) {
		var val = this.getValue(UXControlName);
		var flag = false;
		if(val != '') {
			val = val.split('%json%');
			val = val[2];
			if(val.length <= 1) {
				flag = true;
			} else {
				flag = false;
			}
		} else {
			flag = true;
		}
		return flag;

	},

	signatureIsEmpty: function(UXControlName,len) {

		UXControlName = UXControlName.toUpperCase();
		if(typeof this._sigControlDimensions) {
			if(typeof len == 'undefined') {
				var sg = this._sigControlDimensions[UXControlName];
				var w = A5.u.convertUnits(sg.width,'px');
				var h = A5.u.convertUnits(sg.height,'px');
				var c = document.createElement('CANVAS');
				c.width = w;
				c.height = h;
				len = c.toDataURL('image/png',1).length +1;
				delete c;
			}
		}

		///is user in sign mode?
		var ele = $(this.dialogId +'.V.R1.'+UXControlName+'.CANVAS');
		var elediv = $(this.dialogId +'.V.R1.'+UXControlName+'.CANVASDIV');
		if(elediv.style.display == '') {
			var _v = {};
			_v.compressionFactor = 1.0;
			var sigImage = ele.toDataURL('image/png',_v.compressionFactor);
			if(sigImage.length < len) return true;
			else return false;
		}

		var p = this.getPointer(UXControlName);
		if(!p) return true;
		var src = p.src;
		src = src.toLowerCase();
		//alert(src.length + ' len: ' + len);
		var flagEmpty = false;
		if(src.indexOf('null_1x1') > -1 ) return true;
		if(src.indexOf('data:image/') == 0) {
			if(src.length < len) return true;
		}
		if( src.indexOf('.png') == 0  ) return true;

		return flagEmpty;
	},




	phoneGapLoaded: function() {
		var flag = this._cordovaReady;
		if(typeof flag == 'undefined') flag = false;
		return flag;
	},

	_executeEvent: function(eventName) {
		var result = true;
		var targs = new Array();
		for(var i = 1; i < arguments.length; i++) targs.push(arguments[i]);
		var tresult = false;

		//__ is a system event that fires before the user event
		if(typeof this['__' +eventName] != 'undefined' ) {
			if(this['__'+eventName].constructor == Function) {
				tresult = this['__'+eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = result && tresult;
			}
		}
		//user event
		if(typeof this[eventName] != 'undefined'  ) {
			if(this[eventName].constructor == Function) {
				tresult = this[eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = tresult;
			}
		}
		//system event
		if(typeof this['_' +eventName] != 'undefined' ) {
			if(this['_'+eventName].constructor == Function) {
				tresult = this['_'+eventName].apply(this,targs);
				if(typeof tresult == 'boolean') result = result && tresult;
			}
		}
		if(eventName == 'onInitializeComplete') {
			this.initialized = true;
			for(var i = 0 ; i < this._delayed.length; i++) {
				this[this._delayed[i].m].apply(this,this._delayed[i].a);
			}
			delete this._delayed;
		}

		return result;
	},

	_rsiOnClick: function(e,classInst) {
		var idArr = this.id.split('.');
		var sectionName = idArr[3];
		var instNum = $u.s.toNum(idArr[4]);
		var rowNum = $u.s.toNum(idArr[2]);
		classInst.setRepeatingSectionActiveRow(sectionName,instNum,rowNum);
	},



	argumentValue: function(argName) {
		if(typeof this.stateInfo == 'undefined') return null;
		for(var name in  this.stateInfo) {
			if( name.indexOf('__args_') == 0) {
				if(name.substr(9) == argName)  {
					var argVal = this.stateInfo[name];
					return argVal;
				}
			}
		}
	},



	_editorLow: function(editorSet,editor,settings){
		if(!this.initialized) return false;
		editorSet = editorSet.toUpperCase();
		if(editorSet == '') return false;
		var es = this._editors[editorSet];
		if(typeof es == 'undefined') {
			alert('UX does not contain Editor Set: ' + editorSet);
			return false;
		}

		if(!$(this.dialogId+'.'+editorSet+'.'+editor)) {
			alert('UX does not contain Editor: ' + editor);
			return false;
		}

		if(es._s){
			if(es._s.autoCommit) this.editorCommit(editorSet,false);

			if(typeof es.editors[es._s.state.editor].hide != 'undefined'){
				es.editors[es._s.state.editor].hide.call(this,es._s.state.value,es._s);
			}

			$(this.dialogId+'.'+editorSet+'.'+es._s.state.editor).style.display = 'none';
			es._s = false;
		}

		if(typeof settings.autoCommit == 'undefined') settings.autoCommit = es.autoCommit;
		es._s = settings;
		$(this.dialogId+'.'+editorSet+'.'+editor).style.display = '';
		es.editors[editor].edit.call(this,settings.state.value,settings);
		es.show.call(this,settings.state.value,settings);
		if(typeof es.editors[editor].show != 'undefined') {
			es.editors[editor].show.call(this,settings.state.value,settings);
		}

	},

	editorSetFromEditor: function(editorName) {
		var edObj = this._EDITOR_EDITORSET[editorName];
		var es = '';
		if(typeof edObj != 'undefined') es = edObj.editorSet;
		if(typeof es == 'undefined') es = '';
		return es;
	},

	editorFromControl: function(editorSet,editor,control){
		editor = editor.toUpperCase();
		var settings = typeof arguments[3] != 'undefined' ? arguments[3] : {};
		if(control.constructor == Array){
			var value = [];
			for(var i=0;i<control.length;i++) value.push(this.getValue(control[i]));
		} else{
			var value = this.getValue(control);
		}
		settings.state = {
			from: 'control',
			editorSet: editorSet,
			editor: editor,
			control: control,
			onCommit: false,
			value: value
		}
		this._editorLow(editorSet,editor,settings)
	},

	editorFromValue: function(editorSet,editor,value){
		editor = editor.toUpperCase();
		var settings = typeof arguments[3] != 'undefined' ? arguments[3] : {};
		settings.state = {
			from: 'value',
			editorSet: editorSet,
			editor: editor,
			value: value
		}
		if(typeof arguments[4] == 'function') {
			settings.commit = arguments[4];
		}
		this._editorLow(editorSet,editor,settings)
	},


	editorEcho: function(editorSet){
		editorSet = editorSet.toUpperCase();
		var es = this._editors[editorSet];
		if(es._s){
			var value = es.editors[es._s.state.editor].commit.call(this,es._s);
			if(typeof es.onEcho != 'undefined'){
				if(es.onEcho.constructor == Function) {
					es.onEcho.call(this,value,es._s);
				}
			}
			if(typeof es._s.formView != 'undefined'){
				var fn = es._s.formView.name
				this.formViewEcho(fn,value);
			}
		}
	},



	_fixEditorSetName: function(editorSet) {
		if(typeof editorSet == 'undefined') return editorSet;
		if(editorSet.toUpperCase().indexOf('EDITOR:') == 0) {
			var editor = editorSet.split(':')[1];
			var edObj = this._EDITOR_EDITORSET[editor];
			var es = '';
			if(typeof edObj != 'undefined') es = edObj.editorSet;
			if(typeof es == 'undefined') es = false;
			return es;
		} else {
			return editorSet;
		}
	},

	editorCommit: function(editorSet){
		editorSet = this._fixEditorSetName(editorSet);
		if(editorSet != 'undefined' && editorSet == '') {
			var s = this.getCurrentEditorSettings();
			if(s) editorSet = s.state.editorSet;
		}
		if(!editorSet) return false;
		var hide = typeof arguments[1] != 'undefined' ? arguments[1] : true;
		editorSet = editorSet.toUpperCase();
		var es = this._editors[editorSet];
		if(es._s){
			var value = es.editors[es._s.state.editor].commit.call(this,es._s);
			if(es._s.state.value != value){
				// validate
				if(typeof es.editors[es._s.state.editor].validate != 'undefined'){
					if(es.editors[es._s.state.editor].validate.constructor == Function) {
						var r = es.editors[es._s.state.editor].validate.call(this,value,es._s);
						if(typeof r == 'boolean' && r == false){
							return false;
						}
					}
				}
				if(es._s.state.from == 'control'){
					if(es._s.state.control.constructor == Array){
					// populate multiple code goes here
					} else{
						this.setValue(es._s.state.control,value);
					}
				} else if(typeof es._s.commit == 'function') {
					es._s.commit.call(this,value,es._s);
				}
				if(typeof es.onCommit != 'undefined'){
					if(es.onCommit.constructor == Function) {
						es.onCommit.call(this,value,es._s);
					}
				}
				if(typeof es._s.formView != 'undefined'){
					var fn = es._s.formView.name;
					this.formViewUpdate(fn,es._s.formView.active.path,value);
					if(this._forms[fn]){
						if(this._forms[fn].viewBox) this._forms[fn].viewBox.activeGroup = '';
					}
				}
			} else{
				if(typeof es._s.formView != 'undefined'){
					var fn = es._s.formView.name;
					if(this._forms[fn]){
						if(this._forms[fn].viewBox) this._forms[fn].viewBox.activeGroup = '';
					}
					this.formViewClearEcho(fn);
				}
			}
			if(hide){
				es.hide.call(this,es._s);
				if(typeof es.editors[es._s.state.editor].hide != 'undefined'){
					es.editors[es._s.state.editor].hide.call(this,es._s.state.value,es._s);
				}
				$(this.dialogId+'.'+editorSet+'.'+es._s.state.editor).style.display = 'none';
				es._s = false;
			} else{
				es._s.state.value = value;
			}
		}
	},


	editorCancel: function(editorSet){
		if(typeof editorSet != 'undefined') {
			editorSet = this._fixEditorSetName(editorSet);
			if(editorSet != 'undefined' && editorSet == '') {
				var s = this.getCurrentEditorSettings();
				if(s) editorSet = s.state.editorSet;
			}
			if(!editorSet) return false;
		}
		if(typeof editorSet == 'undefined'){
			for(var es in this._editors){
				this.editorCancel(es);
			}
		} else{
			editorSet = editorSet.toUpperCase();
			var es = this._editors[editorSet];
			if(es._s){
				es.hide.call(this,es._s);
				if(typeof es.editors[es._s.state.editor].hide != 'undefined'){
					es.editors[es._s.state.editor].hide.call(this,es._s.state.value,es._s);
				}
				$(this.dialogId+'.'+editorSet+'.'+es._s.state.editor).style.display = 'none';
				if(typeof es._s.formView != 'undefined'){
					var fn = es._s.formView.name;
					if(this._forms[fn]){
						if(this._forms[fn].viewBox) this._forms[fn].viewBox.activeGroup = '';
					}
					this.formViewClearEcho(fn);
				}
				es._s = false;
			}
		}
	},




	getCurrentEditorSettings: function() {
		var s = this.__currentEditorSettings;
		if(typeof s == 'undefined') s = false;
		return s;
	},


	_formPrepare: function(f){

		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			// version set to 0 if not in
			if(typeof fo.version == 'undefined') fo.version = 0;
			// legacy columns
			if(typeof fo.fields == 'undefined') fo.fields = fo.columns;
			if(typeof fo.dataSrc == 'undefined') fo.dataSrc = {};
			fo._echo = false;
			var s = {
				dialogId: this.dialogId,
				form: f,
				state: {canCommit: true, isDirty: false, errors: {}, conflicts: {}, dirty: {}, fields: {}, groups: {}}, // state
				data: {},
				oData: {}, // old data
				loopNavigate: fo.loopNavigate,
				loopNavigateNullSelection: fo.loopNavigateNullSelection,
				allowNullSelection: fo.allowNullSelection,
				fields: fo.fields,
				groups: fo.groups,
				items: {
					'*resolveConflict': {
						selectable: false,
						onClick: function(v,ia,i,ele) {
							var ci = this.fields[v.replace(/\[[0-9]\]/g,'')];
							if(ci){
								if(this.state.conflicts[v]){
									window[this.dialogId+'_DlgObj']._formViewResolveConflict(this.form,v,this.state.conflicts[v]);
								}
							}
						}
					},

					'*edit': {
						selectable: true,
						selectedClassName: fo.selectedClassName,
						onSelect: function(v,ia,i,ele){
							// get settings
							var s = window[this.dialogId+'_DlgObj']._formViewGetEditInfo(this.form,v,false,false);
							if(s.formView){
								if(this.state.conflicts[v]){
									window[this.dialogId+'_DlgObj']._formViewResolveConflict(this.form,v,this.state.conflicts[v]);
								} else{
									if(s.formView.active.type == 'group'){
										// handle group
										var g = this.groups[s.formView.active.name];
										if(this.activeGroup == s.formView.active.name) window[this.dialogId+'_DlgObj'].editorCommit(g.editor[0],false);
										this.activeGroup = s.formView.active.name;
										// show editor
										if(g.editor.constructor == Function){
											var editor = g.editor(s);
											window[this.dialogId+'_DlgObj'].editorFromValue(editor[0],editor[1],s.formView.active.value,s);
										} else {
											window[this.dialogId+'_DlgObj'].editorFromValue(g.editor[0],g.editor[1],s.formView.active.value,s);
										}
									} else{
										// handle field
										var fi = this.fields[s.formView.active.name];
										// show editor
										if(fi.editor.constructor == Function){
											var editor = fi.editor(s);
											window[this.dialogId+'_DlgObj'].editorFromValue(editor[0],editor[1],s.formView.active.value,s);
										} else {
											window[this.dialogId+'_DlgObj'].editorFromValue(fi.editor[0],fi.editor[1],s.formView.active.value,s);
										}
									}
								}
							}
						}
					},
					'*group': {
						selectable: true,
						selectedClassName: fo.selectedClassName,
						onSelect: function(v,ia,i,ele){
							var g = this.groups[v];
							if(g){
								if(this.activeGroup == ia) window[this.dialogId+'_DlgObj'].editorCommit(g.editor[0]);
								this.activeGroup = ia;
								// get settings
								var s = window[this.dialogId+'_DlgObj']._formViewGetEditInfo(this.form,false,v,false);
								// show editor
								if(g.editor.constructor == Function) {
									var editor = g.editor(s);
									window[this.dialogId+'_DlgObj'].editorFromValue(editor[0],editor[1],s.formView.active.value,s);
								} else {
									window[this.dialogId+'_DlgObj'].editorFromValue(g.editor[0],g.editor[1],s.formView.active.value,s);
								}
							}
						}
					},
					'*toggle': {
						selectable: true,
						onClick: function(v,ia,i,ele){
							if(this.state.conflicts[v]){
								window[this.dialogId+'_DlgObj']._formViewResolveConflict(this.form,v,this.state.conflicts[v]);
							} else{
								window[this.dialogId+'_DlgObj'].editorCancel();
								var tVal = true;
								var fVal = false;
								var ci = this.fields[v.replace(/\[[0-9]\]/g,'')];
								if(ci){
									if(typeof ci.values == 'object'){
										tVal = ci.values.on;
										fVal = ci.values.off;
									}
								}
								if(ia === 'true') window[this.dialogId+'_DlgObj'].formViewUpdate(this.form,ia,tVal);
								else if(ia === 'false') window[this.dialogId+'_DlgObj'].formViewUpdate(this.form,ia,fVal);
								else{
									var d = this._getData(v);
									var val = tVal;
									if(d.d[d.n] == val) val = fVal;
									window[this.dialogId+'_DlgObj'].formViewUpdate(this.form,v,val);
								}
							}
						}
					},
					'*select': {
						selectable: true,
						onClick: function(v,ia,i,ele){
							if(this.state.conflicts[v]){
								window[this.dialogId+'_DlgObj']._formViewResolveConflict(this.form,v,this.state.conflicts[v]);
							} else{
								window[this.dialogId+'_DlgObj'].editorCancel();
								window[this.dialogId+'_DlgObj'].formViewUpdate(this.form,v,ia);
							}
						}
					},
					'*multi-select': {
						selectable: true,
						onClick: function(v,ia,i,ele){
							if(this.state.conflicts[v]){
								window[this.dialogId+'_DlgObj']._formViewResolveConflict(this.form,v,this.state.conflicts[v]);
							} else{
								window[this.dialogId+'_DlgObj'].editorCancel();
								var d = this._getData(v);
								var isStr = false;
								var ov = d.d[d.n];
								var ci = this.fields[v.replace(/\[[0-9]\]/g,'')];
								var sep = ',';
								if(ci){
									if(typeof ci.separator != 'undefined') sep = ci.separator;
								}
								if(typeof ov == 'string'){
									isStr = true;
									if(ov == '') ov = [];
									else ov = ov.split(sep);
								}
								var addVal = true;
								for(var i=0;i<ov.length;i++){
									if(ov[i].trim().toLowerCase() == ia.toLowerCase()){
										ov.splice(i,1);
										addVal = false;
										break;
									}
								}
								if(addVal){
									ov.push(ia);
									if(ci.sort){
										if(ci.sort == 'a'){
											ov.sort();
										} else if(ci.sort == 'd'){
											ov.sort();
											ov.reverse();
										} else if(ci.sort.constructor == Function){
											ov.sort(ci.sort);
										}
									}
								}
								if(isStr) ov = ov.join(sep);
								window[this.dialogId+'_DlgObj'].formViewUpdate(this.form,v,ov);
							}
						}
					}
				},
				_getData: function(p){
					var d = this.data;
					var od = this.oData;
					var re = /\.|\[/g;
					var n = p;
					if(p.search(re) != -1){
						p = p.split(re);
						n = p.pop();
						if(n.charAt(n.length-1) == ']') n = $u.s.toNum(n);
						for(var k=0;k<p.length;k++){
							if(p[k].charAt(p[k].length-1) == ']'){
								var indx = $u.s.toNum(p[k]);
								d = d[indx];
								od = od[indx];
							} else{
								d = d[p[k]];
								od = od[p[k]];
							}
						}
					}
					return {d: d, od: od, n: n};
				},
				layout: fo.layout,
				layouts: fo.layouts,
				scroll: false,
				onDraw: fo.onDraw,
				onBeforeDraw: fo.onBeforeDraw,
				onSelect: fo.onSelect,
				onSelectComplete: fo.onSelectComplete
			};

			// legacy
			if(fo.version < 1){
				fo.columns = fo.fields;
			}

			// copy user items
			$u.o.assign(s.items,fo.items,true);

			// copy user state
			if(typeof fo.state != 'undefined') $u.o.assign(s.state,fo.state,true);
			$u.o.assign(s.state.fields,fo.fields,true);
			$u.o.assign(s.state.groups,fo.groups,true);

			// store bound controls
			if(fo.from == 'controls'){
				for(var i=0;i<fo.bind.length;i++){
					this._formControls[fo.bind[i]] = f;
				}
			}



			// create viewbox
			fo.viewBox = new A5.ViewBox(fo.contId,null,s);
			//fire onInitialize

			if(typeof fo.onInitialize == 'function') fo.onInitialize.call(fo.viewBox);
		}
	},



	_formViewGetEditInfo: function(f,fn,gn,os){
		var s= {};
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var fi = {}; // field info object
			if(fn){
				var fn2 = fn.replace(/\[[0-9]\]/g,'');
				fi = fo.fields[fn2];
				if(fi.group) gn = fi.group;
			}
			// other settings
			if(os) $u.o.assign(s,os);

			// new settings object
			s.formView = {
				name: f, // name of the form
				fields: fo.fields, // the field info for all fields in the form
				groups: fo.groups, // the group info for all groups in the form
				errors: fo.viewBox.state.errors, // the errors in the form
				conflicts: fo.viewBox.state.conflicts, // the conflicts in the form
				data: fo.viewBox.data, // the form data
				initialData: fo.viewBox.oData, // the form initial data
				active: {}
			}

			if(gn){
				var g = fo.groups[gn];
				if(g){
					// setup legacy
					if(fo.version < 1) $u.o.assign(s,{'*a5other': os, '*a5form': fo.viewBox.form, '*a5column': fn, '*a5group': g, oldValue: [], error: {has: false, html: ''}, data: {}});
					// add in user settings
					if(g.settings) $u.o.assign(s,g.settings);
					if(fi.settings) $u.o.assign(s,fi.settings);

					// get values
					var vals = [];
					var iVals = [];
					var paths = [];
					var info = [];
					var errors = [];
					var hasErrors = false;
					var conflicts = [];
					var hasConflicts = false;
					if(typeof g.fields == 'undefined') g.fields = g.columns;
					for(var i=0;i<g.fields.length;i++){
						paths.push(g.fields[i]);
						info.push(fo.fields[g.fields[i]]);
						// errors
						if(fo.viewBox.state.errors[g.fields[i]]){
							hasErrors = true;
							errors.push(fo.viewBox.state.errors[g.fields[i]]);
						} else errors.push(false);

						// conflicts
						if(fo.viewBox.state.conflicts[g.fields[i]]){
							hasConflicts = true;
							conflicts.push(fo.viewBox.state.conflicts[g.fields[i]]);
						} else conflicts.push(false);

						var d = fo.viewBox._getData(g.fields[i]);
						vals.push(d.d[d.n]);
						iVals.push(d.od[d.n]);
					}

					// legacy data
					if(fo.version < 1){
						s.data = d.d;
						s.oldValue = iVals;
					}

					// active setup
					s.formView.active = {
						type: 'group',
						name: gn,
						path: paths,
						value: vals,
						initialValue: iVals,
						scopeData: d.d,
						scopeInitialData: d.od,
						info: info,
						errors: {
							has: hasErrors,
							error: errors
						},
						conflicts: {
							has: hasConflicts,
							conflict: conflicts
						}
					}
				}
			} else{
				var d = fo.viewBox._getData(fn);
				// setup legacy
				if(fo.version < 1) $u.o.assign(s,{'*a5other': os, '*a5form': fo.viewBox.form, '*a5column': fn, oldValue: d.od[d.n], error: {has: false, html: ''}, conflicts: false, data: {}});
				// add in user settings
				if(fi.settings) $u.o.assign(s,fi.settings);

				// errors
				var hasError = false;
				var error = false;
				if(fo.viewBox.state.errors[fn]){
					hasError = true;
					error = fo.viewBox.state.errors[fn];
				}
				// conflicts
				var hasConflict = false;
				var conflict = false;
				if(fo.viewBox.state.conflicts[fn]){
					hasConflict = true;
					conflict = fo.viewBox.state.conflicts[fn];
				}

				// legacy
				if(fo.version < 1){
					s.data = d.d;
					s.columnInfo = fi;
					if(fo.viewBox.state.errors[fn]){
						s.error = {
							has: hasError,
							html: error
						}
					}
					s.conflicts = conflict;
				}

				// active setup
				s.formView.active = {
					type: 'field',
					name: fn2,
					path: fn,
					value: d.d[d.n],
					initialValue: d.od[d.n],
					scopeData: d.d,
					scopeInitialData: d.od,
					info: fi,
					errors: {
						has: hasError,
						error: error
					},
					conflicts: {
						has: hasConflict,
						conflict: conflict
					}
				}
			}
		}
		return s;
	},

	formViewRecreate: function(f,fd){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			delete fd._getData;
			if(fd.items){
				delete fd.items['*resolveConflict'];
				delete fd.items['*edit'];
				delete fd.items['*group'];
				delete fd.items['*toggle'];
				delete fd.items['*select'];
				delete fd.items['*multi-select'];
			}
			$u.o.assign(fo,fd);

			fo.viewBox.state = {canCommit: true, isDirty: false, errors: {}, conflicts: {}, dirty: {}, fields: {}, groups: {}}; // state
			fo.viewBox.data = {};
			fo.viewBox.oData = {}; // old data
			fo.viewBox.loopNavigate = fo.loopNavigate;
			fo.viewBox.loopNavigateNullSelection = fo.loopNavigateNullSelection;
			fo.viewBox.allowNullSelection = fo.allowNullSelection;
			fo.viewBox.fields = fo.fields;
			fo.viewBox.groups = fo.groups;
			fo.viewBox.layout = fo.layout;
			fo.viewBox.layouts = fo.layouts;
			fo.viewBox.onDraw = fo.onDraw;
			fo.viewBox.onBeforeDraw = fo.onBeforeDraw;
			fo.viewBox.onSelect = fo.onSelect;
			fo.viewBox.onSelectComplete = fo.onSelectComplete;

			// copy user items
			$u.o.assign(fo.viewBox.items,fo.items);
			// copy user state
			if(typeof fo.state != 'undefined') $u.o.assign(fo.viewBox.state,fo.state,true);
			$u.o.assign(fo.viewBox.state.fields,fo.fields);
			$u.o.assign(fo.viewBox.state.groups,fo.groups);
		}
	},




	formViewIsDirty: function(formName) {
		try {
			var flag = this._forms[formName].viewBox.state.isDirty;
			return flag;

		}
		catch(err) {
		    return false;
		}
	},


	_formViewValidate: function(fo,d,od,p,cp,e){
		var np = '';
		var ncp = '';
		var ci = false;
		var handled = false;
		if(d.constructor == Array){
			ncp = $if(p=='',n,cp+'.'+n);
			ci = fo.viewBox.fields[ncp]
			for(var i=0;i<d.length;i++){
				np = $if(p=='',n+'['+i+']',p+'.'+n+'['+i+']');

				handled = false;
				if(d[i] != null) {
					if(d[i].constructor == Array || d[i].constructor == Object){
						this._formViewValidate(fo,d[i],od[i],np,ncp,e);
						handled = true;
					}
				}

				if(!handled && ci){
					if(typeof ci.validate != 'undefined'){
						var res = ci.validate.call(fo.viewBox,d[i],d[i],od[i]||null);
						if(typeof res != 'undefined'){
							if(res){
								e.has = true;
								if(typeof res == 'string') e.errs[np] = {html: res, canCommit: false};
								else e.errs[np] = res;
							} else{
								e.hasClear = true;
								e.errsClear.push(np);
							}
						} else{
							e.hasClear = true;
							e.errsClear.push(np);
						}
					}
				}
			}
		} else if(d.constructor == Object){
			for(var n in d){
				np = $if(p=='',n,p+'.'+n);
				ncp = $if(p=='',n,cp+'.'+n);
				ci = fo.viewBox.fields[ncp]
				handled = false;
				if(d[n] != null) {
					if(d[n].constructor == Array || d[n].constructor == Object){
						this._formViewValidate(fo,d[n],od[n],np,ncp,e);
						handled = true;
					}
				}

				if(!handled && ci){
					if(typeof ci.validate != 'undefined'){
						var res = ci.validate.call(fo.viewBox,d[n],d[n],od[n]||null);
						if(typeof res != 'undefined'){
							if(res){
								e.has = true;
								if(typeof res == 'string') e.errs[np] = {html: res, canCommit: false};
								else e.errs[np] = res;
							} else{
								e.hasClear = true;
								e.errsClear.push(np);
							}
						} else{
							e.hasClear = true;
							e.errsClear.push(np);
						}
					}
				}
			}
		}
	},



	formViewValidate: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var re = /\.|\[/g;
			var ci = '';
			var e = {
				has: false,
				hasClear: false,
				errs: [],
				errsClear: []
			}
			this._formViewValidate(fo,fo.viewBox.data,fo.viewBox.oData,'','',e)
			if(e.has || e.hasClear){
				if(e.has) this.formViewSetErrors(f,'*local',e.errs);
				if(e.hasClear) this.formViewClearErrors(f,'*local',e.errsClear);
				fo.viewBox.refresh(true);
			}
			return !e.has;
		}
		return true;
	},

	formViewCommit: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(typeof fo.onBeforeCommit != 'undefined'){
				if(fo.onBeforeCommit.constructor == Function) {
					var r = fo.onBeforeCommit.call(this);
					if(typeof r == 'boolean' && r == false) return false;
				}
			}
			if(fo.viewBox.state.canCommit && fo.viewBox.state.isDirty ){
				var _d = false;
				if(fo.from == 'list'){
					this._formViewListSetData(fo.lists,fo.row,fo.viewBox.data,fo);
					var lObj = this.getControl(fo.lists.name);
					if(lObj) {
						if(lObj._refreshListRecursive) lObj._refreshListRecursive();
					}

				} else if(fo.from == 'object' || fo.from == 'staticJSON' || fo.from == 'javascriptFunction' || fo.from == 'custom'){
					if(fo.from == 'staticJSON') _d = fo.staticJSON;
					else _d = fo.dataSrc;
					$u.o.assign(fo.viewBox.oData,fo.viewBox.data);
				} else if(fo.from == 'uxcontrols') {
					var _d = fo.viewBox.data;
					//alert(JSON.stringify(_d,'','\t'));
					var arr = fo.uxcontrols;
					for(var i = 0; i < arr.length; i++) {
						this.setValue(arr[i],_d[arr[i]],false);
					}

				} else if(fo.from == 'controls'){
					var d = fo.viewBox.data;
					this._setValueFromForm = true;
					for(var col in  d){
						this.setValue(col,d[col]);
					}
					this._setValueFromForm = false;
				}
				if(typeof fo.onCommit != 'undefined'){
					if(fo.onCommit.constructor == Function) {
						fo.onCommit.call(this,f,fo.viewBox.data,_d);
					}
				}
			}
		}
	},

	formViewRow: function(f,r) {
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(typeof r != 'undefined') fo.row = r;
			return fo.row;
		}

	},

	formViewGetState: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			return fo.viewBox.state;
		}
		return {};
	},



	formViewFieldInfo: function(f,v){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var ci = fo.fields[v];
			if(ci){
				return ci;
			}
		}
		return false;
	},


	formViewInvokeEditor: function(f,v,os){
		if(typeof os == 'undefined') os = false; //otherSettings
		//open editor for field even if field is not in current Layout
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var s = this._formViewGetEditInfo(f,v,false,os);
			if(s.formView){
				if(fo.viewBox.state.conflicts[v]){
					this._formViewResolveConflict(fo.viewBox.form,v,fo.viewBox.state.conflicts[v],os);
				} else{
					if(s.formView.active.type == 'group'){
						// handle group
						var g = fo.viewBox.groups[s.formView.active.name];
						if(fo.viewBox.activeGroup == s.formView.active.name) this.editorCommit(g.editor[0],false);
						fo.viewBox.activeGroup = s.formView.active.name;
						// show editor
						if(g.editor.constructor == Function){
							var editor = g.editor(s);
							this.editorFromValue(editor[0],editor[1],s.formView.active.value,s);
						} else {
							this.editorFromValue(g.editor[0],g.editor[1],s.formView.active.value,s);
						}
					} else{
						// handle field
						var fi = s.formView.fields[s.formView.active.name];
						// show editor
						if(fi.editor.constructor == Function){
							var editor = fi.editor(s);
							this.editorFromValue(editor[0],editor[1],s.formView.active.value,s);
						} else {
							this.editorFromValue(fi.editor[0],fi.editor[1],s.formView.active.value,s);
						}
					}
				}
			}
		}
	},




	formViewRefresh: function(f){
		if(!this.initialized) {
			this._delay('formViewRefresh',arguments);
			return false;
		}



		f = f.toUpperCase();
		var fo = this._forms[f];

		if(fo){
			if(fo.from == 'list'){
				var s = fo.viewBox.state;
				s.dirty = {};
				this.formViewClearErrors(f,'*list',false,false);
				this.formViewClearConflicts(f,'*list',false,false);
				s.isDirty = false;
				s.row = fo.row;
				var data = '';
				if(s.row == -1) data = this._formViewDefaultValues(f);
				else data = this._formViewListGetData(fo.lists,fo.row,s);
				if(fo.viewBox.oData) $u.o.assign(fo.viewBox.oData,data);
				fo.viewBox.populate(data);
			} else if(fo.from == 'uxcontrols') {
				var s = fo.viewBox.state;
				s.dirty = {};
				s.isDirty = false;
				var data = {}; //sr88
				var arr = fo.uxcontrols;
				for(var i = 0; i < arr.length; i++) {
					data[arr[i]] = this.getValue(arr[i]);
				}
				if(fo.viewBox.oData) $u.o.assign(fo.viewBox.oData,data);
				fo.viewBox.populate(data);
			} else if(fo.from == 'custom') {

				var s = fo.viewBox.state;
				s.dirty = {};
				s.isDirty = false;
				var data = {};
				data = fo.dataSrc;
				if(data.constructor == Array) {
					row = fo.row
					if(typeof row == 'number') data = data[row];
				}
				if(fo.viewBox.oData) $u.o.assign(fo.viewBox.oData,data);
				fo.viewBox.populate(data);

			} else if(fo.from == 'staticJSON') {
				var s = fo.viewBox.state;
				s.dirty = {};
				s.isDirty = false;
				var data = {};
				data = fo.staticJSON;
				if(data.constructor == Array) {
					row = fo.row
					if(typeof row == 'number') data = data[row];
				}
				if(fo.viewBox.oData) $u.o.assign(fo.viewBox.oData,data);
				fo.viewBox.populate(data);
			} else if(fo.from == 'javascriptFunction') {
				var s = fo.viewBox.state;
				s.dirty = {};
				s.isDirty = false;

				var data = {};
				//debugger;
				if(typeof fo.javascriptFunction == 'function') {
					data = fo.javascriptFunction.call();
				}
				data = fo.javascriptFunction;
				if(data.constructor == Array) {
					row = fo.row;
					if(typeof row == 'number') data = data[row];
				}
				if(fo.viewBox.oData) $u.o.assign(fo.viewBox.oData,data);
				fo.viewBox.populate(data);


			} else if(fo.from == 'controls'){
				var data = {};
				fo.viewBox.oData = {};
				fo.viewBox.state.dirty = {};
				var ele = null;
				for(var i=0;i<fo.bind.length;i++){
					ele = this.getPointer(fo.bind[i]);
					if(ele){
						data[fo.bind[i]] = ele.value;
						fo.viewBox.oData[fo.bind[i]] = ele.value;
						if($ga(ele,'A5IsDirty') == 'true') fo.viewBox.state.dirty[fo.bind[i]] = true;
					}
				}
				fo.viewBox.populate(data);
			} else if(fo.from == 'object'){
				var data = {};
				if(fo.viewBox.oData) $u.o.assign(data,fo.viewBox.oData);
				fo.viewBox.populate(data);
			}
		}
	},

		formViewUpdate: function(f,cols,values){
			f = f.toUpperCase();
			var fo = this._forms[f];
			if(fo){
				fo._echo = false;
				if(typeof fo.onBeforeUpdate != 'undefined'){
					if(fo.onBeforeUpdate == Function) {
						var r = fo.onBeforeUpdate.call(this,cols,values);
						if(typeof r == 'boolean' && r == false) return false;
					}
				}
				if(cols.constructor != Array){
					cols = [cols]
					values = [values];
				}
				var refresh = false;
				var re = /\.|\[/g;
				var ci = '';
				var vHasErrs = false;
				var vErrs = {};
				var vHasClearErrs = false;
				var vClearErrs = [];
				for(var i=0;i<cols.length;i++){
					var d = fo.viewBox.data;
					var od = fo.viewBox.oData;
					var cn = cols[i];
					if(cn.search(re) != -1){
						var c = cn.split(re);
						cn = c.pop();
						if(cn.charAt(cn.length-1) == ']') cn = $u.s.toNum(cn);
						for(var k=0;k<c.length;k++){
							if(c[k].charAt(c[k].length-1) == ']'){
								var indx = $u.s.toNum(c[k]);
								d = d[indx];
								od = od[indx];
							} else{
								d = d[c[k]];
								od = od[c[k]];
							}
						}
					}
					if(d[cn] != values[i]){
						ci = fo.viewBox.fields[cols[i].replace(/\[[0-9]\]/g,'')];
						if(ci){
							if(typeof ci.validate != 'undefined'){
								var res = ci.validate.call(fo.viewBox,values[i],d[cn],od[cn]);
								if(typeof res != 'undefined'){
									if(res){
										vHasErrs = true;
										if(typeof res == 'string') vErrs[cols[i]] = {html: res, canCommit: false};
										else vErrs[cols[i]] = res;
									} else{
										vHasClearErrs = true;
										vClearErrs.push(cols[i]);
									}
								} else{
									vHasClearErrs = true;
									vClearErrs.push(cols[i]);
								}
							}
						}
						if(fo.from == 'list'){
							if(cols[i].split('__LIST__').length > 1){
								// handle sublists dirty
								if(!d._isDirty){
									d._oldData = this._formViewListGetOldData(d);
									d._isDirty = true;
								}
							}
						}
						d[cn] = values[i];
						if(fo.autoCommit){
							if(fo.from == 'object') od[cn] = values[i];
							else if(fo.from == 'controls'){
								this._setValueFromForm = true;
								this.setValue(cn,values[i]);
								this._setValueFromForm = false;
							}
						}
						fo.viewBox.state.dirty[cols[i]] = true;
						fo.viewBox.state.isDirty = true;
						refresh = true;
					}
				}
				if(refresh){
					if(vHasErrs) this.formViewSetErrors(f,'*local',vErrs);
					if(vHasClearErrs) this.formViewClearErrors(f,'*local',vClearErrs);
					fo.viewBox.refresh(true);
					if(fo.autoCommit && fo.from == 'list') this.formViewCommit(f);
					if(typeof fo.onUpdate != 'undefined'){
						if(fo.onUpdate == Function) {
							fo.onUpdate.call(this,cols,values);
						}
					}
				}
			}
		},


	formViewEcho: function(f,v){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(v.constructor == Array) v = v.join(' ');
			if(typeof fo.onBeforeEcho != 'undefined'){
				if(fo.onBeforeEcho == Function) {
					var r = fo.onBeforeEcho.call(this,v);
					if(typeof r == 'boolean' && r == false) return false;
				}
			}

			var ele = $(fo.viewBox._s.id[0]+'.DISPLAY');
			if(ele){
				if($ga(ele,'a5-echo') != 'true'){
					$sa(ele,'a5-echo','true');
					if(fo.echoClassName != '') $acn(fo.viewBox._s.id[0],fo.echoClassName);
					fo._echo = {
						id: fo.viewBox._s.id[0],
						html: ele.innerHTML
					}
				}
				ele.innerHTML = v;
			}
		}
	},
	formViewClearEcho: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(fo._echo){
				$(fo._echo.id+'.DISPLAY').innerHTML = fo._echo.html;
				if(fo.echoClassName != '') $rcn(fo._echo.id,fo.echoClassName);
				fo._echo = false;
			}
		}
	},



	formViewSetLayout: function(f,l){
		f = f.toUpperCase();
		if(this._forms[f]){
			this._forms[f].viewBox.setLayout(l);
		}
	},
	formViewNavigate: function(f,d){
		f = f.toUpperCase();
		if(this._forms[f]){
			this._forms[f].viewBox.navigate(d);
		}
	},
	formViewSelect: function(f,v){
		f = f.toUpperCase();
		if(this._forms[f]){
			this._forms[f].viewBox.setValue(v);
		}
	},
	formViewGetSelection: function(f){
		f = f.toUpperCase();
		if(this._forms[f]){
			return this._forms[f].viewBox.value;
		}
		return false;
 	},
	formViewSetDirty: function(f,c,v){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var sd = fo.viewBox.state.dirty;
			if(!v) delete sd[c];
			else sd[c] = true;
			fo.viewBox.refresh(true);
		}
	},
	formViewSetErrors: function(f,ns,e){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var errs = fo.viewBox.state.errors;
			for(var en in e){
				if(typeof errs[en] == 'undefined') errs[en] = {};
				errs[en][ns] = e[en];
				if(typeof errs[en][ns].canCommit == 'undefined') errs[en][ns].canCommit = true;
			}
			this._formViewUpdateState(fo);
			fo.viewBox.refresh(true);
		}
	},
	formViewClearErrors: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var ns = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			var ena = typeof arguments[2] != 'undefined' ? arguments[2] : false;
			var refresh = typeof arguments[3] != 'undefined' ? arguments[3] : true;

			if(ns === false) fo.viewBox.state.errors = {};
			else {
				var errs = fo.viewBox.state.errors;
				if(ena === false){
					for(var en in errs){
						delete errs[en][ns];
						if($u.o.toJSON(errs[en]) == '{}') delete errs[en];
					}
				} else{
					for(var i=0;i<ena.length;i++){
						if(errs[ena[i]]) {
							delete errs[ena[i]][ns];
							if($u.o.toJSON(errs[ena[i]]) == '{}') delete errs[ena[i]];
						}
					}
				}
			}
			this._formViewUpdateState(fo);
			if(refresh) fo.viewBox.refresh(true);
		}
	},

	formViewSetConflicts: function(f,ns,e){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var errs = fo.viewBox.state.conflicts;
			for(var en in e){
				if(typeof errs[en] == 'undefined') errs[en] = {};
				errs[en][ns] = e[en];
				if(typeof errs[en][ns].canCommit == 'undefined') errs[en][ns].canCommit = true;
			}
			this._formViewUpdateState(fo);
			fo.viewBox.refresh(true);
		}
	},
	formViewClearConflicts: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var ns = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			var ena = typeof arguments[2] != 'undefined' ? arguments[2] : false;
			var refresh = typeof arguments[3] != 'undefined' ? arguments[3] : true;

			if(ns === false) fo.viewBox.state.conflicts = {};
			else {
				var errs = fo.viewBox.state.conflicts;
				if(ena === false){
					for(var en in errs){
						delete errs[en][ns];
						if($u.o.toJSON(errs[en]) == '{}') delete errs[en];
					}
				} else{
					for(var i=0;i<ena.length;i++){
						delete errs[ena[i]][ns];
						if($u.o.toJSON(errs[ena[i]]) == '{}') delete errs[ena[i]];
					}
				}
			}
			this._formViewUpdateState(fo);
			if(refresh) fo.viewBox.refresh(true);
		}
	},

	formViewDataSrc: function(f,src) {
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(src) {
				fo.dataSrc = src;
				fo.from = 'custom';
			}
			return fo.dataSrc;
		}
		return false;

	},

	formViewData: function(f){
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			var d = typeof arguments[1] != 'undefined' ? arguments[1] : false;
			if(fo.from == 'object' && d){
				fo.viewBox.state.dirty = {};
				fo.viewBox.oData = d;
				var data = {};
				$u.o.assign(data,d);
				fo.viewBox.populate(data);
			}
			return fo.viewBox.data;
		}
	},

	formViewNewRecord: function(f) {
		if(!this.initialized) {
			this._delay('formViewNewRecord',arguments);
			return false;
		}
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(!fo ) return false;

		if(fo.from.toLowerCase() == 'list'){
			var lObj = this.getControl(fo.lists.name);
			if(lObj) lObj._deselectAll();
		};
		fo.row = -1;
		this.formViewRefresh(f);
	},

	formViewGetItemClassName: function(f,c,s){
		f = f.toUpperCase();
		var fo = this._forms[f];
		var r = [];
		if(fo){
			if(s.dirty[c]) r.push(fo.dirtyClassName);
			if(s.errors[c]) r.push(fo.errorClassName);
			if(s.conflicts[c]) r.push(fo.conflictClassName);
		}
		return r.join(' ');
	},
	formViewGetItemErrors: function(f,c,s){
		var rHTML = typeof arguments[3] != 'undefined' ? arguments[3] : true;
		f = f.toUpperCase();
		var fo = this._forms[f];
		var errorTextClassName = fo.errorTextClassName;

		if(fo){
			var errs = false;
			if(s.conflicts[c]) errs = s.conflicts[c];
			else if(s.errors[c]) errs = s.errors[c];

			if(errs){
				if(rHTML){
					var html = [];
					for(var en in errs){
						html.push(errs[en].html);
					}
					var _return = html.join('\n');
					_return = '<span class="'+errorTextClassName+'">' + _return + '</span>';
					return _return;
				} else return errs;
			}
		}
		if(rHTML) return '';
		else return false;
	},


	_formViewDefaultValues: function(f) {
			f = f.toUpperCase();
			var fo = this._forms[f];
			if(!fo) return {};
			var _d = {};
			var _v = '';
			for(var fn in fo.fields){
				if(typeof fo.fields[fn].defaultValue == 'function'){
					_v = fo.fields[fn].defaultValue.call();
					_d[fn] = _v;
				} else {
					_d[fn] = '';
				}
			}
			return _d;
	},


	_formViewResolveConflict: function(f,v,c){
		var os = false;
		if(typeof arguments[3] != 'undefined') os = arguments[3];
		f = f.toUpperCase();
		var fo = this._forms[f];
		if(fo){
			if(fo.conflictEditor){
				var s = this._formViewGetEditInfo(f,v,false,os);
				// show editor
				if(fo.conflictEditor.constructor == Function){
					var editor = fo.conflictEditor(s);
					this.editorFromValue(editor[0],editor[1],s.formView.active.value,s);
				} else {
					this.editorFromValue(fo.conflictEditor[0],fo.conflictEditor[1],s.formView.active.value,s);
				}
			} else{
				if(fo.resolveConflict.constructor == Function){
					fo.resolveConflict(v,c);
				}
			}
		}
	},




	_formViewListSetData: function(h,r,d,fo){
		var lObj = this.getControl(h.name);

		if(r == -1) {
			if(typeof lObj.addTableRow != 'undefined') {
				lObj.addTableRow(d);
			} else {
				lObj.appendRows([d]);
			}
			fo.row = lObj._data.length -1;
			lObj.setValue(fo.row,false);
		} else {
			if(typeof lObj.updateTableRow != 'undefined') {
				lObj.updateTableRow(r,d);
			} else {
				lObj.updateRow(r,d);
			}
		}
	},
	_formViewListGetData: function(h,r,s){
		if(r == -1) {
			//alert('get default values');
			//will not happen becuase the refresh() method does not call this if r = -1
			var defaultValues = {}
			return defaultValues;
		} else {
			var lObj = this.getControl(h.name);
			var dt = lObj.getData(r);
			var data = {};
			if(dt){
				this._formViewListGetDataLow(dt,data,s,'');
				this._formViewListGetDataSub(h,dt,data,s,'')
			}



			return data;
		}
	},
	_formViewListGetDataSub: function(h,dt,data,s,prefix){
		if(h.children){
			if(h.children.length != 0){
				for(var i=0;i<h.children.length;i++){
					var n = '__LIST__'+h.children[i].name.toUpperCase();
					if(dt[n]){
						data[n] = [];
						for(var k=0;k<dt[n].length;k++){
							data[n][k] = {};
							this._formViewListGetDataLow(dt[n][k],data[n][k],s,prefix+n+'['+k+'].');
							if(typeof h.children[i].children != 'undefined'){
								this._formViewListGetDataSub(h.children[i],dt[n][k],data[n][k],s,prefix+n+'['+k+'].');
							}
						}
					}
				}
			}
		}
	},
	_formViewListGetDataLow: function(dt,data,s,prefix){
		for(var p in dt){
			if(typeof dt[p] != 'object' || dt[p] == null){
				data[p] = dt[p];
			} else if(typeof dt[p] == 'object' && p[0] != '_' && dt[p] != null ) {

				if(dt[p].constructor == Array) {
					data[p] = [];
				} else {
					data[p] = {};
				}
				$u.o.assign(data[p],dt[p]);

			}
		}
		if(dt._isDirty){
			for(var p in dt._oldData){
				if(dt._oldData[p] != dt[p]){
					s.dirty[prefix+p] = true;
				}
			}
		}
		////
		if(dt._hasServerSideError){
			for(var i=0;i<dt._serverSideErrors.length;i++){
				if( typeof s.errors[prefix+dt._serverSideErrors[i].fieldName] == 'undefined') s.errors[prefix+dt._serverSideErrors[i].fieldName] = {};
				s.errors[prefix+dt._serverSideErrors[i].fieldName]['*list'] = {html: dt._serverSideErrors[i].errorText};
			}
		}
		if(dt._hasWriteConflictErrors){
			for(var i=0;i<dt._writeConflictErrors.length;i++){
				if(typeof s.conflicts[prefix+dt._writeConflictErrors[i].fieldName] == 'undefined') s.conflicts[prefix+dt._writeConflictErrors[i].fieldName] = {};
				var htmlFixed = dt._writeConflictErrors[i].errorText;
				htmlFixed = htmlFixed.replace('onclick','a5-item="*resolveConflict" a5-value="'+dt._writeConflictErrors[i].fieldName+'" xonclick');  //don't want to fire the menu

				var valuesObj = {
					newValue: dt._writeConflictErrors[i].newValue,
					oldValue: dt._writeConflictErrors[i].oldValue,
					oldValueCurrent: dt._writeConflictErrors[i].oldValueCurrent
				};
				s.conflicts[prefix+dt._writeConflictErrors[i].fieldName]['*list'] = {html: htmlFixed, conflictValues: valuesObj};
				//s.conflicts[prefix+dt._writeConflictErrors[i].fieldName]['conflictValues'] = valuesObj;

			}
		}
	},
	_formViewListGetOldData: function(d){
		var od = {};
		var s = ['__primaryKey','__a5crc','*key','*renderIndex','*value','_isNewRow','_isDirty','__locationLatitude','__locationLongitude','_hasServerSideError','_serverSideErrors','_flagServerSideErrorInChild','_flagWriteConflictErrorInChild','_writeConflictErrors','_hasWriteConflictErrors','_flagWriteConflictErrorInChild','_hasGlobalErrors','_flagGlobalErrorInChild','_globalErrors','_hasServerSideError','_flagServerSideErrorInChild','_flagViewed','__displayStyle'];
		for(var prop in d) {
			if(s.indexOf(prop) == -1) {
				if(typeof d[prop] != 'object') {
					od[prop] = d[prop];
				} else {
					if(d[prop] == null) {
						od[prop] = null;
					} else if(d[prop].constructor == Date) {
						od[prop] = d[prop];
					}
				}
			}
		}
		return od;
	},
	_formViewUpdateState: function(fo){
		fo.viewBox.state.canCommit = true;
		var errs = fo.viewBox.state.errors;
		for(var col in errs){
			for(var en in errs[col]){
				if(typeof errs[col][en].canCommit != 'undefined'){
					if(!errs[col][en].canCommit){
						fo.viewBox.state.canCommit = false;
						break;
					}
				}
			}
		}
		if(fo.viewBox.state.canCommit){
			errs = fo.viewBox.state.conflicts;
			for(var col in errs){
				for(var en in errs[col]){
					if(typeof errs[col][en].canCommit != 'undefined'){
						if(!errs[col][en].canCommit){
							fo.viewBox.state.canCommit = false;
							break;
						}
					}
				}
			}
		}
	}
}



//convert an array of arrays into an array of json objects
function A5DataArrayToObject(cols,data){
	var nData = [];
	var tData = {};
	for(var i=0;i<data.length;i++){
		tData = {};
		if(data[i].constructor == Object) {
			nData.push(data[i]);
		} else {
			for(var j=0;j<cols.length;j++){
				tData[cols[j]] = data[i][j];
			}
			nData.push(tData);
		}
	}
	return nData;
}


function A5FindPropInArray(array, propNames, values) {
	if(propNames.constructor  != Array) propNames = [propNames];
	if(values.constructor != Array) values = [values];
	var found = false;
	for(var i = 0; i < array.length; i++) {
		found = false;
		for(var k = 0; k < propNames.length; k++) {
			if(typeof array[i][propNames[k]] != 'undefined') {
				if( String(array[i][propNames[k]]).toLowerCase() != String(values[k]).toLowerCase()) {
					found = false;
					continue;
				} else {
					found = true;
				}
			} else {
				found = false;
				continue;
			}
		}
		if(found) return i;
	}
	return -1;
}


function A5FilterPropertyArray(dataIn,filterIn,orderIn) {
	var ops = arguments[3];

	if(typeof ops == 'undefined') ops = {};
	//filters/orders array of objects
	//filterIn is a function or string with a an expression that uses data. as field name prefix: data.Country == 'France' || data.Country = 'UK'
	//orderIn is a string using SQL order syntax: data.Country desc,data.City ('data.' in orderIn is optional)

	if(typeof filterIn == 'string') {
		var fstring = filterIn;
		if(filterIn != '') {
			//filterIn = 'if(' + filterIn + ') return true;\nelse return false;';
			filterIn = 'try{if(' + filterIn + ') return true;\nelse return false;} catch(err) {return false;}';
			try{
				var filterFunction = Function('data',filterIn)
			} catch(err) {
				alert('Invalid filter: ' + fstring);
				return false;
			}
		}
	} else {
		var filterFunction = filterIn
	}

	var arr = [];
	var data = '';
	if(typeof filterFunction != 'undefined') {
		for(var i = 0; i < dataIn.length; i++) {
			data = dataIn[i];
			if(filterFunction(data)) arr.push(dataIn[i])
		}
	} else {
		arr = dataIn;
	}


	if(typeof ops.columns != 'undefined') {
		var arr2 = [];
		for(var i = 0; i < arr.length; i++) {
			delete obj2;
			obj2 = {};
			for(var j = 0; j < ops.columns.length; j++) {
				obj2[ops.columns[j]] = arr[i][ops.columns[j]];
			}
			arr2.push(obj2);
		}
		arr = arr2;
	}


	var order = '';
	if(typeof orderIn == 'string') {
		if(orderIn != '') {
			orderIn = orderIn.replace('data.','','g');
			var order = orderIn.split(',');
			var o = [];
			for(var i = 0; i < order.length; i++) {
				if(order[i].toLowerCase().indexOf('desc') > 0) {
					order[i] = order[i].replace(/ desc/i,'');
					o.push('"' + order[i] + '" : -1');
				} else {
					o.push('"' + order[i] + '" : 1');
				}
			}
			o = "{" + o.join(',') + "}"
			//alert(o);
			order = JSON.parse(o);
		}
	} else {
		var order = orderIn;
	}

	/////define orderData()
	function orderFuncGen(order,col,data){
	    var tCol = col.split(':');
	    var tColName = tCol[0];
	    var ofPrefix = 'var v1 = arguments[0].'+tColName+'; var v2 = arguments[1].'+tColName+'; if(v1 == null) v1 = \'\'; if(v2 == null) v2 = \'\'; var result = 0;';
	    var ofBody = 'result = v1-v2;';
	    var ofSuffix = '';
	    if(typeof data[0][tColName] == 'string' || data[0][tColName] == null){
	        ofPrefix = ofPrefix+'v1 = v1.replace(/(<([^>]+)>)/ig,\'\');v2 = v2.replace(/(<([^>]+)>)/ig,\'\');';
	        if(tCol.length > 1){
	            if(tCol[1] == 'number') ofPrefix = ofPrefix+' v1 = $u.s.toNum(v1); v2 = $u.s.toNum(v2);';
	            else if(tCol[1] == 'date'){
	                tCol.shift();
	                tCol.shift();
	                ofPrefix = ofPrefix+' var tDate = new Date(); var tFrm = tDate._parseFormat(\''+tCol.join(':')+'\'); tDate.fromFormat(v1,tFrm); v1 = new Date(tDate); tDate.fromFormat(v2,tFrm); v2 = new Date(tDate);';
	            } else if(tCol[1] == 'boolean'){
	                ofPrefix = ofPrefix+' v1 = $u.s.toBool(v1); v2 = $u.s.toBool(v2);';
	                ofBody = 'if(v1<v2) result = -1; if(v1>v2) result = 1;';
	            } else if(tCol[1] == 'first'){
	                ofPrefix = ofPrefix+' v1 = v1.substr(0,'+tCol[2]+'); v2 = v2.substr(0,'+tCol[2]+');';
	                ofBody = 'if(v1<v2) result = -1; if(v1>v2) result = 1;';
	            } else if(tCol[1] == 'length'){
	                ofPrefix = ofPrefix+' v1 = v1.length; v2 = v2.length;';
	            }
	        } else ofBody = 'if(v1.toLowerCase()<v2.toLowerCase()) result = -1; if(v1.toLowerCase()>v2.toLowerCase()) result = 1;';
	    } else if(typeof data[0][tColName] == 'boolean') ofBody = 'if(v1<v2) result = -1; if(v1>v2) result = 1;';
	    if(order[col] < 0) ofSuffix = 'result = result*-1;';
	    return ofPrefix+ofBody+ofSuffix;
	}




	function orderData(order,data){
	    if(data.length == 0) return data;
	    if(order.constructor == Function) data.sort(order);
	    else{
	        var func = [];
	        if(order.constructor == Object){
	            var tCode = '';
	            var fCol = '';
	            for(var tCol in order){
	                if(func.length == 0){
	                    func.push(orderFuncGen(order,tCol,data));
	                    fCol = tCol
	                } else{
	                    func.push('if(result == 0){');
	                    func.push(orderFuncGen(order,tCol,data));
	                    func.push('}');
	                }
	            }
	            func.push('return result;');
	        } else{
	            var ofPrefix = 'var v1 = arguments[0]; var v2 = arguments[1]; var result = 0;';
	            var ofBody = 'result = v1-v2;';
	            var ofSuffix = 'return result;';
	            if(typeof data[0] == 'string') ofBody = 'if(v1.toLowerCase()<v2.toLowerCase()) result = -1; if(v1.toLowerCase()>v2.toLowerCase()) result = 1;';
	            else if(typeof data[0] == 'boolean') ofBody = 'if(v1<v2) result = -1; if(v1>v2) result = 1;';
	            if(order < 0) ofSuffix = 'return result*-1;';
	            func = [ofPrefix,ofBody,ofSuffix];
	        }
	        data.sort(Function(func.join('')));
	    }
	    return data;
	}

	////end definition


	arr = orderData(order,arr);


	//user can specify distinct:true, distinctColumn: colName
	if(typeof ops.distinct != 'undefined') {
		if(arr.length > 0) {
			if(ops.distinct) {
				var arr2 = [];
				var ix = '';
				var propName = ops.distinctColumn;
				if(typeof propName == 'undefined') {
					var propFirst = '';
					for(var n in arr[0]) {
						propFirst = n;
						break;
					}
					propName = propFirst
				}
				for(var i = 0; i < arr.length; i++) {
					ix = A5FindPropInArray(arr2, propName, arr[i][propName]);
					if(ix < 0) {
					arr2.push(arr[i]);
					}

				}
				arr = arr2;
			}
		}
	}


	return arr;
}


//This is a temporary location - move to core
function A5ValidateNumber(data){

	data = '' + data;
	var re = /[^0-9]/;
	while(data.charAt(data.length-1).match(re)){
		data= data.substring(0,data.length-1);
		if(data.length == 0) break;
	}
	while(data.charAt(0).match(re)){
		data= data.substring(1,data.length);
		if(data.length == 0) break;
	}

	var tsChar = typeof arguments[1] != 'undefined' ? arguments[1] : $u.comma;
	var decChar = typeof arguments[2] != 'undefined' ? arguments[2] : $u.decimal;
	var decLen = typeof arguments[3] != 'undefined' ? arguments[3] : 0;
	var reDecChar = decChar == '.' ? '\.' : decChar;
	var reTSChar = tsChar == '.' ? '\.' : tsChar;
	if(decChar == '') decLen = 0;
	var numRE = RegExp('.*[^0-9].*');
	var eList = {
		iv: 'Value is not a valid number.',
		tg: 'Groupings must only occur on the thousands (i.e. 12,456,789).',
		dp: 'There must be '+decLen+' decimal places.',
		md: 'You must use a "'+decChar+'" for the decimal places.'
	}
	// integer
	if(decLen == 0){
		// no thousands seperator
		if(tsChar == '') {
			if(RegExp('.*[^0-9\-].*').test(data)) return eList.iv;
		} else {
			if(RegExp('.*[^0-9\-'+reTSChar+'].*').test(data)) return eList.iv;
			else {
				var tsData = data.split(tsChar);
				if(tsData.length > 1){
					for(var i=tsData.length-1;i>0;i--){
						if(tsData[i].length != 3) return eList.tg;
						if(numRE.test(tsData[i])) return eList.iv;
					}
					if($u.s.lTrim(tsData[0],'-').length > 3) return eList.tg;
					if(numRE.test($u.s.lTrim(tsData[0],'-'))) return eList.iv;
				}
			}
		}
	} else{
		var dsData = data.split(decChar);
		// no thousands seperator
		if(tsChar == ''){
			if(decLen == -1 && dsData.length > 2) return eList.md;
			else if(decLen != -1 && dsData.length != 2) return eList.md;
			else if(decLen != -1 && dsData[1].length != decLen) return eList.dp;
			else if(RegExp('.*[^0-9\-'+reDecChar+'].*').test(data)) return eList.iv;
		} else{
			if(decLen == -1 && dsData.length > 2) return eList.md;
			else if(decLen != -1 && dsData.length != 2) return eList.md;
			else if(decLen != -1 && dsData[1].length != decLen) return eList.dp;
			else if(dsData.length == 2 && numRE.test(dsData[1])) return eList.iv;
			else {
				if(RegExp('.*[^0-9\-'+reTSChar+'].*').test(dsData[0])) return eList.iv;
				else {
					var tsData = dsData[0].split(tsChar);
					if(tsData.length > 1){
						for(var i=tsData.length-1;i>0;i--){
							if(tsData[i].length != 3) return eList.tg;
							if(numRE.test(tsData[i])) return eList.iv;
						}
						if($u.s.lTrim(tsData[0],'-').length > 3) return eList.tg;
						if(numRE.test($u.s.lTrim(tsData[0],'-'))) return eList.iv;
					}
				}
			}
		}
	}
	return '';
}


function A5ArrayMove(arrayName, old_index, new_index) {
    if (new_index >= arrayName.length) {
        var k = new_index - arrayName.length;
        while ((k--) + 1) {
            arrayName.push(undefined);
        }
    }
    arrayName.splice(new_index, 0, arrayName.splice(old_index, 1)[0]);
};


function A5RemoveHTMLWrapper(str) {
	var regex = RegExp('^\<span a5wrapper="true"[^\>]*\>');
	var wrapper = regex.exec(str);
	if(wrapper)  return (str.substring(wrapper[0].length,str.length-7));
	else return str;
}

if(typeof A5.component == 'undefined') A5.component =  new Object();


A5.component.remove = function(name) {
	var type = 'UX';
	name = name.toUpperCase();
	if(type == 'UX') {
		if(typeof window[name + '_PanelObj'] != 'undefined') {
			var pa = window[name + '_DlgObj'].parentComponentAlias;
			var remove = false;
			if(pa) {
				if(window[pa + '_PanelObj'].getPanel(name)) {
					//if the component we are destroying was added to a dynamic panel, we want to remove the dynamic panel and not destroy the component
					var parentPanelName = window[name + '_PanelObj']._parentPanelName;
					if(parentPanelName) {
						window[pa + '_DlgObj'].panelGet(parentPanelName).removePanel(name);
						remove = true;
					}
				}
			}
			if(!remove) window[name + '_PanelObj'].destroy();
			var ele = $(window[name + '_PanelObj'].getPanelId());
			if(ele) {
				if(ele.parentNode) ele.parentNode.removeChild(ele);
			}
			delete window[name + '_PanelObj'];
		} else {
			//remove form html

			var ele = $(name + '.R1');
			if(ele) {
				if(ele.parentNode) ele.parentNode.removeChild(ele);
			}
		}
		var ele = $(name + '.__IFRAME1');
		if(ele) {
			if(ele.parentNode) ele.parentNode.removeChild(ele);
		}
		var ele = $(name + '.PARAMETERBUCKET');
		if(ele) {
			if(ele.parentNode) ele.parentNode.removeChild(ele);
		}
		var ele = $(name + '._GETPHOTO');
		if(ele) {
			if(ele.parentNode) ele.parentNode.removeChild(ele);
		}
		if(typeof window[name + '_DlgObj'] != 'undefined') {
			window[name + '_DlgObj']._destroy();
			try{
				delete window[name + '_DlgObj'];
				}
			catch(e) {
				window[name + '_DlgObj'] = undefined ;
			}
		}
	}
}
A5.ts = function() {
	var d = new Date()
	return d.getTime().toString(36);
}

$JS = function(obj,flagFormat) {
	if(flagFormat) {
		return JSON.stringify(obj,'','\t');
	} else {
		return JSON.stringify(obj);
	}
}

A5.UUID = function UUIDGen() {
	var flagTimePrefix = arguments[0];
	if(typeof flagTimePrefix != 'undefined') flagTimePrefix = arguments[0];
	var prefix = '';
	if(flagTimePrefix) {
		prefix = new Date();
		prefix = prefix.getTime().toString(36) + '--';
	}
	var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
	var chars = CHARS, uuid = [], i;
	var radix = chars.length;
	var r;
	uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
	uuid[14] = '4';
	for (i = 0; i < 36; i++) {
		if (!uuid[i]) {
			r = 0 | Math.random()*16;
			uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];
			}
		}
	return prefix + uuid.join('');
}


A5.parseFilename = function(fn) {
	var arr = fn.split('/');
	var fileName = arr[arr.length -1];
	var path = '';
	if(arr.length > 1) {
		arr.pop();
		path = arr.join('/');
	}
	var o = {};
	o.name = fileName;
	o.path = path;
	return o;

}

A5.u.template.formats.dateFormat = function(value,formatOut) {

	var formatIn = A5.serverSideDateFormat;
	var timeSuffix = '';
	if( value.toLowerCase().indexOf('pm') > 0 || value.toLowerCase().indexOf('am') >0 ) timeSuffix = ' AM';
	formatIn = formatIn + ' 0h:0m:0s' + timeSuffix;

	if(formatOut.split('|')[0] == 'time') {
		formatOut = formatOut.split('|')[1];
		var delim = formatIn.substring(2,3);
		value = '01' + delim + '01' + delim + '2014 ' + value;

	}
	if(formatOut.toLowerCase() == 'defaultdate') {
		formatOut = A5.__componentObj.stateInfo.__dtfmt;
	} else if(formatOut.toLowerCase() == 'defaultdatetime') {
		var tfmt = 	A5.__componentObj.stateInfo.__tfmt;
		formatOut = A5.__componentObj.stateInfo.__dtfmt + ' ' + tfmt;
	} else if(formatOut.toLowerCase() == 'defaulttime') {
		formatOut = A5.__componentObj.stateInfo.__tfmt;
		var delim = formatIn.substring(2,3);
		value = '01' + delim + '01' + delim + '2014 ' + value;
	} else {
		formatOut = formatOut.replace('&&',' ');
	}

	var d = '';
	if(value.constructor != Date) {
		d = A5.stringToDate(value,formatIn);
	} else {
		d = value;
	}
	return d.toFormat(formatOut);
}



A5.lzw_encode = function(s) {
    var dict = {};
    var data = (s + "").split("");
    var out = [];
    var currChar;
    var phrase = data[0];
    var code = 256;
    for (var i=1; i<data.length; i++) {
        currChar=data[i];
        if (dict[phrase + currChar] != null) {
            phrase += currChar;
        }
        else {
            out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));
            dict[phrase + currChar] = code;
            code++;
            phrase=currChar;
        }
    }
    out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));
    for (var i=0; i<out.length; i++) {
        out[i] = String.fromCharCode(out[i]);
    }
    return out.join("");
}

A5.lzw_decode = function(s) {
    var dict = {};
    var data = (s + "").split("");
    var currChar = data[0];
    var oldPhrase = currChar;
    var out = [currChar];
    var code = 256;
    var phrase;
    for (var i=1; i<data.length; i++) {
        var currCode = data[i].charCodeAt(0);
        if (currCode < 256) {
            phrase = data[i];
        }
        else {
           phrase = dict[currCode] ? dict[currCode] : (oldPhrase + currChar);
        }
        out.push(phrase);
        currChar = phrase.charAt(0);
        dict[code] = oldPhrase + currChar;
        code++;
        oldPhrase = phrase;
    }
    return out.join("");
}

A5.deflate = function(s){
    var out = '', i, len, val;
    len = s.length;
    if(len < 1 || typeof s !== 'string'){
      return s;
    }
    // Ensure 1 byte chars (0 / 254)
    s = unescape(encodeURIComponent(s));
    if((len % 2) === 1){
      // Ad an extra byte for byte allignment
      // Odd bytes won't fill a 16 bits slot
      s +=String.fromCharCode(0);
    }
    i = 0;
    len = s.length;
    for(; i< len; i+=2){
      val = (s.charCodeAt(i+1) << 8) + (s.charCodeAt(i));
      out += String.fromCharCode(val);
    }
    return out;
  }

  A5.inflate = function(s){
      if(s.length < 1 || typeof s !== 'string'){
        return s;
      }
      var n, out = '', high, low, i, len;
      i = 0;
      len = s.length;
      for(; i< len; i++){
        n = s.charCodeAt(i);
        high = n >> 8;
        low = n - (high << 8);
        out += String.fromCharCode(low);
        if(i == len-1 && high == 0){
          // skip byte
        }else{
          out += String.fromCharCode(high);
        }

      }
      return decodeURIComponent(escape(out));
  }


  A5.u.timeTracker = {
  	_: {
  		st: false,
  		m: []
  	},

  	start: function() {
  		this._.st = Date.now();
  		this._.m = [];
  	},

  	log: function(msg) {
  		var dt = Date.now() - this._.st;
  		var et = dt;
  		if(this._.m.length > 0) {
  			et = dt - this._.m[this._.m.length -1].totalTime;
  			this._.m[this._.m.length -1].toNextTime = et;
  		}
  		this._.m.push({
  			totalTime: dt,
  			fromLastTime: et,
  			toNextTime: 0,
  			message: msg
  		})

  	},
  	getLog: function() {
  		var mi = this._.m[this._.m.length -1];
  		mi.toNextTime = Date.now() - mi.totalTime;
  		return this._.m;
  	}
};


	
/*
Copyright (c) 2001, 2016 Alpha Software Corporation
All Rights Reserved.

This JavaScript library is licensed exclusively for use with Alpha Anywhere, Alpha Five,
Alpha Five Application Server, Alpha Anywhere Application Server,
Alpha Five Run Engine, and Alpha Anywhere Run Engine. It is specifically
not licensed for use on a server that does not have installed on it a
licensed copy of the Alpha Five Application Server or the Alpha Anywhere Application Server.
*/



function a5_layout_cont_bands(a5_layout_cont_curID,a5_layout_cont_style){if(document.getElementById(a5_layout_cont_curID).style.display=='none'){if(document.all){document.getElementById(a5_layout_cont_curID).style.display='block';}
else{document.getElementById(a5_layout_cont_curID).style.display='table-row-group';}
document.getElementById(a5_layout_cont_curID+'_IMG').src='css//'+a5_layout_cont_style+'//AscOn.png';}
else{document.getElementById(a5_layout_cont_curID).style.display='none';document.getElementById(a5_layout_cont_curID+'_IMG').src='css//'+a5_layout_cont_style+'//DescOn.png';}}
function a5_layout_cont_singlebands(a5_layout_cont_curID,a5_layout_cont_prevID,a5_layout_cont_style){if(a5_layout_cont_curID!=a5_layout_cont_prevID){if(document.all){document.getElementById(a5_layout_cont_curID).style.display='block';}
else{document.getElementById(a5_layout_cont_curID).style.display='table-row-group';}
document.getElementById(a5_layout_cont_curID+'_IMG').src='css//'+a5_layout_cont_style+'//RowMarkerOn.png';if(a5_layout_cont_prevID!=''){document.getElementById(a5_layout_cont_prevID).style.display='none';document.getElementById(a5_layout_cont_prevID+'_IMG').src='css//'+a5_layout_cont_style+'//RowMarkerOff.png';}}
return a5_layout_cont_curID;}
function a5_layout_cont_singlebands_onload(a5_layout_cont_curID,a5_layout_cont_style){document.getElementById(a5_layout_cont_curID).style.display='none';document.getElementById(a5_layout_cont_curID+'_IMG').src='css//'+a5_layout_cont_style+'//RowMarkerOff.png';}
function a5_layout_cont_tabs(a5_layout_cont_curID,a5_layout_cont_prevID,a5_layout_cont_style){if(a5_layout_cont_curID!=a5_layout_cont_prevID){if(document.all){document.getElementById(a5_layout_cont_curID).style.display='block';}
else{document.getElementById(a5_layout_cont_curID).style.display='table';}
document.getElementById(a5_layout_cont_curID+'_IMG').src='css//'+a5_layout_cont_style+'//RowMarkerOn.png';if(a5_layout_cont_prevID!=''){document.getElementById(a5_layout_cont_prevID).style.display='none';document.getElementById(a5_layout_cont_prevID+'_IMG').src='css//'+a5_layout_cont_style+'//RowMarkerOff.png';}}
return a5_layout_cont_curID;}
function a5_layout_cont_genie(a5_layout_cont_curID,a5_layout_cont_prevID){if(a5_layout_cont_curID!=a5_layout_cont_prevID){if(document.all){document.getElementById(a5_layout_cont_curID).style.display='block';}
else{document.getElementById(a5_layout_cont_curID).style.display='table';}
if(a5_layout_cont_prevID!=''){document.getElementById(a5_layout_cont_prevID).style.display='none';}
var ele=document.getElementById(a5_layout_cont_curID)
var selectedPosX=0;var selectedPosY=0;while(ele!=null){selectedPosX+=ele.offsetLeft;selectedPosY+=ele.offsetTop;ele=ele.offsetParent;}
window.scrollTo(selectedPosX,selectedPosY);}}